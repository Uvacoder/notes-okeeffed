{"expireTime":9007200852878389000,"key":"gatsby-plugin-mdx-entire-payload-b1199f0850d4f01bd6d890ced9d03cdd-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Writing Bash Scripts","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":23,"offset":188},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":23,"offset":188},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"BASH-1: Setting up scripts","position":{"start":{"line":9,"column":4,"offset":193},"end":{"line":9,"column":30,"offset":219},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":190},"end":{"line":9,"column":30,"offset":219},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Change shell","position":{"start":{"line":11,"column":3,"offset":223},"end":{"line":11,"column":15,"offset":235},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":221},"end":{"line":11,"column":17,"offset":237},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":221},"end":{"line":11,"column":17,"offset":237},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"exec [zsh|bash]","position":{"start":{"line":13,"column":1,"offset":239},"end":{"line":13,"column":18,"offset":256},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":239},"end":{"line":13,"column":18,"offset":256},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Set env variable from bash","position":{"start":{"line":15,"column":3,"offset":260},"end":{"line":15,"column":29,"offset":286},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":258},"end":{"line":15,"column":31,"offset":288},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":258},"end":{"line":15,"column":31,"offset":288},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"export EXAMPLE='/to/script/path'","position":{"start":{"line":17,"column":1,"offset":290},"end":{"line":19,"column":4,"offset":330},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"For cd, use aliases","position":{"start":{"line":21,"column":3,"offset":334},"end":{"line":21,"column":22,"offset":353},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":332},"end":{"line":21,"column":24,"offset":355},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":332},"end":{"line":21,"column":24,"offset":355},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"alias proj=\"cd /home/tree/projects/java\"","position":{"start":{"line":23,"column":1,"offset":357},"end":{"line":23,"column":43,"offset":399},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":357},"end":{"line":23,"column":43,"offset":399},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Writing a Shell Script","position":{"start":{"line":25,"column":3,"offset":403},"end":{"line":25,"column":25,"offset":425},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":401},"end":{"line":25,"column":27,"offset":427},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":401},"end":{"line":25,"column":27,"offset":427},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"file.sh","position":{"start":{"line":27,"column":1,"offset":429},"end":{"line":27,"column":8,"offset":436},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":429},"end":{"line":27,"column":8,"offset":436},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"#!/bin/bash\n","position":{"start":{"line":29,"column":1,"offset":438},"end":{"line":32,"column":4,"offset":458},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":35,"column":1,"offset":461},"end":{"line":35,"column":31,"offset":491},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":31,"offset":491}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"writing-bash-scripts\"\n    }}>{`Writing Bash Scripts`}</h1>\n    <h2 {...{\n      \"id\": \"bash-1-setting-up-scripts\"\n    }}>{`BASH-1: Setting up scripts`}</h2>\n    <p><strong parentName=\"p\">{`Change shell`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`exec [zsh|bash]`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Set env variable from bash`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`export EXAMPLE='/to/script/path'\n`}</code></pre>\n    <p><strong parentName=\"p\">{`For cd, use aliases`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`alias proj=\"cd /home/tree/projects/java\"`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Writing a Shell Script`}</strong></p>\n    <p>{`file.sh`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`#!/bin/bash\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}