{"expireTime":9007200867335920000,"key":"gatsby-plugin-mdx-entire-payload-9b7e2e72a2f3d0f976a25a74606af296-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"PHP Basics","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":13,"offset":179},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":13,"offset":179},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Strings Functions","position":{"start":{"line":10,"column":4,"offset":184},"end":{"line":10,"column":21,"offset":201},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":181},"end":{"line":10,"column":21,"offset":201},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n\n$string = 'bac';\n\n$stringParts = str_split($string);\nsort($stringParts);\necho implode('', $stringParts);","position":{"start":{"line":12,"column":1,"offset":203},"end":{"line":20,"column":4,"offset":325},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Regex Replacement on Strings","position":{"start":{"line":22,"column":4,"offset":330},"end":{"line":22,"column":32,"offset":358},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":327},"end":{"line":22,"column":32,"offset":358},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n$string = \"T34okyo!\";\n$replacement = \"\";\n$pattern = \"/[^a-z]/i\";\n\necho preg_replace($pattern, $replacement, $string);","position":{"start":{"line":24,"column":1,"offset":360},"end":{"line":31,"column":4,"offset":494},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":34,"column":1,"offset":497},"end":{"line":34,"column":31,"offset":527},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":34,"column":31,"offset":527}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"php-basics\"\n    }}>{`PHP Basics`}</h1>\n    <h2 {...{\n      \"id\": \"strings-functions\"\n    }}>{`Strings Functions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\n$string = 'bac';\n\n$stringParts = str_split($string);\nsort($stringParts);\necho implode('', $stringParts);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"regex-replacement-on-strings\"\n    }}>{`Regex Replacement on Strings`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n$string = \"T34okyo!\";\n$replacement = \"\";\n$pattern = \"/[^a-z]/i\";\n\necho preg_replace($pattern, $replacement, $string);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}