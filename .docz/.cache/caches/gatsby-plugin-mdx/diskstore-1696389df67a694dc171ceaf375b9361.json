{"expireTime":9007200849425561000,"key":"gatsby-plugin-mdx-entire-payload-7e014e7c7b82ed6b1636231b3eb29ce7-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Intro to Hygen","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":17,"offset":182},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":17,"offset":182},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hygen is a really great template engine that allows us to harness the power of multiple JS libraries and use them to make our lives easier.","position":{"start":{"line":9,"column":1,"offset":184},"end":{"line":9,"column":140,"offset":323},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":184},"end":{"line":9,"column":140,"offset":323},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Links","position":{"start":{"line":11,"column":4,"offset":328},"end":{"line":11,"column":9,"offset":333},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":325},"end":{"line":11,"column":9,"offset":333},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://hygen.io/","children":[{"type":"text","value":"Hygen.io site","position":{"start":{"line":13,"column":6,"offset":340},"end":{"line":13,"column":19,"offset":353},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":339},"end":{"line":13,"column":38,"offset":372},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":339},"end":{"line":13,"column":38,"offset":372},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":335},"end":{"line":13,"column":38,"offset":372},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":335},"end":{"line":13,"column":38,"offset":372},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setup","position":{"start":{"line":15,"column":4,"offset":377},"end":{"line":15,"column":9,"offset":382},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":374},"end":{"line":15,"column":9,"offset":382},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, ensure that you install Hygen.","position":{"start":{"line":17,"column":1,"offset":384},"end":{"line":17,"column":38,"offset":421},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":384},"end":{"line":17,"column":38,"offset":421},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"npm i -g hygen","position":{"start":{"line":19,"column":1,"offset":423},"end":{"line":21,"column":4,"offset":445},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Hygen then uses the ","position":{"start":{"line":23,"column":1,"offset":447},"end":{"line":23,"column":21,"offset":467},"indent":[]}},{"type":"inlineCode","value":"_templates","position":{"start":{"line":23,"column":21,"offset":467},"end":{"line":23,"column":33,"offset":479},"indent":[]}},{"type":"text","value":" folder on direction for what to create.","position":{"start":{"line":23,"column":33,"offset":479},"end":{"line":23,"column":73,"offset":519},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":447},"end":{"line":23,"column":73,"offset":519},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":25,"column":1,"offset":521},"end":{"line":25,"column":5,"offset":525},"indent":[]}},{"type":"inlineCode","value":"_templates","position":{"start":{"line":25,"column":5,"offset":525},"end":{"line":25,"column":17,"offset":537},"indent":[]}},{"type":"text","value":" folder may have a structure like so:","position":{"start":{"line":25,"column":17,"offset":537},"end":{"line":25,"column":54,"offset":574},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":521},"end":{"line":25,"column":54,"offset":574},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"_templates\n└── react\n    ├── component\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── component-promptless\n    │   ├── mocha.ejs.t\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── multi-component\n    │   ├── container.ejs.t\n    │   ├── default.ejs.t\n    │   ├── docs.ejs.t\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── typeOne.ejs.t\n    │   ├── typeTwo.ejs.t\n    │   └── view.ejs.t\n    ├── reducer\n    │   ├── prompt.js\n    │   └── reducer.ejs.t\n    └── redux-component\n        ├── container.ejs.t\n        ├── mocha.ejs.t\n        ├── prompt.js\n        ├── puppeteer.ejs.t\n        ├── readme.ejs.t\n        ├── story.ejs.t\n        └── view.ejs.t","position":{"start":{"line":27,"column":1,"offset":576},"end":{"line":67,"column":4,"offset":1518},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"How this works in practise is that you can invoke the following calls and Hygen will generate those files according to the rules:","position":{"start":{"line":69,"column":1,"offset":1520},"end":{"line":69,"column":130,"offset":1649},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1520},"end":{"line":69,"column":130,"offset":1649},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"# Examples\n\n# Generate the files from react > components\nhygen react component\n# Generate the files from react > reducer\nhygen react reducer","position":{"start":{"line":71,"column":1,"offset":1651},"end":{"line":78,"column":4,"offset":1809},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Hygen can work using a prompt or without one. I recommend going with, and using ","position":{"start":{"line":80,"column":1,"offset":1811},"end":{"line":80,"column":81,"offset":1891},"indent":[]}},{"type":"inlineCode","value":"prompt.js","position":{"start":{"line":80,"column":81,"offset":1891},"end":{"line":80,"column":92,"offset":1902},"indent":[]}},{"type":"text","value":" to set the questions.","position":{"start":{"line":80,"column":92,"offset":1902},"end":{"line":80,"column":114,"offset":1924},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1811},"end":{"line":80,"column":114,"offset":1924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For an example from start to finish, I will demonstate using ","position":{"start":{"line":82,"column":1,"offset":1926},"end":{"line":82,"column":62,"offset":1987},"indent":[]}},{"type":"inlineCode","value":"hygen react component","position":{"start":{"line":82,"column":62,"offset":1987},"end":{"line":82,"column":85,"offset":2010},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":82,"column":85,"offset":2010},"end":{"line":82,"column":86,"offset":2011},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":1926},"end":{"line":82,"column":86,"offset":2011},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"> hygen react component","position":{"start":{"line":84,"column":4,"offset":2016},"end":{"line":84,"column":27,"offset":2039},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2013},"end":{"line":84,"column":27,"offset":2039},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Running the command will first look for a ","position":{"start":{"line":86,"column":1,"offset":2041},"end":{"line":86,"column":43,"offset":2083},"indent":[]}},{"type":"inlineCode","value":"prompt.js","position":{"start":{"line":86,"column":43,"offset":2083},"end":{"line":86,"column":54,"offset":2094},"indent":[]}},{"type":"text","value":" file.","position":{"start":{"line":86,"column":54,"offset":2094},"end":{"line":86,"column":60,"offset":2100},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2041},"end":{"line":86,"column":60,"offset":2100},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"module.exports = [\n    {\n        type: 'input',\n        name: 'name',\n        message: \"What's the name?\"\n    },\n    {\n        type: 'input',\n        name: 'message',\n        message: \"What's the message?\"\n    }\n];","position":{"start":{"line":88,"column":1,"offset":2102},"end":{"line":101,"column":4,"offset":2334},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Hygen uses Inquirer (which in turn uses RxJS) to create prompts. In this example, answering ","position":{"start":{"line":103,"column":1,"offset":2336},"end":{"line":103,"column":93,"offset":2428},"indent":[]}},{"type":"inlineCode","value":"name","position":{"start":{"line":103,"column":93,"offset":2428},"end":{"line":103,"column":99,"offset":2434},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":103,"column":99,"offset":2434},"end":{"line":103,"column":104,"offset":2439},"indent":[]}},{"type":"inlineCode","value":"message","position":{"start":{"line":103,"column":104,"offset":2439},"end":{"line":103,"column":113,"offset":2448},"indent":[]}},{"type":"text","value":" will in turn create variables that are used thorugh the ","position":{"start":{"line":103,"column":113,"offset":2448},"end":{"line":103,"column":170,"offset":2505},"indent":[]}},{"type":"inlineCode","value":"[file].ejs.t","position":{"start":{"line":103,"column":170,"offset":2505},"end":{"line":103,"column":184,"offset":2519},"indent":[]}},{"type":"text","value":" files.","position":{"start":{"line":103,"column":184,"offset":2519},"end":{"line":103,"column":191,"offset":2526},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2336},"end":{"line":103,"column":191,"offset":2526},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hygen will then go through the rest of the files and export them to where is defined at the top of the ","position":{"start":{"line":105,"column":1,"offset":2528},"end":{"line":105,"column":104,"offset":2631},"indent":[]}},{"type":"inlineCode","value":"[file].ejs.t","position":{"start":{"line":105,"column":104,"offset":2631},"end":{"line":105,"column":118,"offset":2645},"indent":[]}},{"type":"text","value":" file. For example, ","position":{"start":{"line":105,"column":118,"offset":2645},"end":{"line":105,"column":138,"offset":2665},"indent":[]}},{"type":"inlineCode","value":"mocha.ejs.t","position":{"start":{"line":105,"column":138,"offset":2665},"end":{"line":105,"column":151,"offset":2678},"indent":[]}},{"type":"text","value":" will have:","position":{"start":{"line":105,"column":151,"offset":2678},"end":{"line":105,"column":162,"offset":2689},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2528},"end":{"line":105,"column":162,"offset":2689},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"---\nto: src/components/<%= name %>/<%= name %>.mocha.js\n---","position":{"start":{"line":107,"column":1,"offset":2691},"end":{"line":111,"column":4,"offset":2768},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we enter name ","position":{"start":{"line":113,"column":1,"offset":2770},"end":{"line":113,"column":18,"offset":2787},"indent":[]}},{"type":"inlineCode","value":"PageTestNewFiles","position":{"start":{"line":113,"column":18,"offset":2787},"end":{"line":113,"column":36,"offset":2805},"indent":[]}},{"type":"text","value":", it will output file ","position":{"start":{"line":113,"column":36,"offset":2805},"end":{"line":113,"column":58,"offset":2827},"indent":[]}},{"type":"inlineCode","value":"src/components/PageTestNewFiles/PageTestNewFiles.mocha.js","position":{"start":{"line":113,"column":58,"offset":2827},"end":{"line":113,"column":117,"offset":2886},"indent":[]}},{"type":"text","value":". This will continue for all the files, and so in ","position":{"start":{"line":113,"column":117,"offset":2886},"end":{"line":113,"column":167,"offset":2936},"indent":[]}},{"type":"inlineCode","value":"src/components/PageTestNewFiles","position":{"start":{"line":113,"column":167,"offset":2936},"end":{"line":113,"column":200,"offset":2969},"indent":[]}},{"type":"text","value":" we will end up with the following:","position":{"start":{"line":113,"column":200,"offset":2969},"end":{"line":113,"column":235,"offset":3004},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2770},"end":{"line":113,"column":235,"offset":3004},"indent":[]}},{"type":"code","lang":"Javascript","meta":null,"value":"PageTestNewFiles\n├── PageTestNewFiles.mocha.js\n├── PageTestNewFiles.puppeteer.js\n├── PageTestNewFiles.storybook.js\n├── README.md\n├── index.js\n└── styles.scss","position":{"start":{"line":115,"column":1,"offset":3006},"end":{"line":123,"column":4,"offset":3181},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Where ","position":{"start":{"line":125,"column":1,"offset":3183},"end":{"line":125,"column":7,"offset":3189},"indent":[]}},{"type":"inlineCode","value":"<%= name %>","position":{"start":{"line":125,"column":7,"offset":3189},"end":{"line":125,"column":20,"offset":3202},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":125,"column":20,"offset":3202},"end":{"line":125,"column":25,"offset":3207},"indent":[]}},{"type":"inlineCode","value":"<%= message %>","position":{"start":{"line":125,"column":25,"offset":3207},"end":{"line":125,"column":41,"offset":3223},"indent":[]}},{"type":"text","value":" is found throughout those files will be in turn replaced with the entered values.","position":{"start":{"line":125,"column":41,"offset":3223},"end":{"line":125,"column":123,"offset":3305},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3183},"end":{"line":125,"column":123,"offset":3305},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If there are any issues with the Hygen generated files, go to the template file and change the templates to resolve any issues.","position":{"start":{"line":127,"column":1,"offset":3307},"end":{"line":127,"column":128,"offset":3434},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3307},"end":{"line":127,"column":128,"offset":3434},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":130,"column":1,"offset":3437},"end":{"line":130,"column":31,"offset":3467},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":130,"column":31,"offset":3467}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"intro-to-hygen\"\n    }}>{`Intro to Hygen`}</h1>\n    <p>{`Hygen is a really great template engine that allows us to harness the power of multiple JS libraries and use them to make our lives easier.`}</p>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://hygen.io/\"\n        }}>{`Hygen.io site`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`First, ensure that you install Hygen.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i -g hygen\n`}</code></pre>\n    <p>{`Hygen then uses the `}<inlineCode parentName=\"p\">{`_templates`}</inlineCode>{` folder on direction for what to create.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`_templates`}</inlineCode>{` folder may have a structure like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`_templates\n└── react\n    ├── component\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── component-promptless\n    │   ├── mocha.ejs.t\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── multi-component\n    │   ├── container.ejs.t\n    │   ├── default.ejs.t\n    │   ├── docs.ejs.t\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── typeOne.ejs.t\n    │   ├── typeTwo.ejs.t\n    │   └── view.ejs.t\n    ├── reducer\n    │   ├── prompt.js\n    │   └── reducer.ejs.t\n    └── redux-component\n        ├── container.ejs.t\n        ├── mocha.ejs.t\n        ├── prompt.js\n        ├── puppeteer.ejs.t\n        ├── readme.ejs.t\n        ├── story.ejs.t\n        └── view.ejs.t\n`}</code></pre>\n    <p>{`How this works in practise is that you can invoke the following calls and Hygen will generate those files according to the rules:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`# Examples\n\n# Generate the files from react > components\nhygen react component\n# Generate the files from react > reducer\nhygen react reducer\n`}</code></pre>\n    <p>{`Hygen can work using a prompt or without one. I recommend going with, and using `}<inlineCode parentName=\"p\">{`prompt.js`}</inlineCode>{` to set the questions.`}</p>\n    <p>{`For an example from start to finish, I will demonstate using `}<inlineCode parentName=\"p\">{`hygen react component`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"-hygen-react-component\"\n    }}>{`> hygen react component`}</h2>\n    <p>{`Running the command will first look for a `}<inlineCode parentName=\"p\">{`prompt.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = [\n    {\n        type: 'input',\n        name: 'name',\n        message: \"What's the name?\"\n    },\n    {\n        type: 'input',\n        name: 'message',\n        message: \"What's the message?\"\n    }\n];\n`}</code></pre>\n    <p>{`Hygen uses Inquirer (which in turn uses RxJS) to create prompts. In this example, answering `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`message`}</inlineCode>{` will in turn create variables that are used thorugh the `}<inlineCode parentName=\"p\">{`[file].ejs.t`}</inlineCode>{` files.`}</p>\n    <p>{`Hygen will then go through the rest of the files and export them to where is defined at the top of the `}<inlineCode parentName=\"p\">{`[file].ejs.t`}</inlineCode>{` file. For example, `}<inlineCode parentName=\"p\">{`mocha.ejs.t`}</inlineCode>{` will have:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`---\nto: src/components/<%= name %>/<%= name %>.mocha.js\n---\n`}</code></pre>\n    <p>{`If we enter name `}<inlineCode parentName=\"p\">{`PageTestNewFiles`}</inlineCode>{`, it will output file `}<inlineCode parentName=\"p\">{`src/components/PageTestNewFiles/PageTestNewFiles.mocha.js`}</inlineCode>{`. This will continue for all the files, and so in `}<inlineCode parentName=\"p\">{`src/components/PageTestNewFiles`}</inlineCode>{` we will end up with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Javascript\"\n      }}>{`PageTestNewFiles\n├── PageTestNewFiles.mocha.js\n├── PageTestNewFiles.puppeteer.js\n├── PageTestNewFiles.storybook.js\n├── README.md\n├── index.js\n└── styles.scss\n`}</code></pre>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`<%= name %>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<%= message %>`}</inlineCode>{` is found throughout those files will be in turn replaced with the entered values.`}</p>\n    <p>{`If there are any issues with the Hygen generated files, go to the template file and change the templates to resolve any issues.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}