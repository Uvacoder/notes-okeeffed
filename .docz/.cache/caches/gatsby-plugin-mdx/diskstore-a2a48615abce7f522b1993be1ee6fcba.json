{"expireTime":9007200849425574000,"key":"gatsby-plugin-mdx-entire-payload-d92da357f533b9122a7aaecbade496d3-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Production-Ready Electron + Parcel","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":37,"offset":203},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":37,"offset":203},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":208},"end":{"line":10,"column":13,"offset":217},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":205},"end":{"line":10,"column":13,"offset":217},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/@yogeshkumarr/production-ready-electron-app-using-react-and-parcel-web-bundler-74dcda63f148","children":[{"type":"text","value":"Medium post","position":{"start":{"line":12,"column":5,"offset":223},"end":{"line":12,"column":16,"offset":234},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":222},"end":{"line":12,"column":129,"offset":347},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":222},"end":{"line":12,"column":129,"offset":347},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":219},"end":{"line":12,"column":129,"offset":347},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://parceljs.org/typeScript.html","children":[{"type":"text","value":"Parcel TypeScript","position":{"start":{"line":13,"column":5,"offset":352},"end":{"line":13,"column":22,"offset":369},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":351},"end":{"line":13,"column":61,"offset":408},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":351},"end":{"line":13,"column":61,"offset":408},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":348},"end":{"line":13,"column":61,"offset":408},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.electronjs.org/docs/api/dialog","children":[{"type":"text","value":"Electron - Dialog API","position":{"start":{"line":14,"column":5,"offset":413},"end":{"line":14,"column":26,"offset":434},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":412},"end":{"line":14,"column":71,"offset":479},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":412},"end":{"line":14,"column":71,"offset":479},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":409},"end":{"line":14,"column":71,"offset":479},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":219},"end":{"line":14,"column":71,"offset":479},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":16,"column":4,"offset":484},"end":{"line":16,"column":9,"offset":489},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":481},"end":{"line":16,"column":9,"offset":489},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, init project:","position":{"start":{"line":18,"column":1,"offset":491},"end":{"line":18,"column":21,"offset":511},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":491},"end":{"line":18,"column":21,"offset":511},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"mkdir hello-parcel-electron\ncd hello-parcel-electron\nyarn init -y\nyarn add react react-dom electron-is-dev\nyarn add -D concurrently cross-env electron electron-builder parcel-bundler wait-on typescript\n# Babel\nyarn add -D babel-core babel-plugin-transform-object-rest-spread babel-plugin-transform-react-jsx babel-preset-env babel-preset-react","position":{"start":{"line":20,"column":1,"offset":513},"end":{"line":28,"column":4,"offset":866},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Second, create ","position":{"start":{"line":30,"column":1,"offset":868},"end":{"line":30,"column":16,"offset":883},"indent":[]}},{"type":"inlineCode","value":"index.html","position":{"start":{"line":30,"column":16,"offset":883},"end":{"line":30,"column":28,"offset":895},"indent":[]}},{"type":"text","value":" file in root dir:","position":{"start":{"line":30,"column":28,"offset":895},"end":{"line":30,"column":46,"offset":913},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":868},"end":{"line":30,"column":46,"offset":913},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>Electron React Parcel</title>\n    <link\n      rel=\"shortcut icon\"\n      href=\"./src/assets/logo.ico\"\n      type=\"image/x-icon\"\n    />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script src=\"./src/index.js\"></script>\n  </body>\n</html>","position":{"start":{"line":32,"column":1,"offset":915},"end":{"line":51,"column":4,"offset":1385},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Third, create assets in ","position":{"start":{"line":53,"column":1,"offset":1387},"end":{"line":53,"column":25,"offset":1411},"indent":[]}},{"type":"inlineCode","value":"src","position":{"start":{"line":53,"column":25,"offset":1411},"end":{"line":53,"column":30,"offset":1416},"indent":[]}},{"type":"text","value":" dir for ","position":{"start":{"line":53,"column":30,"offset":1416},"end":{"line":53,"column":39,"offset":1425},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":53,"column":39,"offset":1425},"end":{"line":53,"column":49,"offset":1435},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":53,"column":49,"offset":1435},"end":{"line":53,"column":52,"offset":1438},"indent":[]}},{"type":"inlineCode","value":"App.js","position":{"start":{"line":53,"column":52,"offset":1438},"end":{"line":53,"column":60,"offset":1446},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":53,"column":60,"offset":1446},"end":{"line":53,"column":61,"offset":1447},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1387},"end":{"line":53,"column":61,"offset":1447},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// App.js\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <WhateverYouWant />\n      </div>\n    );\n  }\n}\nexport default App;","position":{"start":{"line":55,"column":1,"offset":1449},"end":{"line":77,"column":4,"offset":1821},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Create ","position":{"start":{"line":79,"column":1,"offset":1823},"end":{"line":79,"column":8,"offset":1830},"indent":[]}},{"type":"inlineCode","value":".babelrc","position":{"start":{"line":79,"column":8,"offset":1830},"end":{"line":79,"column":18,"offset":1840},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":79,"column":18,"offset":1840},"end":{"line":79,"column":19,"offset":1841},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1823},"end":{"line":79,"column":19,"offset":1841},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"{\n  \"presets\": [\"env\", \"react\"],\n  \"plugins\": [\"transform-object-rest-spread\", \"transform-react-jsx\"]\n}","position":{"start":{"line":81,"column":1,"offset":1843},"end":{"line":86,"column":4,"offset":1964},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Add scripts to ","position":{"start":{"line":88,"column":1,"offset":1966},"end":{"line":88,"column":16,"offset":1981},"indent":[]}},{"type":"inlineCode","value":"package.json","position":{"start":{"line":88,"column":16,"offset":1981},"end":{"line":88,"column":30,"offset":1995},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":88,"column":30,"offset":1995},"end":{"line":88,"column":31,"offset":1996},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":1966},"end":{"line":88,"column":31,"offset":1996},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"homepage\": \"./\",\n  \"main\": \"src/electron.js\",\n  \"scripts\": {\n    \"react-start\": \"parcel -p 3000 index.html --out-dir build\",\n    \"react-build\": \"parcel build index.html --out-dir build --public-url ./\",\n    \"start\": \"concurrently \\\"cross-env BROWSER=none yarn react-start\\\" \\\"wait-on http://localhost:3000 && electron . \\\"\",\n    \"electron-build\": \"electron-builder -mwl\",\n    \"build\": \"yarn clean-build && yarn react-build && yarn electron-build\"\n  },\n  \"build\": {\n    \"appId\": \"com.dennisokeeffe\",\n    \"files\": [\"src/electron.js\", \"src/assets/*\", \"build/**/*\"],\n    \"mac\": {\n      \"target\": \"dmg\",\n      \"icon\": \"src/assets/logo.png\"\n    },\n    \"win\": {\n      \"target\": \"nsis\",\n      \"icon\": \"src/assets/logo.png\"\n    },\n    \"linux\": {\n      \"target\": \"deb\",\n      \"icon\": \"src/assets/logo.png\",\n      \"category\": \"Development\"\n    }\n  }\n}","position":{"start":{"line":90,"column":1,"offset":1998},"end":{"line":119,"column":4,"offset":2855},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Add ","position":{"start":{"line":121,"column":1,"offset":2857},"end":{"line":121,"column":5,"offset":2861},"indent":[]}},{"type":"inlineCode","value":"electron.js","position":{"start":{"line":121,"column":5,"offset":2861},"end":{"line":121,"column":18,"offset":2874},"indent":[]}},{"type":"text","value":" in ","position":{"start":{"line":121,"column":18,"offset":2874},"end":{"line":121,"column":22,"offset":2878},"indent":[]}},{"type":"inlineCode","value":"src","position":{"start":{"line":121,"column":22,"offset":2878},"end":{"line":121,"column":27,"offset":2883},"indent":[]}},{"type":"text","value":" directory:","position":{"start":{"line":121,"column":27,"offset":2883},"end":{"line":121,"column":38,"offset":2894},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2857},"end":{"line":121,"column":38,"offset":2894},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const electron = require('electron');\nconst app = electron.app;\n\nconst BrowserWindow = electron.BrowserWindow;\n\nconst path = require('path');\nconst isDev = require('electron-is-dev');\n\nlet mainWindow;\n\nfunction createWindow() {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n  });\n\n  mainWindow.loadURL(\n    isDev\n      ? 'http://localhost:3000'\n      : `file://${path.join(__dirname, '../build/index.html')}`,\n  );\n  mainWindow.on('closed', () => (mainWindow = null));\n}\n\napp.on('ready', createWindow);\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  if (mainWindow === null) {\n    createWindow();\n  }\n});","position":{"start":{"line":123,"column":1,"offset":2896},"end":{"line":161,"column":4,"offset":3623},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In order to update to TypeScript, simply add the ","position":{"start":{"line":163,"column":1,"offset":3625},"end":{"line":163,"column":50,"offset":3674},"indent":[]}},{"type":"inlineCode","value":"tsconfig.json","position":{"start":{"line":163,"column":50,"offset":3674},"end":{"line":163,"column":65,"offset":3689},"indent":[]}},{"type":"text","value":" file:","position":{"start":{"line":163,"column":65,"offset":3689},"end":{"line":163,"column":71,"offset":3695},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3625},"end":{"line":163,"column":71,"offset":3695},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"// tsconfig.json\n{\n  \"compilerOptions\": {\n    \"jsx\": \"react\"\n  }\n}","position":{"start":{"line":165,"column":1,"offset":3697},"end":{"line":172,"column":4,"offset":3775},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To start now, we run ","position":{"start":{"line":174,"column":1,"offset":3777},"end":{"line":174,"column":22,"offset":3798},"indent":[]}},{"type":"inlineCode","value":"yarn start","position":{"start":{"line":174,"column":22,"offset":3798},"end":{"line":174,"column":34,"offset":3810},"indent":[]}},{"type":"text","value":" and to build we run ","position":{"start":{"line":174,"column":34,"offset":3810},"end":{"line":174,"column":55,"offset":3831},"indent":[]}},{"type":"inlineCode","value":"yarn build","position":{"start":{"line":174,"column":55,"offset":3831},"end":{"line":174,"column":67,"offset":3843},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":174,"column":67,"offset":3843},"end":{"line":174,"column":68,"offset":3844},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":3777},"end":{"line":174,"column":68,"offset":3844},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":177,"column":1,"offset":3847},"end":{"line":177,"column":31,"offset":3877},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":177,"column":31,"offset":3877}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"production-ready-electron--parcel\"\n    }}>{`Production-Ready Electron + Parcel`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@yogeshkumarr/production-ready-electron-app-using-react-and-parcel-web-bundler-74dcda63f148\"\n        }}>{`Medium post`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://parceljs.org/typeScript.html\"\n        }}>{`Parcel TypeScript`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.electronjs.org/docs/api/dialog\"\n        }}>{`Electron - Dialog API`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <p>{`First, init project:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir hello-parcel-electron\ncd hello-parcel-electron\nyarn init -y\nyarn add react react-dom electron-is-dev\nyarn add -D concurrently cross-env electron electron-builder parcel-bundler wait-on typescript\n# Babel\nyarn add -D babel-core babel-plugin-transform-object-rest-spread babel-plugin-transform-react-jsx babel-preset-env babel-preset-react\n`}</code></pre>\n    <p>{`Second, create `}<inlineCode parentName=\"p\">{`index.html`}</inlineCode>{` file in root dir:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>Electron React Parcel</title>\n    <link\n      rel=\"shortcut icon\"\n      href=\"./src/assets/logo.ico\"\n      type=\"image/x-icon\"\n    />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script src=\"./src/index.js\"></script>\n  </body>\n</html>\n`}</code></pre>\n    <p>{`Third, create assets in `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` dir for `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// App.js\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <WhateverYouWant />\n      </div>\n    );\n  }\n}\nexport default App;\n`}</code></pre>\n    <p>{`Create `}<inlineCode parentName=\"p\">{`.babelrc`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"presets\": [\"env\", \"react\"],\n  \"plugins\": [\"transform-object-rest-spread\", \"transform-react-jsx\"]\n}\n`}</code></pre>\n    <p>{`Add scripts to `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"homepage\": \"./\",\n  \"main\": \"src/electron.js\",\n  \"scripts\": {\n    \"react-start\": \"parcel -p 3000 index.html --out-dir build\",\n    \"react-build\": \"parcel build index.html --out-dir build --public-url ./\",\n    \"start\": \"concurrently \\\\\"cross-env BROWSER=none yarn react-start\\\\\" \\\\\"wait-on http://localhost:3000 && electron . \\\\\"\",\n    \"electron-build\": \"electron-builder -mwl\",\n    \"build\": \"yarn clean-build && yarn react-build && yarn electron-build\"\n  },\n  \"build\": {\n    \"appId\": \"com.dennisokeeffe\",\n    \"files\": [\"src/electron.js\", \"src/assets/*\", \"build/**/*\"],\n    \"mac\": {\n      \"target\": \"dmg\",\n      \"icon\": \"src/assets/logo.png\"\n    },\n    \"win\": {\n      \"target\": \"nsis\",\n      \"icon\": \"src/assets/logo.png\"\n    },\n    \"linux\": {\n      \"target\": \"deb\",\n      \"icon\": \"src/assets/logo.png\",\n      \"category\": \"Development\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`electron.js`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const electron = require('electron');\nconst app = electron.app;\n\nconst BrowserWindow = electron.BrowserWindow;\n\nconst path = require('path');\nconst isDev = require('electron-is-dev');\n\nlet mainWindow;\n\nfunction createWindow() {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n  });\n\n  mainWindow.loadURL(\n    isDev\n      ? 'http://localhost:3000'\n      : \\`file://\\${path.join(__dirname, '../build/index.html')}\\`,\n  );\n  mainWindow.on('closed', () => (mainWindow = null));\n}\n\napp.on('ready', createWindow);\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  if (mainWindow === null) {\n    createWindow();\n  }\n});\n`}</code></pre>\n    <p>{`In order to update to TypeScript, simply add the `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`// tsconfig.json\n{\n  \"compilerOptions\": {\n    \"jsx\": \"react\"\n  }\n}\n`}</code></pre>\n    <p>{`To start now, we run `}<inlineCode parentName=\"p\">{`yarn start`}</inlineCode>{` and to build we run `}<inlineCode parentName=\"p\">{`yarn build`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}