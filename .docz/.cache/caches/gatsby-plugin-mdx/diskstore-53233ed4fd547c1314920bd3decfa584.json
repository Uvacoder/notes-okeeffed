{"expireTime":9007200848610862000,"key":"gatsby-plugin-mdx-entire-payload-57286287f1fbcd41cd8f16d0df90d889-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Rails Useful Tidbits","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":23,"offset":189},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":23,"offset":189},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":10,"column":4,"offset":194},"end":{"line":10,"column":9,"offset":199},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":191},"end":{"line":10,"column":9,"offset":199},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Rails Console","position":{"start":{"line":12,"column":5,"offset":205},"end":{"line":12,"column":18,"offset":218},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":201},"end":{"line":12,"column":18,"offset":218},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Command","position":{"start":{"line":14,"column":3,"offset":222},"end":{"line":14,"column":10,"offset":229},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":222},"end":{"line":14,"column":19,"offset":238},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Action","position":{"start":{"line":14,"column":22,"offset":241},"end":{"line":14,"column":28,"offset":247},"indent":[]}}],"position":{"start":{"line":14,"column":22,"offset":241},"end":{"line":14,"column":40,"offset":259},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":220},"end":{"line":14,"column":42,"offset":261},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"app.get \"/route\"","position":{"start":{"line":16,"column":3,"offset":306},"end":{"line":16,"column":19,"offset":322},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":306},"end":{"line":16,"column":19,"offset":322},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Test a get route","position":{"start":{"line":16,"column":22,"offset":325},"end":{"line":16,"column":38,"offset":341},"indent":[]}}],"position":{"start":{"line":16,"column":22,"offset":325},"end":{"line":16,"column":40,"offset":343},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":304},"end":{"line":16,"column":42,"offset":345},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Model.all","position":{"start":{"line":17,"column":3,"offset":348},"end":{"line":17,"column":12,"offset":357},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":348},"end":{"line":17,"column":19,"offset":364},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Get array of model","position":{"start":{"line":17,"column":22,"offset":367},"end":{"line":17,"column":40,"offset":385},"indent":[]}}],"position":{"start":{"line":17,"column":22,"offset":367},"end":{"line":17,"column":40,"offset":385},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":346},"end":{"line":17,"column":42,"offset":387},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Modal.first","position":{"start":{"line":18,"column":3,"offset":390},"end":{"line":18,"column":14,"offset":401},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":390},"end":{"line":18,"column":19,"offset":406},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Get first of model","position":{"start":{"line":18,"column":22,"offset":409},"end":{"line":18,"column":40,"offset":427},"indent":[]}}],"position":{"start":{"line":18,"column":22,"offset":409},"end":{"line":18,"column":40,"offset":427},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":388},"end":{"line":18,"column":42,"offset":429},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Model.find(:id)","position":{"start":{"line":19,"column":3,"offset":432},"end":{"line":19,"column":18,"offset":447},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":432},"end":{"line":19,"column":19,"offset":448},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Find model by ID","position":{"start":{"line":19,"column":22,"offset":451},"end":{"line":19,"column":38,"offset":467},"indent":[]}}],"position":{"start":{"line":19,"column":22,"offset":451},"end":{"line":19,"column":40,"offset":469},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":430},"end":{"line":19,"column":42,"offset":471},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":220},"end":{"line":19,"column":42,"offset":471},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Decent Exposure","position":{"start":{"line":21,"column":5,"offset":477},"end":{"line":21,"column":20,"offset":492},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":473},"end":{"line":21,"column":20,"offset":492},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A popular Rails gem helper for creating declarative interfaces in controllers. ","position":{"start":{"line":23,"column":1,"offset":494},"end":{"line":23,"column":80,"offset":573},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/hashrocket/decent_exposure","children":[{"type":"text","value":"Link here","position":{"start":{"line":23,"column":81,"offset":574},"end":{"line":23,"column":90,"offset":583},"indent":[]}}],"position":{"start":{"line":23,"column":80,"offset":573},"end":{"line":23,"column":138,"offset":631},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":138,"offset":631},"end":{"line":23,"column":139,"offset":632},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":494},"end":{"line":23,"column":139,"offset":632},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"class ThingsController < ApplicationController\n  # all the follpowing do the same way\n  expose :thing, fetch: ->{ get_thing_some_way_or_another }\n  expose(:thing){ get_thing_some_way_or_another }\n  expose :thing, ->{ get_thing_some_way_or_another }\n  expose :thing, :get_thing_some_way_or_another\nend","position":{"start":{"line":25,"column":1,"offset":634},"end":{"line":33,"column":4,"offset":946},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":36,"column":1,"offset":949},"end":{"line":36,"column":31,"offset":979},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":36,"column":31,"offset":979}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rails-useful-tidbits\"\n    }}>{`Rails Useful Tidbits`}</h1>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <h3 {...{\n      \"id\": \"rails-console\"\n    }}>{`Rails Console`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`app.get \"/route\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Test a get route`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Model.all`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get array of model`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Modal.first`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get first of model`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Model.find(:id)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Find model by ID`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"decent-exposure\"\n    }}>{`Decent Exposure`}</h3>\n    <p>{`A popular Rails gem helper for creating declarative interfaces in controllers. `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/hashrocket/decent_exposure\"\n      }}>{`Link here`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class ThingsController < ApplicationController\n  # all the follpowing do the same way\n  expose :thing, fetch: ->{ get_thing_some_way_or_another }\n  expose(:thing){ get_thing_some_way_or_another }\n  expose :thing, ->{ get_thing_some_way_or_another }\n  expose :thing, :get_thing_some_way_or_another\nend\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}