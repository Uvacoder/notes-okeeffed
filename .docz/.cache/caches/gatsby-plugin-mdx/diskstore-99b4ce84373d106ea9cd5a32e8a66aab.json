{"expireTime":9007200852878445000,"key":"gatsby-plugin-mdx-entire-payload-52259271ba67be1f53d85b2d46f3d5e3-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"MySQL Development using Docker","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":33,"offset":199},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":33,"offset":199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Firstly, pull ","position":{"start":{"line":10,"column":1,"offset":201},"end":{"line":10,"column":15,"offset":215},"indent":[]}},{"type":"inlineCode","value":"docker pull mysql/mysql-server","position":{"start":{"line":10,"column":15,"offset":215},"end":{"line":10,"column":47,"offset":247},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":10,"column":47,"offset":247},"end":{"line":10,"column":48,"offset":248},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":201},"end":{"line":10,"column":48,"offset":248},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then ","position":{"start":{"line":12,"column":1,"offset":250},"end":{"line":12,"column":6,"offset":255},"indent":[]}},{"type":"inlineCode","value":"docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 -d mysql/mysql-server:latest","position":{"start":{"line":12,"column":6,"offset":255},"end":{"line":12,"column":108,"offset":357},"indent":[]}},{"type":"text","value":". If there a replacement or commited image, run that instead.","position":{"start":{"line":12,"column":108,"offset":357},"end":{"line":12,"column":169,"offset":418},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":250},"end":{"line":12,"column":169,"offset":418},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you are running it on a network, first create the network ","position":{"start":{"line":14,"column":1,"offset":420},"end":{"line":14,"column":62,"offset":481},"indent":[]}},{"type":"inlineCode","value":"docker network create dev-env","position":{"start":{"line":14,"column":62,"offset":481},"end":{"line":14,"column":93,"offset":512},"indent":[]}},{"type":"text","value":", then run with the ","position":{"start":{"line":14,"column":93,"offset":512},"end":{"line":14,"column":113,"offset":532},"indent":[]}},{"type":"inlineCode","value":"--net","position":{"start":{"line":14,"column":113,"offset":532},"end":{"line":14,"column":120,"offset":539},"indent":[]}},{"type":"text","value":" flag to hook it up.","position":{"start":{"line":14,"column":120,"offset":539},"end":{"line":14,"column":140,"offset":559},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":420},"end":{"line":14,"column":140,"offset":559},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 --net dev-env -d mysql/mysql-server:latest","position":{"start":{"line":16,"column":1,"offset":561},"end":{"line":16,"column":117,"offset":677},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":16,"column":117,"offset":677},"end":{"line":16,"column":118,"offset":678},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":561},"end":{"line":16,"column":118,"offset":678},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Linking ","position":{"start":{"line":18,"column":1,"offset":680},"end":{"line":18,"column":9,"offset":688},"indent":[]}},{"type":"inlineCode","value":"docker run -d -name app-container-name --link mysql-container-name app-image-name","position":{"start":{"line":18,"column":9,"offset":688},"end":{"line":18,"column":92,"offset":771},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":18,"column":92,"offset":771},"end":{"line":18,"column":93,"offset":772},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":680},"end":{"line":18,"column":93,"offset":772},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Updating the local Docker MySQL instance","position":{"start":{"line":20,"column":4,"offset":777},"end":{"line":20,"column":44,"offset":817},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":774},"end":{"line":20,"column":44,"offset":817},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Log into the container ","position":{"start":{"line":22,"column":1,"offset":819},"end":{"line":22,"column":24,"offset":842},"indent":[]}},{"type":"inlineCode","value":"docker exec -it CONTAINER_ID /bin/bash","position":{"start":{"line":22,"column":24,"offset":842},"end":{"line":22,"column":64,"offset":882},"indent":[]}},{"type":"text","value":" and first log into ","position":{"start":{"line":22,"column":64,"offset":882},"end":{"line":22,"column":84,"offset":902},"indent":[]}},{"type":"inlineCode","value":"mysql","position":{"start":{"line":22,"column":84,"offset":902},"end":{"line":22,"column":91,"offset":909},"indent":[]}},{"type":"text","value":" using ","position":{"start":{"line":22,"column":91,"offset":909},"end":{"line":22,"column":98,"offset":916},"indent":[]}},{"type":"inlineCode","value":"mysql -u root -p","position":{"start":{"line":22,"column":98,"offset":916},"end":{"line":22,"column":116,"offset":934},"indent":[]}},{"type":"text","value":". This will prompt you for that password we created, so now type that in and enter the command line terminal. First, run ","position":{"start":{"line":22,"column":116,"offset":934},"end":{"line":22,"column":237,"offset":1055},"indent":[]}},{"type":"inlineCode","value":"CREATE USER 'admin'@'%' IDENTIFIED BY 'password';","position":{"start":{"line":22,"column":237,"offset":1055},"end":{"line":22,"column":288,"offset":1106},"indent":[]}},{"type":"text","value":" Run ","position":{"start":{"line":22,"column":288,"offset":1106},"end":{"line":22,"column":293,"offset":1111},"indent":[]}},{"type":"inlineCode","value":"GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION;","position":{"start":{"line":22,"column":293,"offset":1111},"end":{"line":22,"column":356,"offset":1174},"indent":[]}},{"type":"text","value":". Finally, run ","position":{"start":{"line":22,"column":356,"offset":1174},"end":{"line":22,"column":371,"offset":1189},"indent":[]}},{"type":"inlineCode","value":"FLUSH PRIVILEGES;","position":{"start":{"line":22,"column":371,"offset":1189},"end":{"line":22,"column":390,"offset":1208},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":22,"column":390,"offset":1208},"end":{"line":22,"column":391,"offset":1209},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":819},"end":{"line":22,"column":391,"offset":1209},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":25,"column":1,"offset":1212},"end":{"line":25,"column":31,"offset":1242},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":25,"column":31,"offset":1242}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"mysql-development-using-docker\"\n    }}>{`MySQL Development using Docker`}</h1>\n    <p>{`Firstly, pull `}<inlineCode parentName=\"p\">{`docker pull mysql/mysql-server`}</inlineCode>{`.`}</p>\n    <p>{`Then `}<inlineCode parentName=\"p\">{`docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 -d mysql/mysql-server:latest`}</inlineCode>{`. If there a replacement or commited image, run that instead.`}</p>\n    <p>{`If you are running it on a network, first create the network `}<inlineCode parentName=\"p\">{`docker network create dev-env`}</inlineCode>{`, then run with the `}<inlineCode parentName=\"p\">{`--net`}</inlineCode>{` flag to hook it up.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 --net dev-env -d mysql/mysql-server:latest`}</inlineCode>{`.`}</p>\n    <p>{`Linking `}<inlineCode parentName=\"p\">{`docker run -d -name app-container-name --link mysql-container-name app-image-name`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"updating-the-local-docker-mysql-instance\"\n    }}>{`Updating the local Docker MySQL instance`}</h2>\n    <p>{`Log into the container `}<inlineCode parentName=\"p\">{`docker exec -it CONTAINER_ID /bin/bash`}</inlineCode>{` and first log into `}<inlineCode parentName=\"p\">{`mysql`}</inlineCode>{` using `}<inlineCode parentName=\"p\">{`mysql -u root -p`}</inlineCode>{`. This will prompt you for that password we created, so now type that in and enter the command line terminal. First, run `}<inlineCode parentName=\"p\">{`CREATE USER 'admin'@'%' IDENTIFIED BY 'password';`}</inlineCode>{` Run `}<inlineCode parentName=\"p\">{`GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION;`}</inlineCode>{`. Finally, run `}<inlineCode parentName=\"p\">{`FLUSH PRIVILEGES;`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}