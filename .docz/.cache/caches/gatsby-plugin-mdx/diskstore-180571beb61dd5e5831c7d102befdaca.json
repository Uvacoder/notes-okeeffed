{"expireTime":9007200849425523000,"key":"gatsby-plugin-mdx-entire-payload-222945d84007c12f533342e68f11582b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#components","children":[{"type":"text","value":"Components","position":{"start":{"line":7,"column":4,"offset":169},"end":{"line":7,"column":14,"offset":179},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":28,"offset":193},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":28,"offset":193},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#web-checklist","children":[{"type":"text","value":"Web Checklist","position":{"start":{"line":8,"column":6,"offset":199},"end":{"line":8,"column":19,"offset":212},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":198},"end":{"line":8,"column":36,"offset":229},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":198},"end":{"line":8,"column":36,"offset":229},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":196},"end":{"line":8,"column":36,"offset":229},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#web-testing","children":[{"type":"text","value":"Web Testing","position":{"start":{"line":9,"column":6,"offset":235},"end":{"line":9,"column":17,"offset":246},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":234},"end":{"line":9,"column":32,"offset":261},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":234},"end":{"line":9,"column":32,"offset":261},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#functional-testing-template","children":[{"type":"text","value":"Functional Testing Template","position":{"start":{"line":10,"column":8,"offset":269},"end":{"line":10,"column":35,"offset":296},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":268},"end":{"line":10,"column":66,"offset":327},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":268},"end":{"line":10,"column":66,"offset":327},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":266},"end":{"line":10,"column":66,"offset":327},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#regression-testing-template","children":[{"type":"text","value":"Regression Testing Template","position":{"start":{"line":11,"column":8,"offset":335},"end":{"line":11,"column":35,"offset":362},"indent":[]}}],"position":{"start":{"line":11,"column":7,"offset":334},"end":{"line":11,"column":66,"offset":393},"indent":[]}}],"position":{"start":{"line":11,"column":7,"offset":334},"end":{"line":11,"column":66,"offset":393},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":332},"end":{"line":11,"column":66,"offset":393},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ui-testing-template","children":[{"type":"text","value":"UI Testing Template","position":{"start":{"line":12,"column":8,"offset":401},"end":{"line":12,"column":27,"offset":420},"indent":[]}}],"position":{"start":{"line":12,"column":7,"offset":400},"end":{"line":12,"column":50,"offset":443},"indent":[]}}],"position":{"start":{"line":12,"column":7,"offset":400},"end":{"line":12,"column":50,"offset":443},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":398},"end":{"line":12,"column":50,"offset":443},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":266},"end":{"line":12,"column":50,"offset":443},"indent":[5,5]}}],"position":{"start":{"line":9,"column":3,"offset":232},"end":{"line":12,"column":50,"offset":443},"indent":[3,3,3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#web-accessibility","children":[{"type":"text","value":"Web Accessibility","position":{"start":{"line":13,"column":6,"offset":449},"end":{"line":13,"column":23,"offset":466},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":448},"end":{"line":13,"column":44,"offset":487},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":448},"end":{"line":13,"column":44,"offset":487},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":446},"end":{"line":13,"column":44,"offset":487},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#component-rules","children":[{"type":"text","value":"Component rules","position":{"start":{"line":14,"column":6,"offset":493},"end":{"line":14,"column":21,"offset":508},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":492},"end":{"line":14,"column":40,"offset":527},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":492},"end":{"line":14,"column":40,"offset":527},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":490},"end":{"line":14,"column":40,"offset":527},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#type-checking","children":[{"type":"text","value":"Type Checking","position":{"start":{"line":15,"column":6,"offset":533},"end":{"line":15,"column":19,"offset":546},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":532},"end":{"line":15,"column":36,"offset":563},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":532},"end":{"line":15,"column":36,"offset":563},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#complex-example","children":[{"type":"text","value":"Complex example","position":{"start":{"line":16,"column":8,"offset":571},"end":{"line":16,"column":23,"offset":586},"indent":[]}}],"position":{"start":{"line":16,"column":7,"offset":570},"end":{"line":16,"column":42,"offset":605},"indent":[]}}],"position":{"start":{"line":16,"column":7,"offset":570},"end":{"line":16,"column":42,"offset":605},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":568},"end":{"line":16,"column":42,"offset":605},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":568},"end":{"line":16,"column":42,"offset":605},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":530},"end":{"line":16,"column":42,"offset":605},"indent":[3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#using-decorators","children":[{"type":"text","value":"Using decorators","position":{"start":{"line":17,"column":6,"offset":611},"end":{"line":17,"column":22,"offset":627},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":610},"end":{"line":17,"column":42,"offset":647},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":610},"end":{"line":17,"column":42,"offset":647},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":608},"end":{"line":17,"column":42,"offset":647},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":196},"end":{"line":17,"column":42,"offset":647},"indent":[3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":17,"column":42,"offset":647},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":17,"column":42,"offset":647},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Components","position":{"start":{"line":19,"column":3,"offset":651},"end":{"line":19,"column":13,"offset":661},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":649},"end":{"line":19,"column":13,"offset":661},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Web Checklist","position":{"start":{"line":21,"column":4,"offset":666},"end":{"line":21,"column":17,"offset":679},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":663},"end":{"line":21,"column":17,"offset":679},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Web testing","position":{"start":{"line":23,"column":4,"offset":684},"end":{"line":23,"column":15,"offset":695},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":684},"end":{"line":23,"column":15,"offset":695},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":681},"end":{"line":23,"column":15,"offset":695},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Web accessibility","position":{"start":{"line":24,"column":4,"offset":699},"end":{"line":24,"column":21,"offset":716},"indent":[]}}],"position":{"start":{"line":24,"column":4,"offset":699},"end":{"line":24,"column":21,"offset":716},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":696},"end":{"line":24,"column":21,"offset":716},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Component rules","position":{"start":{"line":25,"column":4,"offset":720},"end":{"line":25,"column":19,"offset":735},"indent":[]}}],"position":{"start":{"line":25,"column":4,"offset":720},"end":{"line":25,"column":19,"offset":735},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":717},"end":{"line":25,"column":19,"offset":735},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":681},"end":{"line":25,"column":19,"offset":735},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Web Testing","position":{"start":{"line":27,"column":4,"offset":740},"end":{"line":27,"column":15,"offset":751},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":737},"end":{"line":27,"column":15,"offset":751},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For the web, we want to ensure that we can run UI tests, regression tests and functional tests.","position":{"start":{"line":29,"column":1,"offset":753},"end":{"line":29,"column":96,"offset":848},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":753},"end":{"line":29,"column":96,"offset":848},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Functional Testing Template","position":{"start":{"line":31,"column":5,"offset":854},"end":{"line":31,"column":32,"offset":881},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":850},"end":{"line":31,"column":32,"offset":881},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// Example function to test\nfunction add(x, y) {\n  return x + y;\n}\n\n// Test suite\ndescribe('JavaScript functionality for a file', () => {\n  // Test spec\n  it('expects true to be true', () => {\n    expect(true).to.be.true; // evaluates to true - test passes\n  });\n\n  // Test spec\n  it('expects 1 + 2 to equal 3', () => {\n    const result = add(1, 2);\n    expect(result).to.equal(3); // evaluates to true - test passes\n  });\n});","position":{"start":{"line":33,"column":1,"offset":883},"end":{"line":52,"column":4,"offset":1327},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For UI Tests, reference ","position":{"start":{"line":54,"column":1,"offset":1329},"end":{"line":54,"column":25,"offset":1353},"indent":[]}},{"type":"inlineCode","value":"manual/Testing/mocha-and-chai.md","position":{"start":{"line":54,"column":25,"offset":1353},"end":{"line":54,"column":59,"offset":1387},"indent":[]}},{"type":"text","value":" for more information. It is best to run this using ","position":{"start":{"line":54,"column":59,"offset":1387},"end":{"line":54,"column":111,"offset":1439},"indent":[]}},{"type":"inlineCode","value":"mochacinno","position":{"start":{"line":54,"column":111,"offset":1439},"end":{"line":54,"column":123,"offset":1451},"indent":[]}},{"type":"text","value":" and in watch mode. These are best use for anything found under the ","position":{"start":{"line":54,"column":123,"offset":1451},"end":{"line":54,"column":191,"offset":1519},"indent":[]}},{"type":"inlineCode","value":"js","position":{"start":{"line":54,"column":191,"offset":1519},"end":{"line":54,"column":195,"offset":1523},"indent":[]}},{"type":"text","value":" controller module banner.","position":{"start":{"line":54,"column":195,"offset":1523},"end":{"line":54,"column":221,"offset":1549},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1329},"end":{"line":54,"column":221,"offset":1549},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Regression Testing Template","position":{"start":{"line":56,"column":5,"offset":1555},"end":{"line":56,"column":32,"offset":1582},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1551},"end":{"line":56,"column":32,"offset":1582},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('.homeSplashFade');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});","position":{"start":{"line":58,"column":1,"offset":1584},"end":{"line":106,"column":4,"offset":2854},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For more information, reference ","position":{"start":{"line":108,"column":1,"offset":2856},"end":{"line":108,"column":33,"offset":2888},"indent":[]}},{"type":"inlineCode","value":"manual/Testing/Regression-Testing.md","position":{"start":{"line":108,"column":33,"offset":2888},"end":{"line":108,"column":71,"offset":2926},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":108,"column":71,"offset":2926},"end":{"line":108,"column":72,"offset":2927},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2856},"end":{"line":108,"column":72,"offset":2927},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"UI Testing Template","position":{"start":{"line":110,"column":5,"offset":2933},"end":{"line":110,"column":24,"offset":2952},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2929},"end":{"line":110,"column":24,"offset":2952},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const puppeteer = require('puppeteer');\n\n// Test suite\ndescribe('PageHome functionality', () => {\n  // Test suite within another test suite - useful for subsectioning tests within a component/page\n  describe('Simple Puppeteer UI test for form elements', () => {\n    it('firstName and lastName from Puppeteer deep equal expected schema', async () => {\n      const expected = {\n        firstName: 'Hello',\n        lastName: 'World'\n      };\n\n      const browser = await puppeteer.launch({ headless: false });\n      const page = await browser.newPage();\n      await page.goto('http://localhost:3000');\n      await page.screenshot({ path: 'example.png' }); // create an example screenshot of current UI state\n      await page.type('input[name=\"firstName\"]', 'Hello');\n      const firstName = await page.$eval(\n        'input[name=\"firstName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      await page.click('#next');\n      await page.waitForSelector('input[name=\"lastName\"]');\n      await page.type('input[name=\"lastName\"]', 'World');\n      const lastName = await page.$eval(\n        'input[name=\"lastName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      const formData = {\n        firstName: firstName,\n        lastName: lastName\n      };\n\n      await browser.close();\n\n      expect(formData).to.deep.equal(expected); // evauates to true if form fields hold correct value\n    });\n  });\n});","position":{"start":{"line":112,"column":1,"offset":2954},"end":{"line":156,"column":4,"offset":4412},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For more information, reference ","position":{"start":{"line":158,"column":1,"offset":4414},"end":{"line":158,"column":33,"offset":4446},"indent":[]}},{"type":"inlineCode","value":"manual/Testing/puppeteer.md","position":{"start":{"line":158,"column":33,"offset":4446},"end":{"line":158,"column":62,"offset":4475},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":158,"column":62,"offset":4475},"end":{"line":158,"column":63,"offset":4476},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":4414},"end":{"line":158,"column":63,"offset":4476},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Web Accessibility","position":{"start":{"line":160,"column":4,"offset":4481},"end":{"line":160,"column":21,"offset":4498},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":4478},"end":{"line":160,"column":21,"offset":4498},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run the site through the accessibility checker and ensure that there are no errors.","position":{"start":{"line":162,"column":1,"offset":4500},"end":{"line":162,"column":84,"offset":4583},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4500},"end":{"line":162,"column":84,"offset":4583},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Useful links:","position":{"start":{"line":164,"column":1,"offset":4585},"end":{"line":164,"column":14,"offset":4598},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4585},"end":{"line":164,"column":14,"offset":4598},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://design-patterns.tink.uk/","children":[{"type":"text","value":"Tink Design Patterns","position":{"start":{"line":166,"column":4,"offset":4603},"end":{"line":166,"column":24,"offset":4623},"indent":[]}}],"position":{"start":{"line":166,"column":3,"offset":4602},"end":{"line":166,"column":59,"offset":4658},"indent":[]}}],"position":{"start":{"line":166,"column":3,"offset":4602},"end":{"line":166,"column":59,"offset":4658},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":4600},"end":{"line":166,"column":59,"offset":4658},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":4600},"end":{"line":166,"column":59,"offset":4658},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Component rules","position":{"start":{"line":168,"column":4,"offset":4663},"end":{"line":168,"column":19,"offset":4678},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":4660},"end":{"line":168,"column":19,"offset":4678},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We want reusability where possible","position":{"start":{"line":170,"column":3,"offset":4682},"end":{"line":170,"column":37,"offset":4716},"indent":[]}}],"position":{"start":{"line":170,"column":3,"offset":4682},"end":{"line":170,"column":37,"offset":4716},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":4680},"end":{"line":170,"column":37,"offset":4716},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"UI elements should have no hardcoded text","position":{"start":{"line":171,"column":3,"offset":4719},"end":{"line":171,"column":44,"offset":4760},"indent":[]}}],"position":{"start":{"line":171,"column":3,"offset":4719},"end":{"line":171,"column":44,"offset":4760},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":4717},"end":{"line":171,"column":44,"offset":4760},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Where possible, use ","position":{"start":{"line":172,"column":3,"offset":4763},"end":{"line":172,"column":23,"offset":4783},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/reduxjs/reselect","children":[{"type":"text","value":"Reselect","position":{"start":{"line":172,"column":24,"offset":4784},"end":{"line":172,"column":32,"offset":4792},"indent":[]}}],"position":{"start":{"line":172,"column":23,"offset":4783},"end":{"line":172,"column":70,"offset":4830},"indent":[]}},{"type":"text","value":" when using Redux and having elements that require a change to only specific state elements","position":{"start":{"line":172,"column":70,"offset":4830},"end":{"line":172,"column":161,"offset":4921},"indent":[]}}],"position":{"start":{"line":172,"column":3,"offset":4763},"end":{"line":172,"column":161,"offset":4921},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":4761},"end":{"line":172,"column":161,"offset":4921},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use a decorator over all objects","position":{"start":{"line":173,"column":3,"offset":4924},"end":{"line":173,"column":35,"offset":4956},"indent":[]}}],"position":{"start":{"line":173,"column":3,"offset":4924},"end":{"line":173,"column":35,"offset":4956},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":4922},"end":{"line":173,"column":35,"offset":4956},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write all files in TypeScript","position":{"start":{"line":174,"column":3,"offset":4959},"end":{"line":174,"column":32,"offset":4988},"indent":[]}}],"position":{"start":{"line":174,"column":3,"offset":4959},"end":{"line":174,"column":32,"offset":4988},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":4957},"end":{"line":174,"column":32,"offset":4988},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":4680},"end":{"line":174,"column":32,"offset":4988},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Type Checking","position":{"start":{"line":176,"column":4,"offset":4993},"end":{"line":176,"column":17,"offset":5006},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":4990},"end":{"line":176,"column":17,"offset":5006},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Type checking is an integral part of the process to ensure that what we are providing is the correct type.","position":{"start":{"line":178,"column":1,"offset":5008},"end":{"line":178,"column":107,"offset":5114},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":5008},"end":{"line":178,"column":107,"offset":5114},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"TypeScript with VSCode offers a great to do this from our doc blocks.","position":{"start":{"line":180,"column":1,"offset":5116},"end":{"line":180,"column":70,"offset":5185},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":5116},"end":{"line":180,"column":70,"offset":5185},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/@trukrs/type-safe-javascript-with-jsdoc-7a2a63209b76","children":[{"type":"text","value":"This Medium article has a great into into it.","position":{"start":{"line":182,"column":2,"offset":5188},"end":{"line":182,"column":47,"offset":5233},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":5187},"end":{"line":182,"column":121,"offset":5307},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":5187},"end":{"line":182,"column":121,"offset":5307},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To get started on VSCode for .js files, head to settings and update the \"Check JS\" box.","position":{"start":{"line":184,"column":1,"offset":5309},"end":{"line":184,"column":88,"offset":5396},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":5309},"end":{"line":184,"column":88,"offset":5396},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1539053998/Screen_Shot_2018-10-09_at_1.36.08_pm.png","alt":"Check JS","position":{"start":{"line":186,"column":1,"offset":5398},"end":{"line":186,"column":118,"offset":5515},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":5398},"end":{"line":186,"column":118,"offset":5515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now we can get into type setting simply by using our doc blocks with the ","position":{"start":{"line":188,"column":1,"offset":5517},"end":{"line":188,"column":74,"offset":5590},"indent":[]}},{"type":"inlineCode","value":"@type","position":{"start":{"line":188,"column":74,"offset":5590},"end":{"line":188,"column":81,"offset":5597},"indent":[]}},{"type":"text","value":" attribute!","position":{"start":{"line":188,"column":81,"offset":5597},"end":{"line":188,"column":92,"offset":5608},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":5517},"end":{"line":188,"column":92,"offset":5608},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1539053998/Screen_Shot_2018-10-09_at_1.43.22_pm.png","alt":"Basic example","position":{"start":{"line":190,"column":1,"offset":5610},"end":{"line":190,"column":123,"offset":5732},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":5610},"end":{"line":190,"column":123,"offset":5732},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The deep you delve into the type, the deeper the error outlines go.","position":{"start":{"line":192,"column":1,"offset":5734},"end":{"line":192,"column":68,"offset":5801},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":5734},"end":{"line":192,"column":68,"offset":5801},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1539053998/Screen_Shot_2018-10-09_at_1.47.28_pm.png","alt":"More complex example","position":{"start":{"line":194,"column":1,"offset":5803},"end":{"line":194,"column":130,"offset":5932},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":5803},"end":{"line":194,"column":130,"offset":5932},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.typescriptlang.org/docs/handbook/basic-types.html","children":[{"type":"text","value":"Checkout the Typescript page","position":{"start":{"line":196,"column":2,"offset":5935},"end":{"line":196,"column":30,"offset":5963},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":5934},"end":{"line":196,"column":94,"offset":6027},"indent":[]}},{"type":"text","value":" to get more of an idea about what you can do.","position":{"start":{"line":196,"column":94,"offset":6027},"end":{"line":196,"column":140,"offset":6073},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":5934},"end":{"line":196,"column":140,"offset":6073},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Complex example","position":{"start":{"line":198,"column":5,"offset":6079},"end":{"line":198,"column":20,"offset":6094},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":6075},"end":{"line":198,"column":20,"offset":6094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example using @typedefs.","position":{"start":{"line":200,"column":1,"offset":6096},"end":{"line":200,"column":36,"offset":6131},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":6096},"end":{"line":200,"column":36,"offset":6131},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport Config from 'src/app.json';\nimport Emitter from 'common/Emitter';\n/* user imports */\n\n/**\n * Render the ComponentALFooterOne component\n *\n * @class ComponentALFooterOne\n * @extends {Component}\n */\nclass ComponentALFooterOne extends Component {\n  /**\n   * @typedef {Object} Link Defines the main links\n   * @property {String} copy Copy string\n   * @property {String} link Link URL\n   */\n  /**\n   * @typedef {Object} Social Social links\n   * @property {String} type Type of social linke\n   * @property {String} link Link URL\n   */\n  /**\n   * @typedef {Object} State The state object\n   * @property {Link[]} linksTop Links that go on the top\n   * @property {Social[]} linksSocial Social links\n   * @property {Link[]} linksBottom Links that go to the bottom\n   */\n\n  /**\n   * @type {State} state\n   */\n  state = {\n    linksTop: [\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      }\n    ],\n    linksSocial: [\n      {\n        type: 'Link',\n        link: '/'\n      },\n      {\n        type: 'Link',\n        link: '/'\n      },\n      {\n        type: 'Link',\n        link: '/'\n      },\n      {\n        type: 'Link',\n        link: '/'\n      }\n    ],\n    linksBottom: [\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      }\n    ]\n  };\n\n  handleLink(e, d) {\n    Emitter.emit('event', {\n      event: 'ComponentALFooterOne.handleLink',\n      e: e.target\n    });\n\n    if (d.href[0] === '/') {\n      e.preventDefault();\n      const { router } = this.props;\n      router.push(Config.baseUrl + d.href);\n    }\n  }\n\n  renderLinksTopLeft = () => {\n    const { linksTopLeft } = this.props.copy;\n    if (!linksTopLeft) {\n      return;\n    }\n\n    return linksTopLeft.map((d, i) => (\n      <a\n        key={i}\n        onClick={(e) => this.handleLink(e, d)}\n        href={d.href}\n        className=\"text f-primary link margin opaque animate\"\n      >\n        {d.name}\n      </a>\n    ));\n  };\n\n  renderLinksBottomLeft = () => {\n    const { linksBottomLeft } = this.props.copy;\n    if (!linksBottomLeft) {\n      return;\n    }\n\n    return linksBottomLeft.map((d, i) => (\n      <a\n        key={i}\n        onClick={(e) => this.handleLink(e, d)}\n        href={d.href}\n        className=\"text f-primary link social margin opaque animate\"\n      >\n        {d.name}\n      </a>\n    ));\n  };\n\n  renderLinksBottomRight = () => {\n    const { linksBottomRight } = this.props.copy;\n    if (!linksBottomRight) {\n      return;\n    }\n\n    return linksBottomRight.map((d, i) => (\n      <a\n        key={i}\n        onClick={(e) => this.handleLink(e, d)}\n        href={d.href}\n        className=\"text f-primary link social margin opaque animate\"\n      >\n        {d.name}\n      </a>\n    ));\n  };\n\n  /**\n   * Render ComponentALFooterOne component\n   * @memberof ComponentALFooterOne\n   * @var {function} render Render ComponentALFooterOne component\n   * @returns {Object} component\n   */\n  render() {\n    return (\n      <div className=\"component-al-footer-one\">\n        <div className=\"container content\">\n          <nav className=\"nav footer\">\n            <div className=\"block-main links\">{this.renderLinksTopLeft()}</div>\n            <div className=\"block-lower\">\n              <div className=\"block-social\">{this.renderLinksBottomLeft()}</div>\n\n              <div className=\"block-footer links\">\n                {this.renderLinksBottomRight()}\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ComponentALFooterOne;","position":{"start":{"line":202,"column":1,"offset":6133},"end":{"line":382,"column":4,"offset":9919},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using decorators","position":{"start":{"line":384,"column":4,"offset":9924},"end":{"line":384,"column":20,"offset":9940},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":9921},"end":{"line":384,"column":20,"offset":9940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Decorators are a useful way to cut code and wrap classes. A good example is the usage with redux. Take note though: decorators are deprecated and may be removed.","position":{"start":{"line":386,"column":1,"offset":9942},"end":{"line":386,"column":162,"offset":10103},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":9942},"end":{"line":386,"column":162,"offset":10103},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The example of a decorator used for Redux:","position":{"start":{"line":388,"column":1,"offset":10105},"end":{"line":388,"column":43,"offset":10147},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":10105},"end":{"line":388,"column":43,"offset":10147},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import { connect } from 'react-redux';\n\nconst DecoratorRedux = (component) => {\n  const mapStateToProps = (state) => {\n    return {\n      routing: state.routing,\n      copy: state.copy,\n      current: state.routing.locationBeforeTransitions.pathname\n    };\n  };\n\n  return connect(mapStateToProps)(component);\n};\n\nexport default DecoratorRedux;","position":{"start":{"line":390,"column":1,"offset":10149},"end":{"line":406,"column":4,"offset":10510},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In use:","position":{"start":{"line":408,"column":1,"offset":10512},"end":{"line":408,"column":8,"offset":10519},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":10512},"end":{"line":408,"column":8,"offset":10519},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"@DecoratorRedux\nclass PageBlog extends Component {\n    /**\n     * Render PageBlog component\n     * @memberof PageBlog\n     * @var {function} render Render PageBlog component\n\t * @returns {PageBlog} component\n     */\n    render() {\n      return (<div><p>Hello!</p></div>);\n    }","position":{"start":{"line":410,"column":1,"offset":10521},"end":{"line":422,"column":4,"offset":10816},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":425,"column":1,"offset":10819},"end":{"line":425,"column":31,"offset":10849},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":425,"column":31,"offset":10849}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#components\"\n        }}>{`Components`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#web-checklist\"\n            }}>{`Web Checklist`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#web-testing\"\n            }}>{`Web Testing`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#functional-testing-template\"\n                }}>{`Functional Testing Template`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#regression-testing-template\"\n                }}>{`Regression Testing Template`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#ui-testing-template\"\n                }}>{`UI Testing Template`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#web-accessibility\"\n            }}>{`Web Accessibility`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#component-rules\"\n            }}>{`Component rules`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#type-checking\"\n            }}>{`Type Checking`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#complex-example\"\n                }}>{`Complex example`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#using-decorators\"\n            }}>{`Using decorators`}</a></li>\n        </ul></li>\n    </ul>\n    <h1 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h1>\n    <h2 {...{\n      \"id\": \"web-checklist\"\n    }}>{`Web Checklist`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Web testing`}</li>\n      <li parentName=\"ol\">{`Web accessibility`}</li>\n      <li parentName=\"ol\">{`Component rules`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"web-testing\"\n    }}>{`Web Testing`}</h2>\n    <p>{`For the web, we want to ensure that we can run UI tests, regression tests and functional tests.`}</p>\n    <h3 {...{\n      \"id\": \"functional-testing-template\"\n    }}>{`Functional Testing Template`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Example function to test\nfunction add(x, y) {\n  return x + y;\n}\n\n// Test suite\ndescribe('JavaScript functionality for a file', () => {\n  // Test spec\n  it('expects true to be true', () => {\n    expect(true).to.be.true; // evaluates to true - test passes\n  });\n\n  // Test spec\n  it('expects 1 + 2 to equal 3', () => {\n    const result = add(1, 2);\n    expect(result).to.equal(3); // evaluates to true - test passes\n  });\n});\n`}</code></pre>\n    <p>{`For UI Tests, reference `}<inlineCode parentName=\"p\">{`manual/Testing/mocha-and-chai.md`}</inlineCode>{` for more information. It is best to run this using `}<inlineCode parentName=\"p\">{`mochacinno`}</inlineCode>{` and in watch mode. These are best use for anything found under the `}<inlineCode parentName=\"p\">{`js`}</inlineCode>{` controller module banner.`}</p>\n    <h3 {...{\n      \"id\": \"regression-testing-template\"\n    }}>{`Regression Testing Template`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('.homeSplashFade');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});\n`}</code></pre>\n    <p>{`For more information, reference `}<inlineCode parentName=\"p\">{`manual/Testing/Regression-Testing.md`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"ui-testing-template\"\n    }}>{`UI Testing Template`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const puppeteer = require('puppeteer');\n\n// Test suite\ndescribe('PageHome functionality', () => {\n  // Test suite within another test suite - useful for subsectioning tests within a component/page\n  describe('Simple Puppeteer UI test for form elements', () => {\n    it('firstName and lastName from Puppeteer deep equal expected schema', async () => {\n      const expected = {\n        firstName: 'Hello',\n        lastName: 'World'\n      };\n\n      const browser = await puppeteer.launch({ headless: false });\n      const page = await browser.newPage();\n      await page.goto('http://localhost:3000');\n      await page.screenshot({ path: 'example.png' }); // create an example screenshot of current UI state\n      await page.type('input[name=\"firstName\"]', 'Hello');\n      const firstName = await page.$eval(\n        'input[name=\"firstName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      await page.click('#next');\n      await page.waitForSelector('input[name=\"lastName\"]');\n      await page.type('input[name=\"lastName\"]', 'World');\n      const lastName = await page.$eval(\n        'input[name=\"lastName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      const formData = {\n        firstName: firstName,\n        lastName: lastName\n      };\n\n      await browser.close();\n\n      expect(formData).to.deep.equal(expected); // evauates to true if form fields hold correct value\n    });\n  });\n});\n`}</code></pre>\n    <p>{`For more information, reference `}<inlineCode parentName=\"p\">{`manual/Testing/puppeteer.md`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"web-accessibility\"\n    }}>{`Web Accessibility`}</h2>\n    <p>{`Run the site through the accessibility checker and ensure that there are no errors.`}</p>\n    <p>{`Useful links:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://design-patterns.tink.uk/\"\n        }}>{`Tink Design Patterns`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"component-rules\"\n    }}>{`Component rules`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`We want reusability where possible`}</li>\n      <li parentName=\"ul\">{`UI elements should have no hardcoded text`}</li>\n      <li parentName=\"ul\">{`Where possible, use `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/reduxjs/reselect\"\n        }}>{`Reselect`}</a>{` when using Redux and having elements that require a change to only specific state elements`}</li>\n      <li parentName=\"ul\">{`Use a decorator over all objects`}</li>\n      <li parentName=\"ul\">{`Write all files in TypeScript`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"type-checking\"\n    }}>{`Type Checking`}</h2>\n    <p>{`Type checking is an integral part of the process to ensure that what we are providing is the correct type.`}</p>\n    <p>{`TypeScript with VSCode offers a great to do this from our doc blocks.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/@trukrs/type-safe-javascript-with-jsdoc-7a2a63209b76\"\n      }}>{`This Medium article has a great into into it.`}</a></p>\n    <p>{`To get started on VSCode for .js files, head to settings and update the \"Check JS\" box.`}</p>\n    <p><img alt=\"Check JS\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1539053998/Screen_Shot_2018-10-09_at_1.36.08_pm.png\" /></p>\n    <p>{`Now we can get into type setting simply by using our doc blocks with the `}<inlineCode parentName=\"p\">{`@type`}</inlineCode>{` attribute!`}</p>\n    <p><img alt=\"Basic example\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1539053998/Screen_Shot_2018-10-09_at_1.43.22_pm.png\" /></p>\n    <p>{`The deep you delve into the type, the deeper the error outlines go.`}</p>\n    <p><img alt=\"More complex example\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1539053998/Screen_Shot_2018-10-09_at_1.47.28_pm.png\" /></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.typescriptlang.org/docs/handbook/basic-types.html\"\n      }}>{`Checkout the Typescript page`}</a>{` to get more of an idea about what you can do.`}</p>\n    <h3 {...{\n      \"id\": \"complex-example\"\n    }}>{`Complex example`}</h3>\n    <p>{`Here is an example using @typedefs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport Config from 'src/app.json';\nimport Emitter from 'common/Emitter';\n/* user imports */\n\n/**\n * Render the ComponentALFooterOne component\n *\n * @class ComponentALFooterOne\n * @extends {Component}\n */\nclass ComponentALFooterOne extends Component {\n  /**\n   * @typedef {Object} Link Defines the main links\n   * @property {String} copy Copy string\n   * @property {String} link Link URL\n   */\n  /**\n   * @typedef {Object} Social Social links\n   * @property {String} type Type of social linke\n   * @property {String} link Link URL\n   */\n  /**\n   * @typedef {Object} State The state object\n   * @property {Link[]} linksTop Links that go on the top\n   * @property {Social[]} linksSocial Social links\n   * @property {Link[]} linksBottom Links that go to the bottom\n   */\n\n  /**\n   * @type {State} state\n   */\n  state = {\n    linksTop: [\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      }\n    ],\n    linksSocial: [\n      {\n        type: 'Link',\n        link: '/'\n      },\n      {\n        type: 'Link',\n        link: '/'\n      },\n      {\n        type: 'Link',\n        link: '/'\n      },\n      {\n        type: 'Link',\n        link: '/'\n      }\n    ],\n    linksBottom: [\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      },\n      {\n        copy: 'Link',\n        link: '/'\n      }\n    ]\n  };\n\n  handleLink(e, d) {\n    Emitter.emit('event', {\n      event: 'ComponentALFooterOne.handleLink',\n      e: e.target\n    });\n\n    if (d.href[0] === '/') {\n      e.preventDefault();\n      const { router } = this.props;\n      router.push(Config.baseUrl + d.href);\n    }\n  }\n\n  renderLinksTopLeft = () => {\n    const { linksTopLeft } = this.props.copy;\n    if (!linksTopLeft) {\n      return;\n    }\n\n    return linksTopLeft.map((d, i) => (\n      <a\n        key={i}\n        onClick={(e) => this.handleLink(e, d)}\n        href={d.href}\n        className=\"text f-primary link margin opaque animate\"\n      >\n        {d.name}\n      </a>\n    ));\n  };\n\n  renderLinksBottomLeft = () => {\n    const { linksBottomLeft } = this.props.copy;\n    if (!linksBottomLeft) {\n      return;\n    }\n\n    return linksBottomLeft.map((d, i) => (\n      <a\n        key={i}\n        onClick={(e) => this.handleLink(e, d)}\n        href={d.href}\n        className=\"text f-primary link social margin opaque animate\"\n      >\n        {d.name}\n      </a>\n    ));\n  };\n\n  renderLinksBottomRight = () => {\n    const { linksBottomRight } = this.props.copy;\n    if (!linksBottomRight) {\n      return;\n    }\n\n    return linksBottomRight.map((d, i) => (\n      <a\n        key={i}\n        onClick={(e) => this.handleLink(e, d)}\n        href={d.href}\n        className=\"text f-primary link social margin opaque animate\"\n      >\n        {d.name}\n      </a>\n    ));\n  };\n\n  /**\n   * Render ComponentALFooterOne component\n   * @memberof ComponentALFooterOne\n   * @var {function} render Render ComponentALFooterOne component\n   * @returns {Object} component\n   */\n  render() {\n    return (\n      <div className=\"component-al-footer-one\">\n        <div className=\"container content\">\n          <nav className=\"nav footer\">\n            <div className=\"block-main links\">{this.renderLinksTopLeft()}</div>\n            <div className=\"block-lower\">\n              <div className=\"block-social\">{this.renderLinksBottomLeft()}</div>\n\n              <div className=\"block-footer links\">\n                {this.renderLinksBottomRight()}\n              </div>\n            </div>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ComponentALFooterOne;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-decorators\"\n    }}>{`Using decorators`}</h2>\n    <p>{`Decorators are a useful way to cut code and wrap classes. A good example is the usage with redux. Take note though: decorators are deprecated and may be removed.`}</p>\n    <p>{`The example of a decorator used for Redux:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { connect } from 'react-redux';\n\nconst DecoratorRedux = (component) => {\n  const mapStateToProps = (state) => {\n    return {\n      routing: state.routing,\n      copy: state.copy,\n      current: state.routing.locationBeforeTransitions.pathname\n    };\n  };\n\n  return connect(mapStateToProps)(component);\n};\n\nexport default DecoratorRedux;\n`}</code></pre>\n    <p>{`In use:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`@DecoratorRedux\nclass PageBlog extends Component {\n    /**\n     * Render PageBlog component\n     * @memberof PageBlog\n     * @var {function} render Render PageBlog component\n     * @returns {PageBlog} component\n     */\n    render() {\n      return (<div><p>Hello!</p></div>);\n    }\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}