{"expireTime":9007200852878430000,"key":"gatsby-plugin-mdx-entire-payload-cd285bfb5210acf76d59a8d45a0fefc3-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Lambda Go Servers","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":20,"offset":186},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":20,"offset":186},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This following example uses Gin.","position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":33,"offset":220},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":33,"offset":220},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"TODO: Add in the learnings from the local repo.","position":{"start":{"line":12,"column":1,"offset":222},"end":{"line":12,"column":48,"offset":269},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":222},"end":{"line":12,"column":48,"offset":269},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":14,"column":4,"offset":274},"end":{"line":14,"column":13,"offset":283},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":271},"end":{"line":14,"column":13,"offset":283},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/appleboy/gin-lambda","children":[{"type":"text","value":"Gin + Lambda Go","position":{"start":{"line":16,"column":5,"offset":289},"end":{"line":16,"column":20,"offset":304},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":288},"end":{"line":16,"column":61,"offset":345},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":288},"end":{"line":16,"column":61,"offset":345},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":285},"end":{"line":16,"column":61,"offset":345},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/apex/gateway","children":[{"type":"text","value":"Apex Gateway","position":{"start":{"line":17,"column":5,"offset":350},"end":{"line":17,"column":17,"offset":362},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":349},"end":{"line":17,"column":51,"offset":396},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":349},"end":{"line":17,"column":51,"offset":396},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":346},"end":{"line":17,"column":51,"offset":396},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/awslabs/aws-lambda-go-api-proxy","children":[{"type":"text","value":"Gin + Lambda AWSLabs","position":{"start":{"line":18,"column":5,"offset":401},"end":{"line":18,"column":25,"offset":421},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":400},"end":{"line":18,"column":78,"offset":474},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":400},"end":{"line":18,"column":78,"offset":474},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":397},"end":{"line":18,"column":78,"offset":474},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.codeproject.com/Articles/5269904/Deploy-a-Typescript-Lambda-function-with-AWS-CDK-a","children":[{"type":"text","value":"TS Lambda","position":{"start":{"line":19,"column":5,"offset":479},"end":{"line":19,"column":14,"offset":488},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":478},"end":{"line":19,"column":112,"offset":586},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":478},"end":{"line":19,"column":112,"offset":586},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":475},"end":{"line":19,"column":112,"offset":586},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.aws.amazon.com/cdk/api/latest/typescript/api/aws-apigateway.html","children":[{"type":"text","value":"AWS CDK - API Gateway","position":{"start":{"line":20,"column":5,"offset":591},"end":{"line":20,"column":26,"offset":612},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":590},"end":{"line":20,"column":106,"offset":692},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":590},"end":{"line":20,"column":106,"offset":692},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":587},"end":{"line":20,"column":106,"offset":692},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.alexedwards.net/blog/serverless-api-with-go-and-aws-lambda","children":[{"type":"text","value":"AWS CDK - First Go Lambda Function","position":{"start":{"line":21,"column":5,"offset":697},"end":{"line":21,"column":39,"offset":731},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":696},"end":{"line":21,"column":112,"offset":804},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":696},"end":{"line":21,"column":112,"offset":804},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":693},"end":{"line":21,"column":112,"offset":804},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":285},"end":{"line":21,"column":112,"offset":804},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gin + Lambda with AWSLabs proxy","position":{"start":{"line":23,"column":4,"offset":809},"end":{"line":23,"column":35,"offset":840},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":806},"end":{"line":23,"column":35,"offset":840},"indent":[]}},{"type":"code","lang":"go","meta":null,"value":"package main\n\nimport (\n\t\"log\"\n\t\"context\"\n\n\t\"github.com/aws/aws-lambda-go/events\"\n\t\"github.com/aws/aws-lambda-go/lambda\"\n\t\"github.com/awslabs/aws-lambda-go-api-proxy/gin\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nvar ginLambda *ginadapter.GinLambda\n\nfunc init() {\n\t// stdout and stderr are sent to AWS CloudWatch Logs\n\tlog.Printf(\"Gin cold start\")\n\tr := gin.Default()\n\tr.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.JSON(200, gin.H{\n\t\t\t\"message\": \"pong\",\n\t\t})\n\t})\n\n\tginLambda = ginadapter.New(r)\n}\n\n// Handler will deal with Gin working with Lambda\nfunc Handler(ctx context.Context, req events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {\n\t// If no name is provided in the HTTP request body, throw an error\n\treturn ginLambda.ProxyWithContext(ctx, req)\n}\n\nfunc main() {\n\tlambda.Start(Handler)\n}","position":{"start":{"line":25,"column":1,"offset":842},"end":{"line":62,"column":4,"offset":1649},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gin + Lambda with Apex Gateway","position":{"start":{"line":64,"column":4,"offset":1654},"end":{"line":64,"column":34,"offset":1684},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1651},"end":{"line":64,"column":34,"offset":1684},"indent":[]}},{"type":"code","lang":"go","meta":null,"value":"package main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n\t\"os\"\n\n\t\"github.com/apex/gateway\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc helloHandler(c *gin.Context) {\n\tname := c.Param(\"name\")\n\tc.String(http.StatusOK, \"Hello %s\", name)\n}\n\nfunc welcomeHandler(c *gin.Context) {\n\tc.String(http.StatusOK, \"Hello World from Go\")\n}\n\nfunc rootHandler(c *gin.Context) {\n\tc.JSON(http.StatusOK, gin.H{\n\t\t\"text\": \"Welcome to gin lambda server.\",\n\t})\n}\n\nfunc routerEngine() *gin.Engine {\n\t// set server mode\n\tgin.SetMode(gin.DebugMode)\n\n\tr := gin.New()\n\n\t// Global middleware\n\tr.Use(gin.Logger())\n\tr.Use(gin.Recovery())\n\n\tr.GET(\"/welcome\", welcomeHandler)\n\tr.GET(\"/user/:name\", helloHandler)\n\tr.GET(\"/\", rootHandler)\n\n\treturn r\n}\n\nfunc main() {\n\taddr := \":\" + os.Getenv(\"PORT\")\n\tlog.Fatal(gateway.ListenAndServe(addr, routerEngine()))\n}","position":{"start":{"line":66,"column":1,"offset":1686},"end":{"line":114,"column":4,"offset":2496},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":117,"column":1,"offset":2499},"end":{"line":117,"column":31,"offset":2529},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":117,"column":31,"offset":2529}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"lambda-go-servers\"\n    }}>{`Lambda Go Servers`}</h1>\n    <p>{`This following example uses Gin.`}</p>\n    <p>{`TODO: Add in the learnings from the local repo.`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/appleboy/gin-lambda\"\n        }}>{`Gin + Lambda Go`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/apex/gateway\"\n        }}>{`Apex Gateway`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/awslabs/aws-lambda-go-api-proxy\"\n        }}>{`Gin + Lambda AWSLabs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.codeproject.com/Articles/5269904/Deploy-a-Typescript-Lambda-function-with-AWS-CDK-a\"\n        }}>{`TS Lambda`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.aws.amazon.com/cdk/api/latest/typescript/api/aws-apigateway.html\"\n        }}>{`AWS CDK - API Gateway`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.alexedwards.net/blog/serverless-api-with-go-and-aws-lambda\"\n        }}>{`AWS CDK - First Go Lambda Function`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"gin--lambda-with-awslabs-proxy\"\n    }}>{`Gin + Lambda with AWSLabs proxy`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package main\n\nimport (\n    \"log\"\n    \"context\"\n\n    \"github.com/aws/aws-lambda-go/events\"\n    \"github.com/aws/aws-lambda-go/lambda\"\n    \"github.com/awslabs/aws-lambda-go-api-proxy/gin\"\n    \"github.com/gin-gonic/gin\"\n)\n\nvar ginLambda *ginadapter.GinLambda\n\nfunc init() {\n    // stdout and stderr are sent to AWS CloudWatch Logs\n    log.Printf(\"Gin cold start\")\n    r := gin.Default()\n    r.GET(\"/ping\", func(c *gin.Context) {\n        c.JSON(200, gin.H{\n            \"message\": \"pong\",\n        })\n    })\n\n    ginLambda = ginadapter.New(r)\n}\n\n// Handler will deal with Gin working with Lambda\nfunc Handler(ctx context.Context, req events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {\n    // If no name is provided in the HTTP request body, throw an error\n    return ginLambda.ProxyWithContext(ctx, req)\n}\n\nfunc main() {\n    lambda.Start(Handler)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"gin--lambda-with-apex-gateway\"\n    }}>{`Gin + Lambda with Apex Gateway`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package main\n\nimport (\n    \"log\"\n    \"net/http\"\n    \"os\"\n\n    \"github.com/apex/gateway\"\n    \"github.com/gin-gonic/gin\"\n)\n\nfunc helloHandler(c *gin.Context) {\n    name := c.Param(\"name\")\n    c.String(http.StatusOK, \"Hello %s\", name)\n}\n\nfunc welcomeHandler(c *gin.Context) {\n    c.String(http.StatusOK, \"Hello World from Go\")\n}\n\nfunc rootHandler(c *gin.Context) {\n    c.JSON(http.StatusOK, gin.H{\n        \"text\": \"Welcome to gin lambda server.\",\n    })\n}\n\nfunc routerEngine() *gin.Engine {\n    // set server mode\n    gin.SetMode(gin.DebugMode)\n\n    r := gin.New()\n\n    // Global middleware\n    r.Use(gin.Logger())\n    r.Use(gin.Recovery())\n\n    r.GET(\"/welcome\", welcomeHandler)\n    r.GET(\"/user/:name\", helloHandler)\n    r.GET(\"/\", rootHandler)\n\n    return r\n}\n\nfunc main() {\n    addr := \":\" + os.Getenv(\"PORT\")\n    log.Fatal(gateway.ListenAndServe(addr, routerEngine()))\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}