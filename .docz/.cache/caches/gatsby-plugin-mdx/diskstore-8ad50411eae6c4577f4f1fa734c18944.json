{"expireTime":9007200849425541000,"key":"gatsby-plugin-mdx-entire-payload-a80612c13ba07d864435df48ace8f8cc-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Getting Started","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":18,"offset":184},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":18,"offset":184},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"kubectl: Install via brew\nminikube: ","position":{"start":{"line":10,"column":1,"offset":186},"end":{"line":11,"column":11,"offset":222},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/kubernetes/minikube/releases","children":[{"type":"text","value":"https://github.com/kubernetes/minikube/releases","position":{"start":{"line":11,"column":11,"offset":222},"end":{"line":11,"column":58,"offset":269},"indent":[]}}],"position":{"start":{"line":11,"column":11,"offset":222},"end":{"line":11,"column":58,"offset":269},"indent":[]}},{"type":"text","value":"\nkops: Install via brew","position":{"start":{"line":11,"column":58,"offset":269},"end":{"line":12,"column":23,"offset":292},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":186},"end":{"line":12,"column":23,"offset":292},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Minikube test commands:","position":{"start":{"line":14,"column":1,"offset":294},"end":{"line":14,"column":24,"offset":317},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":294},"end":{"line":14,"column":24,"offset":317},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"minikube status # check status\nminikube start # start cluster","position":{"start":{"line":16,"column":1,"offset":319},"end":{"line":19,"column":4,"offset":392},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For OSX install:","position":{"start":{"line":21,"column":1,"offset":394},"end":{"line":21,"column":17,"offset":410},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":394},"end":{"line":21,"column":17,"offset":410},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/","position":{"start":{"line":23,"column":1,"offset":412},"end":{"line":23,"column":156,"offset":567},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":412},"end":{"line":23,"column":156,"offset":567},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Install Docker Edge to use the latest features with Kubernetes.","position":{"start":{"line":25,"column":1,"offset":569},"end":{"line":25,"column":64,"offset":632},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":569},"end":{"line":25,"column":64,"offset":632},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Otherwise follow the base instructions to get everything up and going.","position":{"start":{"line":27,"column":1,"offset":634},"end":{"line":27,"column":71,"offset":704},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":634},"end":{"line":27,"column":71,"offset":704},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"https://gist.github.com/kevin-smets/b91a34cea662d0c523968472a81788f7","position":{"start":{"line":29,"column":1,"offset":706},"end":{"line":29,"column":71,"offset":776},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":706},"end":{"line":29,"column":71,"offset":776},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This resolves DL issue: ","position":{"start":{"line":31,"column":1,"offset":778},"end":{"line":31,"column":25,"offset":802},"indent":[]}},{"type":"inlineCode","value":"mv minikube-v0.25.1.iso ~/.minikube/cache/iso/minikube-v0.25.1.iso","position":{"start":{"line":31,"column":25,"offset":802},"end":{"line":31,"column":93,"offset":870},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":31,"column":93,"offset":870},"end":{"line":31,"column":94,"offset":871},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":778},"end":{"line":31,"column":94,"offset":871},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Procedure Document","position":{"start":{"line":33,"column":5,"offset":877},"end":{"line":33,"column":23,"offset":895},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":873},"end":{"line":33,"column":23,"offset":895},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Kubernetes Procedure Document\nGithub repository [Read this first]\nDownload all the course material from: https://github.com/wardviaene/kubernetes-course\n\nQuestions?\nSend me a message\n\nUse Q&A\n\nJoin our facebook group: https://www.facebook.com/groups/840062592768074/\n\nDownload Kubectl\nLinux: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/linux/amd64/kubectl\n\nMacOS: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/darwin/amd64/kubectl\n\nWindows:\nhttps://github.com/eirslett/kubectl-windows/releases/download/v1.6.3/kubectl.exe\n\nMinikube\nProject URL: https://github.com/kubernetes/minikube\n\nLatest Release and download instructions: https://github.com/kubernetes/minikube/releases\n\nVirtualBox: http://www.virtualbox.org\n\nMinikube on windows:\nDownload the latest minikube-version.exe\n\nRename the file to minikube.exe and put it in C:\\minikube\n\nOpen a cmd (search for the app cmd or powershell)\n\nRun: cd C:\\minikube and enter minikube start\n\nTest your cluster commands\nMake sure your cluster is running, you can check with minikube status.\n\nIf your cluster is not running, enter minikube start first.\n\nkubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080\nkubectl expose deployment hello-minikube --type=NodePort\n\nminikube service hello-minikube --url\n\n<open a browser and go to that url>\n\nKops\nProject URL\nhttps://github.com/kubernetes/kops\n\nFree DNS Service\nSign up at http://freedns.afraid.org/\n\nChoose for subdomain hosting\n\nEnter the AWS nameservers given to you in route53 as nameservers for the subdomain\n\nhttp://www.dot.tk/ provides a free .tk domain name you can use and you can point it to the amazon AWS nameservers\n\n###h2\n\nNamecheap.com often has promotions for tld’s like .co for just a couple of bucks\n\n\n\nCluster Commands\nkops create cluster --name=kubernetes.newtech.academy --state=s3://kops-state-b429b --zones=eu-west-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kubernetes.newtech.academy\n\nkops update cluster kubernetes.newtech.academy --yes --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b --yes\n\nKubernetes from scratch\n\n\n\n\n\n\nYou can setup your cluster manually from scratch\n\nIf you’re planning to deploy on AWS / Google / Azure, use the tools that are fit for these platforms\n\nIf you have an unsupported cloud platform, and you still want Kubernetes, you can install it manually\n\nCoreOS + Kubernetes: ###a href=\"https://coreos.com/kubernetes/docs/latest/getting-started.html\">https://coreos.com/kubernetes/docs/latest/getting-started.html\n\nDocker\nYou can download Docker Engine for:\n\nWindows: https://docs.docker.com/engine/installation/windows/\n\nMacOS: https://docs.docker.com/engine/installation/mac/\n\nLinux: https://docs.docker.com/engine/installation/linux/\n\nDevOps box\nVirtualbox: http://www.virtualbox.org\n\nVagrant: http://www.vagrantup.com\n\nDevOps box: https://github.com/wardviaene/devops-box\n\nLaunch commands (in terminal / cmd / powershell):\n\ncd devops-box/\n\nvagrant up\n\nLaunch commands for a plain ubuntu box:\n\nmkdir ubuntu\n\nvagrant init ubuntu/xenial64\n\nvagrant up\n\nDocker commands\nDescription\n\nCommand\n\nBuild image\n\ndocker build .\n\nBuild & Tag\n\ndocker build -t wardviaene/k8s-demo:latest .\n\nTag image\n\ndocker tag imageid wardviaene/k8s-demo\n\nPush image\n\ndocker push wardviaene/k8s-demo\n\nList images\n\ndocker images\n\nList all containers\n\ndocker ps -a\n\nKubernetes commands\nCommand\n\nDescription\n\nkubectl get pod\n\nGet information about all running pods\n\nkubectl describe pod `<pod>`\n\nDescribe one pod\n\nkubectl expose pod `<pod>` --port=444\n\n--name=frontend\n\nExpose the port of a pod (creates a new service)\n\nkubectl port-forward `<pod>` 8080\n\nPort forward the exposed pod port to your local machine\n\nkubectl attach `<podname>` -i\n\nAttach to the pod\n\nkubectl exec `<pod>` -- command\n\nExecute a command on the pod\n\nkubectl label pods `<pod>` mylabel=awesome\n\nAdd a new label to a pod\n\nkubectl run -i --tty busybox --image=busybox\n\n--restart=Never -- sh\n\nRun a shell in a pod - very useful for debugging\n\nkubectl get deployments\n\nGet information on current deployments\n\nkubectl get rs\n\nGet information about the replica sets\n\nkubectl get pods --show-labels\n\nget pods, and also show labels attached to those pods\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet deployment status\n\nkubectl set image deployment/helloworld-deployment\n\nk8s-demo=k8s-demo:2\n\nRun k8s-demo with the image label version 2\n\nkubectl edit deployment/helloworld-deployment\n\nEdit the deployment object\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet the status of the rollout\n\nkubectl rollout history deployment/helloworld-deployment\n\nGet the rollout history\n\nkubectl rollout undo deployment/helloworld-deployment\n\nRollback to previous version\n\nkubectl rollout undo deployment/helloworld-deployment --to-revision=n\n\nRollback to any version version\n\nAWS Commands\naws ec2 create-volume --size 10 --region us-east-1 --availability-zone us-east-1a --volume-type gp2\n\nCertificates\nCreating a new key for a new user: openssl genrsa -out myuser.pem 2048\n\nCreating a certificate request: openssl req -new -key myuser.pem -out myuser-csr.pem -subj \"/CN=myuser/O=myteam/\"\n\nCreating a certificate: openssl x509 -req -in myuser-csr.pem -CA /path/to/kubernetes/ca.crt -CAkey /path/to/kubernetes/ca.key -CAcreateserial -out myuser.crt -days 10000","position":{"start":{"line":35,"column":1,"offset":897},"end":{"line":277,"column":4,"offset":6414},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What is Kubernetes?","position":{"start":{"line":279,"column":4,"offset":6419},"end":{"line":279,"column":23,"offset":6438},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":6416},"end":{"line":279,"column":23,"offset":6438},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Open source orchestration system for Docker.","position":{"start":{"line":281,"column":1,"offset":6440},"end":{"line":281,"column":45,"offset":6484},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":6440},"end":{"line":281,"column":45,"offset":6484},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Let's you schedule containers on a cluster of machines","position":{"start":{"line":283,"column":5,"offset":6490},"end":{"line":283,"column":59,"offset":6544},"indent":[]}}],"position":{"start":{"line":283,"column":5,"offset":6490},"end":{"line":283,"column":59,"offset":6544},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":6486},"end":{"line":283,"column":59,"offset":6544},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can run multiple containers on one machine","position":{"start":{"line":284,"column":5,"offset":6549},"end":{"line":284,"column":51,"offset":6595},"indent":[]}}],"position":{"start":{"line":284,"column":5,"offset":6549},"end":{"line":284,"column":51,"offset":6595},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":6545},"end":{"line":284,"column":51,"offset":6595},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can run long running services (like web apps)","position":{"start":{"line":285,"column":5,"offset":6600},"end":{"line":285,"column":54,"offset":6649},"indent":[]}}],"position":{"start":{"line":285,"column":5,"offset":6600},"end":{"line":285,"column":54,"offset":6649},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":6596},"end":{"line":285,"column":54,"offset":6649},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"K8s will manage the state of these containers","position":{"start":{"line":286,"column":5,"offset":6654},"end":{"line":286,"column":50,"offset":6699},"indent":[]}}],"position":{"start":{"line":286,"column":5,"offset":6654},"end":{"line":286,"column":50,"offset":6699},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Can start the container on specific nodes","position":{"start":{"line":287,"column":9,"offset":6708},"end":{"line":287,"column":50,"offset":6749},"indent":[]}}],"position":{"start":{"line":287,"column":9,"offset":6708},"end":{"line":287,"column":50,"offset":6749},"indent":[]}}],"position":{"start":{"line":287,"column":5,"offset":6704},"end":{"line":287,"column":50,"offset":6749},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Will restart a container when it gets killed","position":{"start":{"line":288,"column":9,"offset":6758},"end":{"line":288,"column":53,"offset":6802},"indent":[]}}],"position":{"start":{"line":288,"column":9,"offset":6758},"end":{"line":288,"column":53,"offset":6802},"indent":[]}}],"position":{"start":{"line":288,"column":5,"offset":6754},"end":{"line":288,"column":53,"offset":6802},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Can move containers from one node to another node","position":{"start":{"line":289,"column":9,"offset":6811},"end":{"line":289,"column":58,"offset":6860},"indent":[]}}],"position":{"start":{"line":289,"column":9,"offset":6811},"end":{"line":289,"column":58,"offset":6860},"indent":[]}}],"position":{"start":{"line":289,"column":5,"offset":6807},"end":{"line":289,"column":58,"offset":6860},"indent":[]}}],"position":{"start":{"line":287,"column":5,"offset":6704},"end":{"line":289,"column":58,"offset":6860},"indent":[5,5]}}],"position":{"start":{"line":286,"column":1,"offset":6650},"end":{"line":289,"column":58,"offset":6860},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Instead of just running a few docker containers on one host manually, K8s can manage that for you","position":{"start":{"line":290,"column":5,"offset":6865},"end":{"line":290,"column":102,"offset":6962},"indent":[]}}],"position":{"start":{"line":290,"column":5,"offset":6865},"end":{"line":290,"column":102,"offset":6962},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":6861},"end":{"line":290,"column":102,"offset":6962},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"K8 clusters can go to thousands of nodes","position":{"start":{"line":291,"column":5,"offset":6967},"end":{"line":291,"column":45,"offset":7007},"indent":[]}}],"position":{"start":{"line":291,"column":5,"offset":6967},"end":{"line":291,"column":45,"offset":7007},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":6963},"end":{"line":291,"column":45,"offset":7007},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Other orcherstrators:","position":{"start":{"line":292,"column":5,"offset":7012},"end":{"line":292,"column":26,"offset":7033},"indent":[]}}],"position":{"start":{"line":292,"column":5,"offset":7012},"end":{"line":292,"column":26,"offset":7033},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Docker Swarm","position":{"start":{"line":293,"column":9,"offset":7042},"end":{"line":293,"column":21,"offset":7054},"indent":[]}}],"position":{"start":{"line":293,"column":9,"offset":7042},"end":{"line":293,"column":21,"offset":7054},"indent":[]}}],"position":{"start":{"line":293,"column":5,"offset":7038},"end":{"line":293,"column":21,"offset":7054},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Mesos","position":{"start":{"line":294,"column":9,"offset":7063},"end":{"line":294,"column":14,"offset":7068},"indent":[]}}],"position":{"start":{"line":294,"column":9,"offset":7063},"end":{"line":294,"column":14,"offset":7068},"indent":[]}}],"position":{"start":{"line":294,"column":5,"offset":7059},"end":{"line":294,"column":14,"offset":7068},"indent":[]}}],"position":{"start":{"line":293,"column":5,"offset":7038},"end":{"line":294,"column":14,"offset":7068},"indent":[5]}}],"position":{"start":{"line":292,"column":1,"offset":7008},"end":{"line":294,"column":14,"offset":7068},"indent":[1,1]}}],"position":{"start":{"line":283,"column":1,"offset":6486},"end":{"line":294,"column":14,"offset":7068},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can run K8s anywhere:","position":{"start":{"line":296,"column":1,"offset":7070},"end":{"line":296,"column":26,"offset":7095},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":7070},"end":{"line":296,"column":26,"offset":7095},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"One premise (private)","position":{"start":{"line":298,"column":5,"offset":7101},"end":{"line":298,"column":26,"offset":7122},"indent":[]}}],"position":{"start":{"line":298,"column":5,"offset":7101},"end":{"line":298,"column":26,"offset":7122},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":7097},"end":{"line":298,"column":26,"offset":7122},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Public","position":{"start":{"line":299,"column":5,"offset":7127},"end":{"line":299,"column":11,"offset":7133},"indent":[]}}],"position":{"start":{"line":299,"column":5,"offset":7127},"end":{"line":299,"column":11,"offset":7133},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":7123},"end":{"line":299,"column":11,"offset":7133},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Hybrid","position":{"start":{"line":300,"column":5,"offset":7138},"end":{"line":300,"column":11,"offset":7144},"indent":[]}}],"position":{"start":{"line":300,"column":5,"offset":7138},"end":{"line":300,"column":11,"offset":7144},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":7134},"end":{"line":300,"column":11,"offset":7144},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":7097},"end":{"line":300,"column":11,"offset":7144},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is highly modular and open source. It is also backed by Google.","position":{"start":{"line":302,"column":1,"offset":7146},"end":{"line":302,"column":67,"offset":7212},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":7146},"end":{"line":302,"column":67,"offset":7212},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Containers intro","position":{"start":{"line":304,"column":4,"offset":7217},"end":{"line":304,"column":20,"offset":7233},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":7214},"end":{"line":304,"column":20,"offset":7233},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Container VS VM: No Hypervisor and Guest OS layer.","position":{"start":{"line":306,"column":1,"offset":7235},"end":{"line":306,"column":51,"offset":7285},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":7235},"end":{"line":306,"column":51,"offset":7285},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Containers on Cloud Providers do still use the hypervisor to seperate users.","position":{"start":{"line":308,"column":1,"offset":7287},"end":{"line":308,"column":77,"offset":7363},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":7287},"end":{"line":308,"column":77,"offset":7363},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Docker is the most popular container software. An alternative is ","position":{"start":{"line":310,"column":1,"offset":7365},"end":{"line":310,"column":66,"offset":7430},"indent":[]}},{"type":"inlineCode","value":"rkt","position":{"start":{"line":310,"column":66,"offset":7430},"end":{"line":310,"column":71,"offset":7435},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":310,"column":71,"offset":7435},"end":{"line":310,"column":72,"offset":7436},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":7365},"end":{"line":310,"column":72,"offset":7436},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Benefits? It works in isolation. You ship the binary with all the dependencies and create a closer parity.","position":{"start":{"line":312,"column":1,"offset":7438},"end":{"line":312,"column":107,"offset":7544},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":7438},"end":{"line":312,"column":107,"offset":7544},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Docker makes development teams able to ship faster.","position":{"start":{"line":314,"column":1,"offset":7546},"end":{"line":314,"column":52,"offset":7597},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":7546},"end":{"line":314,"column":52,"offset":7597},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can run the same image on prem and in the cloud with what should be the same results.","position":{"start":{"line":316,"column":1,"offset":7599},"end":{"line":316,"column":90,"offset":7688},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":7599},"end":{"line":316,"column":90,"offset":7688},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Kubernetes Setup","position":{"start":{"line":318,"column":4,"offset":7693},"end":{"line":318,"column":20,"offset":7709},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":7690},"end":{"line":318,"column":20,"offset":7709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Something to note is that there are more integrations for certain Cloud Providers like AWS & GCE. Thingsl ike \"Volumes\" and \"External Load Balancers\" work only with support Cloud Providers.","position":{"start":{"line":320,"column":1,"offset":7711},"end":{"line":320,"column":190,"offset":7900},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":7711},"end":{"line":320,"column":190,"offset":7900},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running locally","position":{"start":{"line":322,"column":5,"offset":7906},"end":{"line":322,"column":20,"offset":7921},"indent":[]}}],"position":{"start":{"line":322,"column":1,"offset":7902},"end":{"line":322,"column":20,"offset":7921},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use ","position":{"start":{"line":324,"column":1,"offset":7923},"end":{"line":324,"column":12,"offset":7934},"indent":[]}},{"type":"inlineCode","value":"minikube","position":{"start":{"line":324,"column":12,"offset":7934},"end":{"line":324,"column":22,"offset":7944},"indent":[]}},{"type":"text","value":" to spin up a local single machine with a Kubernetes cluster.","position":{"start":{"line":324,"column":22,"offset":7944},"end":{"line":324,"column":83,"offset":8005},"indent":[]}}],"position":{"start":{"line":324,"column":1,"offset":7923},"end":{"line":324,"column":83,"offset":8005},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Minikube","position":{"start":{"line":326,"column":6,"offset":8012},"end":{"line":326,"column":14,"offset":8020},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":8007},"end":{"line":326,"column":14,"offset":8020},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Minikube is a tool that makes running k8s locally easy.","position":{"start":{"line":328,"column":1,"offset":8022},"end":{"line":328,"column":56,"offset":8077},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":8022},"end":{"line":328,"column":56,"offset":8077},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It runs a single-node Kubernetes cluster inside a Linux VM.","position":{"start":{"line":330,"column":1,"offset":8079},"end":{"line":330,"column":60,"offset":8138},"indent":[]}}],"position":{"start":{"line":330,"column":1,"offset":8079},"end":{"line":330,"column":60,"offset":8138},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's aimed on users who just want to just test it out or use if for development.","position":{"start":{"line":332,"column":1,"offset":8140},"end":{"line":332,"column":81,"offset":8220},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":8140},"end":{"line":332,"column":81,"offset":8220},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It cannot spin up a roduction cluster, it's a one node machine with no high availability.","position":{"start":{"line":334,"column":1,"offset":8222},"end":{"line":334,"column":90,"offset":8311},"indent":[]}}],"position":{"start":{"line":334,"column":1,"offset":8222},"end":{"line":334,"column":90,"offset":8311},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You need VM to run all this.","position":{"start":{"line":336,"column":1,"offset":8313},"end":{"line":336,"column":29,"offset":8341},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":8313},"end":{"line":336,"column":29,"offset":8341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To run a cluster, just run ","position":{"start":{"line":338,"column":1,"offset":8343},"end":{"line":338,"column":28,"offset":8370},"indent":[]}},{"type":"inlineCode","value":"minikube start","position":{"start":{"line":338,"column":28,"offset":8370},"end":{"line":338,"column":44,"offset":8386},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":338,"column":44,"offset":8386},"end":{"line":338,"column":45,"offset":8387},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":8343},"end":{"line":338,"column":45,"offset":8387},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To check your config after spinning up Kubernetes, use ","position":{"start":{"line":340,"column":1,"offset":8389},"end":{"line":340,"column":56,"offset":8444},"indent":[]}},{"type":"inlineCode","value":"cat ~/.kube/config","position":{"start":{"line":340,"column":56,"offset":8444},"end":{"line":340,"column":76,"offset":8464},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":340,"column":76,"offset":8464},"end":{"line":340,"column":77,"offset":8465},"indent":[]}}],"position":{"start":{"line":340,"column":1,"offset":8389},"end":{"line":340,"column":77,"offset":8465},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running on AWS","position":{"start":{"line":342,"column":5,"offset":8471},"end":{"line":342,"column":19,"offset":8485},"indent":[]}}],"position":{"start":{"line":342,"column":1,"offset":8467},"end":{"line":342,"column":19,"offset":8485},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Until EKS comes out, we can spin up a Kubernetes cluster using KOPS.","position":{"start":{"line":344,"column":1,"offset":8487},"end":{"line":344,"column":69,"offset":8555},"indent":[]}}],"position":{"start":{"line":344,"column":1,"offset":8487},"end":{"line":344,"column":69,"offset":8555},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You need to ensure that you download Vagrant and a VM.","position":{"start":{"line":346,"column":1,"offset":8557},"end":{"line":346,"column":55,"offset":8611},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":8557},"end":{"line":346,"column":55,"offset":8611},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For running the Vagrant box, you can run ","position":{"start":{"line":348,"column":1,"offset":8613},"end":{"line":348,"column":42,"offset":8654},"indent":[]}},{"type":"inlineCode","value":"vagrant up --provider virtualbox","position":{"start":{"line":348,"column":42,"offset":8654},"end":{"line":348,"column":76,"offset":8688},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":348,"column":76,"offset":8688},"end":{"line":348,"column":77,"offset":8689},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8613},"end":{"line":348,"column":77,"offset":8689},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can then use ","position":{"start":{"line":350,"column":1,"offset":8691},"end":{"line":350,"column":18,"offset":8708},"indent":[]}},{"type":"inlineCode","value":"vagrant ssh","position":{"start":{"line":350,"column":18,"offset":8708},"end":{"line":350,"column":31,"offset":8721},"indent":[]}},{"type":"text","value":" to ssh in.","position":{"start":{"line":350,"column":31,"offset":8721},"end":{"line":350,"column":42,"offset":8732},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":8691},"end":{"line":350,"column":42,"offset":8732},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After you are in, download Kops:","position":{"start":{"line":352,"column":1,"offset":8734},"end":{"line":352,"column":33,"offset":8766},"indent":[]}}],"position":{"start":{"line":352,"column":1,"offset":8734},"end":{"line":352,"column":33,"offset":8766},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64\nchmod +x kops-linux-amd64\nsudo mv kops-linux-amd64 /usr/local/bin/kops","position":{"start":{"line":354,"column":1,"offset":8768},"end":{"line":358,"column":4,"offset":9031},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure that you also download ","position":{"start":{"line":360,"column":1,"offset":9033},"end":{"line":360,"column":31,"offset":9063},"indent":[]}},{"type":"inlineCode","value":"python-pip","position":{"start":{"line":360,"column":31,"offset":9063},"end":{"line":360,"column":43,"offset":9075},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":360,"column":43,"offset":9075},"end":{"line":360,"column":44,"offset":9076},"indent":[]}}],"position":{"start":{"line":360,"column":1,"offset":9033},"end":{"line":360,"column":44,"offset":9076},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"sudo apt-get install software-properties-common\nsudo apt-add-repository universe\nsudo apt-get update\nsudo apt-get install python-pip","position":{"start":{"line":362,"column":1,"offset":9078},"end":{"line":367,"column":4,"offset":9218},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then install awscli:","position":{"start":{"line":369,"column":1,"offset":9220},"end":{"line":369,"column":21,"offset":9240},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":9220},"end":{"line":369,"column":21,"offset":9240},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"export LC_ALL=C # if run into an error about locale settings\nsudo pip install awscli","position":{"start":{"line":371,"column":1,"offset":9242},"end":{"line":374,"column":4,"offset":9334},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You will then need to create an AWS account.","position":{"start":{"line":376,"column":1,"offset":9336},"end":{"line":376,"column":45,"offset":9380},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":9336},"end":{"line":376,"column":45,"offset":9380},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After setting up the AWSCLI, installing Kops and creating a S3 Bucket + setting up the Route53 Name Servers (on somewhere like NameCheap), you can move on.","position":{"start":{"line":378,"column":1,"offset":9382},"end":{"line":378,"column":156,"offset":9537},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":9382},"end":{"line":378,"column":156,"offset":9537},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Cluster setup on Kops","position":{"start":{"line":380,"column":5,"offset":9543},"end":{"line":380,"column":26,"offset":9564},"indent":[]}}],"position":{"start":{"line":380,"column":1,"offset":9539},"end":{"line":380,"column":26,"offset":9564},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, download Kops for Linux on the Vagrant box and move it.","position":{"start":{"line":382,"column":1,"offset":9566},"end":{"line":382,"column":63,"offset":9628},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":9566},"end":{"line":382,"column":63,"offset":9628},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before creating the cluster, you will need to create new keys. ","position":{"start":{"line":384,"column":1,"offset":9630},"end":{"line":384,"column":64,"offset":9693},"indent":[]}},{"type":"inlineCode","value":"ssh-keygen -f .ssh/id_rsa","position":{"start":{"line":384,"column":64,"offset":9693},"end":{"line":384,"column":91,"offset":9720},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":384,"column":91,"offset":9720},"end":{"line":384,"column":92,"offset":9721},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":9630},"end":{"line":384,"column":92,"offset":9721},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To create the cluster (example), run ","position":{"start":{"line":386,"column":1,"offset":9723},"end":{"line":386,"column":38,"offset":9760},"indent":[]}},{"type":"inlineCode","value":"kops create cluster --name=kubernetes.test --state=s3://kops-state-oeiajrie93 --zones=ap-southeast-2a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=givemeyeezy.online","position":{"start":{"line":386,"column":38,"offset":9760},"end":{"line":386,"column":230,"offset":9952},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":9723},"end":{"line":386,"column":230,"offset":9952},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This DNS zone is basically just the one that we set up.","position":{"start":{"line":388,"column":1,"offset":9954},"end":{"line":388,"column":56,"offset":10009},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":9954},"end":{"line":388,"column":56,"offset":10009},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You'll get something back like","position":{"start":{"line":390,"column":1,"offset":10011},"end":{"line":390,"column":31,"offset":10041},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":10011},"end":{"line":390,"column":31,"offset":10041},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"I0311 21:48:46.821364    7553 create_cluster.go:439] Inferred --cloud=aws from zone \"ap-southeast-2a\"\nI0311 21:48:46.821506    7553 create_cluster.go:971] Using SSH public key: /home/vagrant/.ssh/id_rsa.pub\nI0311 21:48:48.232635    7553 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet ap-southeast-2a\nPreviewing changes that will be made:\n\nI0311 21:48:52.305360    7553 executor.go:91] Tasks: 0 done / 73 total; 31 can run\nI0311 21:48:53.503124    7553 executor.go:91] Tasks: 31 done / 73 total; 24 can run\nI0311 21:48:53.958875    7553 executor.go:91] Tasks: 55 done / 73 total; 16 can run\nI0311 21:48:54.237870    7553 executor.go:91] Tasks: 71 done / 73 total; 2 can run\nI0311 21:48:54.262347    7553 executor.go:91] Tasks: 73 done / 73 total; 0 can run\nWill create resources:\n  AutoscalingGroup/master-ap-southeast-2a.masters.kubernetes.test\n  MinSize             \t1\n  MaxSize             \t1\n  Subnets             \t[name:ap-southeast-2a.kubernetes.test]\n  Tags                \t{k8s.io/role/master: 1, Name: master-ap-southeast-2a.masters.kubernetes.test, KubernetesCluster: kubernetes.test, k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: master-ap-southeast-2a}\n  LaunchConfiguration \tname:master-ap-southeast-2a.masters.kubernetes.test\n\n  AutoscalingGroup/nodes.kubernetes.test\n  MinSize             \t2\n  MaxSize             \t2\n  Subnets             \t[name:ap-southeast-2a.kubernetes.test]\n  Tags                \t{k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: nodes, k8s.io/role/node: 1, Name: nodes.kubernetes.test, KubernetesCluster: kubernetes.test}\n  LaunchConfiguration \tname:nodes.kubernetes.test\n\n  DHCPOptions/kubernetes.test\n  DomainName          \tap-southeast-2.compute.internal\n  DomainNameServers   \tAmazonProvidedDNS\n\n  EBSVolume/a.etcd-events.kubernetes.test\n  AvailabilityZone    \tap-southeast-2a\n  VolumeType          \tgp2\n  SizeGB              \t20\n  Encrypted           \tfalse\n  Tags                \t{KubernetesCluster: kubernetes.test, k8s.io/etcd/events: a/a, k8s.io/role/master: 1, Name: a.etcd-events.kubernetes.test}\n\n  EBSVolume/a.etcd-main.kubernetes.test\n  AvailabilityZone    \tap-southeast-2a\n  VolumeType          \tgp2\n  SizeGB              \t20\n  Encrypted           \tfalse\n  Tags                \t{k8s.io/etcd/main: a/a, k8s.io/role/master: 1, Name: a.etcd-main.kubernetes.test, KubernetesCluster: kubernetes.test}\n\n  IAMInstanceProfile/masters.kubernetes.test\n\n  IAMInstanceProfile/nodes.kubernetes.test\n\n  IAMInstanceProfileRole/masters.kubernetes.test\n  InstanceProfile     \tname:masters.kubernetes.test id:masters.kubernetes.test\n  Role                \tname:masters.kubernetes.test\n\n  IAMInstanceProfileRole/nodes.kubernetes.test\n  InstanceProfile     \tname:nodes.kubernetes.test id:nodes.kubernetes.test\n  Role                \tname:nodes.kubernetes.test\n\n  IAMRole/masters.kubernetes.test\n  ExportWithID        \tmasters\n\n  IAMRole/nodes.kubernetes.test\n  ExportWithID        \tnodes\n\n  IAMRolePolicy/masters.kubernetes.test\n  Role                \tname:masters.kubernetes.test\n\n  IAMRolePolicy/nodes.kubernetes.test\n  Role                \tname:nodes.kubernetes.test\n\n  InternetGateway/kubernetes.test\n  VPC                 \tname:kubernetes.test\n  Shared              \tfalse\n\n  Keypair/apiserver-aggregator\n  Subject             \tcn=aggregator\n  Type                \tclient\n  Signer              \tname:apiserver-aggregator-ca id:cn=apiserver-aggregator-ca\n\n  Keypair/apiserver-aggregator-ca\n  Subject             \tcn=apiserver-aggregator-ca\n  Type                \tca\n\n  Keypair/apiserver-proxy-client\n  Subject             \tcn=apiserver-proxy-client\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/ca\n  Subject             \tcn=kubernetes\n  Type                \tca\n\n  Keypair/kops\n  Subject             \to=system:masters,cn=kops\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/kube-controller-manager\n  Subject             \tcn=system:kube-controller-manager\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/kube-proxy\n  Subject             \tcn=system:kube-proxy\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/kube-scheduler\n  Subject             \tcn=system:kube-scheduler\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/kubecfg\n  Subject             \to=system:masters,cn=kubecfg\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/kubelet\n  Subject             \to=system:nodes,cn=kubelet\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/kubelet-api\n  Subject             \tcn=kubelet-api\n  Type                \tclient\n  Signer              \tname:ca id:cn=kubernetes\n\n  Keypair/master\n  Subject             \tcn=kubernetes-master\n  Type                \tserver\n  AlternateNames      \t[100.64.0.1, 127.0.0.1, api.internal.kubernetes.test, api.kubernetes.test, kubernetes, kubernetes.default, kubernetes.default.svc, kubernetes.default.svc.cluster.local]\n  Signer              \tname:ca id:cn=kubernetes\n\n  LaunchConfiguration/master-ap-southeast-2a.masters.kubernetes.test\n  ImageID             \tkope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType        \tt2.micro\n  SSHKey              \tname:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups      \t[name:masters.kubernetes.test]\n  AssociatePublicIP   \ttrue\n  IAMInstanceProfile  \tname:masters.kubernetes.test id:masters.kubernetes.test\n  RootVolumeSize      \t64\n  RootVolumeType      \tgp2\n  SpotPrice\n\n  LaunchConfiguration/nodes.kubernetes.test\n  ImageID             \tkope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType        \tt2.micro\n  SSHKey              \tname:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups      \t[name:nodes.kubernetes.test]\n  AssociatePublicIP   \ttrue\n  IAMInstanceProfile  \tname:nodes.kubernetes.test id:nodes.kubernetes.test\n  RootVolumeSize      \t128\n  RootVolumeType      \tgp2\n  SpotPrice\n\n  ManagedFile/kubernetes.test-addons-bootstrap\n  Location            \taddons/bootstrap-channel.yaml\n\n  ManagedFile/kubernetes.test-addons-core.addons.k8s.io\n  Location            \taddons/core.addons.k8s.io/v1.4.0.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-k8s-1.6\n  Location            \taddons/dns-controller.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-pre-k8s-1.6\n  Location            \taddons/dns-controller.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-k8s-1.6\n  Location            \taddons/kube-dns.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-pre-k8s-1.6\n  Location            \taddons/kube-dns.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-limit-range.addons.k8s.io\n  Location            \taddons/limit-range.addons.k8s.io/v1.5.0.yaml\n\n  ManagedFile/kubernetes.test-addons-rbac.addons.k8s.io-k8s-1.8\n  Location            \taddons/rbac.addons.k8s.io/k8s-1.8.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.6.0\n  Location            \taddons/storage-aws.addons.k8s.io/v1.6.0.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.7.0\n  Location            \taddons/storage-aws.addons.k8s.io/v1.7.0.yaml\n\n  Route/0.0.0.0/0\n  RouteTable          \tname:kubernetes.test\n  CIDR                \t0.0.0.0/0\n  InternetGateway     \tname:kubernetes.test\n\n  RouteTable/kubernetes.test\n  VPC                 \tname:kubernetes.test\n\n  RouteTableAssociation/ap-southeast-2a.kubernetes.test\n  RouteTable          \tname:kubernetes.test\n  Subnet              \tname:ap-southeast-2a.kubernetes.test\n\n  SSHKey/kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  KeyFingerprint      \tc4:89:af:59:a1:1d:6e:ef:7a:9d:12:65:bc:e2:82:4f\n\n  Secret/admin\n\n  Secret/kube\n\n  Secret/kube-proxy\n\n  Secret/kubelet\n\n  Secret/system:controller_manager\n\n  Secret/system:dns\n\n  Secret/system:logging\n\n  Secret/system:monitoring\n\n  Secret/system:scheduler\n\n  SecurityGroup/masters.kubernetes.test\n  Description         \tSecurity group for masters\n  VPC                 \tname:kubernetes.test\n  RemoveExtraRules    \t[port=22, port=443, port=2380, port=2381, port=4001, port=4002, port=4789, port=179]\n\n  SecurityGroup/nodes.kubernetes.test\n  Description         \tSecurity group for nodes\n  VPC                 \tname:kubernetes.test\n  RemoveExtraRules    \t[port=22]\n\n  SecurityGroupRule/all-master-to-master\n  SecurityGroup       \tname:masters.kubernetes.test\n  SourceGroup         \tname:masters.kubernetes.test\n\n  SecurityGroupRule/all-master-to-node\n  SecurityGroup       \tname:nodes.kubernetes.test\n  SourceGroup         \tname:masters.kubernetes.test\n\n  SecurityGroupRule/all-node-to-node\n  SecurityGroup       \tname:nodes.kubernetes.test\n  SourceGroup         \tname:nodes.kubernetes.test\n\n  SecurityGroupRule/https-external-to-master-0.0.0.0/0\n  SecurityGroup       \tname:masters.kubernetes.test\n  CIDR                \t0.0.0.0/0\n  Protocol            \ttcp\n  FromPort            \t443\n  ToPort              \t443\n\n  SecurityGroupRule/master-egress\n  SecurityGroup       \tname:masters.kubernetes.test\n  CIDR                \t0.0.0.0/0\n  Egress              \ttrue\n\n  SecurityGroupRule/node-egress\n  SecurityGroup       \tname:nodes.kubernetes.test\n  CIDR                \t0.0.0.0/0\n  Egress              \ttrue\n\n  SecurityGroupRule/node-to-master-tcp-1-2379\n  SecurityGroup       \tname:masters.kubernetes.test\n  Protocol            \ttcp\n  FromPort            \t1\n  ToPort              \t2379\n  SourceGroup         \tname:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-2382-4000\n  SecurityGroup       \tname:masters.kubernetes.test\n  Protocol            \ttcp\n  FromPort            \t2382\n  ToPort              \t4000\n  SourceGroup         \tname:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-4003-65535\n  SecurityGroup       \tname:masters.kubernetes.test\n  Protocol            \ttcp\n  FromPort            \t4003\n  ToPort              \t65535\n  SourceGroup         \tname:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-udp-1-65535\n  SecurityGroup       \tname:masters.kubernetes.test\n  Protocol            \tudp\n  FromPort            \t1\n  ToPort              \t65535\n  SourceGroup         \tname:nodes.kubernetes.test\n\n  SecurityGroupRule/ssh-external-to-master-0.0.0.0/0\n  SecurityGroup       \tname:masters.kubernetes.test\n  CIDR                \t0.0.0.0/0\n  Protocol            \ttcp\n  FromPort            \t22\n  ToPort              \t22\n\n  SecurityGroupRule/ssh-external-to-node-0.0.0.0/0\n  SecurityGroup       \tname:nodes.kubernetes.test\n  CIDR                \t0.0.0.0/0\n  Protocol            \ttcp\n  FromPort            \t22\n  ToPort              \t22\n\n  Subnet/ap-southeast-2a.kubernetes.test\n  VPC                 \tname:kubernetes.test\n  AvailabilityZone    \tap-southeast-2a\n  CIDR                \t172.20.32.0/19\n  Shared              \tfalse\n  Tags                \t{Name: ap-southeast-2a.kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned, kubernetes.io/role/elb: 1}\n\n  VPC/kubernetes.test\n  CIDR                \t172.20.0.0/16\n  EnableDNSHostnames  \ttrue\n  EnableDNSSupport    \ttrue\n  Shared              \tfalse\n  Tags                \t{Name: kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned}\n\n  VPCDHCPOptionsAssociation/kubernetes.test\n  VPC                 \tname:kubernetes.test\n  DHCPOptions         \tname:kubernetes.test\n\nMust specify --yes to apply changes\n\nCluster configuration has been created.\n\nSuggestions:\n * list clusters with: kops get cluster\n * edit this cluster with: kops edit cluster kubernetes.test\n * edit your node instance group: kops edit ig --name=kubernetes.test nodes\n * edit your master instance group: kops edit ig --name=kubernetes.test master-ap-southeast-2a\n\nFinally configure your cluster with: kops update cluster kubernetes.test --yes","position":{"start":{"line":392,"column":1,"offset":10043},"end":{"line":718,"column":4,"offset":22366},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To edit the cluster, run ","position":{"start":{"line":720,"column":1,"offset":22368},"end":{"line":720,"column":26,"offset":22393},"indent":[]}},{"type":"inlineCode","value":"kops edit cluster kubernetes.test --state=s3://kops-state-oeiajrie93","position":{"start":{"line":720,"column":26,"offset":22393},"end":{"line":720,"column":96,"offset":22463},"indent":[]}},{"type":"text","value":" and then to update run ","position":{"start":{"line":720,"column":96,"offset":22463},"end":{"line":720,"column":120,"offset":22487},"indent":[]}},{"type":"inlineCode","value":"kops update cluster kubernetes.test --yes --state=s3://kops-state-oeiajrie93","position":{"start":{"line":720,"column":120,"offset":22487},"end":{"line":720,"column":198,"offset":22565},"indent":[]}}],"position":{"start":{"line":720,"column":1,"offset":22368},"end":{"line":720,"column":198,"offset":22565},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we now run ","position":{"start":{"line":722,"column":1,"offset":22567},"end":{"line":722,"column":15,"offset":22581},"indent":[]}},{"type":"inlineCode","value":"cat ~/.kube/config","position":{"start":{"line":722,"column":15,"offset":22581},"end":{"line":722,"column":35,"offset":22601},"indent":[]}},{"type":"text","value":" we can see the password and username information needed.","position":{"start":{"line":722,"column":35,"offset":22601},"end":{"line":722,"column":92,"offset":22658},"indent":[]}}],"position":{"start":{"line":722,"column":1,"offset":22567},"end":{"line":722,"column":92,"offset":22658},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To check if the nodes are up, run ","position":{"start":{"line":724,"column":1,"offset":22660},"end":{"line":724,"column":35,"offset":22694},"indent":[]}},{"type":"inlineCode","value":"kubectl get node","position":{"start":{"line":724,"column":35,"offset":22694},"end":{"line":724,"column":53,"offset":22712},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":724,"column":53,"offset":22712},"end":{"line":724,"column":54,"offset":22713},"indent":[]}}],"position":{"start":{"line":724,"column":1,"offset":22660},"end":{"line":724,"column":54,"offset":22713},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then, we can again run ","position":{"start":{"line":726,"column":1,"offset":22715},"end":{"line":726,"column":24,"offset":22738},"indent":[]}},{"type":"inlineCode","value":"kubectl run hello-minikube ...","position":{"start":{"line":726,"column":24,"offset":22738},"end":{"line":726,"column":56,"offset":22770},"indent":[]}}],"position":{"start":{"line":726,"column":1,"offset":22715},"end":{"line":726,"column":56,"offset":22770},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have issues hit up ","position":{"start":{"line":728,"column":1,"offset":22772},"end":{"line":728,"column":27,"offset":22798},"indent":[]}},{"type":"inlineCode","value":"https://www.digitalocean.com/community/tutorials/how-to-set-up-time-synchronization-on-ubuntu-16-04","position":{"start":{"line":728,"column":27,"offset":22798},"end":{"line":728,"column":128,"offset":22899},"indent":[]}},{"type":"text","value":" for date syncing.","position":{"start":{"line":728,"column":128,"offset":22899},"end":{"line":728,"column":146,"offset":22917},"indent":[]}}],"position":{"start":{"line":728,"column":1,"offset":22772},"end":{"line":728,"column":146,"offset":22917},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"KOPS QuickList","position":{"start":{"line":730,"column":4,"offset":22922},"end":{"line":730,"column":18,"offset":22936},"indent":[]}}],"position":{"start":{"line":730,"column":1,"offset":22919},"end":{"line":730,"column":18,"offset":22936},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"# create\nkops create cluster --name=doksandbox.com --state=s3://kops-state-doksandbox --zones=ap-southeast-2a --node-count=1 --node-size=t2.micro --master-size=t2.micro --dns-zone=doksandbox.com\n\n# edit\nkops edit cluster doksandbox.com --state=s3://kops-state-doksandbox\n\n# update\nkops update cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# delete\nkops delete cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# suggestions\nkops validate cluster --state=s3://kops-state-doksandbox  # validate cluster\nkubectl get nodes --show-labels # list nodes\nssh -i ~/.ssh/id_rsa admin@api.kubernetes.doksandbox.com # ssh to the master\nThe admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.\n\n# check DNS\ndig afxr doksandbox.com","position":{"start":{"line":732,"column":1,"offset":22938},"end":{"line":753,"column":4,"offset":23751},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To get a basic service up and running, hit ","position":{"start":{"line":755,"column":1,"offset":23753},"end":{"line":755,"column":44,"offset":23796},"indent":[]}},{"type":"inlineCode","value":"kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080","position":{"start":{"line":755,"column":44,"offset":23796},"end":{"line":755,"column":132,"offset":23884},"indent":[]}},{"type":"text","value":" and head to the VPC security network to update and expose that port to all IPs to prove that is all works correctly. The port will be dynamic.","position":{"start":{"line":755,"column":132,"offset":23884},"end":{"line":755,"column":275,"offset":24027},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":23753},"end":{"line":755,"column":275,"offset":24027},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Building Docker Containers","position":{"start":{"line":757,"column":5,"offset":24033},"end":{"line":757,"column":31,"offset":24059},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":24029},"end":{"line":757,"column":31,"offset":24059},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If installing onto Linux, check ","position":{"start":{"line":759,"column":1,"offset":24061},"end":{"line":759,"column":33,"offset":24093},"indent":[]}},{"type":"inlineCode","value":"https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1","position":{"start":{"line":759,"column":33,"offset":24093},"end":{"line":759,"column":110,"offset":24170},"indent":[]}}],"position":{"start":{"line":759,"column":1,"offset":24061},"end":{"line":759,"column":110,"offset":24170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To do a demo, ","position":{"start":{"line":761,"column":1,"offset":24172},"end":{"line":761,"column":15,"offset":24186},"indent":[]}},{"type":"inlineCode","value":"sudo apt-get install git","position":{"start":{"line":761,"column":15,"offset":24186},"end":{"line":761,"column":41,"offset":24212},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":761,"column":41,"offset":24212},"end":{"line":761,"column":46,"offset":24217},"indent":[]}},{"type":"inlineCode","value":"git clone https://github.com/wardviaene/docker-demo","position":{"start":{"line":761,"column":46,"offset":24217},"end":{"line":761,"column":99,"offset":24270},"indent":[]}},{"type":"text","value":" to get a demo folder.","position":{"start":{"line":761,"column":99,"offset":24270},"end":{"line":761,"column":121,"offset":24292},"indent":[]}}],"position":{"start":{"line":761,"column":1,"offset":24172},"end":{"line":761,"column":121,"offset":24292},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Change in, ","position":{"start":{"line":763,"column":1,"offset":24294},"end":{"line":763,"column":12,"offset":24305},"indent":[]}},{"type":"inlineCode","value":"sudo docker build .","position":{"start":{"line":763,"column":12,"offset":24305},"end":{"line":763,"column":33,"offset":24326},"indent":[]}},{"type":"text","value":" and then to run the container use ","position":{"start":{"line":763,"column":33,"offset":24326},"end":{"line":763,"column":68,"offset":24361},"indent":[]}},{"type":"inlineCode","value":"docker run -p 3000:3000 -t <id>","position":{"start":{"line":763,"column":68,"offset":24361},"end":{"line":763,"column":101,"offset":24394},"indent":[]}}],"position":{"start":{"line":763,"column":1,"offset":24294},"end":{"line":763,"column":101,"offset":24394},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Docker registery","position":{"start":{"line":765,"column":5,"offset":24400},"end":{"line":765,"column":21,"offset":24416},"indent":[]}}],"position":{"start":{"line":765,"column":1,"offset":24396},"end":{"line":765,"column":21,"offset":24416},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To upload to the registry:","position":{"start":{"line":767,"column":1,"offset":24418},"end":{"line":767,"column":27,"offset":24444},"indent":[]}}],"position":{"start":{"line":767,"column":1,"offset":24418},"end":{"line":767,"column":27,"offset":24444},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker login # fill in login details\ndocker tag imageid okeeffed/docker-demo\ndocker push okeeffed/docker-demo","position":{"start":{"line":769,"column":1,"offset":24446},"end":{"line":773,"column":4,"offset":24563},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are a few limitations for each Docker/Kubernetes relationship:","position":{"start":{"line":775,"column":1,"offset":24565},"end":{"line":775,"column":69,"offset":24633},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":24565},"end":{"line":775,"column":69,"offset":24633},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Don't try to create one giant docker image fo you app, but split it up if necessary.","position":{"start":{"line":777,"column":5,"offset":24639},"end":{"line":777,"column":89,"offset":24723},"indent":[]}}],"position":{"start":{"line":777,"column":5,"offset":24639},"end":{"line":777,"column":89,"offset":24723},"indent":[]}}],"position":{"start":{"line":777,"column":1,"offset":24635},"end":{"line":777,"column":89,"offset":24723},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All data in the container is not preserved. You need volumes for this.","position":{"start":{"line":778,"column":5,"offset":24728},"end":{"line":778,"column":75,"offset":24798},"indent":[]}}],"position":{"start":{"line":778,"column":5,"offset":24728},"end":{"line":778,"column":75,"offset":24798},"indent":[]}}],"position":{"start":{"line":778,"column":1,"offset":24724},"end":{"line":778,"column":75,"offset":24798},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Check 12factor.net for methodologies","position":{"start":{"line":779,"column":5,"offset":24803},"end":{"line":779,"column":41,"offset":24839},"indent":[]}}],"position":{"start":{"line":779,"column":5,"offset":24803},"end":{"line":779,"column":41,"offset":24839},"indent":[]}}],"position":{"start":{"line":779,"column":1,"offset":24799},"end":{"line":779,"column":41,"offset":24839},"indent":[]}}],"position":{"start":{"line":777,"column":1,"offset":24635},"end":{"line":779,"column":41,"offset":24839},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running the Docker app on Kubernetes","position":{"start":{"line":781,"column":5,"offset":24845},"end":{"line":781,"column":41,"offset":24881},"indent":[]}}],"position":{"start":{"line":781,"column":1,"offset":24841},"end":{"line":781,"column":41,"offset":24881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We need to create a ","position":{"start":{"line":783,"column":1,"offset":24883},"end":{"line":783,"column":21,"offset":24903},"indent":[]}},{"type":"inlineCode","value":"pod definition","position":{"start":{"line":783,"column":21,"offset":24903},"end":{"line":783,"column":37,"offset":24919},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":783,"column":37,"offset":24919},"end":{"line":783,"column":38,"offset":24920},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":24883},"end":{"line":783,"column":38,"offset":24920},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This describes an application running on Kubernetes.","position":{"start":{"line":785,"column":1,"offset":24922},"end":{"line":785,"column":53,"offset":24974},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":24922},"end":{"line":785,"column":53,"offset":24974},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A pod can container ","position":{"start":{"line":787,"column":1,"offset":24976},"end":{"line":787,"column":21,"offset":24996},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"one or more tightly coupled containers","position":{"start":{"line":787,"column":22,"offset":24997},"end":{"line":787,"column":60,"offset":25035},"indent":[]}}],"position":{"start":{"line":787,"column":21,"offset":24996},"end":{"line":787,"column":61,"offset":25036},"indent":[]}},{"type":"text","value":" that make up the app.","position":{"start":{"line":787,"column":61,"offset":25036},"end":{"line":787,"column":83,"offset":25058},"indent":[]}}],"position":{"start":{"line":787,"column":1,"offset":24976},"end":{"line":787,"column":83,"offset":25058},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Those apps can easily communicate with each other using their local ","position":{"start":{"line":789,"column":1,"offset":25060},"end":{"line":789,"column":69,"offset":25128},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"port numbers","position":{"start":{"line":789,"column":71,"offset":25130},"end":{"line":789,"column":83,"offset":25142},"indent":[]}}],"position":{"start":{"line":789,"column":69,"offset":25128},"end":{"line":789,"column":85,"offset":25144},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":789,"column":85,"offset":25144},"end":{"line":789,"column":86,"offset":25145},"indent":[]}}],"position":{"start":{"line":789,"column":1,"offset":25060},"end":{"line":789,"column":86,"offset":25145},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The app for us at the moment has only one container.","position":{"start":{"line":791,"column":1,"offset":25147},"end":{"line":791,"column":53,"offset":25199},"indent":[]}}],"position":{"start":{"line":791,"column":1,"offset":25147},"end":{"line":791,"column":53,"offset":25199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To build this, we create a podfile with all the pod definition:","position":{"start":{"line":793,"column":1,"offset":25201},"end":{"line":793,"column":64,"offset":25264},"indent":[]}}],"position":{"start":{"line":793,"column":1,"offset":25201},"end":{"line":793,"column":64,"offset":25264},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000","position":{"start":{"line":795,"column":1,"offset":25266},"end":{"line":809,"column":4,"offset":25504},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To create this pod, we run ","position":{"start":{"line":811,"column":1,"offset":25506},"end":{"line":811,"column":28,"offset":25533},"indent":[]}},{"type":"inlineCode","value":"kubectl create -f ./pod-helloworld.yml","position":{"start":{"line":811,"column":28,"offset":25533},"end":{"line":811,"column":68,"offset":25573},"indent":[]}}],"position":{"start":{"line":811,"column":1,"offset":25506},"end":{"line":811,"column":68,"offset":25573},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Some useful commands","position":{"start":{"line":813,"column":3,"offset":25577},"end":{"line":813,"column":23,"offset":25597},"indent":[]}}],"position":{"start":{"line":813,"column":1,"offset":25575},"end":{"line":813,"column":25,"offset":25599},"indent":[]}}],"position":{"start":{"line":813,"column":1,"offset":25575},"end":{"line":813,"column":25,"offset":25599},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Command","position":{"start":{"line":815,"column":3,"offset":25603},"end":{"line":815,"column":10,"offset":25610},"indent":[]}}],"position":{"start":{"line":815,"column":3,"offset":25603},"end":{"line":815,"column":68,"offset":25668},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":815,"column":71,"offset":25671},"end":{"line":815,"column":82,"offset":25682},"indent":[]}}],"position":{"start":{"line":815,"column":71,"offset":25671},"end":{"line":815,"column":119,"offset":25719},"indent":[]}}],"position":{"start":{"line":815,"column":1,"offset":25601},"end":{"line":815,"column":121,"offset":25721},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl get pod","position":{"start":{"line":817,"column":3,"offset":25845},"end":{"line":817,"column":18,"offset":25860},"indent":[]}}],"position":{"start":{"line":817,"column":3,"offset":25845},"end":{"line":817,"column":68,"offset":25910},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Get info about all running pods","position":{"start":{"line":817,"column":71,"offset":25913},"end":{"line":817,"column":102,"offset":25944},"indent":[]}}],"position":{"start":{"line":817,"column":71,"offset":25913},"end":{"line":817,"column":119,"offset":25961},"indent":[]}}],"position":{"start":{"line":817,"column":1,"offset":25843},"end":{"line":817,"column":121,"offset":25963},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl describe pod ","position":{"start":{"line":818,"column":3,"offset":25966},"end":{"line":818,"column":24,"offset":25987},"indent":[]}},{"type":"inlineCode","value":"<pod>","position":{"start":{"line":818,"column":24,"offset":25987},"end":{"line":818,"column":31,"offset":25994},"indent":[]}}],"position":{"start":{"line":818,"column":3,"offset":25966},"end":{"line":818,"column":68,"offset":26031},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Describe one pod","position":{"start":{"line":818,"column":71,"offset":26034},"end":{"line":818,"column":87,"offset":26050},"indent":[]}}],"position":{"start":{"line":818,"column":71,"offset":26034},"end":{"line":818,"column":119,"offset":26082},"indent":[]}}],"position":{"start":{"line":818,"column":1,"offset":25964},"end":{"line":818,"column":121,"offset":26084},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl expose pod ","position":{"start":{"line":819,"column":3,"offset":26087},"end":{"line":819,"column":22,"offset":26106},"indent":[]}},{"type":"inlineCode","value":"<pod>","position":{"start":{"line":819,"column":22,"offset":26106},"end":{"line":819,"column":29,"offset":26113},"indent":[]}},{"type":"text","value":" --port=444 --name=frontend","position":{"start":{"line":819,"column":29,"offset":26113},"end":{"line":819,"column":56,"offset":26140},"indent":[]}}],"position":{"start":{"line":819,"column":3,"offset":26087},"end":{"line":819,"column":68,"offset":26152},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Expose the port of a pod (creates a new service)","position":{"start":{"line":819,"column":71,"offset":26155},"end":{"line":819,"column":119,"offset":26203},"indent":[]}}],"position":{"start":{"line":819,"column":71,"offset":26155},"end":{"line":819,"column":119,"offset":26203},"indent":[]}}],"position":{"start":{"line":819,"column":1,"offset":26085},"end":{"line":819,"column":121,"offset":26205},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl port-forward ","position":{"start":{"line":820,"column":3,"offset":26208},"end":{"line":820,"column":24,"offset":26229},"indent":[]}},{"type":"inlineCode","value":"<pod>","position":{"start":{"line":820,"column":24,"offset":26229},"end":{"line":820,"column":31,"offset":26236},"indent":[]}},{"type":"text","value":" 8080","position":{"start":{"line":820,"column":31,"offset":26236},"end":{"line":820,"column":36,"offset":26241},"indent":[]}}],"position":{"start":{"line":820,"column":3,"offset":26208},"end":{"line":820,"column":68,"offset":26273},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Port forward the local machine","position":{"start":{"line":820,"column":71,"offset":26276},"end":{"line":820,"column":101,"offset":26306},"indent":[]}}],"position":{"start":{"line":820,"column":71,"offset":26276},"end":{"line":820,"column":119,"offset":26324},"indent":[]}}],"position":{"start":{"line":820,"column":1,"offset":26206},"end":{"line":820,"column":121,"offset":26326},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl attach ","position":{"start":{"line":821,"column":3,"offset":26329},"end":{"line":821,"column":18,"offset":26344},"indent":[]}},{"type":"inlineCode","value":"<podname>","position":{"start":{"line":821,"column":18,"offset":26344},"end":{"line":821,"column":29,"offset":26355},"indent":[]}},{"type":"text","value":" -i","position":{"start":{"line":821,"column":29,"offset":26355},"end":{"line":821,"column":32,"offset":26358},"indent":[]}}],"position":{"start":{"line":821,"column":3,"offset":26329},"end":{"line":821,"column":68,"offset":26394},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Attach to pod","position":{"start":{"line":821,"column":71,"offset":26397},"end":{"line":821,"column":84,"offset":26410},"indent":[]}}],"position":{"start":{"line":821,"column":71,"offset":26397},"end":{"line":821,"column":119,"offset":26445},"indent":[]}}],"position":{"start":{"line":821,"column":1,"offset":26327},"end":{"line":821,"column":121,"offset":26447},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl exec ","position":{"start":{"line":822,"column":3,"offset":26450},"end":{"line":822,"column":16,"offset":26463},"indent":[]}},{"type":"inlineCode","value":"<pod>","position":{"start":{"line":822,"column":16,"offset":26463},"end":{"line":822,"column":23,"offset":26470},"indent":[]}},{"type":"text","value":" -- command","position":{"start":{"line":822,"column":23,"offset":26470},"end":{"line":822,"column":34,"offset":26481},"indent":[]}}],"position":{"start":{"line":822,"column":3,"offset":26450},"end":{"line":822,"column":68,"offset":26515},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Execute a command on the pod","position":{"start":{"line":822,"column":71,"offset":26518},"end":{"line":822,"column":99,"offset":26546},"indent":[]}}],"position":{"start":{"line":822,"column":71,"offset":26518},"end":{"line":822,"column":119,"offset":26566},"indent":[]}}],"position":{"start":{"line":822,"column":1,"offset":26448},"end":{"line":822,"column":121,"offset":26568},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl label pods ","position":{"start":{"line":823,"column":3,"offset":26571},"end":{"line":823,"column":22,"offset":26590},"indent":[]}},{"type":"inlineCode","value":"<pod>","position":{"start":{"line":823,"column":22,"offset":26590},"end":{"line":823,"column":29,"offset":26597},"indent":[]}},{"type":"text","value":" mylabel=awesome","position":{"start":{"line":823,"column":29,"offset":26597},"end":{"line":823,"column":45,"offset":26613},"indent":[]}}],"position":{"start":{"line":823,"column":3,"offset":26571},"end":{"line":823,"column":68,"offset":26636},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Add new label to pod","position":{"start":{"line":823,"column":71,"offset":26639},"end":{"line":823,"column":91,"offset":26659},"indent":[]}}],"position":{"start":{"line":823,"column":71,"offset":26639},"end":{"line":823,"column":119,"offset":26687},"indent":[]}}],"position":{"start":{"line":823,"column":1,"offset":26569},"end":{"line":823,"column":121,"offset":26689},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"kubectl run -i -tty busybox --image=busybox --restart=Never -- sh","position":{"start":{"line":824,"column":3,"offset":26692},"end":{"line":824,"column":68,"offset":26757},"indent":[]}}],"position":{"start":{"line":824,"column":3,"offset":26692},"end":{"line":824,"column":68,"offset":26757},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Run a shell in a pod - very useful for debugging","position":{"start":{"line":824,"column":71,"offset":26760},"end":{"line":824,"column":119,"offset":26808},"indent":[]}}],"position":{"start":{"line":824,"column":71,"offset":26760},"end":{"line":824,"column":119,"offset":26808},"indent":[]}}],"position":{"start":{"line":824,"column":1,"offset":26690},"end":{"line":824,"column":121,"offset":26810},"indent":[]}}],"position":{"start":{"line":815,"column":1,"offset":25601},"end":{"line":824,"column":121,"offset":26810},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"How to port-forward","position":{"start":{"line":826,"column":5,"offset":26816},"end":{"line":826,"column":24,"offset":26835},"indent":[]}}],"position":{"start":{"line":826,"column":1,"offset":26812},"end":{"line":826,"column":24,"offset":26835},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Running ","position":{"start":{"line":828,"column":1,"offset":26837},"end":{"line":828,"column":9,"offset":26845},"indent":[]}},{"type":"inlineCode","value":"kubectl describe pod nodehelloworld.example.com","position":{"start":{"line":828,"column":9,"offset":26845},"end":{"line":828,"column":58,"offset":26894},"indent":[]}},{"type":"text","value":" will then give us info on what is going on here.","position":{"start":{"line":828,"column":58,"offset":26894},"end":{"line":828,"column":107,"offset":26943},"indent":[]}}],"position":{"start":{"line":828,"column":1,"offset":26837},"end":{"line":828,"column":107,"offset":26943},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To listen locally, we can port-forward: ","position":{"start":{"line":830,"column":1,"offset":26945},"end":{"line":830,"column":41,"offset":26985},"indent":[]}},{"type":"inlineCode","value":"kubectl port-forward nodehelloworld.example.com 8081:3000","position":{"start":{"line":830,"column":41,"offset":26985},"end":{"line":830,"column":100,"offset":27044},"indent":[]}}],"position":{"start":{"line":830,"column":1,"offset":26945},"end":{"line":830,"column":100,"offset":27044},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Exposing the pod","position":{"start":{"line":832,"column":5,"offset":27050},"end":{"line":832,"column":21,"offset":27066},"indent":[]}}],"position":{"start":{"line":832,"column":1,"offset":27046},"end":{"line":832,"column":21,"offset":27066},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service","position":{"start":{"line":834,"column":1,"offset":27068},"end":{"line":834,"column":94,"offset":27161},"indent":[]}}],"position":{"start":{"line":834,"column":1,"offset":27068},"end":{"line":834,"column":94,"offset":27161},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Check this with ","position":{"start":{"line":836,"column":1,"offset":27163},"end":{"line":836,"column":17,"offset":27179},"indent":[]}},{"type":"inlineCode","value":"kubectl get service","position":{"start":{"line":836,"column":17,"offset":27179},"end":{"line":836,"column":38,"offset":27200},"indent":[]}}],"position":{"start":{"line":836,"column":1,"offset":27163},"end":{"line":836,"column":38,"offset":27200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When you see what port is being forwarded, you can again open that up on the security settings and direct to that port.","position":{"start":{"line":838,"column":1,"offset":27202},"end":{"line":838,"column":120,"offset":27321},"indent":[]}}],"position":{"start":{"line":838,"column":1,"offset":27202},"end":{"line":838,"column":120,"offset":27321},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Setting up the external load balancer","position":{"start":{"line":840,"column":5,"offset":27327},"end":{"line":840,"column":42,"offset":27364},"indent":[]}}],"position":{"start":{"line":840,"column":1,"offset":27323},"end":{"line":840,"column":42,"offset":27364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will allow the outside world to have traffic routed to the correct pod.","position":{"start":{"line":842,"column":1,"offset":27366},"end":{"line":842,"column":77,"offset":27442},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":27366},"end":{"line":842,"column":77,"offset":27442},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To create the service for this:","position":{"start":{"line":844,"column":1,"offset":27444},"end":{"line":844,"column":32,"offset":27475},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":27444},"end":{"line":844,"column":32,"offset":27475},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"apiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports:\n  - port: 80\n  targetPort: nodejs-port\n  protocol: TCP\n  selector:\n  app: helloworld\n  type: LoadBalancer","position":{"start":{"line":846,"column":1,"offset":27477},"end":{"line":859,"column":4,"offset":27675},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":861,"column":1,"offset":27677},"end":{"line":861,"column":7,"offset":27683},"indent":[]}},{"type":"inlineCode","value":"kubectl create -f <file>","position":{"start":{"line":861,"column":7,"offset":27683},"end":{"line":861,"column":33,"offset":27709},"indent":[]}},{"type":"text","value":" will create the pods and kops will autoconfigure what is required.","position":{"start":{"line":861,"column":33,"offset":27709},"end":{"line":861,"column":100,"offset":27776},"indent":[]}}],"position":{"start":{"line":861,"column":1,"offset":27677},"end":{"line":861,"column":100,"offset":27776},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":863,"column":1,"offset":27778},"end":{"line":863,"column":31,"offset":27808},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":863,"column":31,"offset":27808}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <p>{`kubectl: Install via brew\nminikube: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/minikube/releases\"\n      }}>{`https://github.com/kubernetes/minikube/releases`}</a>{`\nkops: Install via brew`}</p>\n    <p>{`Minikube test commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`minikube status # check status\nminikube start # start cluster\n`}</code></pre>\n    <p>{`For OSX install:`}</p>\n    <p><inlineCode parentName=\"p\">{`curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/`}</inlineCode></p>\n    <p>{`Install Docker Edge to use the latest features with Kubernetes.`}</p>\n    <p>{`Otherwise follow the base instructions to get everything up and going.`}</p>\n    <p><inlineCode parentName=\"p\">{`https://gist.github.com/kevin-smets/b91a34cea662d0c523968472a81788f7`}</inlineCode></p>\n    <p>{`This resolves DL issue: `}<inlineCode parentName=\"p\">{`mv minikube-v0.25.1.iso ~/.minikube/cache/iso/minikube-v0.25.1.iso`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"procedure-document\"\n    }}>{`Procedure Document`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Kubernetes Procedure Document\nGithub repository [Read this first]\nDownload all the course material from: https://github.com/wardviaene/kubernetes-course\n\nQuestions?\nSend me a message\n\nUse Q&A\n\nJoin our facebook group: https://www.facebook.com/groups/840062592768074/\n\nDownload Kubectl\nLinux: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/linux/amd64/kubectl\n\nMacOS: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/darwin/amd64/kubectl\n\nWindows:\nhttps://github.com/eirslett/kubectl-windows/releases/download/v1.6.3/kubectl.exe\n\nMinikube\nProject URL: https://github.com/kubernetes/minikube\n\nLatest Release and download instructions: https://github.com/kubernetes/minikube/releases\n\nVirtualBox: http://www.virtualbox.org\n\nMinikube on windows:\nDownload the latest minikube-version.exe\n\nRename the file to minikube.exe and put it in C:\\\\minikube\n\nOpen a cmd (search for the app cmd or powershell)\n\nRun: cd C:\\\\minikube and enter minikube start\n\nTest your cluster commands\nMake sure your cluster is running, you can check with minikube status.\n\nIf your cluster is not running, enter minikube start first.\n\nkubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080\nkubectl expose deployment hello-minikube --type=NodePort\n\nminikube service hello-minikube --url\n\n<open a browser and go to that url>\n\nKops\nProject URL\nhttps://github.com/kubernetes/kops\n\nFree DNS Service\nSign up at http://freedns.afraid.org/\n\nChoose for subdomain hosting\n\nEnter the AWS nameservers given to you in route53 as nameservers for the subdomain\n\nhttp://www.dot.tk/ provides a free .tk domain name you can use and you can point it to the amazon AWS nameservers\n\n###h2\n\nNamecheap.com often has promotions for tld’s like .co for just a couple of bucks\n\n\n\nCluster Commands\nkops create cluster --name=kubernetes.newtech.academy --state=s3://kops-state-b429b --zones=eu-west-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kubernetes.newtech.academy\n\nkops update cluster kubernetes.newtech.academy --yes --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b --yes\n\nKubernetes from scratch\n\n\n\n\n\n\nYou can setup your cluster manually from scratch\n\nIf you’re planning to deploy on AWS / Google / Azure, use the tools that are fit for these platforms\n\nIf you have an unsupported cloud platform, and you still want Kubernetes, you can install it manually\n\nCoreOS + Kubernetes: ###a href=\"https://coreos.com/kubernetes/docs/latest/getting-started.html\">https://coreos.com/kubernetes/docs/latest/getting-started.html\n\nDocker\nYou can download Docker Engine for:\n\nWindows: https://docs.docker.com/engine/installation/windows/\n\nMacOS: https://docs.docker.com/engine/installation/mac/\n\nLinux: https://docs.docker.com/engine/installation/linux/\n\nDevOps box\nVirtualbox: http://www.virtualbox.org\n\nVagrant: http://www.vagrantup.com\n\nDevOps box: https://github.com/wardviaene/devops-box\n\nLaunch commands (in terminal / cmd / powershell):\n\ncd devops-box/\n\nvagrant up\n\nLaunch commands for a plain ubuntu box:\n\nmkdir ubuntu\n\nvagrant init ubuntu/xenial64\n\nvagrant up\n\nDocker commands\nDescription\n\nCommand\n\nBuild image\n\ndocker build .\n\nBuild & Tag\n\ndocker build -t wardviaene/k8s-demo:latest .\n\nTag image\n\ndocker tag imageid wardviaene/k8s-demo\n\nPush image\n\ndocker push wardviaene/k8s-demo\n\nList images\n\ndocker images\n\nList all containers\n\ndocker ps -a\n\nKubernetes commands\nCommand\n\nDescription\n\nkubectl get pod\n\nGet information about all running pods\n\nkubectl describe pod \\`<pod>\\`\n\nDescribe one pod\n\nkubectl expose pod \\`<pod>\\` --port=444\n\n--name=frontend\n\nExpose the port of a pod (creates a new service)\n\nkubectl port-forward \\`<pod>\\` 8080\n\nPort forward the exposed pod port to your local machine\n\nkubectl attach \\`<podname>\\` -i\n\nAttach to the pod\n\nkubectl exec \\`<pod>\\` -- command\n\nExecute a command on the pod\n\nkubectl label pods \\`<pod>\\` mylabel=awesome\n\nAdd a new label to a pod\n\nkubectl run -i --tty busybox --image=busybox\n\n--restart=Never -- sh\n\nRun a shell in a pod - very useful for debugging\n\nkubectl get deployments\n\nGet information on current deployments\n\nkubectl get rs\n\nGet information about the replica sets\n\nkubectl get pods --show-labels\n\nget pods, and also show labels attached to those pods\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet deployment status\n\nkubectl set image deployment/helloworld-deployment\n\nk8s-demo=k8s-demo:2\n\nRun k8s-demo with the image label version 2\n\nkubectl edit deployment/helloworld-deployment\n\nEdit the deployment object\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet the status of the rollout\n\nkubectl rollout history deployment/helloworld-deployment\n\nGet the rollout history\n\nkubectl rollout undo deployment/helloworld-deployment\n\nRollback to previous version\n\nkubectl rollout undo deployment/helloworld-deployment --to-revision=n\n\nRollback to any version version\n\nAWS Commands\naws ec2 create-volume --size 10 --region us-east-1 --availability-zone us-east-1a --volume-type gp2\n\nCertificates\nCreating a new key for a new user: openssl genrsa -out myuser.pem 2048\n\nCreating a certificate request: openssl req -new -key myuser.pem -out myuser-csr.pem -subj \"/CN=myuser/O=myteam/\"\n\nCreating a certificate: openssl x509 -req -in myuser-csr.pem -CA /path/to/kubernetes/ca.crt -CAkey /path/to/kubernetes/ca.key -CAcreateserial -out myuser.crt -days 10000\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"what-is-kubernetes\"\n    }}>{`What is Kubernetes?`}</h2>\n    <p>{`Open source orchestration system for Docker.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Let's you schedule containers on a cluster of machines`}</li>\n      <li parentName=\"ul\">{`You can run multiple containers on one machine`}</li>\n      <li parentName=\"ul\">{`You can run long running services (like web apps)`}</li>\n      <li parentName=\"ul\">{`K8s will manage the state of these containers`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Can start the container on specific nodes`}</li>\n          <li parentName=\"ul\">{`Will restart a container when it gets killed`}</li>\n          <li parentName=\"ul\">{`Can move containers from one node to another node`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Instead of just running a few docker containers on one host manually, K8s can manage that for you`}</li>\n      <li parentName=\"ul\">{`K8 clusters can go to thousands of nodes`}</li>\n      <li parentName=\"ul\">{`Other orcherstrators:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Docker Swarm`}</li>\n          <li parentName=\"ul\">{`Mesos`}</li>\n        </ul></li>\n    </ul>\n    <p>{`You can run K8s anywhere:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`One premise (private)`}</li>\n      <li parentName=\"ul\">{`Public`}</li>\n      <li parentName=\"ul\">{`Hybrid`}</li>\n    </ul>\n    <p>{`It is highly modular and open source. It is also backed by Google.`}</p>\n    <h2 {...{\n      \"id\": \"containers-intro\"\n    }}>{`Containers intro`}</h2>\n    <p>{`Container VS VM: No Hypervisor and Guest OS layer.`}</p>\n    <p>{`Containers on Cloud Providers do still use the hypervisor to seperate users.`}</p>\n    <p>{`Docker is the most popular container software. An alternative is `}<inlineCode parentName=\"p\">{`rkt`}</inlineCode>{`.`}</p>\n    <p>{`Benefits? It works in isolation. You ship the binary with all the dependencies and create a closer parity.`}</p>\n    <p>{`Docker makes development teams able to ship faster.`}</p>\n    <p>{`You can run the same image on prem and in the cloud with what should be the same results.`}</p>\n    <h2 {...{\n      \"id\": \"kubernetes-setup\"\n    }}>{`Kubernetes Setup`}</h2>\n    <p>{`Something to note is that there are more integrations for certain Cloud Providers like AWS & GCE. Thingsl ike \"Volumes\" and \"External Load Balancers\" work only with support Cloud Providers.`}</p>\n    <h3 {...{\n      \"id\": \"running-locally\"\n    }}>{`Running locally`}</h3>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`minikube`}</inlineCode>{` to spin up a local single machine with a Kubernetes cluster.`}</p>\n    <h4 {...{\n      \"id\": \"minikube\"\n    }}>{`Minikube`}</h4>\n    <p>{`Minikube is a tool that makes running k8s locally easy.`}</p>\n    <p>{`It runs a single-node Kubernetes cluster inside a Linux VM.`}</p>\n    <p>{`It's aimed on users who just want to just test it out or use if for development.`}</p>\n    <p>{`It cannot spin up a roduction cluster, it's a one node machine with no high availability.`}</p>\n    <p>{`You need VM to run all this.`}</p>\n    <p>{`To run a cluster, just run `}<inlineCode parentName=\"p\">{`minikube start`}</inlineCode>{`.`}</p>\n    <p>{`To check your config after spinning up Kubernetes, use `}<inlineCode parentName=\"p\">{`cat ~/.kube/config`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"running-on-aws\"\n    }}>{`Running on AWS`}</h3>\n    <p>{`Until EKS comes out, we can spin up a Kubernetes cluster using KOPS.`}</p>\n    <p>{`You need to ensure that you download Vagrant and a VM.`}</p>\n    <p>{`For running the Vagrant box, you can run `}<inlineCode parentName=\"p\">{`vagrant up --provider virtualbox`}</inlineCode>{`.`}</p>\n    <p>{`You can then use `}<inlineCode parentName=\"p\">{`vagrant ssh`}</inlineCode>{` to ssh in.`}</p>\n    <p>{`After you are in, download Kops:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64\nchmod +x kops-linux-amd64\nsudo mv kops-linux-amd64 /usr/local/bin/kops\n`}</code></pre>\n    <p>{`Ensure that you also download `}<inlineCode parentName=\"p\">{`python-pip`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo apt-get install software-properties-common\nsudo apt-add-repository universe\nsudo apt-get update\nsudo apt-get install python-pip\n`}</code></pre>\n    <p>{`Then install awscli:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export LC_ALL=C # if run into an error about locale settings\nsudo pip install awscli\n`}</code></pre>\n    <p>{`You will then need to create an AWS account.`}</p>\n    <p>{`After setting up the AWSCLI, installing Kops and creating a S3 Bucket + setting up the Route53 Name Servers (on somewhere like NameCheap), you can move on.`}</p>\n    <h3 {...{\n      \"id\": \"cluster-setup-on-kops\"\n    }}>{`Cluster setup on Kops`}</h3>\n    <p>{`First, download Kops for Linux on the Vagrant box and move it.`}</p>\n    <p>{`Before creating the cluster, you will need to create new keys. `}<inlineCode parentName=\"p\">{`ssh-keygen -f .ssh/id_rsa`}</inlineCode>{`.`}</p>\n    <p>{`To create the cluster (example), run `}<inlineCode parentName=\"p\">{`kops create cluster --name=kubernetes.test --state=s3://kops-state-oeiajrie93 --zones=ap-southeast-2a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=givemeyeezy.online`}</inlineCode></p>\n    <p>{`This DNS zone is basically just the one that we set up.`}</p>\n    <p>{`You'll get something back like`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`I0311 21:48:46.821364    7553 create_cluster.go:439] Inferred --cloud=aws from zone \"ap-southeast-2a\"\nI0311 21:48:46.821506    7553 create_cluster.go:971] Using SSH public key: /home/vagrant/.ssh/id_rsa.pub\nI0311 21:48:48.232635    7553 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet ap-southeast-2a\nPreviewing changes that will be made:\n\nI0311 21:48:52.305360    7553 executor.go:91] Tasks: 0 done / 73 total; 31 can run\nI0311 21:48:53.503124    7553 executor.go:91] Tasks: 31 done / 73 total; 24 can run\nI0311 21:48:53.958875    7553 executor.go:91] Tasks: 55 done / 73 total; 16 can run\nI0311 21:48:54.237870    7553 executor.go:91] Tasks: 71 done / 73 total; 2 can run\nI0311 21:48:54.262347    7553 executor.go:91] Tasks: 73 done / 73 total; 0 can run\nWill create resources:\n  AutoscalingGroup/master-ap-southeast-2a.masters.kubernetes.test\n  MinSize               1\n  MaxSize               1\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/role/master: 1, Name: master-ap-southeast-2a.masters.kubernetes.test, KubernetesCluster: kubernetes.test, k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: master-ap-southeast-2a}\n  LaunchConfiguration   name:master-ap-southeast-2a.masters.kubernetes.test\n\n  AutoscalingGroup/nodes.kubernetes.test\n  MinSize               2\n  MaxSize               2\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: nodes, k8s.io/role/node: 1, Name: nodes.kubernetes.test, KubernetesCluster: kubernetes.test}\n  LaunchConfiguration   name:nodes.kubernetes.test\n\n  DHCPOptions/kubernetes.test\n  DomainName            ap-southeast-2.compute.internal\n  DomainNameServers     AmazonProvidedDNS\n\n  EBSVolume/a.etcd-events.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {KubernetesCluster: kubernetes.test, k8s.io/etcd/events: a/a, k8s.io/role/master: 1, Name: a.etcd-events.kubernetes.test}\n\n  EBSVolume/a.etcd-main.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {k8s.io/etcd/main: a/a, k8s.io/role/master: 1, Name: a.etcd-main.kubernetes.test, KubernetesCluster: kubernetes.test}\n\n  IAMInstanceProfile/masters.kubernetes.test\n\n  IAMInstanceProfile/nodes.kubernetes.test\n\n  IAMInstanceProfileRole/masters.kubernetes.test\n  InstanceProfile       name:masters.kubernetes.test id:masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMInstanceProfileRole/nodes.kubernetes.test\n  InstanceProfile       name:nodes.kubernetes.test id:nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  IAMRole/masters.kubernetes.test\n  ExportWithID          masters\n\n  IAMRole/nodes.kubernetes.test\n  ExportWithID          nodes\n\n  IAMRolePolicy/masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMRolePolicy/nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  InternetGateway/kubernetes.test\n  VPC                   name:kubernetes.test\n  Shared                false\n\n  Keypair/apiserver-aggregator\n  Subject               cn=aggregator\n  Type                  client\n  Signer                name:apiserver-aggregator-ca id:cn=apiserver-aggregator-ca\n\n  Keypair/apiserver-aggregator-ca\n  Subject               cn=apiserver-aggregator-ca\n  Type                  ca\n\n  Keypair/apiserver-proxy-client\n  Subject               cn=apiserver-proxy-client\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/ca\n  Subject               cn=kubernetes\n  Type                  ca\n\n  Keypair/kops\n  Subject               o=system:masters,cn=kops\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-controller-manager\n  Subject               cn=system:kube-controller-manager\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-proxy\n  Subject               cn=system:kube-proxy\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-scheduler\n  Subject               cn=system:kube-scheduler\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubecfg\n  Subject               o=system:masters,cn=kubecfg\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet\n  Subject               o=system:nodes,cn=kubelet\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet-api\n  Subject               cn=kubelet-api\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/master\n  Subject               cn=kubernetes-master\n  Type                  server\n  AlternateNames        [100.64.0.1, 127.0.0.1, api.internal.kubernetes.test, api.kubernetes.test, kubernetes, kubernetes.default, kubernetes.default.svc, kubernetes.default.svc.cluster.local]\n  Signer                name:ca id:cn=kubernetes\n\n  LaunchConfiguration/master-ap-southeast-2a.masters.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:masters.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:masters.kubernetes.test id:masters.kubernetes.test\n  RootVolumeSize        64\n  RootVolumeType        gp2\n  SpotPrice\n\n  LaunchConfiguration/nodes.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:nodes.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:nodes.kubernetes.test id:nodes.kubernetes.test\n  RootVolumeSize        128\n  RootVolumeType        gp2\n  SpotPrice\n\n  ManagedFile/kubernetes.test-addons-bootstrap\n  Location              addons/bootstrap-channel.yaml\n\n  ManagedFile/kubernetes.test-addons-core.addons.k8s.io\n  Location              addons/core.addons.k8s.io/v1.4.0.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-pre-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-pre-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-limit-range.addons.k8s.io\n  Location              addons/limit-range.addons.k8s.io/v1.5.0.yaml\n\n  ManagedFile/kubernetes.test-addons-rbac.addons.k8s.io-k8s-1.8\n  Location              addons/rbac.addons.k8s.io/k8s-1.8.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.6.0\n  Location              addons/storage-aws.addons.k8s.io/v1.6.0.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.7.0\n  Location              addons/storage-aws.addons.k8s.io/v1.7.0.yaml\n\n  Route/0.0.0.0/0\n  RouteTable            name:kubernetes.test\n  CIDR                  0.0.0.0/0\n  InternetGateway       name:kubernetes.test\n\n  RouteTable/kubernetes.test\n  VPC                   name:kubernetes.test\n\n  RouteTableAssociation/ap-southeast-2a.kubernetes.test\n  RouteTable            name:kubernetes.test\n  Subnet                name:ap-southeast-2a.kubernetes.test\n\n  SSHKey/kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  KeyFingerprint        c4:89:af:59:a1:1d:6e:ef:7a:9d:12:65:bc:e2:82:4f\n\n  Secret/admin\n\n  Secret/kube\n\n  Secret/kube-proxy\n\n  Secret/kubelet\n\n  Secret/system:controller_manager\n\n  Secret/system:dns\n\n  Secret/system:logging\n\n  Secret/system:monitoring\n\n  Secret/system:scheduler\n\n  SecurityGroup/masters.kubernetes.test\n  Description           Security group for masters\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22, port=443, port=2380, port=2381, port=4001, port=4002, port=4789, port=179]\n\n  SecurityGroup/nodes.kubernetes.test\n  Description           Security group for nodes\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22]\n\n  SecurityGroupRule/all-master-to-master\n  SecurityGroup         name:masters.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-master-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-node-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/https-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              443\n  ToPort                443\n\n  SecurityGroupRule/master-egress\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-egress\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-to-master-tcp-1-2379\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              1\n  ToPort                2379\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-2382-4000\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              2382\n  ToPort                4000\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-4003-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              4003\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-udp-1-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              udp\n  FromPort              1\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/ssh-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  SecurityGroupRule/ssh-external-to-node-0.0.0.0/0\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  Subnet/ap-southeast-2a.kubernetes.test\n  VPC                   name:kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  CIDR                  172.20.32.0/19\n  Shared                false\n  Tags                  {Name: ap-southeast-2a.kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned, kubernetes.io/role/elb: 1}\n\n  VPC/kubernetes.test\n  CIDR                  172.20.0.0/16\n  EnableDNSHostnames    true\n  EnableDNSSupport      true\n  Shared                false\n  Tags                  {Name: kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned}\n\n  VPCDHCPOptionsAssociation/kubernetes.test\n  VPC                   name:kubernetes.test\n  DHCPOptions           name:kubernetes.test\n\nMust specify --yes to apply changes\n\nCluster configuration has been created.\n\nSuggestions:\n * list clusters with: kops get cluster\n * edit this cluster with: kops edit cluster kubernetes.test\n * edit your node instance group: kops edit ig --name=kubernetes.test nodes\n * edit your master instance group: kops edit ig --name=kubernetes.test master-ap-southeast-2a\n\nFinally configure your cluster with: kops update cluster kubernetes.test --yes\n`}</code></pre>\n    <p>{`To edit the cluster, run `}<inlineCode parentName=\"p\">{`kops edit cluster kubernetes.test --state=s3://kops-state-oeiajrie93`}</inlineCode>{` and then to update run `}<inlineCode parentName=\"p\">{`kops update cluster kubernetes.test --yes --state=s3://kops-state-oeiajrie93`}</inlineCode></p>\n    <p>{`If we now run `}<inlineCode parentName=\"p\">{`cat ~/.kube/config`}</inlineCode>{` we can see the password and username information needed.`}</p>\n    <p>{`To check if the nodes are up, run `}<inlineCode parentName=\"p\">{`kubectl get node`}</inlineCode>{`.`}</p>\n    <p>{`Then, we can again run `}<inlineCode parentName=\"p\">{`kubectl run hello-minikube ...`}</inlineCode></p>\n    <p>{`If you have issues hit up `}<inlineCode parentName=\"p\">{`https://www.digitalocean.com/community/tutorials/how-to-set-up-time-synchronization-on-ubuntu-16-04`}</inlineCode>{` for date syncing.`}</p>\n    <h2 {...{\n      \"id\": \"kops-quicklist\"\n    }}>{`KOPS QuickList`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# create\nkops create cluster --name=doksandbox.com --state=s3://kops-state-doksandbox --zones=ap-southeast-2a --node-count=1 --node-size=t2.micro --master-size=t2.micro --dns-zone=doksandbox.com\n\n# edit\nkops edit cluster doksandbox.com --state=s3://kops-state-doksandbox\n\n# update\nkops update cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# delete\nkops delete cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# suggestions\nkops validate cluster --state=s3://kops-state-doksandbox  # validate cluster\nkubectl get nodes --show-labels # list nodes\nssh -i ~/.ssh/id_rsa admin@api.kubernetes.doksandbox.com # ssh to the master\nThe admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.\n\n# check DNS\ndig afxr doksandbox.com\n`}</code></pre>\n    <p>{`To get a basic service up and running, hit `}<inlineCode parentName=\"p\">{`kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080`}</inlineCode>{` and head to the VPC security network to update and expose that port to all IPs to prove that is all works correctly. The port will be dynamic.`}</p>\n    <h3 {...{\n      \"id\": \"building-docker-containers\"\n    }}>{`Building Docker Containers`}</h3>\n    <p>{`If installing onto Linux, check `}<inlineCode parentName=\"p\">{`https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1`}</inlineCode></p>\n    <p>{`To do a demo, `}<inlineCode parentName=\"p\">{`sudo apt-get install git`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`git clone https://github.com/wardviaene/docker-demo`}</inlineCode>{` to get a demo folder.`}</p>\n    <p>{`Change in, `}<inlineCode parentName=\"p\">{`sudo docker build .`}</inlineCode>{` and then to run the container use `}<inlineCode parentName=\"p\">{`docker run -p 3000:3000 -t <id>`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"docker-registery\"\n    }}>{`Docker registery`}</h3>\n    <p>{`To upload to the registry:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker login # fill in login details\ndocker tag imageid okeeffed/docker-demo\ndocker push okeeffed/docker-demo\n`}</code></pre>\n    <p>{`There are a few limitations for each Docker/Kubernetes relationship:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Don't try to create one giant docker image fo you app, but split it up if necessary.`}</li>\n      <li parentName=\"ol\">{`All data in the container is not preserved. You need volumes for this.`}</li>\n      <li parentName=\"ol\">{`Check 12factor.net for methodologies`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"running-the-docker-app-on-kubernetes\"\n    }}>{`Running the Docker app on Kubernetes`}</h3>\n    <p>{`We need to create a `}<inlineCode parentName=\"p\">{`pod definition`}</inlineCode>{`.`}</p>\n    <p>{`This describes an application running on Kubernetes.`}</p>\n    <p>{`A pod can container `}<em parentName=\"p\">{`one or more tightly coupled containers`}</em>{` that make up the app.`}</p>\n    <p>{`Those apps can easily communicate with each other using their local `}<strong parentName=\"p\">{`port numbers`}</strong>{`.`}</p>\n    <p>{`The app for us at the moment has only one container.`}</p>\n    <p>{`To build this, we create a podfile with all the pod definition:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n`}</code></pre>\n    <p>{`To create this pod, we run `}<inlineCode parentName=\"p\">{`kubectl create -f ./pod-helloworld.yml`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Some useful commands`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get pod`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get info about all running pods`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl describe pod `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Describe one pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl expose pod `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` --port=444 --name=frontend`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Expose the port of a pod (creates a new service)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl port-forward `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` 8080`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Port forward the local machine`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl attach `}<inlineCode parentName=\"td\">{`<podname>`}</inlineCode>{` -i`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attach to pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl exec `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` -- command`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Execute a command on the pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl label pods `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` mylabel=awesome`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Add new label to pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl run -i -tty busybox --image=busybox --restart=Never -- sh`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run a shell in a pod - very useful for debugging`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"how-to-port-forward\"\n    }}>{`How to port-forward`}</h3>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`kubectl describe pod nodehelloworld.example.com`}</inlineCode>{` will then give us info on what is going on here.`}</p>\n    <p>{`To listen locally, we can port-forward: `}<inlineCode parentName=\"p\">{`kubectl port-forward nodehelloworld.example.com 8081:3000`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"exposing-the-pod\"\n    }}>{`Exposing the pod`}</h3>\n    <p><inlineCode parentName=\"p\">{`kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service`}</inlineCode></p>\n    <p>{`Check this with `}<inlineCode parentName=\"p\">{`kubectl get service`}</inlineCode></p>\n    <p>{`When you see what port is being forwarded, you can again open that up on the security settings and direct to that port.`}</p>\n    <h3 {...{\n      \"id\": \"setting-up-the-external-load-balancer\"\n    }}>{`Setting up the external load balancer`}</h3>\n    <p>{`This will allow the outside world to have traffic routed to the correct pod.`}</p>\n    <p>{`To create the service for this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports:\n  - port: 80\n  targetPort: nodejs-port\n  protocol: TCP\n  selector:\n  app: helloworld\n  type: LoadBalancer\n`}</code></pre>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`kubectl create -f <file>`}</inlineCode>{` will create the pods and kops will autoconfigure what is required.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}