{"expireTime":9007200849425541000,"key":"gatsby-plugin-mdx-entire-payload-913718c9dd3bf9d4ad163f636563ceee-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Kubernetes Dashboard","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":23,"offset":189},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":23,"offset":189},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This belongs to the Kubernetes project and gives you a UI overview of what is going on.","position":{"start":{"line":10,"column":1,"offset":191},"end":{"line":10,"column":88,"offset":278},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":191},"end":{"line":10,"column":88,"offset":278},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It displays info about:","position":{"start":{"line":12,"column":1,"offset":280},"end":{"line":12,"column":24,"offset":303},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":280},"end":{"line":12,"column":24,"offset":303},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Workload (Deployments, Pods, ReplicationSets)","position":{"start":{"line":14,"column":3,"offset":307},"end":{"line":14,"column":48,"offset":352},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":307},"end":{"line":14,"column":48,"offset":352},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":305},"end":{"line":14,"column":48,"offset":352},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Namespaces","position":{"start":{"line":15,"column":3,"offset":355},"end":{"line":15,"column":13,"offset":365},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":355},"end":{"line":15,"column":13,"offset":365},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":353},"end":{"line":15,"column":13,"offset":365},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Services","position":{"start":{"line":16,"column":3,"offset":368},"end":{"line":16,"column":11,"offset":376},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":368},"end":{"line":16,"column":11,"offset":376},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":366},"end":{"line":16,"column":11,"offset":376},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Nodes & Storage","position":{"start":{"line":17,"column":3,"offset":379},"end":{"line":17,"column":18,"offset":394},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":379},"end":{"line":17,"column":18,"offset":394},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":377},"end":{"line":17,"column":18,"offset":394},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Usage Metrics (Heapster monitoring required)","position":{"start":{"line":18,"column":3,"offset":397},"end":{"line":18,"column":47,"offset":441},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":397},"end":{"line":18,"column":47,"offset":441},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":395},"end":{"line":18,"column":47,"offset":441},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":305},"end":{"line":18,"column":47,"offset":441},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The dashboard can also execute commands based on propr RBAC permissions.","position":{"start":{"line":20,"column":1,"offset":443},"end":{"line":20,"column":73,"offset":515},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":443},"end":{"line":20,"column":73,"offset":515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Security:","position":{"start":{"line":22,"column":1,"offset":517},"end":{"line":22,"column":10,"offset":526},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":517},"end":{"line":22,"column":10,"offset":526},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"HTTPS","position":{"start":{"line":24,"column":3,"offset":530},"end":{"line":24,"column":8,"offset":535},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":530},"end":{"line":24,"column":8,"offset":535},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":528},"end":{"line":24,"column":8,"offset":535},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Login via Bearer token","position":{"start":{"line":25,"column":3,"offset":538},"end":{"line":25,"column":25,"offset":560},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":538},"end":{"line":25,"column":25,"offset":560},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":536},"end":{"line":25,"column":25,"offset":560},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"RBAC to define fine-grain access to UI components","position":{"start":{"line":26,"column":3,"offset":563},"end":{"line":26,"column":52,"offset":612},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":563},"end":{"line":26,"column":52,"offset":612},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":561},"end":{"line":26,"column":52,"offset":612},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":528},"end":{"line":26,"column":52,"offset":612},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"More info can be found ","position":{"start":{"line":28,"column":1,"offset":614},"end":{"line":28,"column":24,"offset":637},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/kubernetes/dashboard","children":[{"type":"text","value":"https://github.com/kubernetes/dashboard","position":{"start":{"line":28,"column":24,"offset":637},"end":{"line":28,"column":63,"offset":676},"indent":[]}}],"position":{"start":{"line":28,"column":24,"offset":637},"end":{"line":28,"column":63,"offset":676},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":28,"column":63,"offset":676},"end":{"line":28,"column":64,"offset":677},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":614},"end":{"line":28,"column":64,"offset":677},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What the setup for us will look like when touching base with the dashboard:","position":{"start":{"line":30,"column":1,"offset":679},"end":{"line":30,"column":76,"offset":754},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":679},"end":{"line":30,"column":76,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1548218031/eks-course/Screen_Shot_2019-01-23_at_3.33.27_pm.png","alt":"Dashboard access layout","position":{"start":{"line":32,"column":1,"offset":756},"end":{"line":32,"column":144,"offset":899},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":756},"end":{"line":32,"column":144,"offset":899},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Steps to take","position":{"start":{"line":34,"column":4,"offset":904},"end":{"line":34,"column":17,"offset":917},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":901},"end":{"line":34,"column":17,"offset":917},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create service account and RBAC rules","position":{"start":{"line":36,"column":4,"offset":922},"end":{"line":36,"column":41,"offset":959},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":922},"end":{"line":36,"column":41,"offset":959},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":919},"end":{"line":36,"column":41,"offset":959},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deploy dashboard","position":{"start":{"line":37,"column":4,"offset":963},"end":{"line":37,"column":20,"offset":979},"indent":[]}}],"position":{"start":{"line":37,"column":4,"offset":963},"end":{"line":37,"column":20,"offset":979},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":960},"end":{"line":37,"column":20,"offset":979},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deploy metrics Add-Ons","position":{"start":{"line":38,"column":4,"offset":983},"end":{"line":38,"column":26,"offset":1005},"indent":[]}}],"position":{"start":{"line":38,"column":4,"offset":983},"end":{"line":38,"column":26,"offset":1005},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":980},"end":{"line":38,"column":26,"offset":1005},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create cluster admin account and explore dashboard","position":{"start":{"line":39,"column":4,"offset":1009},"end":{"line":39,"column":54,"offset":1059},"indent":[]}}],"position":{"start":{"line":39,"column":4,"offset":1009},"end":{"line":39,"column":54,"offset":1059},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1006},"end":{"line":39,"column":54,"offset":1059},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":919},"end":{"line":39,"column":54,"offset":1059},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We need to create:","position":{"start":{"line":41,"column":1,"offset":1061},"end":{"line":41,"column":19,"offset":1079},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1061},"end":{"line":41,"column":19,"offset":1079},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A service account for the dashboard","position":{"start":{"line":43,"column":4,"offset":1084},"end":{"line":43,"column":39,"offset":1119},"indent":[]}}],"position":{"start":{"line":43,"column":4,"offset":1084},"end":{"line":43,"column":39,"offset":1119},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1081},"end":{"line":43,"column":39,"offset":1119},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Several roles to grant privileges (RBAC) to the dashboard","position":{"start":{"line":44,"column":4,"offset":1123},"end":{"line":44,"column":61,"offset":1180},"indent":[]}}],"position":{"start":{"line":44,"column":4,"offset":1123},"end":{"line":44,"column":61,"offset":1180},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1120},"end":{"line":44,"column":61,"offset":1180},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A role binding to link the service account to the RBAC roles","position":{"start":{"line":45,"column":4,"offset":1184},"end":{"line":45,"column":64,"offset":1244},"indent":[]}}],"position":{"start":{"line":45,"column":4,"offset":1184},"end":{"line":45,"column":64,"offset":1244},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1181},"end":{"line":45,"column":64,"offset":1244},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1081},"end":{"line":45,"column":64,"offset":1244},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating the ServiceAccount and Roles","position":{"start":{"line":47,"column":4,"offset":1249},"end":{"line":47,"column":41,"offset":1286},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1246},"end":{"line":47,"column":41,"offset":1286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, we handle the RBAC by creating the ","position":{"start":{"line":49,"column":1,"offset":1288},"end":{"line":49,"column":43,"offset":1330},"indent":[]}},{"type":"inlineCode","value":"ServiceAccount","position":{"start":{"line":49,"column":43,"offset":1330},"end":{"line":49,"column":59,"offset":1346},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":49,"column":59,"offset":1346},"end":{"line":49,"column":64,"offset":1351},"indent":[]}},{"type":"inlineCode","value":"Role","position":{"start":{"line":49,"column":64,"offset":1351},"end":{"line":49,"column":70,"offset":1357},"indent":[]}},{"type":"text","value":" and then using a ","position":{"start":{"line":49,"column":70,"offset":1357},"end":{"line":49,"column":88,"offset":1375},"indent":[]}},{"type":"inlineCode","value":"RoleBinding","position":{"start":{"line":49,"column":88,"offset":1375},"end":{"line":49,"column":101,"offset":1388},"indent":[]}},{"type":"text","value":" to attach that Role to the Service Account.","position":{"start":{"line":49,"column":101,"offset":1388},"end":{"line":49,"column":145,"offset":1432},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1288},"end":{"line":49,"column":145,"offset":1432},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"dashboard-account-rab.yaml:","position":{"start":{"line":51,"column":1,"offset":1434},"end":{"line":51,"column":28,"offset":1461},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1434},"end":{"line":51,"column":28,"offset":1461},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nrules:\n  # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.\n  - apiGroups: ['']\n    resources: ['secrets']\n    verbs: ['create']\n    # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.\n  - apiGroups: ['']\n    resources: ['configmaps']\n    verbs: ['create']\n    # Allow Dashboard to get, update and delete Dashboard exclusive secrets.\n  - apiGroups: ['']\n    resources: ['secrets']\n    resourceNames:\n      ['kubernetes-dashboard-key-holder', 'kubernetes-dashboard-certs']\n    verbs: ['get', 'update', 'delete']\n    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.\n  - apiGroups: ['']\n    resources: ['configmaps']\n    resourceNames: ['kubernetes-dashboard-settings']\n    verbs: ['get', 'update']\n    # Allow Dashboard to get metrics from heapster.\n  - apiGroups: ['']\n    resources: ['services']\n    resourceNames: ['heapster']\n    verbs: ['proxy']\n  - apiGroups: ['']\n    resources: ['services/proxy']\n    resourceNames: ['heapster', 'http:heapster:', 'https:heapster:']\n    verbs: ['get']\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nroleRef:\n  # Reference role we created above\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: kubernetes-dashboard-minimal\nsubjects:\n  # Attach RoleBinding to Service Account we first created\n  - kind: ServiceAccount\n    name: kubernetes-dashboard\n    namespace: kube-system\n\n---\n","position":{"start":{"line":53,"column":1,"offset":1463},"end":{"line":121,"column":4,"offset":3381},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Deploying the dashboard","position":{"start":{"line":123,"column":4,"offset":3386},"end":{"line":123,"column":27,"offset":3409},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3383},"end":{"line":123,"column":27,"offset":3409},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1548219837/eks-course/Screen_Shot_2019-01-23_at_4.03.45_pm.png","alt":"Layout","position":{"start":{"line":125,"column":1,"offset":3411},"end":{"line":125,"column":127,"offset":3537},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3411},"end":{"line":125,"column":127,"offset":3537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There will be 3 resources created in the lecture:","position":{"start":{"line":127,"column":1,"offset":3539},"end":{"line":127,"column":50,"offset":3588},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3539},"end":{"line":127,"column":50,"offset":3588},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Service: fixed port, fixed url, user facing","position":{"start":{"line":129,"column":4,"offset":3593},"end":{"line":129,"column":47,"offset":3636},"indent":[]}}],"position":{"start":{"line":129,"column":4,"offset":3593},"end":{"line":129,"column":47,"offset":3636},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3590},"end":{"line":129,"column":47,"offset":3636},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deployment: Dashboard pod -- port 8443 (can live on any host)","position":{"start":{"line":130,"column":4,"offset":3640},"end":{"line":130,"column":65,"offset":3701},"indent":[]}}],"position":{"start":{"line":130,"column":4,"offset":3640},"end":{"line":130,"column":65,"offset":3701},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":3637},"end":{"line":130,"column":65,"offset":3701},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Volume: This will contain our secret certificates","position":{"start":{"line":131,"column":4,"offset":3705},"end":{"line":131,"column":53,"offset":3754},"indent":[]}}],"position":{"start":{"line":131,"column":4,"offset":3705},"end":{"line":131,"column":53,"offset":3754},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3702},"end":{"line":131,"column":53,"offset":3754},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3590},"end":{"line":131,"column":53,"offset":3754},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is all stored in the ","position":{"start":{"line":133,"column":1,"offset":3756},"end":{"line":133,"column":27,"offset":3782},"indent":[]}},{"type":"inlineCode","value":"deploy-dashboard.yml","position":{"start":{"line":133,"column":27,"offset":3782},"end":{"line":133,"column":49,"offset":3804},"indent":[]}},{"type":"text","value":" file:","position":{"start":{"line":133,"column":49,"offset":3804},"end":{"line":133,"column":55,"offset":3810},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3756},"end":{"line":133,"column":55,"offset":3810},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"# Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    # Using this to match easily\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  # Used for Service to target\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n        - name: kubernetes-dashboard\n          image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\n          # Used for Service to expose\n          ports:\n            - containerPort: 8443\n              protocol: TCP\n          args:\n            - --auto-generate-certificates\n            # Uncomment the following line to manually specify Kubernetes API server Host\n            # If not specified, Dashboard will attempt to auto discover the API server and connect\n            # to it. Uncomment only if the default does not work.\n            # - --apiserver-host=http://my-address:port\n          volumeMounts:\n            - name: kubernetes-dashboard-certs\n              mountPath: /certs\n              # Create on-disk volume to store exec logs\n            - mountPath: /tmp\n              name: tmp-volume\n          livenessProbe:\n            httpGet:\n              scheme: HTTPS\n              path: /\n              port: 8443\n            initialDelaySeconds: 30\n            timeoutSeconds: 30\n      volumes:\n        - name: kubernetes-dashboard-certs\n          secret:\n            secretName: kubernetes-dashboard-certs\n        - name: tmp-volume\n          emptyDir: {}\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  ports:\n    - port: 443\n      targetPort: 8443\n  selector:\n    k8s-app: kubernetes-dashboard","position":{"start":{"line":135,"column":1,"offset":3812},"end":{"line":238,"column":4,"offset":6837},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After we applying the yaml file, we can see what we've created using ","position":{"start":{"line":240,"column":1,"offset":6839},"end":{"line":240,"column":70,"offset":6908},"indent":[]}},{"type":"inlineCode","value":"kubectl get all --namespace kube-system --selector=k8s-app=kubernetes-dashboard","position":{"start":{"line":240,"column":70,"offset":6908},"end":{"line":240,"column":151,"offset":6989},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":240,"column":151,"offset":6989},"end":{"line":240,"column":152,"offset":6990},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":6839},"end":{"line":240,"column":152,"offset":6990},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can get even more granular with:","position":{"start":{"line":242,"column":1,"offset":6992},"end":{"line":242,"column":36,"offset":7027},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":6992},"end":{"line":242,"column":36,"offset":7027},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl get svc --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get pods --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get deployments --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get replicasets --namespace kube-system --selector=k8s-app=kubernetes-dashboard","position":{"start":{"line":244,"column":1,"offset":7029},"end":{"line":249,"column":4,"offset":7378},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Deploying the metrics add-on","position":{"start":{"line":251,"column":4,"offset":7383},"end":{"line":251,"column":32,"offset":7411},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":7380},"end":{"line":251,"column":32,"offset":7411},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221185/eks-course/Screen_Shot_2019-01-23_at_4.26.16_pm.png","alt":"Heapster Kubernetes resources","position":{"start":{"line":253,"column":1,"offset":7413},"end":{"line":253,"column":150,"offset":7562},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":7413},"end":{"line":253,"column":150,"offset":7562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We will deploy Heapster and that is made up of three Kubernetes resources: a service, deployment and service account.","position":{"start":{"line":255,"column":1,"offset":7564},"end":{"line":255,"column":118,"offset":7681},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":7564},"end":{"line":255,"column":118,"offset":7681},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221289/eks-course/Screen_Shot_2019-01-23_at_4.28.00_pm.png","alt":"InfluxDB resources","position":{"start":{"line":257,"column":1,"offset":7683},"end":{"line":257,"column":139,"offset":7821},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":7683},"end":{"line":257,"column":139,"offset":7821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We will also deploy InfluxDB to store its data. The Heapster deployment will interface with the InfluxDB service.","position":{"start":{"line":259,"column":1,"offset":7823},"end":{"line":259,"column":114,"offset":7936},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":7823},"end":{"line":259,"column":114,"offset":7936},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221371/eks-course/Screen_Shot_2019-01-23_at_4.29.21_pm.png","alt":"Full connection","position":{"start":{"line":261,"column":1,"offset":7938},"end":{"line":261,"column":136,"offset":8073},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":7938},"end":{"line":261,"column":136,"offset":8073},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deploying InfluxDB","position":{"start":{"line":263,"column":5,"offset":8079},"end":{"line":263,"column":23,"offset":8097},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":8075},"end":{"line":263,"column":23,"offset":8097},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: monitoring-influxdb\n  namespace: kube-system\nspec:\n  replicas: 1\n  template:\n    metadata:\n      # label k8s-app used for Service spec\n      labels:\n        task: monitoring\n        k8s-app: influxdb\n    spec:\n      containers:\n        - name: influxdb\n          image: k8s.gcr.io/heapster-influxdb-amd64:v1.5.2\n          volumeMounts:\n            - mountPath: /data\n              name: influxdb-storage\n      volumes:\n        - name: influxdb-storage\n          emptyDir: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    task: monitoring\n    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)\n    # If you are NOT using this as an addon, you should comment out this line.\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: monitoring-influxdb\n  name: monitoring-influxdb\n  namespace: kube-system\nspec:\n  ports:\n    - port: 8086\n      targetPort: 8086\n  # What Service should be linked to\n  selector:\n    k8s-app: influxdb","position":{"start":{"line":265,"column":1,"offset":8099},"end":{"line":308,"column":4,"offset":9173},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deploying Heapter","position":{"start":{"line":310,"column":5,"offset":9179},"end":{"line":310,"column":22,"offset":9196},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":9175},"end":{"line":310,"column":22,"offset":9196},"indent":[]}},{"type":"code","lang":"yml","meta":null,"value":"apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: heapster\n  namespace: kube-system\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        task: monitoring\n        k8s-app: heapster\n    spec:\n      serviceAccountName: heapster\n      containers:\n        - name: heapster\n          image: k8s.gcr.io/heapster-amd64:v1.5.4\n          imagePullPolicy: IfNotPresent\n          command:\n            - /heapster\n            - --source=kubernetes:https://kubernetes.default\n            - --sink=influxdb:http://monitoring-influxdb.kube-system.svc:8086\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    task: monitoring\n    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)\n    # If you are NOT using this as an addon, you should comment out this line.\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: Heapster\n  name: heapster\n  namespace: kube-system\nspec:\n  ports:\n    - port: 80\n      targetPort: 8082\n  selector:\n    k8s-app: heapster","position":{"start":{"line":312,"column":1,"offset":9198},"end":{"line":353,"column":4,"offset":10240},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deploying Heapster RBAC","position":{"start":{"line":355,"column":5,"offset":10246},"end":{"line":355,"column":28,"offset":10269},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":10242},"end":{"line":355,"column":28,"offset":10269},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: heapster\n  namespace: kube-system\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: heapster\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:heapster\nsubjects:\n  - kind: ServiceAccount\n    name: heapster\n    namespace: kube-system","position":{"start":{"line":357,"column":1,"offset":10271},"end":{"line":376,"column":4,"offset":10644},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Deploying Heapster and Influx.db","position":{"start":{"line":378,"column":4,"offset":10649},"end":{"line":378,"column":36,"offset":10681},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":10646},"end":{"line":378,"column":36,"offset":10681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Applying these deployments to the cluster:","position":{"start":{"line":380,"column":1,"offset":10683},"end":{"line":380,"column":43,"offset":10725},"indent":[]}}],"position":{"start":{"line":380,"column":1,"offset":10683},"end":{"line":380,"column":43,"offset":10725},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl apply -f deploy-heapster.yml\nkubectl apply -f deploy-influxdb.yml\nkubectl apply -f deploy-heapster-rbac.yml","position":{"start":{"line":382,"column":1,"offset":10727},"end":{"line":386,"column":4,"offset":10855},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using a selector see what we built:","position":{"start":{"line":388,"column":1,"offset":10857},"end":{"line":388,"column":36,"offset":10892},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":10857},"end":{"line":388,"column":36,"offset":10892},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl get all --namespace kube-system --selector=task=monitoring","position":{"start":{"line":390,"column":1,"offset":10894},"end":{"line":392,"column":4,"offset":10973},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applying the above should return something like:","position":{"start":{"line":394,"column":1,"offset":10975},"end":{"line":394,"column":49,"offset":11023},"indent":[]}}],"position":{"start":{"line":394,"column":1,"offset":10975},"end":{"line":394,"column":49,"offset":11023},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"NAME                                       READY   STATUS    RESTARTS   AGE\npod/heapster-84c9bc48c4-lph2v              1/1     Running   0          1m\npod/monitoring-influxdb-848b9b66f6-7tkcv   1/1     Running   0          2m\n\nNAME                          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nservice/heapster              ClusterIP   [REDACTED]      <none>        80/TCP     3m\nservice/monitoring-influxdb   ClusterIP   [REDACTED]      <none>        8086/TCP   2m\n\nNAME                                  DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/heapster              1         1         1            1           3m\ndeployment.apps/monitoring-influxdb   1         1         1            1           2m\n\nNAME                                             DESIRED   CURRENT   READY   AGE\nreplicaset.apps/heapster-84c9bc48c4              1         1         1       3m\nreplicaset.apps/monitoring-influxdb-848b9b66f6   1         1         1       2m","position":{"start":{"line":396,"column":1,"offset":11025},"end":{"line":412,"column":4,"offset":12026},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that Kubernetes ","position":{"start":{"line":414,"column":1,"offset":12028},"end":{"line":414,"column":22,"offset":12049},"indent":[]}},{"type":"inlineCode","value":"Deployments","position":{"start":{"line":414,"column":22,"offset":12049},"end":{"line":414,"column":35,"offset":12062},"indent":[]}},{"type":"text","value":" provides declarative updates for ","position":{"start":{"line":414,"column":35,"offset":12062},"end":{"line":414,"column":69,"offset":12096},"indent":[]}},{"type":"inlineCode","value":"Pods","position":{"start":{"line":414,"column":69,"offset":12096},"end":{"line":414,"column":75,"offset":12102},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":414,"column":75,"offset":12102},"end":{"line":414,"column":80,"offset":12107},"indent":[]}},{"type":"inlineCode","value":"ReplicaSets","position":{"start":{"line":414,"column":80,"offset":12107},"end":{"line":414,"column":93,"offset":12120},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":414,"column":93,"offset":12120},"end":{"line":414,"column":94,"offset":12121},"indent":[]}}],"position":{"start":{"line":414,"column":1,"offset":12028},"end":{"line":414,"column":94,"offset":12121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See ","position":{"start":{"line":416,"column":1,"offset":12123},"end":{"line":416,"column":5,"offset":12127},"indent":[]}},{"type":"inlineCode","value":"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/","position":{"start":{"line":416,"column":5,"offset":12127},"end":{"line":416,"column":76,"offset":12198},"indent":[]}},{"type":"text","value":" for more info.","position":{"start":{"line":416,"column":76,"offset":12198},"end":{"line":416,"column":91,"offset":12213},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":12123},"end":{"line":416,"column":91,"offset":12213},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating an Admin Account to use the dashboard","position":{"start":{"line":418,"column":4,"offset":12218},"end":{"line":418,"column":50,"offset":12264},"indent":[]}}],"position":{"start":{"line":418,"column":1,"offset":12215},"end":{"line":418,"column":50,"offset":12264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using YAML, we'll create:","position":{"start":{"line":420,"column":1,"offset":12266},"end":{"line":420,"column":26,"offset":12291},"indent":[]}}],"position":{"start":{"line":420,"column":1,"offset":12266},"end":{"line":420,"column":26,"offset":12291},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cluster admin account","position":{"start":{"line":422,"column":4,"offset":12296},"end":{"line":422,"column":25,"offset":12317},"indent":[]}}],"position":{"start":{"line":422,"column":4,"offset":12296},"end":{"line":422,"column":25,"offset":12317},"indent":[]}}],"position":{"start":{"line":422,"column":1,"offset":12293},"end":{"line":422,"column":25,"offset":12317},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Role binding","position":{"start":{"line":423,"column":4,"offset":12321},"end":{"line":423,"column":16,"offset":12333},"indent":[]}}],"position":{"start":{"line":423,"column":4,"offset":12321},"end":{"line":423,"column":16,"offset":12333},"indent":[]}}],"position":{"start":{"line":423,"column":1,"offset":12318},"end":{"line":423,"column":16,"offset":12333},"indent":[]}}],"position":{"start":{"line":422,"column":1,"offset":12293},"end":{"line":423,"column":16,"offset":12333},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Then we can start the ","position":{"start":{"line":425,"column":1,"offset":12335},"end":{"line":425,"column":23,"offset":12357},"indent":[]}},{"type":"inlineCode","value":"kubectl proxy","position":{"start":{"line":425,"column":23,"offset":12357},"end":{"line":425,"column":38,"offset":12372},"indent":[]}},{"type":"text","value":" to authenticate the K8s dashboard and explore the dashboard.","position":{"start":{"line":425,"column":38,"offset":12372},"end":{"line":425,"column":99,"offset":12433},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":12335},"end":{"line":425,"column":99,"offset":12433},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating the admin Service Account","position":{"start":{"line":427,"column":4,"offset":12438},"end":{"line":427,"column":38,"offset":12472},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":12435},"end":{"line":427,"column":38,"offset":12472},"indent":[]}},{"type":"code","lang":"yml","meta":null,"value":"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: eks-admin\n  namespace: kube-system\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: eks-admin\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: eks-admin\n    namespace: kube-system","position":{"start":{"line":429,"column":1,"offset":12474},"end":{"line":449,"column":4,"offset":12848},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Run ","position":{"start":{"line":451,"column":1,"offset":12850},"end":{"line":451,"column":5,"offset":12854},"indent":[]}},{"type":"inlineCode","value":"kubectl apply -f admin-service-account.yml","position":{"start":{"line":451,"column":5,"offset":12854},"end":{"line":451,"column":49,"offset":12898},"indent":[]}},{"type":"text","value":" to apply.","position":{"start":{"line":451,"column":49,"offset":12898},"end":{"line":451,"column":59,"offset":12908},"indent":[]}}],"position":{"start":{"line":451,"column":1,"offset":12850},"end":{"line":451,"column":59,"offset":12908},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# Returned\nserviceaccount/eks-admin created\nclusterrolebinding.rbac.authorization.k8s.io/eks-admin created","position":{"start":{"line":453,"column":1,"offset":12910},"end":{"line":457,"column":4,"offset":13029},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Kubectl proxy","position":{"start":{"line":459,"column":4,"offset":13034},"end":{"line":459,"column":17,"offset":13047},"indent":[]}}],"position":{"start":{"line":459,"column":1,"offset":13031},"end":{"line":459,"column":17,"offset":13047},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now we should be able to run the proxy to see the dashboard! Ensure if you are port forwarding further if you need to see it on a particular host from a VM or docker image.","position":{"start":{"line":461,"column":1,"offset":13049},"end":{"line":461,"column":173,"offset":13221},"indent":[]}}],"position":{"start":{"line":461,"column":1,"offset":13049},"end":{"line":461,"column":173,"offset":13221},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# This is to forward from Docker container to host\nkubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='.*'\n\n# Starting to serve on 127.0.0.1:8001","position":{"start":{"line":463,"column":1,"offset":13223},"end":{"line":468,"column":4,"offset":13391},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now head to a browser at ","position":{"start":{"line":470,"column":1,"offset":13393},"end":{"line":470,"column":26,"offset":13418},"indent":[]}},{"type":"inlineCode","value":"http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login","position":{"start":{"line":470,"column":26,"offset":13418},"end":{"line":470,"column":131,"offset":13523},"indent":[]}},{"type":"text","value":" for login.","position":{"start":{"line":470,"column":131,"offset":13523},"end":{"line":470,"column":142,"offset":13534},"indent":[]}}],"position":{"start":{"line":470,"column":1,"offset":13393},"end":{"line":470,"column":142,"offset":13534},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To login with the token, we need the following:","position":{"start":{"line":472,"column":1,"offset":13536},"end":{"line":472,"column":48,"offset":13583},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":13536},"end":{"line":472,"column":48,"offset":13583},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-course-admin | awk '{print $1}')","position":{"start":{"line":474,"column":1,"offset":13585},"end":{"line":476,"column":4,"offset":13716},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There is some more info here at ","position":{"start":{"line":478,"column":1,"offset":13718},"end":{"line":478,"column":33,"offset":13750},"indent":[]}},{"type":"inlineCode","value":"https://docs.aws.amazon.com/eks/latest/userguide/dashboard-tutorial.html","position":{"start":{"line":478,"column":33,"offset":13750},"end":{"line":478,"column":107,"offset":13824},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":478,"column":107,"offset":13824},"end":{"line":478,"column":108,"offset":13825},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":13718},"end":{"line":478,"column":108,"offset":13825},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Chaos testing","position":{"start":{"line":480,"column":4,"offset":13830},"end":{"line":480,"column":17,"offset":13843},"indent":[]}}],"position":{"start":{"line":480,"column":1,"offset":13827},"end":{"line":480,"column":17,"offset":13843},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Simulating a failure of the frontend pods can be done using ","position":{"start":{"line":482,"column":3,"offset":13847},"end":{"line":482,"column":63,"offset":13907},"indent":[]}},{"type":"inlineCode","value":"kubectl delete pod <POD>","position":{"start":{"line":482,"column":63,"offset":13907},"end":{"line":482,"column":89,"offset":13933},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":482,"column":89,"offset":13933},"end":{"line":482,"column":90,"offset":13934},"indent":[]}}],"position":{"start":{"line":482,"column":3,"offset":13847},"end":{"line":482,"column":90,"offset":13934},"indent":[]}}],"position":{"start":{"line":482,"column":1,"offset":13845},"end":{"line":482,"column":90,"offset":13934},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Simulating a failure of the nodes is to just stop one of the three EC2 instances (can be done from AWS console easily). If a node goes down, the rest of the pods are distributed amongst the other nodes. If nodes are considered for autoscaling, then the EC2 instance will against restart another node.","position":{"start":{"line":483,"column":3,"offset":13937},"end":{"line":483,"column":303,"offset":14237},"indent":[]}}],"position":{"start":{"line":483,"column":3,"offset":13937},"end":{"line":483,"column":303,"offset":14237},"indent":[]}}],"position":{"start":{"line":483,"column":1,"offset":13935},"end":{"line":483,"column":303,"offset":14237},"indent":[]}}],"position":{"start":{"line":482,"column":1,"offset":13845},"end":{"line":483,"column":303,"offset":14237},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Note, there is no automatic redeployment to the other nodes when a node becomes rescheduled. Killing some pods will of course help with rescheduling and distribution.","position":{"start":{"line":485,"column":1,"offset":14239},"end":{"line":485,"column":167,"offset":14405},"indent":[]}}],"position":{"start":{"line":485,"column":1,"offset":14239},"end":{"line":485,"column":167,"offset":14405},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":488,"column":1,"offset":14408},"end":{"line":488,"column":31,"offset":14438},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":488,"column":31,"offset":14438}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"kubernetes-dashboard\"\n    }}>{`Kubernetes Dashboard`}</h1>\n    <p>{`This belongs to the Kubernetes project and gives you a UI overview of what is going on.`}</p>\n    <p>{`It displays info about:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Workload (Deployments, Pods, ReplicationSets)`}</li>\n      <li parentName=\"ul\">{`Namespaces`}</li>\n      <li parentName=\"ul\">{`Services`}</li>\n      <li parentName=\"ul\">{`Nodes & Storage`}</li>\n      <li parentName=\"ul\">{`Usage Metrics (Heapster monitoring required)`}</li>\n    </ul>\n    <p>{`The dashboard can also execute commands based on propr RBAC permissions.`}</p>\n    <p>{`Security:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`HTTPS`}</li>\n      <li parentName=\"ul\">{`Login via Bearer token`}</li>\n      <li parentName=\"ul\">{`RBAC to define fine-grain access to UI components`}</li>\n    </ul>\n    <p>{`More info can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/dashboard\"\n      }}>{`https://github.com/kubernetes/dashboard`}</a>{`.`}</p>\n    <p>{`What the setup for us will look like when touching base with the dashboard:`}</p>\n    <p><img alt=\"Dashboard access layout\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548218031/eks-course/Screen_Shot_2019-01-23_at_3.33.27_pm.png\" /></p>\n    <h2 {...{\n      \"id\": \"steps-to-take\"\n    }}>{`Steps to take`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Create service account and RBAC rules`}</li>\n      <li parentName=\"ol\">{`Deploy dashboard`}</li>\n      <li parentName=\"ol\">{`Deploy metrics Add-Ons`}</li>\n      <li parentName=\"ol\">{`Create cluster admin account and explore dashboard`}</li>\n    </ol>\n    <p>{`We need to create:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A service account for the dashboard`}</li>\n      <li parentName=\"ol\">{`Several roles to grant privileges (RBAC) to the dashboard`}</li>\n      <li parentName=\"ol\">{`A role binding to link the service account to the RBAC roles`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"creating-the-serviceaccount-and-roles\"\n    }}>{`Creating the ServiceAccount and Roles`}</h2>\n    <p>{`First, we handle the RBAC by creating the `}<inlineCode parentName=\"p\">{`ServiceAccount`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{` and then using a `}<inlineCode parentName=\"p\">{`RoleBinding`}</inlineCode>{` to attach that Role to the Service Account.`}</p>\n    <p>{`dashboard-account-rab.yaml:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nrules:\n  # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.\n  - apiGroups: ['']\n    resources: ['secrets']\n    verbs: ['create']\n    # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.\n  - apiGroups: ['']\n    resources: ['configmaps']\n    verbs: ['create']\n    # Allow Dashboard to get, update and delete Dashboard exclusive secrets.\n  - apiGroups: ['']\n    resources: ['secrets']\n    resourceNames:\n      ['kubernetes-dashboard-key-holder', 'kubernetes-dashboard-certs']\n    verbs: ['get', 'update', 'delete']\n    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.\n  - apiGroups: ['']\n    resources: ['configmaps']\n    resourceNames: ['kubernetes-dashboard-settings']\n    verbs: ['get', 'update']\n    # Allow Dashboard to get metrics from heapster.\n  - apiGroups: ['']\n    resources: ['services']\n    resourceNames: ['heapster']\n    verbs: ['proxy']\n  - apiGroups: ['']\n    resources: ['services/proxy']\n    resourceNames: ['heapster', 'http:heapster:', 'https:heapster:']\n    verbs: ['get']\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nroleRef:\n  # Reference role we created above\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: kubernetes-dashboard-minimal\nsubjects:\n  # Attach RoleBinding to Service Account we first created\n  - kind: ServiceAccount\n    name: kubernetes-dashboard\n    namespace: kube-system\n\n---\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploying-the-dashboard\"\n    }}>{`Deploying the dashboard`}</h2>\n    <p><img alt=\"Layout\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548219837/eks-course/Screen_Shot_2019-01-23_at_4.03.45_pm.png\" /></p>\n    <p>{`There will be 3 resources created in the lecture:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Service: fixed port, fixed url, user facing`}</li>\n      <li parentName=\"ol\">{`Deployment: Dashboard pod -- port 8443 (can live on any host)`}</li>\n      <li parentName=\"ol\">{`Volume: This will contain our secret certificates`}</li>\n    </ol>\n    <p>{`This is all stored in the `}<inlineCode parentName=\"p\">{`deploy-dashboard.yml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    # Using this to match easily\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  # Used for Service to target\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n        - name: kubernetes-dashboard\n          image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\n          # Used for Service to expose\n          ports:\n            - containerPort: 8443\n              protocol: TCP\n          args:\n            - --auto-generate-certificates\n            # Uncomment the following line to manually specify Kubernetes API server Host\n            # If not specified, Dashboard will attempt to auto discover the API server and connect\n            # to it. Uncomment only if the default does not work.\n            # - --apiserver-host=http://my-address:port\n          volumeMounts:\n            - name: kubernetes-dashboard-certs\n              mountPath: /certs\n              # Create on-disk volume to store exec logs\n            - mountPath: /tmp\n              name: tmp-volume\n          livenessProbe:\n            httpGet:\n              scheme: HTTPS\n              path: /\n              port: 8443\n            initialDelaySeconds: 30\n            timeoutSeconds: 30\n      volumes:\n        - name: kubernetes-dashboard-certs\n          secret:\n            secretName: kubernetes-dashboard-certs\n        - name: tmp-volume\n          emptyDir: {}\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  ports:\n    - port: 443\n      targetPort: 8443\n  selector:\n    k8s-app: kubernetes-dashboard\n`}</code></pre>\n    <p>{`After we applying the yaml file, we can see what we've created using `}<inlineCode parentName=\"p\">{`kubectl get all --namespace kube-system --selector=k8s-app=kubernetes-dashboard`}</inlineCode>{`.`}</p>\n    <p>{`We can get even more granular with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get svc --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get pods --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get deployments --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get replicasets --namespace kube-system --selector=k8s-app=kubernetes-dashboard\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploying-the-metrics-add-on\"\n    }}>{`Deploying the metrics add-on`}</h2>\n    <p><img alt=\"Heapster Kubernetes resources\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221185/eks-course/Screen_Shot_2019-01-23_at_4.26.16_pm.png\" /></p>\n    <p>{`We will deploy Heapster and that is made up of three Kubernetes resources: a service, deployment and service account.`}</p>\n    <p><img alt=\"InfluxDB resources\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221289/eks-course/Screen_Shot_2019-01-23_at_4.28.00_pm.png\" /></p>\n    <p>{`We will also deploy InfluxDB to store its data. The Heapster deployment will interface with the InfluxDB service.`}</p>\n    <p><img alt=\"Full connection\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221371/eks-course/Screen_Shot_2019-01-23_at_4.29.21_pm.png\" /></p>\n    <h3 {...{\n      \"id\": \"deploying-influxdb\"\n    }}>{`Deploying InfluxDB`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: monitoring-influxdb\n  namespace: kube-system\nspec:\n  replicas: 1\n  template:\n    metadata:\n      # label k8s-app used for Service spec\n      labels:\n        task: monitoring\n        k8s-app: influxdb\n    spec:\n      containers:\n        - name: influxdb\n          image: k8s.gcr.io/heapster-influxdb-amd64:v1.5.2\n          volumeMounts:\n            - mountPath: /data\n              name: influxdb-storage\n      volumes:\n        - name: influxdb-storage\n          emptyDir: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    task: monitoring\n    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)\n    # If you are NOT using this as an addon, you should comment out this line.\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: monitoring-influxdb\n  name: monitoring-influxdb\n  namespace: kube-system\nspec:\n  ports:\n    - port: 8086\n      targetPort: 8086\n  # What Service should be linked to\n  selector:\n    k8s-app: influxdb\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-heapter\"\n    }}>{`Deploying Heapter`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: heapster\n  namespace: kube-system\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        task: monitoring\n        k8s-app: heapster\n    spec:\n      serviceAccountName: heapster\n      containers:\n        - name: heapster\n          image: k8s.gcr.io/heapster-amd64:v1.5.4\n          imagePullPolicy: IfNotPresent\n          command:\n            - /heapster\n            - --source=kubernetes:https://kubernetes.default\n            - --sink=influxdb:http://monitoring-influxdb.kube-system.svc:8086\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    task: monitoring\n    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)\n    # If you are NOT using this as an addon, you should comment out this line.\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: Heapster\n  name: heapster\n  namespace: kube-system\nspec:\n  ports:\n    - port: 80\n      targetPort: 8082\n  selector:\n    k8s-app: heapster\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-heapster-rbac\"\n    }}>{`Deploying Heapster RBAC`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: heapster\n  namespace: kube-system\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: heapster\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:heapster\nsubjects:\n  - kind: ServiceAccount\n    name: heapster\n    namespace: kube-system\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploying-heapster-and-influxdb\"\n    }}>{`Deploying Heapster and Influx.db`}</h2>\n    <p>{`Applying these deployments to the cluster:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl apply -f deploy-heapster.yml\nkubectl apply -f deploy-influxdb.yml\nkubectl apply -f deploy-heapster-rbac.yml\n`}</code></pre>\n    <p>{`Using a selector see what we built:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get all --namespace kube-system --selector=task=monitoring\n`}</code></pre>\n    <p>{`Applying the above should return something like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`NAME                                       READY   STATUS    RESTARTS   AGE\npod/heapster-84c9bc48c4-lph2v              1/1     Running   0          1m\npod/monitoring-influxdb-848b9b66f6-7tkcv   1/1     Running   0          2m\n\nNAME                          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nservice/heapster              ClusterIP   [REDACTED]      <none>        80/TCP     3m\nservice/monitoring-influxdb   ClusterIP   [REDACTED]      <none>        8086/TCP   2m\n\nNAME                                  DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/heapster              1         1         1            1           3m\ndeployment.apps/monitoring-influxdb   1         1         1            1           2m\n\nNAME                                             DESIRED   CURRENT   READY   AGE\nreplicaset.apps/heapster-84c9bc48c4              1         1         1       3m\nreplicaset.apps/monitoring-influxdb-848b9b66f6   1         1         1       2m\n`}</code></pre>\n    <p>{`Note that Kubernetes `}<inlineCode parentName=\"p\">{`Deployments`}</inlineCode>{` provides declarative updates for `}<inlineCode parentName=\"p\">{`Pods`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ReplicaSets`}</inlineCode>{`.`}</p>\n    <p>{`See `}<inlineCode parentName=\"p\">{`https://kubernetes.io/docs/concepts/workloads/controllers/deployment/`}</inlineCode>{` for more info.`}</p>\n    <h2 {...{\n      \"id\": \"creating-an-admin-account-to-use-the-dashboard\"\n    }}>{`Creating an Admin Account to use the dashboard`}</h2>\n    <p>{`Using YAML, we'll create:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`cluster admin account`}</li>\n      <li parentName=\"ol\">{`Role binding`}</li>\n    </ol>\n    <p>{`Then we can start the `}<inlineCode parentName=\"p\">{`kubectl proxy`}</inlineCode>{` to authenticate the K8s dashboard and explore the dashboard.`}</p>\n    <h2 {...{\n      \"id\": \"creating-the-admin-service-account\"\n    }}>{`Creating the admin Service Account`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: eks-admin\n  namespace: kube-system\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: eks-admin\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: eks-admin\n    namespace: kube-system\n`}</code></pre>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`kubectl apply -f admin-service-account.yml`}</inlineCode>{` to apply.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Returned\nserviceaccount/eks-admin created\nclusterrolebinding.rbac.authorization.k8s.io/eks-admin created\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"kubectl-proxy\"\n    }}>{`Kubectl proxy`}</h2>\n    <p>{`Now we should be able to run the proxy to see the dashboard! Ensure if you are port forwarding further if you need to see it on a particular host from a VM or docker image.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# This is to forward from Docker container to host\nkubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='.*'\n\n# Starting to serve on 127.0.0.1:8001\n`}</code></pre>\n    <p>{`Now head to a browser at `}<inlineCode parentName=\"p\">{`http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login`}</inlineCode>{` for login.`}</p>\n    <p>{`To login with the token, we need the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-course-admin | awk '{print $1}')\n`}</code></pre>\n    <p>{`There is some more info here at `}<inlineCode parentName=\"p\">{`https://docs.aws.amazon.com/eks/latest/userguide/dashboard-tutorial.html`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"chaos-testing\"\n    }}>{`Chaos testing`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Simulating a failure of the frontend pods can be done using `}<inlineCode parentName=\"li\">{`kubectl delete pod <POD>`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Simulating a failure of the nodes is to just stop one of the three EC2 instances (can be done from AWS console easily). If a node goes down, the rest of the pods are distributed amongst the other nodes. If nodes are considered for autoscaling, then the EC2 instance will against restart another node.`}</li>\n    </ul>\n    <p>{`Note, there is no automatic redeployment to the other nodes when a node becomes rescheduled. Killing some pods will of course help with rescheduling and distribution.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}