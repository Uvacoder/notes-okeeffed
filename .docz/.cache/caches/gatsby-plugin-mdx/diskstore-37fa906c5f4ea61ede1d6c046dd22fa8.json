{"expireTime":9007200852878404000,"key":"gatsby-plugin-mdx-entire-payload-078b553e8be2922d965cc5dcbd2e82ab-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"eksctl","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":9,"offset":175},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":9,"offset":175},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://eksctl.io/","children":[{"type":"text","value":"https://eksctl.io/","position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":10,"column":19,"offset":195},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":10,"column":19,"offset":195},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":10,"column":19,"offset":195},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":12,"column":4,"offset":200},"end":{"line":12,"column":9,"offset":205},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":12,"column":9,"offset":205},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Clusters","position":{"start":{"line":14,"column":5,"offset":211},"end":{"line":14,"column":13,"offset":219},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":207},"end":{"line":14,"column":13,"offset":219},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Action","position":{"start":{"line":16,"column":3,"offset":223},"end":{"line":16,"column":9,"offset":229},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":223},"end":{"line":16,"column":19,"offset":239},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Command","position":{"start":{"line":16,"column":22,"offset":242},"end":{"line":16,"column":29,"offset":249},"indent":[]}}],"position":{"start":{"line":16,"column":22,"offset":242},"end":{"line":16,"column":123,"offset":343},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":221},"end":{"line":16,"column":125,"offset":345},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Get cluster","position":{"start":{"line":18,"column":3,"offset":473},"end":{"line":18,"column":14,"offset":484},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":473},"end":{"line":18,"column":19,"offset":489},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl get cluster [--name=<name>] [--region=<region>]","position":{"start":{"line":18,"column":22,"offset":492},"end":{"line":18,"column":78,"offset":548},"indent":[]}}],"position":{"start":{"line":18,"column":22,"offset":492},"end":{"line":18,"column":123,"offset":593},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":471},"end":{"line":18,"column":125,"offset":595},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Create cluster","position":{"start":{"line":19,"column":3,"offset":598},"end":{"line":19,"column":17,"offset":612},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":598},"end":{"line":19,"column":19,"offset":614},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl create cluster --name=cluster-1 --nodes=4","position":{"start":{"line":19,"column":22,"offset":617},"end":{"line":19,"column":72,"offset":667},"indent":[]}}],"position":{"start":{"line":19,"column":22,"offset":617},"end":{"line":19,"column":123,"offset":718},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":596},"end":{"line":19,"column":125,"offset":720},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Write kubeconfig","position":{"start":{"line":20,"column":3,"offset":723},"end":{"line":20,"column":19,"offset":739},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":723},"end":{"line":20,"column":19,"offset":739},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl utils write-kubeconfig --name=<name> [--kubeconfig=<path>] [--set-kubeconfig-context=<bool>]","position":{"start":{"line":20,"column":22,"offset":742},"end":{"line":20,"column":123,"offset":843},"indent":[]}}],"position":{"start":{"line":20,"column":22,"offset":742},"end":{"line":20,"column":123,"offset":843},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":721},"end":{"line":20,"column":125,"offset":845},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Delete cluster","position":{"start":{"line":21,"column":3,"offset":848},"end":{"line":21,"column":17,"offset":862},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":848},"end":{"line":21,"column":19,"offset":864},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl delete cluster --name=<name> [--region=<region>]","position":{"start":{"line":21,"column":22,"offset":867},"end":{"line":21,"column":79,"offset":924},"indent":[]}}],"position":{"start":{"line":21,"column":22,"offset":867},"end":{"line":21,"column":123,"offset":968},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":846},"end":{"line":21,"column":125,"offset":970},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":221},"end":{"line":21,"column":125,"offset":970},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"eksctl create cluster --name=cluster-3 --nodes=4 --auto-kubeconfig","position":{"start":{"line":24,"column":1,"offset":973},"end":{"line":24,"column":67,"offset":1039},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":973},"end":{"line":24,"column":67,"offset":1039},"indent":[]}},{"type":"table","align":[null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Action","position":{"start":{"line":26,"column":3,"offset":1043},"end":{"line":26,"column":9,"offset":1049},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":1043},"end":{"line":26,"column":28,"offset":1068},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Flag","position":{"start":{"line":26,"column":31,"offset":1071},"end":{"line":26,"column":35,"offset":1075},"indent":[]}}],"position":{"start":{"line":26,"column":31,"offset":1071},"end":{"line":26,"column":55,"offset":1095},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Example","position":{"start":{"line":26,"column":58,"offset":1098},"end":{"line":26,"column":65,"offset":1105},"indent":[]}}],"position":{"start":{"line":26,"column":58,"offset":1098},"end":{"line":26,"column":107,"offset":1147},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1041},"end":{"line":26,"column":109,"offset":1149},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Name the cluster","position":{"start":{"line":28,"column":3,"offset":1261},"end":{"line":28,"column":19,"offset":1277},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":1261},"end":{"line":28,"column":28,"offset":1286},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"--name","position":{"start":{"line":28,"column":31,"offset":1289},"end":{"line":28,"column":37,"offset":1295},"indent":[]}}],"position":{"start":{"line":28,"column":31,"offset":1289},"end":{"line":28,"column":55,"offset":1313},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"eksctl create cluster --name=cluster-3","position":{"start":{"line":28,"column":58,"offset":1316},"end":{"line":28,"column":96,"offset":1354},"indent":[]}}],"position":{"start":{"line":28,"column":58,"offset":1316},"end":{"line":28,"column":107,"offset":1365},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1259},"end":{"line":28,"column":109,"offset":1367},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Set default node count","position":{"start":{"line":29,"column":3,"offset":1370},"end":{"line":29,"column":25,"offset":1392},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":1370},"end":{"line":29,"column":28,"offset":1395},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"--nodes","position":{"start":{"line":29,"column":31,"offset":1398},"end":{"line":29,"column":38,"offset":1405},"indent":[]}}],"position":{"start":{"line":29,"column":31,"offset":1398},"end":{"line":29,"column":55,"offset":1422},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"eksctl create cluster --nodes=4","position":{"start":{"line":29,"column":58,"offset":1425},"end":{"line":29,"column":89,"offset":1456},"indent":[]}}],"position":{"start":{"line":29,"column":58,"offset":1425},"end":{"line":29,"column":107,"offset":1474},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1368},"end":{"line":29,"column":109,"offset":1476},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Auto configure kubectl","position":{"start":{"line":30,"column":3,"offset":1479},"end":{"line":30,"column":25,"offset":1501},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":1479},"end":{"line":30,"column":28,"offset":1504},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"--auto-kubeconfig","position":{"start":{"line":30,"column":31,"offset":1507},"end":{"line":30,"column":48,"offset":1524},"indent":[]}}],"position":{"start":{"line":30,"column":31,"offset":1507},"end":{"line":30,"column":55,"offset":1531},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"eksctl create cluster --auto-kubeconfig","position":{"start":{"line":30,"column":58,"offset":1534},"end":{"line":30,"column":97,"offset":1573},"indent":[]}}],"position":{"start":{"line":30,"column":58,"offset":1534},"end":{"line":30,"column":107,"offset":1583},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1477},"end":{"line":30,"column":109,"offset":1585},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Use an auth scaling group","position":{"start":{"line":31,"column":3,"offset":1588},"end":{"line":31,"column":28,"offset":1613},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1588},"end":{"line":31,"column":28,"offset":1613},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"--nodes-min, --nodes-max","position":{"start":{"line":31,"column":31,"offset":1616},"end":{"line":31,"column":55,"offset":1640},"indent":[]}}],"position":{"start":{"line":31,"column":31,"offset":1616},"end":{"line":31,"column":55,"offset":1640},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"eksctl create cluster --nodes-min=3 --nodes-max=5","position":{"start":{"line":31,"column":58,"offset":1643},"end":{"line":31,"column":107,"offset":1692},"indent":[]}}],"position":{"start":{"line":31,"column":58,"offset":1643},"end":{"line":31,"column":107,"offset":1692},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1586},"end":{"line":31,"column":109,"offset":1694},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1041},"end":{"line":31,"column":109,"offset":1694},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Node Groups","position":{"start":{"line":33,"column":5,"offset":1700},"end":{"line":33,"column":16,"offset":1711},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1696},"end":{"line":33,"column":16,"offset":1711},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Action","position":{"start":{"line":35,"column":3,"offset":1715},"end":{"line":35,"column":9,"offset":1721},"indent":[]}}],"position":{"start":{"line":35,"column":3,"offset":1715},"end":{"line":35,"column":21,"offset":1733},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Command","position":{"start":{"line":35,"column":24,"offset":1736},"end":{"line":35,"column":31,"offset":1743},"indent":[]}}],"position":{"start":{"line":35,"column":24,"offset":1736},"end":{"line":35,"column":119,"offset":1831},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1713},"end":{"line":35,"column":121,"offset":1833},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Get nodegroup","position":{"start":{"line":37,"column":3,"offset":1957},"end":{"line":37,"column":16,"offset":1970},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":1957},"end":{"line":37,"column":21,"offset":1975},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl get nodegroup --cluster=<clusterName> [--name=<nodegroupName>]","position":{"start":{"line":37,"column":24,"offset":1978},"end":{"line":37,"column":95,"offset":2049},"indent":[]}}],"position":{"start":{"line":37,"column":24,"offset":1978},"end":{"line":37,"column":119,"offset":2073},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1955},"end":{"line":37,"column":121,"offset":2075},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Create nodegroup","position":{"start":{"line":38,"column":3,"offset":2078},"end":{"line":38,"column":19,"offset":2094},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":2078},"end":{"line":38,"column":21,"offset":2096},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl create nodegroup --cluster=<clusterName> [--name=<nodegroupName>]","position":{"start":{"line":38,"column":24,"offset":2099},"end":{"line":38,"column":98,"offset":2173},"indent":[]}}],"position":{"start":{"line":38,"column":24,"offset":2099},"end":{"line":38,"column":119,"offset":2194},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2076},"end":{"line":38,"column":121,"offset":2196},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Scale nodegroup","position":{"start":{"line":39,"column":3,"offset":2199},"end":{"line":39,"column":18,"offset":2214},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":2199},"end":{"line":39,"column":21,"offset":2217},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl scale nodegroup --cluster=cluster-1 --nodes=5 ng-a345f4e1","position":{"start":{"line":39,"column":24,"offset":2220},"end":{"line":39,"column":90,"offset":2286},"indent":[]}}],"position":{"start":{"line":39,"column":24,"offset":2220},"end":{"line":39,"column":119,"offset":2315},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2197},"end":{"line":39,"column":121,"offset":2317},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Delete nodegroup","position":{"start":{"line":40,"column":3,"offset":2320},"end":{"line":40,"column":19,"offset":2336},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":2320},"end":{"line":40,"column":21,"offset":2338},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"eksctl delete nodegroup --cluster=<clusterName> --nodes=<desiredCount> --name=<nodegroupName>","position":{"start":{"line":40,"column":24,"offset":2341},"end":{"line":40,"column":119,"offset":2436},"indent":[]}}],"position":{"start":{"line":40,"column":24,"offset":2341},"end":{"line":40,"column":119,"offset":2436},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2318},"end":{"line":40,"column":121,"offset":2438},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"SSH Access Flag","position":{"start":{"line":41,"column":3,"offset":2441},"end":{"line":41,"column":18,"offset":2456},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":2441},"end":{"line":41,"column":21,"offset":2459},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"--ssh-access","position":{"start":{"line":41,"column":24,"offset":2462},"end":{"line":41,"column":38,"offset":2476},"indent":[]}}],"position":{"start":{"line":41,"column":24,"offset":2462},"end":{"line":41,"column":119,"offset":2557},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2439},"end":{"line":41,"column":121,"offset":2559},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Full ECR Access","position":{"start":{"line":42,"column":3,"offset":2562},"end":{"line":42,"column":18,"offset":2577},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":2562},"end":{"line":42,"column":21,"offset":2580},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"--full-ecr-access","position":{"start":{"line":42,"column":24,"offset":2583},"end":{"line":42,"column":43,"offset":2602},"indent":[]}}],"position":{"start":{"line":42,"column":24,"offset":2583},"end":{"line":42,"column":119,"offset":2678},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2560},"end":{"line":42,"column":121,"offset":2680},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Enable autoscaling","position":{"start":{"line":43,"column":3,"offset":2683},"end":{"line":43,"column":21,"offset":2701},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":2683},"end":{"line":43,"column":21,"offset":2701},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"--asg-access","position":{"start":{"line":43,"column":24,"offset":2704},"end":{"line":43,"column":38,"offset":2718},"indent":[]}}],"position":{"start":{"line":43,"column":24,"offset":2704},"end":{"line":43,"column":119,"offset":2799},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2681},"end":{"line":43,"column":121,"offset":2801},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1713},"end":{"line":43,"column":121,"offset":2801},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once clsuter is running, you'll need to add the autoscaler yourself. See ","position":{"start":{"line":45,"column":1,"offset":2803},"end":{"line":45,"column":74,"offset":2876},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md","children":[{"type":"text","value":"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md","position":{"start":{"line":45,"column":74,"offset":2876},"end":{"line":45,"column":173,"offset":2975},"indent":[]}}],"position":{"start":{"line":45,"column":74,"offset":2876},"end":{"line":45,"column":173,"offset":2975},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":45,"column":173,"offset":2975},"end":{"line":45,"column":174,"offset":2976},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2803},"end":{"line":45,"column":174,"offset":2976},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Creating a cluster using a config file instead of flags","position":{"start":{"line":47,"column":5,"offset":2982},"end":{"line":47,"column":60,"offset":3037},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2978},"end":{"line":47,"column":60,"offset":3037},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can create a cluster using a config file instead of flags.","position":{"start":{"line":49,"column":1,"offset":3039},"end":{"line":49,"column":63,"offset":3101},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":3039},"end":{"line":49,"column":63,"offset":3101},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, create cluster.yaml file:","position":{"start":{"line":51,"column":1,"offset":3103},"end":{"line":51,"column":33,"offset":3135},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":3103},"end":{"line":51,"column":33,"offset":3135},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: basic-cluster\n  region: eu-north-1\n\nnodeGroups:\n  - name: ng-1\n    instanceType: m5.large\n    desiredCapacity: 10","position":{"start":{"line":53,"column":1,"offset":3137},"end":{"line":65,"column":4,"offset":3332},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Next, run this command:","position":{"start":{"line":67,"column":1,"offset":3334},"end":{"line":67,"column":24,"offset":3357},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3334},"end":{"line":67,"column":24,"offset":3357},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"eksctl create cluster -f cluster.yaml","position":{"start":{"line":69,"column":1,"offset":3359},"end":{"line":71,"column":4,"offset":3409},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This will create a cluster as described.","position":{"start":{"line":73,"column":1,"offset":3411},"end":{"line":73,"column":41,"offset":3451},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3411},"end":{"line":73,"column":41,"offset":3451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you needed to use an existing VPC, you can use a config file like this:","position":{"start":{"line":75,"column":1,"offset":3453},"end":{"line":75,"column":75,"offset":3527},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3453},"end":{"line":75,"column":75,"offset":3527},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: cluster-in-existing-vpc\n  region: eu-north-1\n\nvpc:\n  subnets:\n    private:\n      eu-north-1a: {id: subnet-0ff156e0c4a6d300c}\n      eu-north-1b: {id: subnet-0549cdab573695c03}\n      eu-north-1c: {id: subnet-0426fb4a607393184}\n\nnodeGroups:\n  - name: ng-1-workers\n    labels: {role: workers}\n    instanceType: m5.xlarge\n    desiredCapacity: 10\n    privateNetworking: true\n  - name: ng-2-builders\n    labels: {role: builders}\n    instanceType: m5.2xlarge\n    desiredCapacity: 2\n    privateNetworking: true\n    iam:\n      withAddonPolicies:\n        imageBuilder: true","position":{"start":{"line":77,"column":1,"offset":3529},"end":{"line":106,"column":4,"offset":4173},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"See ","position":{"start":{"line":108,"column":1,"offset":4175},"end":{"line":108,"column":5,"offset":4179},"indent":[]}},{"type":"image","title":null,"url":"https://github.com/weaveworks/eksctl/tree/master/examples","alt":"examples/","position":{"start":{"line":108,"column":5,"offset":4179},"end":{"line":108,"column":76,"offset":4250},"indent":[]}},{"type":"text","value":" directory for more sample config files.","position":{"start":{"line":108,"column":76,"offset":4250},"end":{"line":108,"column":116,"offset":4290},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4175},"end":{"line":108,"column":116,"offset":4290},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":110,"column":4,"offset":4295},"end":{"line":110,"column":9,"offset":4300},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4292},"end":{"line":110,"column":9,"offset":4300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To download the latest release, run:","position":{"start":{"line":112,"column":1,"offset":4302},"end":{"line":112,"column":37,"offset":4338},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4302},"end":{"line":112,"column":37,"offset":4338},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"curl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nsudo mv /tmp/eksctl /usr/local/bin","position":{"start":{"line":114,"column":1,"offset":4340},"end":{"line":117,"column":4,"offset":4533},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, macOS users can use Homebrew:","position":{"start":{"line":119,"column":1,"offset":4535},"end":{"line":119,"column":45,"offset":4579},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4535},"end":{"line":119,"column":45,"offset":4579},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"brew install weaveworks/tap/eksctl","position":{"start":{"line":121,"column":1,"offset":4581},"end":{"line":123,"column":4,"offset":4628},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You will need to have AWS API credentials configured. What works for AWS CLI or any other tools (kops, Terraform etc), should be sufficient. You can use ","position":{"start":{"line":125,"column":1,"offset":4630},"end":{"line":125,"column":154,"offset":4783},"indent":[]}},{"type":"inlineCode","value":"~/.aws/credentials","position":{"start":{"line":125,"column":154,"offset":4783},"end":{"line":125,"column":174,"offset":4803},"indent":[]}},{"type":"text","value":" file or environment variables. For more information read AWS documentation.","position":{"start":{"line":125,"column":174,"offset":4803},"end":{"line":125,"column":250,"offset":4879},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4630},"end":{"line":125,"column":250,"offset":4879},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To create a basic cluster, run:","position":{"start":{"line":127,"column":1,"offset":4881},"end":{"line":127,"column":32,"offset":4912},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4881},"end":{"line":127,"column":32,"offset":4912},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"eksctl create cluster","position":{"start":{"line":129,"column":1,"offset":4914},"end":{"line":131,"column":4,"offset":4948},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A cluster will be created with default parameters:","position":{"start":{"line":133,"column":1,"offset":4950},"end":{"line":133,"column":51,"offset":5000},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4950},"end":{"line":133,"column":51,"offset":5000},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Exciting auto-generated name, e.g. \"fabulous-mushroom-1527688624\"","position":{"start":{"line":135,"column":3,"offset":5004},"end":{"line":135,"column":68,"offset":5069},"indent":[]}}],"position":{"start":{"line":135,"column":3,"offset":5004},"end":{"line":135,"column":68,"offset":5069},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":5002},"end":{"line":135,"column":68,"offset":5069},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"2x m5.large nodes (this instance type suits most common use-cases, and is good value for money)","position":{"start":{"line":136,"column":3,"offset":5072},"end":{"line":136,"column":98,"offset":5167},"indent":[]}}],"position":{"start":{"line":136,"column":3,"offset":5072},"end":{"line":136,"column":98,"offset":5167},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":5070},"end":{"line":136,"column":98,"offset":5167},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use official AWS EKS AMI","position":{"start":{"line":137,"column":3,"offset":5170},"end":{"line":137,"column":27,"offset":5194},"indent":[]}}],"position":{"start":{"line":137,"column":3,"offset":5170},"end":{"line":137,"column":27,"offset":5194},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":5168},"end":{"line":137,"column":27,"offset":5194},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"us-west-2","position":{"start":{"line":138,"column":3,"offset":5197},"end":{"line":138,"column":14,"offset":5208},"indent":[]}},{"type":"text","value":" region","position":{"start":{"line":138,"column":14,"offset":5208},"end":{"line":138,"column":21,"offset":5215},"indent":[]}}],"position":{"start":{"line":138,"column":3,"offset":5197},"end":{"line":138,"column":21,"offset":5215},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":5195},"end":{"line":138,"column":21,"offset":5215},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Dedicated VPC (check your quotas)","position":{"start":{"line":139,"column":3,"offset":5218},"end":{"line":139,"column":36,"offset":5251},"indent":[]}}],"position":{"start":{"line":139,"column":3,"offset":5218},"end":{"line":139,"column":36,"offset":5251},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":5216},"end":{"line":139,"column":36,"offset":5251},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using static AMI resolver","position":{"start":{"line":140,"column":3,"offset":5254},"end":{"line":140,"column":28,"offset":5279},"indent":[]}}],"position":{"start":{"line":140,"column":3,"offset":5254},"end":{"line":140,"column":28,"offset":5279},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5252},"end":{"line":140,"column":28,"offset":5279},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":5002},"end":{"line":140,"column":28,"offset":5279},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example output","position":{"start":{"line":142,"column":5,"offset":5285},"end":{"line":142,"column":19,"offset":5299},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5281},"end":{"line":142,"column":19,"offset":5299},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"$ eksctl create cluster\n[ℹ]  using region us-west-2\n[ℹ]  setting availability zones to [us-west-2c us-west-2a us-west-2b]\n[ℹ]  subnets for us-west-2c - public:192.168.0.0/19 private:192.168.96.0/19\n[ℹ]  subnets for us-west-2a - public:192.168.32.0/19 private:192.168.128.0/19\n[ℹ]  subnets for us-west-2b - public:192.168.64.0/19 private:192.168.160.0/19\n[ℹ]  using \"ami-0ce0ec06e682ee10e\" for nodes\n[ℹ]  creating EKS cluster \"floral-unicorn-1540567338\" in \"us-west-2\" region\n[ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial nodegroup\n[ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-west-2 --name=floral-unicorn-1540567338'\n[ℹ]  creating cluster stack \"eksctl-floral-unicorn-1540567338-cluster\"\n[ℹ]  creating nodegroup stack \"eksctl-floral-unicorn-1540567338-nodegroup-ng-39d54824\"\n[✔]  all EKS cluster resource for \"floral-unicorn-1540567338\" had been created\n[✔]  saved kubeconfig as \"~/.kube/config\"\n[ℹ]  nodegroup \"ng-39d54824\" has 0 nodes\n[ℹ]  waiting for at least 2 nodes to become ready\n[ℹ]  nodegroup \"ng-39d54824\" has 2 nodes\n[ℹ]  node \"ip-192-168-71-20.us-west-2.compute.internal\" is ready\n[ℹ]  node \"ip-192-168-25-215.us-west-2.compute.internal\" is ready\n[ℹ]  kubectl command should work with \"~/.kube/config\", try 'kubectl get nodes'\n[✔]  EKS cluster \"floral-unicorn-1540567338\" in \"us-west-2\" region is ready\n$","position":{"start":{"line":144,"column":1,"offset":5301},"end":{"line":167,"column":4,"offset":6736},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":170,"column":1,"offset":6739},"end":{"line":170,"column":31,"offset":6769},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":170,"column":31,"offset":6769}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"eksctl\"\n    }}>{`eksctl`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://eksctl.io/\"\n      }}>{`https://eksctl.io/`}</a></p>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <h3 {...{\n      \"id\": \"clusters\"\n    }}>{`Clusters`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl get cluster [--name=<name>] [--region=<region>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl create cluster --name=cluster-1 --nodes=4`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Write kubeconfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl utils write-kubeconfig --name=<name> [--kubeconfig=<path>] [--set-kubeconfig-context=<bool>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delete cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl delete cluster --name=<name> [--region=<region>]`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`eksctl create cluster --name=cluster-3 --nodes=4 --auto-kubeconfig`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Flag`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Example`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name the cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --name=cluster-3`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Set default node count`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--nodes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --nodes=4`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Auto configure kubectl`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--auto-kubeconfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --auto-kubeconfig`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use an auth scaling group`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--nodes-min, --nodes-max`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --nodes-min=3 --nodes-max=5`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"node-groups\"\n    }}>{`Node Groups`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl get nodegroup --cluster=<clusterName> [--name=<nodegroupName>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl create nodegroup --cluster=<clusterName> [--name=<nodegroupName>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Scale nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl scale nodegroup --cluster=cluster-1 --nodes=5 ng-a345f4e1`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delete nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl delete nodegroup --cluster=<clusterName> --nodes=<desiredCount> --name=<nodegroupName>`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SSH Access Flag`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--ssh-access`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Full ECR Access`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--full-ecr-access`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Enable autoscaling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--asg-access`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Once clsuter is running, you'll need to add the autoscaler yourself. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md\"\n      }}>{`https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"creating-a-cluster-using-a-config-file-instead-of-flags\"\n    }}>{`Creating a cluster using a config file instead of flags`}</h3>\n    <p>{`You can create a cluster using a config file instead of flags.`}</p>\n    <p>{`First, create cluster.yaml file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: basic-cluster\n  region: eu-north-1\n\nnodeGroups:\n  - name: ng-1\n    instanceType: m5.large\n    desiredCapacity: 10\n`}</code></pre>\n    <p>{`Next, run this command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`eksctl create cluster -f cluster.yaml\n`}</code></pre>\n    <p>{`This will create a cluster as described.`}</p>\n    <p>{`If you needed to use an existing VPC, you can use a config file like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: cluster-in-existing-vpc\n  region: eu-north-1\n\nvpc:\n  subnets:\n    private:\n      eu-north-1a: {id: subnet-0ff156e0c4a6d300c}\n      eu-north-1b: {id: subnet-0549cdab573695c03}\n      eu-north-1c: {id: subnet-0426fb4a607393184}\n\nnodeGroups:\n  - name: ng-1-workers\n    labels: {role: workers}\n    instanceType: m5.xlarge\n    desiredCapacity: 10\n    privateNetworking: true\n  - name: ng-2-builders\n    labels: {role: builders}\n    instanceType: m5.2xlarge\n    desiredCapacity: 2\n    privateNetworking: true\n    iam:\n      withAddonPolicies:\n        imageBuilder: true\n`}</code></pre>\n    <p>{`See `}<img alt=\"examples/\" src=\"https://github.com/weaveworks/eksctl/tree/master/examples\" />{` directory for more sample config files.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`To download the latest release, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nsudo mv /tmp/eksctl /usr/local/bin\n`}</code></pre>\n    <p>{`Alternatively, macOS users can use Homebrew:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`brew install weaveworks/tap/eksctl\n`}</code></pre>\n    <p>{`You will need to have AWS API credentials configured. What works for AWS CLI or any other tools (kops, Terraform etc), should be sufficient. You can use `}<inlineCode parentName=\"p\">{`~/.aws/credentials`}</inlineCode>{` file or environment variables. For more information read AWS documentation.`}</p>\n    <p>{`To create a basic cluster, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`eksctl create cluster\n`}</code></pre>\n    <p>{`A cluster will be created with default parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Exciting auto-generated name, e.g. \"fabulous-mushroom-1527688624\"`}</li>\n      <li parentName=\"ul\">{`2x m5.large nodes (this instance type suits most common use-cases, and is good value for money)`}</li>\n      <li parentName=\"ul\">{`Use official AWS EKS AMI`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`us-west-2`}</inlineCode>{` region`}</li>\n      <li parentName=\"ul\">{`Dedicated VPC (check your quotas)`}</li>\n      <li parentName=\"ul\">{`Using static AMI resolver`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example-output\"\n    }}>{`Example output`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ eksctl create cluster\n[ℹ]  using region us-west-2\n[ℹ]  setting availability zones to [us-west-2c us-west-2a us-west-2b]\n[ℹ]  subnets for us-west-2c - public:192.168.0.0/19 private:192.168.96.0/19\n[ℹ]  subnets for us-west-2a - public:192.168.32.0/19 private:192.168.128.0/19\n[ℹ]  subnets for us-west-2b - public:192.168.64.0/19 private:192.168.160.0/19\n[ℹ]  using \"ami-0ce0ec06e682ee10e\" for nodes\n[ℹ]  creating EKS cluster \"floral-unicorn-1540567338\" in \"us-west-2\" region\n[ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial nodegroup\n[ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-west-2 --name=floral-unicorn-1540567338'\n[ℹ]  creating cluster stack \"eksctl-floral-unicorn-1540567338-cluster\"\n[ℹ]  creating nodegroup stack \"eksctl-floral-unicorn-1540567338-nodegroup-ng-39d54824\"\n[✔]  all EKS cluster resource for \"floral-unicorn-1540567338\" had been created\n[✔]  saved kubeconfig as \"~/.kube/config\"\n[ℹ]  nodegroup \"ng-39d54824\" has 0 nodes\n[ℹ]  waiting for at least 2 nodes to become ready\n[ℹ]  nodegroup \"ng-39d54824\" has 2 nodes\n[ℹ]  node \"ip-192-168-71-20.us-west-2.compute.internal\" is ready\n[ℹ]  node \"ip-192-168-25-215.us-west-2.compute.internal\" is ready\n[ℹ]  kubectl command should work with \"~/.kube/config\", try 'kubectl get nodes'\n[✔]  EKS cluster \"floral-unicorn-1540567338\" in \"us-west-2\" region is ready\n$\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}