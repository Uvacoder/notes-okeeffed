{"expireTime":9007200849425508000,"key":"gatsby-plugin-mdx-entire-payload-90be563ea899a04b8a41b0a46dd8b0c6-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Intro to Reselect","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":20,"offset":186},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":20,"offset":186},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Quick and dirty implementation of ","position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":35,"offset":222},"indent":[]}},{"type":"inlineCode","value":"reselect","position":{"start":{"line":10,"column":35,"offset":222},"end":{"line":10,"column":45,"offset":232},"indent":[]}},{"type":"text","value":". This assumes you already have the requirements for Redux installed and in operation.","position":{"start":{"line":10,"column":45,"offset":232},"end":{"line":10,"column":131,"offset":318},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":131,"offset":318},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Links","position":{"start":{"line":12,"column":4,"offset":323},"end":{"line":12,"column":9,"offset":328},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":320},"end":{"line":12,"column":9,"offset":328},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/@parkerdan/react-reselect-and-redux-b34017f8194c","children":[{"type":"text","value":"Dan Parker - Medium article","position":{"start":{"line":14,"column":2,"offset":331},"end":{"line":14,"column":29,"offset":358},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":330},"end":{"line":14,"column":99,"offset":428},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":330},"end":{"line":14,"column":99,"offset":428},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Basic example","position":{"start":{"line":16,"column":4,"offset":433},"end":{"line":16,"column":17,"offset":446},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":430},"end":{"line":16,"column":17,"offset":446},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"yarn install reselect","position":{"start":{"line":18,"column":1,"offset":448},"end":{"line":20,"column":4,"offset":481},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"// Reducer file\nimport { createSelector } from 'reselect';\n\n/* Selectors */\nconst getElementsUi = (state) => state.sidebarReducer.elementsUi;\nexport const getElementsUiState = createSelector(\n  [getElementsUi],\n  (elementsUi) => elementsUi\n);\n\n// In file calling mapStateToProps\nconst mapStateToProps = (state) => ({\n  elementsUi: reducers.getElementsUiState(state)\n});\n\n// Basic mapping dispatch\nconst mapDispatchToProps = (dispatch) => ({ dispatch: dispatch });\n\n// Basic wiring of program\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);","position":{"start":{"line":22,"column":1,"offset":483},"end":{"line":46,"column":4,"offset":1070},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":49,"column":1,"offset":1073},"end":{"line":49,"column":31,"offset":1103},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":49,"column":31,"offset":1103}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"intro-to-reselect\"\n    }}>{`Intro to Reselect`}</h1>\n    <p>{`Quick and dirty implementation of `}<inlineCode parentName=\"p\">{`reselect`}</inlineCode>{`. This assumes you already have the requirements for Redux installed and in operation.`}</p>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/@parkerdan/react-reselect-and-redux-b34017f8194c\"\n      }}>{`Dan Parker - Medium article`}</a></p>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn install reselect\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Reducer file\nimport { createSelector } from 'reselect';\n\n/* Selectors */\nconst getElementsUi = (state) => state.sidebarReducer.elementsUi;\nexport const getElementsUiState = createSelector(\n  [getElementsUi],\n  (elementsUi) => elementsUi\n);\n\n// In file calling mapStateToProps\nconst mapStateToProps = (state) => ({\n  elementsUi: reducers.getElementsUiState(state)\n});\n\n// Basic mapping dispatch\nconst mapDispatchToProps = (dispatch) => ({ dispatch: dispatch });\n\n// Basic wiring of program\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}