{"expireTime":9007200867335920000,"key":"gatsby-plugin-mdx-entire-payload-dec95995e89bbf20dd163294e17d4500-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#naming","children":[{"type":"text","value":"Naming","position":{"start":{"line":7,"column":4,"offset":169},"end":{"line":7,"column":10,"offset":175},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":20,"offset":185},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":20,"offset":185},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#components","children":[{"type":"text","value":"Components","position":{"start":{"line":8,"column":8,"offset":193},"end":{"line":8,"column":18,"offset":203},"indent":[]}}],"position":{"start":{"line":8,"column":7,"offset":192},"end":{"line":8,"column":32,"offset":217},"indent":[]}}],"position":{"start":{"line":8,"column":7,"offset":192},"end":{"line":8,"column":32,"offset":217},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#deep-dive","children":[{"type":"text","value":"Deep dive","position":{"start":{"line":9,"column":12,"offset":229},"end":{"line":9,"column":21,"offset":238},"indent":[]}}],"position":{"start":{"line":9,"column":11,"offset":228},"end":{"line":9,"column":34,"offset":251},"indent":[]}}],"position":{"start":{"line":9,"column":11,"offset":228},"end":{"line":9,"column":34,"offset":251},"indent":[]}}],"position":{"start":{"line":9,"column":7,"offset":224},"end":{"line":9,"column":34,"offset":251},"indent":[]}}],"position":{"start":{"line":9,"column":7,"offset":224},"end":{"line":9,"column":34,"offset":251},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":188},"end":{"line":9,"column":34,"offset":251},"indent":[3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#class-names","children":[{"type":"text","value":"Class Names","position":{"start":{"line":10,"column":8,"offset":259},"end":{"line":10,"column":19,"offset":270},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":258},"end":{"line":10,"column":34,"offset":285},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":258},"end":{"line":10,"column":34,"offset":285},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":254},"end":{"line":10,"column":34,"offset":285},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":188},"end":{"line":10,"column":34,"offset":285},"indent":[3,3]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":10,"column":34,"offset":285},"indent":[1,1,1]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":10,"column":34,"offset":285},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Naming","position":{"start":{"line":12,"column":3,"offset":289},"end":{"line":12,"column":9,"offset":295},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":287},"end":{"line":12,"column":9,"offset":295},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Components","position":{"start":{"line":14,"column":4,"offset":300},"end":{"line":14,"column":14,"offset":310},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":297},"end":{"line":14,"column":14,"offset":310},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Component naming should as swiftly as possible inform the following:","position":{"start":{"line":16,"column":1,"offset":312},"end":{"line":16,"column":69,"offset":380},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":312},"end":{"line":16,"column":69,"offset":380},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Type","position":{"start":{"line":18,"column":5,"offset":386},"end":{"line":18,"column":9,"offset":390},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":386},"end":{"line":18,"column":9,"offset":390},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":382},"end":{"line":18,"column":9,"offset":390},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Area/region in the app/site","position":{"start":{"line":19,"column":5,"offset":395},"end":{"line":19,"column":32,"offset":422},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":395},"end":{"line":19,"column":32,"offset":422},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":391},"end":{"line":19,"column":32,"offset":422},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Purpose","position":{"start":{"line":20,"column":5,"offset":427},"end":{"line":20,"column":12,"offset":434},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":427},"end":{"line":20,"column":12,"offset":434},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":423},"end":{"line":20,"column":12,"offset":434},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Context","position":{"start":{"line":21,"column":5,"offset":439},"end":{"line":21,"column":12,"offset":446},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":439},"end":{"line":21,"column":12,"offset":446},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":435},"end":{"line":21,"column":12,"offset":446},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":382},"end":{"line":21,"column":12,"offset":446},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To do it in such a way that is purposeful and scalable, consider following the naming by going ","position":{"start":{"line":23,"column":1,"offset":448},"end":{"line":23,"column":96,"offset":543},"indent":[]}},{"type":"inlineCode","value":"[Type][Region][Purpose][Context]","position":{"start":{"line":23,"column":96,"offset":543},"end":{"line":23,"column":130,"offset":577},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":130,"offset":577},"end":{"line":23,"column":131,"offset":578},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":448},"end":{"line":23,"column":131,"offset":578},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deep dive","position":{"start":{"line":25,"column":5,"offset":584},"end":{"line":25,"column":14,"offset":593},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":580},"end":{"line":25,"column":14,"offset":593},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, let's take the unknown customer journey . In this flow, they go from home, cover the common basics between the customer journeys for identifying if they are a member, the store location, the order and the type before moving on to the specific journey feedback. When building out the individual pages, we can determine and define a type, region, purpose and context.","position":{"start":{"line":27,"column":1,"offset":595},"end":{"line":27,"column":379,"offset":973},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":595},"end":{"line":27,"column":379,"offset":973},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// [Type][Region][Purpose][Context]\n1. PageHome // -> selects \"Leave Feedback\"\n2. PageBaseIsMember // -> Type: Page, region: Base, purpose: Is, context: Member, selects no\n3. PageBaseSetStore // -> Type: Page, region: Base, purpose: Set, context: Store, selects continue\n4. PageBaseSetOrderType // -> Type: Page, region: Base, purpose: Set, context: Order Type\n// etc","position":{"start":{"line":29,"column":1,"offset":975},"end":{"line":36,"column":4,"offset":1360},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that you can emit ","position":{"start":{"line":38,"column":1,"offset":1362},"end":{"line":38,"column":24,"offset":1385},"indent":[]}},{"type":"inlineCode","value":"purpose","position":{"start":{"line":38,"column":24,"offset":1385},"end":{"line":38,"column":33,"offset":1394},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":38,"column":33,"offset":1394},"end":{"line":38,"column":38,"offset":1399},"indent":[]}},{"type":"inlineCode","value":"context","position":{"start":{"line":38,"column":38,"offset":1399},"end":{"line":38,"column":47,"offset":1408},"indent":[]}},{"type":"text","value":" from the name if it is not relevant.","position":{"start":{"line":38,"column":47,"offset":1408},"end":{"line":38,"column":84,"offset":1445},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1362},"end":{"line":38,"column":84,"offset":1445},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Within each page, you can individual components. Try to use the class name convention to generate the names for child components:","position":{"start":{"line":40,"column":1,"offset":1447},"end":{"line":40,"column":130,"offset":1576},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1447},"end":{"line":40,"column":130,"offset":1576},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// ! This is just an example and not necessarily\n// reflective of actual use. Use your own discression.\n<PageBaseSetOrderType>\n  // Compoent for each order type\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n</PageBaseSetOrderType>","position":{"start":{"line":42,"column":1,"offset":1578},"end":{"line":52,"column":4,"offset":1900},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Class Names","position":{"start":{"line":54,"column":4,"offset":1905},"end":{"line":54,"column":15,"offset":1916},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1902},"end":{"line":54,"column":15,"offset":1916},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Try follow the convention below for naming classes.","position":{"start":{"line":56,"column":1,"offset":1918},"end":{"line":56,"column":52,"offset":1969},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1918},"end":{"line":56,"column":52,"offset":1969},"indent":[]}},{"type":"code","lang":"yml","meta":null,"value":"body:\n  header: # @classname header\n    # @children\n  # Top level for each section\n  section: # @classname section-name\n    # @children\n    container: # @classname container-name\n      # Base selection of rules\n      ? block\n      # @children\n      grid:\n        ? grid-item\n        # @children\n      table:\n        # @children\n        table-header:\n          # @children\n        table-data:\n          # @chidlren\n      list:\n        # react native only\n        list-item:\n          # @children\n      # ... more, maybe article etc\n      nav:\n        nav-item:\n          # @children\n  component: # @classname component-name\n    # Specific component based styling\n    # @children\n    # Base selection of rules\n    ? block\n    # @children\n    grid:\n      ? grid-item\n      # @children\n    table:\n      # @children\n      table-header:\n        # @children\n      table-data:\n        # @chidlren\n    list:\n      # react native only\n      list-item:\n        # @children\n    # ... more, maybe article etc\n    nav:\n      nav-item:\n        # @children\n  footer: # @classname footer - but maybe should be more specific\n    # @children","position":{"start":{"line":58,"column":1,"offset":1971},"end":{"line":111,"column":4,"offset":3104},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":114,"column":1,"offset":3107},"end":{"line":114,"column":31,"offset":3137},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":114,"column":31,"offset":3137}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#naming\"\n        }}>{`Naming`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#components\"\n            }}>{`Components`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#deep-dive\"\n                }}>{`Deep dive`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#class-names\"\n            }}>{`Class Names`}</a></li>\n        </ul></li>\n    </ul>\n    <h1 {...{\n      \"id\": \"naming\"\n    }}>{`Naming`}</h1>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`Component naming should as swiftly as possible inform the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Type`}</li>\n      <li parentName=\"ol\">{`Area/region in the app/site`}</li>\n      <li parentName=\"ol\">{`Purpose`}</li>\n      <li parentName=\"ol\">{`Context`}</li>\n    </ol>\n    <p>{`To do it in such a way that is purposeful and scalable, consider following the naming by going `}<inlineCode parentName=\"p\">{`[Type][Region][Purpose][Context]`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"deep-dive\"\n    }}>{`Deep dive`}</h3>\n    <p>{`For example, let's take the unknown customer journey . In this flow, they go from home, cover the common basics between the customer journeys for identifying if they are a member, the store location, the order and the type before moving on to the specific journey feedback. When building out the individual pages, we can determine and define a type, region, purpose and context.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// [Type][Region][Purpose][Context]\n1. PageHome // -> selects \"Leave Feedback\"\n2. PageBaseIsMember // -> Type: Page, region: Base, purpose: Is, context: Member, selects no\n3. PageBaseSetStore // -> Type: Page, region: Base, purpose: Set, context: Store, selects continue\n4. PageBaseSetOrderType // -> Type: Page, region: Base, purpose: Set, context: Order Type\n// etc\n`}</code></pre>\n    <p>{`Note that you can emit `}<inlineCode parentName=\"p\">{`purpose`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`context`}</inlineCode>{` from the name if it is not relevant.`}</p>\n    <p>{`Within each page, you can individual components. Try to use the class name convention to generate the names for child components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// ! This is just an example and not necessarily\n// reflective of actual use. Use your own discression.\n<PageBaseSetOrderType>\n  // Compoent for each order type\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n</PageBaseSetOrderType>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"class-names\"\n    }}>{`Class Names`}</h2>\n    <p>{`Try follow the convention below for naming classes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`body:\n  header: # @classname header\n    # @children\n  # Top level for each section\n  section: # @classname section-name\n    # @children\n    container: # @classname container-name\n      # Base selection of rules\n      ? block\n      # @children\n      grid:\n        ? grid-item\n        # @children\n      table:\n        # @children\n        table-header:\n          # @children\n        table-data:\n          # @chidlren\n      list:\n        # react native only\n        list-item:\n          # @children\n      # ... more, maybe article etc\n      nav:\n        nav-item:\n          # @children\n  component: # @classname component-name\n    # Specific component based styling\n    # @children\n    # Base selection of rules\n    ? block\n    # @children\n    grid:\n      ? grid-item\n      # @children\n    table:\n      # @children\n      table-header:\n        # @children\n      table-data:\n        # @chidlren\n    list:\n      # react native only\n      list-item:\n        # @children\n    # ... more, maybe article etc\n    nav:\n      nav-item:\n        # @children\n  footer: # @classname footer - but maybe should be more specific\n    # @children\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}