{"expireTime":9007200867335984000,"key":"gatsby-plugin-mdx-entire-payload-b17a708ca843e9c037b4a4361cc71b1d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Count Vowels","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":15,"offset":181},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":15,"offset":181},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string arg, count the vowels and return the number.","position":{"start":{"line":10,"column":1,"offset":183},"end":{"line":10,"column":60,"offset":242},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":183},"end":{"line":10,"column":60,"offset":242},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Go","position":{"start":{"line":12,"column":4,"offset":247},"end":{"line":12,"column":6,"offset":249},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":244},"end":{"line":12,"column":6,"offset":249},"indent":[]}},{"type":"code","lang":"go","meta":null,"value":"package countvowels\n\nimport \"regexp\"\n\n// CountVowels should have a comment documenting it.\nfunc CountVowels(arg string) int {\n  return len(regexp.MustCompile(`[^aeiouAEIOU]`).ReplaceAllString(arg, \"\"))\n}","position":{"start":{"line":14,"column":1,"offset":251},"end":{"line":23,"column":4,"offset":464},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java","position":{"start":{"line":25,"column":4,"offset":469},"end":{"line":25,"column":8,"offset":473},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":466},"end":{"line":25,"column":8,"offset":473},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"class CountVowels {\n    Integer run(String inputString) {\n        return inputString.replaceAll(\"[^aeiouAEIOU]\", \"\").length();\n    }\n}","position":{"start":{"line":27,"column":1,"offset":475},"end":{"line":33,"column":4,"offset":621},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"JavaScript","position":{"start":{"line":35,"column":4,"offset":626},"end":{"line":35,"column":14,"offset":636},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":623},"end":{"line":35,"column":14,"offset":636},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const run = (arg) => arg.replace(/[^aeiou]/gi, '').length;","position":{"start":{"line":37,"column":1,"offset":638},"end":{"line":39,"column":4,"offset":714},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"PHP","position":{"start":{"line":41,"column":4,"offset":719},"end":{"line":41,"column":7,"offset":722},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":716},"end":{"line":41,"column":7,"offset":722},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n\nfunction countVowels($str)\n{\n    return strlen(preg_replace(\"/[^aeiou]/i\", \"\", $str));\n}","position":{"start":{"line":43,"column":1,"offset":724},"end":{"line":50,"column":4,"offset":830},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Python","position":{"start":{"line":52,"column":4,"offset":835},"end":{"line":52,"column":10,"offset":841},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":832},"end":{"line":52,"column":10,"offset":841},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import re\n\ndef run(src):\n    return len(re.sub(\"[^aeiouAEUIO]\", \"\", src))","position":{"start":{"line":54,"column":1,"offset":843},"end":{"line":59,"column":4,"offset":930},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Ruby","position":{"start":{"line":61,"column":4,"offset":935},"end":{"line":61,"column":8,"offset":939},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":932},"end":{"line":61,"column":8,"offset":939},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"class CountVowels\n    def self.count(input)\n        flt = input.gsub(/[^aeiou]/i, '')\n        return flt.length\n    end\nend","position":{"start":{"line":63,"column":1,"offset":941},"end":{"line":70,"column":4,"offset":1076},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Rust","position":{"start":{"line":72,"column":4,"offset":1081},"end":{"line":72,"column":8,"offset":1085},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1078},"end":{"line":72,"column":8,"offset":1085},"indent":[]}},{"type":"code","lang":"rust","meta":null,"value":"extern crate regex;\nuse regex::Regex;\n\npub fn count_vowels(s: String) -> usize {\n    return Regex::new(\"[^aeiouAEIOU]\").unwrap().replace_all(&s, \"\").len();\n}","position":{"start":{"line":74,"column":1,"offset":1087},"end":{"line":81,"column":4,"offset":1256},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":84,"column":1,"offset":1259},"end":{"line":84,"column":31,"offset":1289},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":84,"column":31,"offset":1289}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"count-vowels\"\n    }}>{`Count Vowels`}</h1>\n    <p>{`Given a string arg, count the vowels and return the number.`}</p>\n    <h2 {...{\n      \"id\": \"go\"\n    }}>{`Go`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package countvowels\n\nimport \"regexp\"\n\n// CountVowels should have a comment documenting it.\nfunc CountVowels(arg string) int {\n  return len(regexp.MustCompile(\\`[^aeiouAEIOU]\\`).ReplaceAllString(arg, \"\"))\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"java\"\n    }}>{`Java`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`class CountVowels {\n    Integer run(String inputString) {\n        return inputString.replaceAll(\"[^aeiouAEIOU]\", \"\").length();\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const run = (arg) => arg.replace(/[^aeiou]/gi, '').length;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"php\"\n    }}>{`PHP`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nfunction countVowels($str)\n{\n    return strlen(preg_replace(\"/[^aeiou]/i\", \"\", $str));\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import re\n\ndef run(src):\n    return len(re.sub(\"[^aeiouAEUIO]\", \"\", src))\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby\"\n    }}>{`Ruby`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class CountVowels\n    def self.count(input)\n        flt = input.gsub(/[^aeiou]/i, '')\n        return flt.length\n    end\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rust\"\n    }}>{`Rust`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`extern crate regex;\nuse regex::Regex;\n\npub fn count_vowels(s: String) -> usize {\n    return Regex::new(\"[^aeiouAEIOU]\").unwrap().replace_all(&s, \"\").len();\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}