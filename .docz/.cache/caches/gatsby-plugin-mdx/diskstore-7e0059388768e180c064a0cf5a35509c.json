{"expireTime":9007200852878370000,"key":"gatsby-plugin-mdx-entire-payload-7d2ff78f102babe1e799f53e0e76afac-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"React Portals","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":16,"offset":182},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":16,"offset":182},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Why Portals?","position":{"start":{"line":10,"column":4,"offset":187},"end":{"line":10,"column":16,"offset":199},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":184},"end":{"line":10,"column":16,"offset":199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A great use case for portals is for use with things like React modals. Anything that uses a stack context can obscure the css position for something like a modal.","position":{"start":{"line":12,"column":1,"offset":201},"end":{"line":12,"column":163,"offset":363},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":201},"end":{"line":12,"column":163,"offset":363},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The tl;dr is to make a React component a descendent of a HTML element other than ","position":{"start":{"line":14,"column":1,"offset":365},"end":{"line":14,"column":82,"offset":446},"indent":[]}},{"type":"inlineCode","value":"id=\"root\"","position":{"start":{"line":14,"column":82,"offset":446},"end":{"line":14,"column":93,"offset":457},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":14,"column":93,"offset":457},"end":{"line":14,"column":94,"offset":458},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":365},"end":{"line":14,"column":94,"offset":458},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating a Portal","position":{"start":{"line":16,"column":4,"offset":463},"end":{"line":16,"column":21,"offset":480},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":460},"end":{"line":16,"column":21,"offset":480},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"modal\">\n      <div className=\"modal-body\" />\n    </div>,\n    document.querySelector('#modal')\n  );\n};","position":{"start":{"line":18,"column":1,"offset":482},"end":{"line":30,"column":4,"offset":742},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":33,"column":1,"offset":745},"end":{"line":33,"column":31,"offset":775},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":33,"column":31,"offset":775}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-portals\"\n    }}>{`React Portals`}</h1>\n    <h2 {...{\n      \"id\": \"why-portals\"\n    }}>{`Why Portals?`}</h2>\n    <p>{`A great use case for portals is for use with things like React modals. Anything that uses a stack context can obscure the css position for something like a modal.`}</p>\n    <p>{`The tl;dr is to make a React component a descendent of a HTML element other than `}<inlineCode parentName=\"p\">{`id=\"root\"`}</inlineCode>{`;`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-portal\"\n    }}>{`Creating a Portal`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"modal\">\n      <div className=\"modal-body\" />\n    </div>,\n    document.querySelector('#modal')\n  );\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}