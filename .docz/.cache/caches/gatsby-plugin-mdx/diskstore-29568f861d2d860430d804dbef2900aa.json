{"expireTime":9007200852878370000,"key":"gatsby-plugin-mdx-entire-payload-ae470dc469939dc9e6f2f6319a86de70-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"React-Native Style Guide","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":27,"offset":192},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":27,"offset":192},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"React Native Style Guide","position":{"start":{"line":9,"column":5,"offset":198},"end":{"line":9,"column":29,"offset":222},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":194},"end":{"line":9,"column":29,"offset":222},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"General Guidelines","position":{"start":{"line":12,"column":6,"offset":230},"end":{"line":12,"column":24,"offset":248},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":225},"end":{"line":12,"column":24,"offset":248},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Every component should be treated as an API.","position":{"start":{"line":14,"column":3,"offset":252},"end":{"line":14,"column":47,"offset":296},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":252},"end":{"line":14,"column":47,"offset":296},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":250},"end":{"line":14,"column":47,"offset":296},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When in doubt, break up a component or function into smaller useful parts.","position":{"start":{"line":15,"column":3,"offset":299},"end":{"line":15,"column":77,"offset":373},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":299},"end":{"line":15,"column":77,"offset":373},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":297},"end":{"line":15,"column":77,"offset":373},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":250},"end":{"line":15,"column":77,"offset":373},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ES6 and ES7","position":{"start":{"line":17,"column":6,"offset":380},"end":{"line":17,"column":17,"offset":391},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":375},"end":{"line":17,"column":17,"offset":391},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The flavor of JS we use is based on ES5 but with ES6 and ES7 transforms. This means, that a large part of the syntax is based on the current version of JS, but is flavored with capabilities that come with ES6 and ES7. For example:","position":{"start":{"line":19,"column":1,"offset":393},"end":{"line":19,"column":231,"offset":623},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":393},"end":{"line":19,"column":231,"offset":623},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object destructing (ES6)","position":{"start":{"line":21,"column":3,"offset":627},"end":{"line":21,"column":27,"offset":651},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":627},"end":{"line":21,"column":27,"offset":651},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":625},"end":{"line":21,"column":27,"offset":651},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object spread (ES7)","position":{"start":{"line":22,"column":3,"offset":654},"end":{"line":22,"column":22,"offset":673},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":654},"end":{"line":22,"column":22,"offset":673},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":652},"end":{"line":22,"column":22,"offset":673},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Rest and spread params (ES6)","position":{"start":{"line":23,"column":3,"offset":676},"end":{"line":23,"column":31,"offset":704},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":676},"end":{"line":23,"column":31,"offset":704},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":674},"end":{"line":23,"column":31,"offset":704},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Promises (ES6)","position":{"start":{"line":24,"column":3,"offset":707},"end":{"line":24,"column":17,"offset":721},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":707},"end":{"line":24,"column":17,"offset":721},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":705},"end":{"line":24,"column":17,"offset":721},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Arrow Functions (ES6)","position":{"start":{"line":25,"column":3,"offset":724},"end":{"line":25,"column":24,"offset":745},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":724},"end":{"line":25,"column":24,"offset":745},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":722},"end":{"line":25,"column":24,"offset":745},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object concise method (ES6)","position":{"start":{"line":26,"column":3,"offset":748},"end":{"line":26,"column":30,"offset":775},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":748},"end":{"line":26,"column":30,"offset":775},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":746},"end":{"line":26,"column":30,"offset":775},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object short notation (ES6)","position":{"start":{"line":27,"column":3,"offset":778},"end":{"line":27,"column":30,"offset":805},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":778},"end":{"line":27,"column":30,"offset":805},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":776},"end":{"line":27,"column":30,"offset":805},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Classes (ES6)","position":{"start":{"line":28,"column":3,"offset":808},"end":{"line":28,"column":16,"offset":821},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":808},"end":{"line":28,"column":16,"offset":821},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":806},"end":{"line":28,"column":16,"offset":821},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":625},"end":{"line":28,"column":16,"offset":821},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For more information see ","position":{"start":{"line":30,"column":1,"offset":823},"end":{"line":30,"column":26,"offset":848},"indent":[]}},{"type":"link","title":null,"url":"https://facebook.github.io/react-native/docs/javascript-environment.html#content","children":[{"type":"text","value":"React Native JavaScript Environment","position":{"start":{"line":30,"column":27,"offset":849},"end":{"line":30,"column":62,"offset":884},"indent":[]}}],"position":{"start":{"line":30,"column":26,"offset":848},"end":{"line":30,"column":145,"offset":967},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":823},"end":{"line":30,"column":145,"offset":967},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Component Creation","position":{"start":{"line":32,"column":6,"offset":974},"end":{"line":32,"column":24,"offset":992},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":969},"end":{"line":32,"column":24,"offset":992},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Components should be created using ES6 classes and Object Short Notation.","position":{"start":{"line":34,"column":1,"offset":994},"end":{"line":34,"column":74,"offset":1067},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":994},"end":{"line":34,"column":74,"offset":1067},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\n// Bad\n\nvar ChatBox = React.createClass({\n\n  getInitialState: function(){\n    return {toggle: 'on'};\n  },\n\n  render: function(){\n    return (\n      <Text> Example </Text>\n    );\n  }\n\n})\n\n// Good\n\nclass ChatBox extends React.Component{\n\n  constructor(){\n    this.state = {toggle: 'on'}\n  }\n\n  render(){\n    return (\n      <Text> Example </Text>\n    );\n  }\n\n}\n","position":{"start":{"line":36,"column":1,"offset":1069},"end":{"line":70,"column":4,"offset":1446},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Component functions that are not life-cycle functions should be created with an underscore at the beginning of the function name.","position":{"start":{"line":72,"column":1,"offset":1448},"end":{"line":72,"column":130,"offset":1577},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1448},"end":{"line":72,"column":130,"offset":1577},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\n_fetchmessages(){\n  fetch(requestURL)\n    .then((response)=> response.json() )\n    .then((responseData)=> {\n      this.setState({messages: responseData})\n    })\n    .done();\n}\n\n_turnEditOn(){\n  this.setState({edit: true});\n}\n","position":{"start":{"line":74,"column":1,"offset":1579},"end":{"line":89,"column":4,"offset":1823},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Keep life-cycle functions at the top of the object constructor in logical order.","position":{"start":{"line":91,"column":1,"offset":1825},"end":{"line":91,"column":81,"offset":1905},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":1825},"end":{"line":91,"column":81,"offset":1905},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"constructor","position":{"start":{"line":93,"column":4,"offset":1910},"end":{"line":93,"column":17,"offset":1923},"indent":[]}}],"position":{"start":{"line":93,"column":4,"offset":1910},"end":{"line":93,"column":17,"offset":1923},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":1907},"end":{"line":93,"column":17,"offset":1923},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"componentWillMount","position":{"start":{"line":94,"column":4,"offset":1927},"end":{"line":94,"column":24,"offset":1947},"indent":[]}}],"position":{"start":{"line":94,"column":4,"offset":1927},"end":{"line":94,"column":24,"offset":1947},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":1924},"end":{"line":94,"column":24,"offset":1947},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"componentDidMount","position":{"start":{"line":95,"column":4,"offset":1951},"end":{"line":95,"column":23,"offset":1970},"indent":[]}}],"position":{"start":{"line":95,"column":4,"offset":1951},"end":{"line":95,"column":23,"offset":1970},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":1948},"end":{"line":95,"column":23,"offset":1970},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"componentWillReceiveProps","position":{"start":{"line":96,"column":4,"offset":1974},"end":{"line":96,"column":31,"offset":2001},"indent":[]}}],"position":{"start":{"line":96,"column":4,"offset":1974},"end":{"line":96,"column":31,"offset":2001},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":1971},"end":{"line":96,"column":31,"offset":2001},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"render","position":{"start":{"line":97,"column":4,"offset":2005},"end":{"line":97,"column":12,"offset":2013},"indent":[]}}],"position":{"start":{"line":97,"column":4,"offset":2005},"end":{"line":97,"column":12,"offset":2013},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2002},"end":{"line":97,"column":12,"offset":2013},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":1907},"end":{"line":97,"column":12,"offset":2013},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For more information see ","position":{"start":{"line":99,"column":1,"offset":2015},"end":{"line":99,"column":26,"offset":2040},"indent":[]}},{"type":"link","title":null,"url":"https://facebook.github.io/react/docs/component-specs.html","children":[{"type":"text","value":"Component Specs and Lifecycle","position":{"start":{"line":99,"column":27,"offset":2041},"end":{"line":99,"column":56,"offset":2070},"indent":[]}}],"position":{"start":{"line":99,"column":26,"offset":2040},"end":{"line":99,"column":117,"offset":2131},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2015},"end":{"line":99,"column":117,"offset":2131},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Every component function should be as parsimonious as possible. If you find yourself creating a function that is doing more than two things at once, then break up the function into smaller functions.","position":{"start":{"line":101,"column":1,"offset":2133},"end":{"line":101,"column":200,"offset":2332},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2133},"end":{"line":101,"column":200,"offset":2332},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Using Bind","position":{"start":{"line":103,"column":6,"offset":2339},"end":{"line":103,"column":16,"offset":2349},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2334},"end":{"line":103,"column":16,"offset":2349},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When passing a function as prop to a child component, the use of bind is not necessary. React Native automatically binds ","position":{"start":{"line":105,"column":1,"offset":2351},"end":{"line":105,"column":122,"offset":2472},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":105,"column":122,"offset":2472},"end":{"line":105,"column":128,"offset":2478},"indent":[]}},{"type":"text","value":" to that function.","position":{"start":{"line":105,"column":128,"offset":2478},"end":{"line":105,"column":146,"offset":2496},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2351},"end":{"line":105,"column":146,"offset":2496},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\n// Bad\n\nrender(){\n  return(\n    <CameraButton\n      selectImage={this.selectImage.bind(this)}\n    />\n  );\n}\n\n// Good\n\nrender(){\n  return(\n    <CameraButton\n      selectImage={this.selectImage}\n    />\n  );\n}\n","position":{"start":{"line":107,"column":1,"offset":2498},"end":{"line":129,"column":4,"offset":2724},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It necessary however to use bind, when passing a component function to an event prop. For example:","position":{"start":{"line":131,"column":1,"offset":2726},"end":{"line":131,"column":99,"offset":2824},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":2726},"end":{"line":131,"column":99,"offset":2824},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\n<ListView\n  renderRow={this.renderMessage.bind(this)}\n/>\n\n...\n\nrenderMessage(message) {\n  return (\n    <Message\n      message={message}\n      navigator={this.props.navigator}\n      fetchMessages={this.fetchMessages.bind}\n    />\n  );\n}\n","position":{"start":{"line":133,"column":1,"offset":2826},"end":{"line":151,"column":4,"offset":3080},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Passing Props","position":{"start":{"line":153,"column":6,"offset":3087},"end":{"line":153,"column":19,"offset":3100},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":3082},"end":{"line":153,"column":19,"offset":3100},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Explicitly pass props if the number of props is small or if the prop is important enough that you want to be explicit about it.","position":{"start":{"line":155,"column":1,"offset":3102},"end":{"line":155,"column":128,"offset":3229},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3102},"end":{"line":155,"column":128,"offset":3229},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If there are a large number of props, pass in the whole thing or use destructuring to break it apart and pass them correctly.","position":{"start":{"line":157,"column":1,"offset":3231},"end":{"line":157,"column":126,"offset":3356},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3231},"end":{"line":157,"column":126,"offset":3356},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\n//Bad\n\n<MessageBody\n  content=this.props.message.content\n/>\n<MessageFooter\n  replies=this.props.message.replies\n  upvotes=this.props.message.upvotes\n  timestamp=this.props.message.timestamp\n  distance=this.props.message.distance\n/>\n\n// Good\n\nvar {content, ...footer} = this.props.message\n\n<MessageBody {content} />\n<MessageFooter {..footer} />\n","position":{"start":{"line":159,"column":1,"offset":3358},"end":{"line":180,"column":4,"offset":3721},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Sometimes you want to combine objects and pass them as props. In that case use ","position":{"start":{"line":182,"column":1,"offset":3723},"end":{"line":182,"column":80,"offset":3802},"indent":[]}},{"type":"inlineCode","value":"Object.assign","position":{"start":{"line":182,"column":80,"offset":3802},"end":{"line":182,"column":95,"offset":3817},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":182,"column":95,"offset":3817},"end":{"line":182,"column":96,"offset":3818},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":3723},"end":{"line":182,"column":96,"offset":3818},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\n_onPressMessage() {\n\n  var {message, ...props} = this.props;\n  var {votes, ...message} = this.props.message;\n  var fetchMessages = this._updateHearts;\n\n  this.props.navigator({\n    component: Comments,\n    passProps: Object.assign(\n      {..props},\n      {..message},\n      {fetchMessages}\n    ),\n  })\n}\n","position":{"start":{"line":184,"column":1,"offset":3820},"end":{"line":202,"column":4,"offset":4143},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For more information on passing props, see React Native ","position":{"start":{"line":204,"column":1,"offset":4145},"end":{"line":204,"column":57,"offset":4201},"indent":[]}},{"type":"link","title":null,"url":"https://facebook.github.io/react/docs/transferring-props.html","children":[{"type":"text","value":"Transferring Props","position":{"start":{"line":204,"column":58,"offset":4202},"end":{"line":204,"column":76,"offset":4220},"indent":[]}}],"position":{"start":{"line":204,"column":57,"offset":4201},"end":{"line":204,"column":140,"offset":4284},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":4145},"end":{"line":204,"column":140,"offset":4284},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"State and Props","position":{"start":{"line":206,"column":6,"offset":4291},"end":{"line":206,"column":21,"offset":4306},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":4286},"end":{"line":206,"column":21,"offset":4306},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Props are immutable. Do not mutate them.","position":{"start":{"line":208,"column":1,"offset":4308},"end":{"line":208,"column":41,"offset":4348},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":4308},"end":{"line":208,"column":41,"offset":4348},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// Bad\n\nvar component = <Component />;\ncomponent.props.foo = x;\ncomponent.props.bar = y;\n","position":{"start":{"line":210,"column":1,"offset":4350},"end":{"line":217,"column":4,"offset":4457},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"State is mutable.","position":{"start":{"line":219,"column":1,"offset":4459},"end":{"line":219,"column":18,"offset":4476},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":4459},"end":{"line":219,"column":18,"offset":4476},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\nconstructor(){\n  this.state = {messages:[]};\n}\n\n...\n\n_addMessages(data){\n  var messages = data.messages;\n  this.setState({\n    messages: this.state.messages.push(messages)\n  })\n}\n","position":{"start":{"line":221,"column":1,"offset":4478},"end":{"line":236,"column":4,"offset":4676},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Props can be passed into state, but be explicit that they are only 'initial values'","position":{"start":{"line":238,"column":1,"offset":4678},"end":{"line":238,"column":84,"offset":4761},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":4678},"end":{"line":238,"column":84,"offset":4761},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\nconstructor(props){\n  var initialNum = this.props.numHearts;\n  this.state = {numHearts: initialNum};\n}\n\n...\n\n_handleClick(){\n  this.setState({numHearts: this.state.numHearts + 1});\n}\n","position":{"start":{"line":240,"column":1,"offset":4763},"end":{"line":253,"column":4,"offset":4965},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Be sure to  make use of ","position":{"start":{"line":255,"column":1,"offset":4967},"end":{"line":255,"column":25,"offset":4991},"indent":[]}},{"type":"inlineCode","value":"componentWillReceiveProps","position":{"start":{"line":255,"column":25,"offset":4991},"end":{"line":255,"column":52,"offset":5018},"indent":[]}},{"type":"text","value":" to sync state and props, if props are passed to state.","position":{"start":{"line":255,"column":52,"offset":5018},"end":{"line":255,"column":107,"offset":5073},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":4967},"end":{"line":255,"column":107,"offset":5073},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\ncomponentWillReceiveProps(props){\n  this.setState({numHearts: props.numHearts});\n}","position":{"start":{"line":257,"column":1,"offset":5075},"end":{"line":262,"column":4,"offset":5176},"indent":[1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"React Style Guide Cheet Sheet","position":{"start":{"line":264,"column":3,"offset":5180},"end":{"line":264,"column":32,"offset":5209},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":5178},"end":{"line":264,"column":32,"offset":5209},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Custom Classes","position":{"start":{"line":266,"column":4,"offset":5214},"end":{"line":266,"column":18,"offset":5228},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":5211},"end":{"line":266,"column":18,"offset":5228},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"place custom functions above the render function.","position":{"start":{"line":268,"column":3,"offset":5232},"end":{"line":268,"column":52,"offset":5281},"indent":[]}}],"position":{"start":{"line":268,"column":3,"offset":5232},"end":{"line":268,"column":52,"offset":5281},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":5230},"end":{"line":268,"column":52,"offset":5281},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":5230},"end":{"line":268,"column":52,"offset":5281},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"React.createClass({\n  displayName : '',\n  propTypes: {},\n  mixins : [],\n  getInitialState : function() {},\n  componentWillMount : function() {},\n  componentWillUnmount : function() {},\n  _onChange : function() {},\n  _onCreate : function() {},\n  render : function() {}\n});","position":{"start":{"line":270,"column":1,"offset":5283},"end":{"line":282,"column":4,"offset":5572},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Conditional html","position":{"start":{"line":284,"column":4,"offset":5577},"end":{"line":284,"column":20,"offset":5593},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":5574},"end":{"line":284,"column":20,"offset":5593},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In JSX, anything in {} will be evaluated in JavaScript","position":{"start":{"line":286,"column":1,"offset":5595},"end":{"line":286,"column":55,"offset":5649},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":5595},"end":{"line":286,"column":55,"offset":5649},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"{this.state.show && 'This is Shown'}\n{this.state.on ? ‘On’ : ‘Off’}","position":{"start":{"line":288,"column":1,"offset":5651},"end":{"line":291,"column":4,"offset":5736},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For anything more complicated, I have typically been creating a variable inside the render method, suffixed with ‘Html’:","position":{"start":{"line":293,"column":1,"offset":5738},"end":{"line":293,"column":121,"offset":5858},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":5738},"end":{"line":293,"column":121,"offset":5858},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var dinosaurHtml = '';\nif (this.state.showDinosaurs) {\n  dinosaurHtml = (\n    <section>\n      <DinosaurTable />\n      <DinosaurPager />\n    </section>\n  );\n}\n\nreturn (\n  <div>\n    ...\n    {dinosaurHtml}\n    ...\n  </div>\n);","position":{"start":{"line":295,"column":1,"offset":5860},"end":{"line":313,"column":4,"offset":6100},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"JSX as variable or return value","position":{"start":{"line":315,"column":4,"offset":6105},"end":{"line":315,"column":35,"offset":6136},"indent":[]}}],"position":{"start":{"line":315,"column":1,"offset":6102},"end":{"line":315,"column":35,"offset":6136},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var multilineJsx = (\n  <header>\n    <Logo />\n    <Nav />\n  </header>\n);\n\nvar singleLineJsx = <h1>Simple JSX</h1>;","position":{"start":{"line":317,"column":1,"offset":6138},"end":{"line":326,"column":4,"offset":6269},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Self-closing tags","position":{"start":{"line":328,"column":4,"offset":6274},"end":{"line":328,"column":21,"offset":6291},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":6271},"end":{"line":328,"column":21,"offset":6291},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Components without children should simply close themselves","position":{"start":{"line":330,"column":1,"offset":6293},"end":{"line":330,"column":59,"offset":6351},"indent":[]}}],"position":{"start":{"line":330,"column":1,"offset":6293},"end":{"line":330,"column":59,"offset":6351},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" correct ","position":{"start":{"line":332,"column":3,"offset":6355},"end":{"line":332,"column":12,"offset":6364},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":6353},"end":{"line":332,"column":14,"offset":6366},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":6353},"end":{"line":332,"column":14,"offset":6366},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<Logo />","position":{"start":{"line":334,"column":1,"offset":6368},"end":{"line":336,"column":4,"offset":6394},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" bad practise ","position":{"start":{"line":338,"column":3,"offset":6398},"end":{"line":338,"column":17,"offset":6412},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":6396},"end":{"line":338,"column":19,"offset":6414},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":6396},"end":{"line":338,"column":19,"offset":6414},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<Logo></Logo>","position":{"start":{"line":340,"column":1,"offset":6416},"end":{"line":342,"column":4,"offset":6447},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"List Iterations","position":{"start":{"line":344,"column":4,"offset":6452},"end":{"line":344,"column":19,"offset":6467},"indent":[]}}],"position":{"start":{"line":344,"column":1,"offset":6449},"end":{"line":344,"column":19,"offset":6467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"List iterations are better done inline, especially if each list item will be rendered as a component. You may even be able to reduce to one line with fat arrows.","position":{"start":{"line":346,"column":1,"offset":6469},"end":{"line":346,"column":162,"offset":6630},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":6469},"end":{"line":346,"column":162,"offset":6630},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Note ","position":{"start":{"line":348,"column":3,"offset":6634},"end":{"line":348,"column":9,"offset":6640},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":6632},"end":{"line":348,"column":11,"offset":6642},"indent":[]}},{"type":"text","value":" This does require the harmony flag on JSX to be included, which will toggle certain ES6 features (fat arrows, template strings, destructuring, and rest parameters)","position":{"start":{"line":348,"column":11,"offset":6642},"end":{"line":348,"column":175,"offset":6806},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":6632},"end":{"line":348,"column":175,"offset":6806},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"render : function() {\n  return (\n    <ul>\n      {this.state.dinosaursList.map(dinosaur => <DinosaurItem item={dinosaur} />)}\n    </ul>\n  );\n}","position":{"start":{"line":350,"column":1,"offset":6808},"end":{"line":358,"column":4,"offset":6967},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Forms","position":{"start":{"line":360,"column":4,"offset":6972},"end":{"line":360,"column":9,"offset":6977},"indent":[]}}],"position":{"start":{"line":360,"column":1,"offset":6969},"end":{"line":360,"column":9,"offset":6977},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<form onChange={this.inputHandler}>\n  ...\n    <input type=\"text\" name=\"newDinosaurName\" value={this.state.newDinosaurName} />\n  ...\n</form>\n\n// input handler\n\nfunction(event) {\n  actions.propagateValue({\n    field : event.target.name,\n    value : event.target.value\n  });\n}","position":{"start":{"line":362,"column":1,"offset":6979},"end":{"line":377,"column":4,"offset":7270},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Formatting Attributes","position":{"start":{"line":379,"column":4,"offset":7275},"end":{"line":379,"column":25,"offset":7296},"indent":[]}}],"position":{"start":{"line":379,"column":1,"offset":7272},"end":{"line":379,"column":25,"offset":7296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Preferable","position":{"start":{"line":381,"column":1,"offset":7298},"end":{"line":381,"column":11,"offset":7308},"indent":[]}}],"position":{"start":{"line":381,"column":1,"offset":7298},"end":{"line":381,"column":11,"offset":7308},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<input\n  type=\"text\"\n  value={this.state.newDinosaurName}\n  onChange={this.inputHandler.bind(this, 'newDinosaurName')} />","position":{"start":{"line":382,"column":1,"offset":7309},"end":{"line":387,"column":4,"offset":7448},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternative","position":{"start":{"line":389,"column":1,"offset":7450},"end":{"line":389,"column":12,"offset":7461},"indent":[]}}],"position":{"start":{"line":389,"column":1,"offset":7450},"end":{"line":389,"column":12,"offset":7461},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<input type=\"text\"\n       value={this.state.newDinosaurName}\n       onChange={this.inputHandler.bind(this, 'newDinosaurName')} />","position":{"start":{"line":390,"column":1,"offset":7462},"end":{"line":394,"column":4,"offset":7609},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":397,"column":1,"offset":7612},"end":{"line":397,"column":31,"offset":7642},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":397,"column":31,"offset":7642}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-native-style-guide\"\n    }}>{`React-Native Style Guide`}</h1>\n    <h3 {...{\n      \"id\": \"react-native-style-guide-1\"\n    }}>{`React Native Style Guide`}</h3>\n    <h4 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Every component should be treated as an API.`}</li>\n      <li parentName=\"ul\">{`When in doubt, break up a component or function into smaller useful parts.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"es6-and-es7\"\n    }}>{`ES6 and ES7`}</h4>\n    <p>{`The flavor of JS we use is based on ES5 but with ES6 and ES7 transforms. This means, that a large part of the syntax is based on the current version of JS, but is flavored with capabilities that come with ES6 and ES7. For example:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Object destructing (ES6)`}</li>\n      <li parentName=\"ul\">{`Object spread (ES7)`}</li>\n      <li parentName=\"ul\">{`Rest and spread params (ES6)`}</li>\n      <li parentName=\"ul\">{`Promises (ES6)`}</li>\n      <li parentName=\"ul\">{`Arrow Functions (ES6)`}</li>\n      <li parentName=\"ul\">{`Object concise method (ES6)`}</li>\n      <li parentName=\"ul\">{`Object short notation (ES6)`}</li>\n      <li parentName=\"ul\">{`Classes (ES6)`}</li>\n    </ul>\n    <p>{`For more information see `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react-native/docs/javascript-environment.html#content\"\n      }}>{`React Native JavaScript Environment`}</a></p>\n    <h4 {...{\n      \"id\": \"component-creation\"\n    }}>{`Component Creation`}</h4>\n    <p>{`Components should be created using ES6 classes and Object Short Notation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n// Bad\n\nvar ChatBox = React.createClass({\n\n  getInitialState: function(){\n    return {toggle: 'on'};\n  },\n\n  render: function(){\n    return (\n      <Text> Example </Text>\n    );\n  }\n\n})\n\n// Good\n\nclass ChatBox extends React.Component{\n\n  constructor(){\n    this.state = {toggle: 'on'}\n  }\n\n  render(){\n    return (\n      <Text> Example </Text>\n    );\n  }\n\n}\n\n`}</code></pre>\n    <p>{`Component functions that are not life-cycle functions should be created with an underscore at the beginning of the function name.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n_fetchmessages(){\n  fetch(requestURL)\n    .then((response)=> response.json() )\n    .then((responseData)=> {\n      this.setState({messages: responseData})\n    })\n    .done();\n}\n\n_turnEditOn(){\n  this.setState({edit: true});\n}\n\n`}</code></pre>\n    <p>{`Keep life-cycle functions at the top of the object constructor in logical order.`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`constructor`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`componentWillMount`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`componentDidMount`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`componentWillReceiveProps`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`render`}</inlineCode></li>\n    </ol>\n    <p>{`For more information see `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react/docs/component-specs.html\"\n      }}>{`Component Specs and Lifecycle`}</a></p>\n    <p>{`Every component function should be as parsimonious as possible. If you find yourself creating a function that is doing more than two things at once, then break up the function into smaller functions.`}</p>\n    <h4 {...{\n      \"id\": \"using-bind\"\n    }}>{`Using Bind`}</h4>\n    <p>{`When passing a function as prop to a child component, the use of bind is not necessary. React Native automatically binds `}<inlineCode parentName=\"p\">{`this`}</inlineCode>{` to that function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n// Bad\n\nrender(){\n  return(\n    <CameraButton\n      selectImage={this.selectImage.bind(this)}\n    />\n  );\n}\n\n// Good\n\nrender(){\n  return(\n    <CameraButton\n      selectImage={this.selectImage}\n    />\n  );\n}\n\n`}</code></pre>\n    <p>{`It necessary however to use bind, when passing a component function to an event prop. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n<ListView\n  renderRow={this.renderMessage.bind(this)}\n/>\n\n...\n\nrenderMessage(message) {\n  return (\n    <Message\n      message={message}\n      navigator={this.props.navigator}\n      fetchMessages={this.fetchMessages.bind}\n    />\n  );\n}\n\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"passing-props\"\n    }}>{`Passing Props`}</h4>\n    <p>{`Explicitly pass props if the number of props is small or if the prop is important enough that you want to be explicit about it.`}</p>\n    <p>{`If there are a large number of props, pass in the whole thing or use destructuring to break it apart and pass them correctly.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n//Bad\n\n<MessageBody\n  content=this.props.message.content\n/>\n<MessageFooter\n  replies=this.props.message.replies\n  upvotes=this.props.message.upvotes\n  timestamp=this.props.message.timestamp\n  distance=this.props.message.distance\n/>\n\n// Good\n\nvar {content, ...footer} = this.props.message\n\n<MessageBody {content} />\n<MessageFooter {..footer} />\n\n`}</code></pre>\n    <p>{`Sometimes you want to combine objects and pass them as props. In that case use `}<inlineCode parentName=\"p\">{`Object.assign`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n_onPressMessage() {\n\n  var {message, ...props} = this.props;\n  var {votes, ...message} = this.props.message;\n  var fetchMessages = this._updateHearts;\n\n  this.props.navigator({\n    component: Comments,\n    passProps: Object.assign(\n      {..props},\n      {..message},\n      {fetchMessages}\n    ),\n  })\n}\n\n`}</code></pre>\n    <p>{`For more information on passing props, see React Native `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react/docs/transferring-props.html\"\n      }}>{`Transferring Props`}</a></p>\n    <h4 {...{\n      \"id\": \"state-and-props\"\n    }}>{`State and Props`}</h4>\n    <p>{`Props are immutable. Do not mutate them.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Bad\n\nvar component = <Component />;\ncomponent.props.foo = x;\ncomponent.props.bar = y;\n\n`}</code></pre>\n    <p>{`State is mutable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nconstructor(){\n  this.state = {messages:[]};\n}\n\n...\n\n_addMessages(data){\n  var messages = data.messages;\n  this.setState({\n    messages: this.state.messages.push(messages)\n  })\n}\n\n`}</code></pre>\n    <p>{`Props can be passed into state, but be explicit that they are only 'initial values'`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nconstructor(props){\n  var initialNum = this.props.numHearts;\n  this.state = {numHearts: initialNum};\n}\n\n...\n\n_handleClick(){\n  this.setState({numHearts: this.state.numHearts + 1});\n}\n\n`}</code></pre>\n    <p>{`Be sure to  make use of `}<inlineCode parentName=\"p\">{`componentWillReceiveProps`}</inlineCode>{` to sync state and props, if props are passed to state.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\ncomponentWillReceiveProps(props){\n  this.setState({numHearts: props.numHearts});\n}\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"react-style-guide-cheet-sheet\"\n    }}>{`React Style Guide Cheet Sheet`}</h1>\n    <h2 {...{\n      \"id\": \"custom-classes\"\n    }}>{`Custom Classes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`place custom functions above the render function.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`React.createClass({\n  displayName : '',\n  propTypes: {},\n  mixins : [],\n  getInitialState : function() {},\n  componentWillMount : function() {},\n  componentWillUnmount : function() {},\n  _onChange : function() {},\n  _onCreate : function() {},\n  render : function() {}\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"conditional-html\"\n    }}>{`Conditional html`}</h2>\n    <p>{`In JSX, anything in {} will be evaluated in JavaScript`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{this.state.show && 'This is Shown'}\n{this.state.on ? ‘On’ : ‘Off’}\n`}</code></pre>\n    <p>{`For anything more complicated, I have typically been creating a variable inside the render method, suffixed with ‘Html’:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var dinosaurHtml = '';\nif (this.state.showDinosaurs) {\n  dinosaurHtml = (\n    <section>\n      <DinosaurTable />\n      <DinosaurPager />\n    </section>\n  );\n}\n\nreturn (\n  <div>\n    ...\n    {dinosaurHtml}\n    ...\n  </div>\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"jsx-as-variable-or-return-value\"\n    }}>{`JSX as variable or return value`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var multilineJsx = (\n  <header>\n    <Logo />\n    <Nav />\n  </header>\n);\n\nvar singleLineJsx = <h1>Simple JSX</h1>;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"self-closing-tags\"\n    }}>{`Self-closing tags`}</h2>\n    <p>{`Components without children should simply close themselves`}</p>\n    <p><strong parentName=\"p\">{` correct `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Logo />\n`}</code></pre>\n    <p><strong parentName=\"p\">{` bad practise `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Logo></Logo>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"list-iterations\"\n    }}>{`List Iterations`}</h2>\n    <p>{`List iterations are better done inline, especially if each list item will be rendered as a component. You may even be able to reduce to one line with fat arrows.`}</p>\n    <p><strong parentName=\"p\">{` Note `}</strong>{` This does require the harmony flag on JSX to be included, which will toggle certain ES6 features (fat arrows, template strings, destructuring, and rest parameters)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`render : function() {\n  return (\n    <ul>\n      {this.state.dinosaursList.map(dinosaur => <DinosaurItem item={dinosaur} />)}\n    </ul>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"forms\"\n    }}>{`Forms`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<form onChange={this.inputHandler}>\n  ...\n    <input type=\"text\" name=\"newDinosaurName\" value={this.state.newDinosaurName} />\n  ...\n</form>\n\n// input handler\n\nfunction(event) {\n  actions.propagateValue({\n    field : event.target.name,\n    value : event.target.value\n  });\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"formatting-attributes\"\n    }}>{`Formatting Attributes`}</h2>\n    <p>{`Preferable`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<input\n  type=\"text\"\n  value={this.state.newDinosaurName}\n  onChange={this.inputHandler.bind(this, 'newDinosaurName')} />\n`}</code></pre>\n    <p>{`Alternative`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<input type=\"text\"\n       value={this.state.newDinosaurName}\n       onChange={this.inputHandler.bind(this, 'newDinosaurName')} />\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}