{"expireTime":9007200848610915000,"key":"gatsby-plugin-mdx-entire-payload-54d43ad75a813aff0e2be253afeb7c1d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Elm Architecture","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":19,"offset":185},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":19,"offset":185},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Form Example","position":{"start":{"line":10,"column":4,"offset":190},"end":{"line":10,"column":16,"offset":202},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":10,"column":16,"offset":202},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example gives an idea of the general layout.","position":{"start":{"line":12,"column":1,"offset":204},"end":{"line":12,"column":50,"offset":253},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":204},"end":{"line":12,"column":50,"offset":253},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is important to note how the ","position":{"start":{"line":14,"column":1,"offset":255},"end":{"line":14,"column":33,"offset":287},"indent":[]}},{"type":"inlineCode","value":"Model","position":{"start":{"line":14,"column":33,"offset":287},"end":{"line":14,"column":40,"offset":294},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":14,"column":40,"offset":294},"end":{"line":14,"column":42,"offset":296},"indent":[]}},{"type":"inlineCode","value":"Update","position":{"start":{"line":14,"column":42,"offset":296},"end":{"line":14,"column":50,"offset":304},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":14,"column":50,"offset":304},"end":{"line":14,"column":55,"offset":309},"indent":[]}},{"type":"inlineCode","value":"View","position":{"start":{"line":14,"column":55,"offset":309},"end":{"line":14,"column":61,"offset":315},"indent":[]}},{"type":"text","value":" within the example code works.","position":{"start":{"line":14,"column":61,"offset":315},"end":{"line":14,"column":92,"offset":346},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":255},"end":{"line":14,"column":92,"offset":346},"indent":[]}},{"type":"code","lang":"elm","meta":null,"value":"import Browser\nimport Html exposing (..)\nimport Html.Attributes exposing (..)\nimport Html.Events exposing (onInput)\n\n\n\n-- MAIN\n\n\nmain =\n  Browser.sandbox { init = init, update = update, view = view }\n\n\n\n-- MODEL\n\n\ntype alias Model =\n  { name : String\n  , password : String\n  , passwordAgain : String\n  }\n\n\ninit : Model\ninit =\n  Model \"\" \"\" \"\"\n\n\n\n-- UPDATE\n\n\ntype Msg\n  = Name String\n  | Password String\n  | PasswordAgain String\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    Name name ->\n      { model | name = name }\n\n    Password password ->\n      { model | password = password }\n\n    PasswordAgain password ->\n      { model | passwordAgain = password }\n\n\n\n-- VIEW\n\n\nview : Model -> Html Msg\nview model =\n  div []\n    [ viewInput \"text\" \"Name\" model.name Name\n    , viewInput \"password\" \"Password\" model.password Password\n    , viewInput \"password\" \"Re-enter Password\" model.passwordAgain PasswordAgain\n    , viewValidation model\n    ]\n\n\nviewInput : String -> String -> String -> (String -> msg) -> Html msg\nviewInput t p v toMsg =\n  input [ type_ t, placeholder p, value v, onInput toMsg ] []\n\n\nviewValidation : Model -> Html msg\nviewValidation model =\n  if model.password == model.passwordAgain then\n    div [ style \"color\" \"green\" ] [ text \"OK\" ]\n  else\n    div [ style \"color\" \"red\" ] [ text \"Passwords do not match!\" ]","position":{"start":{"line":16,"column":1,"offset":348},"end":{"line":95,"column":4,"offset":1707},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Useful links","position":{"start":{"line":97,"column":4,"offset":1712},"end":{"line":97,"column":16,"offset":1724},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":1709},"end":{"line":97,"column":16,"offset":1724},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://guide.elm-lang.org/architecture/buttons.html","children":[{"type":"text","value":"Example and Insight into the Model-Update-View","position":{"start":{"line":99,"column":4,"offset":1729},"end":{"line":99,"column":50,"offset":1775},"indent":[]}}],"position":{"start":{"line":99,"column":3,"offset":1728},"end":{"line":99,"column":105,"offset":1830},"indent":[]}}],"position":{"start":{"line":99,"column":3,"offset":1728},"end":{"line":99,"column":105,"offset":1830},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":1726},"end":{"line":99,"column":105,"offset":1830},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://ellie-app.com/37gWB93n8jJa1","children":[{"type":"text","value":"An online sandbox example for Elm","position":{"start":{"line":100,"column":4,"offset":1834},"end":{"line":100,"column":37,"offset":1867},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":1833},"end":{"line":100,"column":75,"offset":1905},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":1833},"end":{"line":100,"column":75,"offset":1905},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":1831},"end":{"line":100,"column":75,"offset":1905},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://elmprogramming.com/function.html","children":[{"type":"text","value":"Functions in Elm","position":{"start":{"line":101,"column":4,"offset":1909},"end":{"line":101,"column":20,"offset":1925},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":1908},"end":{"line":101,"column":63,"offset":1968},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":1908},"end":{"line":101,"column":63,"offset":1968},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":1906},"end":{"line":101,"column":63,"offset":1968},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":1726},"end":{"line":101,"column":63,"offset":1968},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":104,"column":1,"offset":1971},"end":{"line":104,"column":31,"offset":2001},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":104,"column":31,"offset":2001}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"elm-architecture\"\n    }}>{`Elm Architecture`}</h1>\n    <h2 {...{\n      \"id\": \"form-example\"\n    }}>{`Form Example`}</h2>\n    <p>{`This example gives an idea of the general layout.`}</p>\n    <p>{`It is important to note how the `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Update`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`View`}</inlineCode>{` within the example code works.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`import Browser\nimport Html exposing (..)\nimport Html.Attributes exposing (..)\nimport Html.Events exposing (onInput)\n\n\n\n-- MAIN\n\n\nmain =\n  Browser.sandbox { init = init, update = update, view = view }\n\n\n\n-- MODEL\n\n\ntype alias Model =\n  { name : String\n  , password : String\n  , passwordAgain : String\n  }\n\n\ninit : Model\ninit =\n  Model \"\" \"\" \"\"\n\n\n\n-- UPDATE\n\n\ntype Msg\n  = Name String\n  | Password String\n  | PasswordAgain String\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    Name name ->\n      { model | name = name }\n\n    Password password ->\n      { model | password = password }\n\n    PasswordAgain password ->\n      { model | passwordAgain = password }\n\n\n\n-- VIEW\n\n\nview : Model -> Html Msg\nview model =\n  div []\n    [ viewInput \"text\" \"Name\" model.name Name\n    , viewInput \"password\" \"Password\" model.password Password\n    , viewInput \"password\" \"Re-enter Password\" model.passwordAgain PasswordAgain\n    , viewValidation model\n    ]\n\n\nviewInput : String -> String -> String -> (String -> msg) -> Html msg\nviewInput t p v toMsg =\n  input [ type_ t, placeholder p, value v, onInput toMsg ] []\n\n\nviewValidation : Model -> Html msg\nviewValidation model =\n  if model.password == model.passwordAgain then\n    div [ style \"color\" \"green\" ] [ text \"OK\" ]\n  else\n    div [ style \"color\" \"red\" ] [ text \"Passwords do not match!\" ]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"useful-links\"\n    }}>{`Useful links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://guide.elm-lang.org/architecture/buttons.html\"\n        }}>{`Example and Insight into the Model-Update-View`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://ellie-app.com/37gWB93n8jJa1\"\n        }}>{`An online sandbox example for Elm`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://elmprogramming.com/function.html\"\n        }}>{`Functions in Elm`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}