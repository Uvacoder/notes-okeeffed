{"expireTime":9007200849425520000,"key":"gatsby-plugin-mdx-entire-payload-e6d7e70898baf10901ef3b3d455856cc-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Add a Slack Bot!","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":19,"offset":184},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":19,"offset":184},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// this needs to be finished","position":{"start":{"line":9,"column":1,"offset":186},"end":{"line":9,"column":29,"offset":214},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":186},"end":{"line":9,"column":29,"offset":214},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Table of Contents","position":{"start":{"line":11,"column":4,"offset":219},"end":{"line":11,"column":21,"offset":236},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":216},"end":{"line":11,"column":21,"offset":236},"indent":[]}},{"type":"jsx","value":"<a href=\"#section\">title</a>\n---- <a href=\"#subsection\">title</a>","position":{"start":{"line":13,"column":1,"offset":238},"end":{"line":14,"column":37,"offset":303},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":18,"column":1,"offset":307},"end":{"line":18,"column":4,"offset":310},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Intro","position":{"start":{"line":20,"column":4,"offset":315},"end":{"line":20,"column":9,"offset":320},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":312},"end":{"line":20,"column":9,"offset":320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First of all, clone the ","position":{"start":{"line":22,"column":1,"offset":322},"end":{"line":22,"column":25,"offset":346},"indent":[]}},{"type":"inlineCode","value":"python_rtmbot","position":{"start":{"line":22,"column":25,"offset":346},"end":{"line":22,"column":40,"offset":361},"indent":[]}},{"type":"text","value":" git repo.","position":{"start":{"line":22,"column":40,"offset":361},"end":{"line":22,"column":50,"offset":371},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":322},"end":{"line":22,"column":50,"offset":371},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then, head to slack.com for your personal account, click ","position":{"start":{"line":24,"column":1,"offset":373},"end":{"line":24,"column":58,"offset":430},"indent":[]}},{"type":"inlineCode","value":"build","position":{"start":{"line":24,"column":58,"offset":430},"end":{"line":24,"column":65,"offset":437},"indent":[]}},{"type":"text","value":" from the apps page and add a custom bot.","position":{"start":{"line":24,"column":65,"offset":437},"end":{"line":24,"column":106,"offset":478},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":373},"end":{"line":24,"column":106,"offset":478},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Grab the API token and copy it into a ","position":{"start":{"line":26,"column":1,"offset":480},"end":{"line":26,"column":39,"offset":518},"indent":[]}},{"type":"inlineCode","value":"rtmbot.conf","position":{"start":{"line":26,"column":39,"offset":518},"end":{"line":26,"column":52,"offset":531},"indent":[]}},{"type":"text","value":" file at the root of your directory.","position":{"start":{"line":26,"column":52,"offset":531},"end":{"line":26,"column":88,"offset":567},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":480},"end":{"line":26,"column":88,"offset":567},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating plugins","position":{"start":{"line":30,"column":4,"offset":574},"end":{"line":30,"column":20,"offset":590},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":571},"end":{"line":30,"column":20,"offset":590},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the ","position":{"start":{"line":32,"column":1,"offset":592},"end":{"line":32,"column":8,"offset":599},"indent":[]}},{"type":"inlineCode","value":"plugins","position":{"start":{"line":32,"column":8,"offset":599},"end":{"line":32,"column":17,"offset":608},"indent":[]}},{"type":"text","value":" folder, create a folder with the name of the plugin and then within the ","position":{"start":{"line":32,"column":17,"offset":608},"end":{"line":32,"column":90,"offset":681},"indent":[]}},{"type":"inlineCode","value":"plugin.py","position":{"start":{"line":32,"column":90,"offset":681},"end":{"line":32,"column":101,"offset":692},"indent":[]}},{"type":"text","value":" itself. Inside, you want to ensure you have a ","position":{"start":{"line":32,"column":101,"offset":692},"end":{"line":32,"column":148,"offset":739},"indent":[]}},{"type":"inlineCode","value":"outputs = []","position":{"start":{"line":32,"column":148,"offset":739},"end":{"line":32,"column":162,"offset":753},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":32,"column":162,"offset":753},"end":{"line":32,"column":167,"offset":758},"indent":[]}},{"type":"inlineCode","value":"crontable = []","position":{"start":{"line":32,"column":167,"offset":758},"end":{"line":32,"column":183,"offset":774},"indent":[]}},{"type":"text","value":" list ready to go.","position":{"start":{"line":32,"column":183,"offset":774},"end":{"line":32,"column":201,"offset":792},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":592},"end":{"line":32,"column":201,"offset":792},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From here, you can define processes as so: ","position":{"start":{"line":34,"column":1,"offset":794},"end":{"line":34,"column":44,"offset":837},"indent":[]}},{"type":"inlineCode","value":"def process_namehere(data):","position":{"start":{"line":34,"column":44,"offset":837},"end":{"line":34,"column":73,"offset":866},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":34,"column":73,"offset":866},"end":{"line":34,"column":74,"offset":867},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":794},"end":{"line":34,"column":74,"offset":867},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The data argument is the data recieved by the bot.","position":{"start":{"line":36,"column":1,"offset":869},"end":{"line":36,"column":51,"offset":919},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":869},"end":{"line":36,"column":51,"offset":919},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Banana Plugin","position":{"start":{"line":40,"column":4,"offset":926},"end":{"line":40,"column":17,"offset":939},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":923},"end":{"line":40,"column":17,"offset":939},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the ","position":{"start":{"line":42,"column":1,"offset":941},"end":{"line":42,"column":8,"offset":948},"indent":[]}},{"type":"inlineCode","value":"plugins","position":{"start":{"line":42,"column":8,"offset":948},"end":{"line":42,"column":17,"offset":957},"indent":[]}},{"type":"text","value":" directory, create ","position":{"start":{"line":42,"column":17,"offset":957},"end":{"line":42,"column":36,"offset":976},"indent":[]}},{"type":"inlineCode","value":"banana.py","position":{"start":{"line":42,"column":36,"offset":976},"end":{"line":42,"column":47,"offset":987},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":941},"end":{"line":42,"column":47,"offset":987},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import random\n\nfrom nltk.tokenize import sent_tokenizem wordpunct_tokenize\nfrom noun_hound import NounHound\n\ncrontable = []\noutputs = []\n\nnh = NounHound()\n\ndef process_message(data):\n\t\tmessaage = data['text']\n\t\tsentences = sent_tokenize(message)\n\t\tsentences_num = random.randint(0, len(sentences) - 1)\n\t\tsetence = sentences[stence_num]\n\t\twords = wordpunct_tokenize(sentence)\n\t\tnouns = nh.process(sentence)\n\t\treplacement = random.choice(nouns['nouns'])\n\t\twords[words.index(replacement) = 'banana']\n\t\tsentences[sentence_num] = ' '.join(words)\n\t\toutputs.append([data[\"channel\"], ' '.join(sentences)])","position":{"start":{"line":44,"column":1,"offset":989},"end":{"line":66,"column":4,"offset":1600},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":69,"column":1,"offset":1603},"end":{"line":69,"column":31,"offset":1633},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":69,"column":31,"offset":1633}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-slack-bot\"\n    }}>{`Add a Slack Bot!`}</h1>\n    <p>{`// this needs to be finished`}</p>\n    <h2 {...{\n      \"id\": \"table-of-contents\"\n    }}>{`Table of Contents`}</h2>\n    <a href=\"#section\">title</a>\n---- <a href=\"#subsection\">title</a>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"intro\"\n    }}>{`Intro`}</h2>\n    <p>{`First of all, clone the `}<inlineCode parentName=\"p\">{`python_rtmbot`}</inlineCode>{` git repo.`}</p>\n    <p>{`Then, head to slack.com for your personal account, click `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` from the apps page and add a custom bot.`}</p>\n    <p>{`Grab the API token and copy it into a `}<inlineCode parentName=\"p\">{`rtmbot.conf`}</inlineCode>{` file at the root of your directory.`}</p>\n    <h2 {...{\n      \"id\": \"creating-plugins\"\n    }}>{`Creating plugins`}</h2>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` folder, create a folder with the name of the plugin and then within the `}<inlineCode parentName=\"p\">{`plugin.py`}</inlineCode>{` itself. Inside, you want to ensure you have a `}<inlineCode parentName=\"p\">{`outputs = []`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`crontable = []`}</inlineCode>{` list ready to go.`}</p>\n    <p>{`From here, you can define processes as so: `}<inlineCode parentName=\"p\">{`def process_namehere(data):`}</inlineCode>{`.`}</p>\n    <p>{`The data argument is the data recieved by the bot.`}</p>\n    <h2 {...{\n      \"id\": \"banana-plugin\"\n    }}>{`Banana Plugin`}</h2>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` directory, create `}<inlineCode parentName=\"p\">{`banana.py`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import random\n\nfrom nltk.tokenize import sent_tokenizem wordpunct_tokenize\nfrom noun_hound import NounHound\n\ncrontable = []\noutputs = []\n\nnh = NounHound()\n\ndef process_message(data):\n        messaage = data['text']\n        sentences = sent_tokenize(message)\n        sentences_num = random.randint(0, len(sentences) - 1)\n        setence = sentences[stence_num]\n        words = wordpunct_tokenize(sentence)\n        nouns = nh.process(sentence)\n        replacement = random.choice(nouns['nouns'])\n        words[words.index(replacement) = 'banana']\n        sentences[sentence_num] = ' '.join(words)\n        outputs.append([data[\"channel\"], ' '.join(sentences)])\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}