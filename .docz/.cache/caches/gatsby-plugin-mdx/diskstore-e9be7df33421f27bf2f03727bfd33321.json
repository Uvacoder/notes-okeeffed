{"expireTime":9007200848610862000,"key":"gatsby-plugin-mdx-entire-payload-b5daaeb6cc717f6d006489726cdfcb9e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Ruby Lambda Functions","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":24,"offset":190},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":24,"offset":190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The basic gist of declaration and usage is to use the ","position":{"start":{"line":10,"column":1,"offset":192},"end":{"line":10,"column":55,"offset":246},"indent":[]}},{"type":"inlineCode","value":"lambda","position":{"start":{"line":10,"column":55,"offset":246},"end":{"line":10,"column":63,"offset":254},"indent":[]}},{"type":"text","value":" keyword. Note that Lambda functions have subtle differences to Proc functions, although they both derive from the Proc object.","position":{"start":{"line":10,"column":63,"offset":254},"end":{"line":10,"column":190,"offset":381},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":192},"end":{"line":10,"column":190,"offset":381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Lambda function enforces the number of arguments passed.","position":{"start":{"line":12,"column":1,"offset":383},"end":{"line":12,"column":61,"offset":443},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":383},"end":{"line":12,"column":61,"offset":443},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In addition, Lambda and Proc functions treat the ","position":{"start":{"line":14,"column":1,"offset":445},"end":{"line":14,"column":50,"offset":494},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":14,"column":50,"offset":494},"end":{"line":14,"column":58,"offset":502},"indent":[]}},{"type":"text","value":" differently. Lambda will return from the scope of that closure function, whereas Proc will return from the parent scope.","position":{"start":{"line":14,"column":58,"offset":502},"end":{"line":14,"column":179,"offset":623},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":445},"end":{"line":14,"column":179,"offset":623},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Simple Example","position":{"start":{"line":16,"column":4,"offset":628},"end":{"line":16,"column":18,"offset":642},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":625},"end":{"line":16,"column":18,"offset":642},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"# lambda.rb\nclass Lambda\n    def self.hello\n        helloWorld = lambda { return \"Hello, World!\" }\n        res = helloWorld.call\n    end\n\n    def self.sum(a, b)\n        sumLambda = lambda {|a,b| a + b }\n        res = sumLambda.call(a, b)\n    end\nend","position":{"start":{"line":18,"column":1,"offset":644},"end":{"line":31,"column":4,"offset":905},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Test file","position":{"start":{"line":33,"column":1,"offset":907},"end":{"line":33,"column":10,"offset":916},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":907},"end":{"line":33,"column":10,"offset":916},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"# lambda_test.rb\nbegin\n  gem 'minitest', '>= 5.0.0'\n  require 'minitest/autorun'\n  require_relative 'lambda'\nrescue Gem::LoadError => e\n  puts \"\\nMissing Dependency:\\n#{e.backtrace.first} #{e.message}\"\n  puts 'Minitest 5.0 gem must be installed for the Ruby track.'\nrescue LoadError => e\n  puts \"\\nError:\\n#{e.backtrace.first} #{e.message}\"\n  puts DATA.read\n  exit 1\nend\n\n# Common test data version: 1.1.0 be3ae66\nclass LambdaTest < Minitest::Test\n  def test_hello_world_lambda\n    # skip\n    assert_equal \"Hello, World!\", Lambda.hello\n  end\n\n  def test_sum_lambda\n    # skip\n    assert_equal 3, Lambda.sum(1,2)\n  end\nend\n\n__END__","position":{"start":{"line":35,"column":1,"offset":918},"end":{"line":64,"column":4,"offset":1560},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":67,"column":1,"offset":1563},"end":{"line":67,"column":31,"offset":1593},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":67,"column":31,"offset":1593}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ruby-lambda-functions\"\n    }}>{`Ruby Lambda Functions`}</h1>\n    <p>{`The basic gist of declaration and usage is to use the `}<inlineCode parentName=\"p\">{`lambda`}</inlineCode>{` keyword. Note that Lambda functions have subtle differences to Proc functions, although they both derive from the Proc object.`}</p>\n    <p>{`The Lambda function enforces the number of arguments passed.`}</p>\n    <p>{`In addition, Lambda and Proc functions treat the `}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` differently. Lambda will return from the scope of that closure function, whereas Proc will return from the parent scope.`}</p>\n    <h2 {...{\n      \"id\": \"simple-example\"\n    }}>{`Simple Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# lambda.rb\nclass Lambda\n    def self.hello\n        helloWorld = lambda { return \"Hello, World!\" }\n        res = helloWorld.call\n    end\n\n    def self.sum(a, b)\n        sumLambda = lambda {|a,b| a + b }\n        res = sumLambda.call(a, b)\n    end\nend\n`}</code></pre>\n    <p>{`Test file`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# lambda_test.rb\nbegin\n  gem 'minitest', '>= 5.0.0'\n  require 'minitest/autorun'\n  require_relative 'lambda'\nrescue Gem::LoadError => e\n  puts \"\\\\nMissing Dependency:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts 'Minitest 5.0 gem must be installed for the Ruby track.'\nrescue LoadError => e\n  puts \"\\\\nError:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts DATA.read\n  exit 1\nend\n\n# Common test data version: 1.1.0 be3ae66\nclass LambdaTest < Minitest::Test\n  def test_hello_world_lambda\n    # skip\n    assert_equal \"Hello, World!\", Lambda.hello\n  end\n\n  def test_sum_lambda\n    # skip\n    assert_equal 3, Lambda.sum(1,2)\n  end\nend\n\n__END__\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}