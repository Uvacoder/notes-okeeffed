{"expireTime":9007200867335902000,"key":"gatsby-plugin-mdx-entire-payload-896a31855f38c5d8393a0b310571c79e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Configuring Stripe for PHP and Slim","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":38,"offset":204},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":38,"offset":204},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":209},"end":{"line":10,"column":13,"offset":218},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":206},"end":{"line":10,"column":13,"offset":218},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://getcomposer.org/download/","children":[{"type":"text","value":"Composer installation","position":{"start":{"line":12,"column":5,"offset":224},"end":{"line":12,"column":26,"offset":245},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":223},"end":{"line":12,"column":62,"offset":281},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":223},"end":{"line":12,"column":62,"offset":281},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":220},"end":{"line":12,"column":62,"offset":281},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://www.slimframework.com/docs/v4/start/installation.html","children":[{"type":"text","value":"Getting started with Slim","position":{"start":{"line":13,"column":5,"offset":286},"end":{"line":13,"column":30,"offset":311},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":285},"end":{"line":13,"column":93,"offset":374},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":285},"end":{"line":13,"column":93,"offset":374},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":282},"end":{"line":13,"column":93,"offset":374},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://www.slimframework.com/docs/v4/objects/request.html","children":[{"type":"text","value":"Request Object - Slim","position":{"start":{"line":14,"column":5,"offset":379},"end":{"line":14,"column":26,"offset":400},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":378},"end":{"line":14,"column":86,"offset":460},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":378},"end":{"line":14,"column":86,"offset":460},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":375},"end":{"line":14,"column":86,"offset":460},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.php.net/manual/en/language.exceptions.php","children":[{"type":"text","value":"PHP Exceptions","position":{"start":{"line":15,"column":5,"offset":465},"end":{"line":15,"column":19,"offset":479},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":464},"end":{"line":15,"column":75,"offset":535},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":464},"end":{"line":15,"column":75,"offset":535},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":461},"end":{"line":15,"column":75,"offset":535},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://akrabat.com/receiving-input-into-a-slim-4-application/","children":[{"type":"text","value":"Receiving input into a Slim 4 application","position":{"start":{"line":16,"column":5,"offset":540},"end":{"line":16,"column":46,"offset":581},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":539},"end":{"line":16,"column":111,"offset":646},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":539},"end":{"line":16,"column":111,"offset":646},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":536},"end":{"line":16,"column":111,"offset":646},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/vlucas/phpdotenv","children":[{"type":"text","value":"PHP Dotenv","position":{"start":{"line":17,"column":5,"offset":651},"end":{"line":17,"column":15,"offset":661},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":650},"end":{"line":17,"column":53,"offset":699},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":650},"end":{"line":17,"column":53,"offset":699},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":647},"end":{"line":17,"column":53,"offset":699},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/stripe/stripe-php","children":[{"type":"text","value":"Stripe PHP Github","position":{"start":{"line":18,"column":5,"offset":704},"end":{"line":18,"column":22,"offset":721},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":703},"end":{"line":18,"column":61,"offset":760},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":703},"end":{"line":18,"column":61,"offset":760},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":700},"end":{"line":18,"column":61,"offset":760},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stripe.com/docs/api","children":[{"type":"text","value":"Stripe API","position":{"start":{"line":19,"column":5,"offset":765},"end":{"line":19,"column":15,"offset":775},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":764},"end":{"line":19,"column":45,"offset":805},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":764},"end":{"line":19,"column":45,"offset":805},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":761},"end":{"line":19,"column":45,"offset":805},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://hotexamples.com/examples/slim.http/Request/getParsedBody/php-request-getparsedbody-method-examples.html","children":[{"type":"text","value":"getParsedBody Slim","position":{"start":{"line":20,"column":5,"offset":810},"end":{"line":20,"column":23,"offset":828},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":809},"end":{"line":20,"column":137,"offset":942},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":809},"end":{"line":20,"column":137,"offset":942},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":806},"end":{"line":20,"column":137,"offset":942},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":220},"end":{"line":20,"column":137,"offset":942},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Get Started","position":{"start":{"line":22,"column":4,"offset":947},"end":{"line":22,"column":15,"offset":958},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":944},"end":{"line":22,"column":15,"offset":958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure ","position":{"start":{"line":24,"column":1,"offset":960},"end":{"line":24,"column":8,"offset":967},"indent":[]}},{"type":"inlineCode","value":"composer","position":{"start":{"line":24,"column":8,"offset":967},"end":{"line":24,"column":18,"offset":977},"indent":[]}},{"type":"text","value":" is installed correctly and run the following. Note that you need to ensure that the downloaded ","position":{"start":{"line":24,"column":18,"offset":977},"end":{"line":24,"column":114,"offset":1073},"indent":[]}},{"type":"inlineCode","value":"composer.phar","position":{"start":{"line":24,"column":114,"offset":1073},"end":{"line":24,"column":129,"offset":1088},"indent":[]}},{"type":"text","value":" file from the installation instructions must be in your ","position":{"start":{"line":24,"column":129,"offset":1088},"end":{"line":24,"column":186,"offset":1145},"indent":[]}},{"type":"inlineCode","value":"$PATH","position":{"start":{"line":24,"column":186,"offset":1145},"end":{"line":24,"column":193,"offset":1152},"indent":[]}},{"type":"text","value":" as ","position":{"start":{"line":24,"column":193,"offset":1152},"end":{"line":24,"column":197,"offset":1156},"indent":[]}},{"type":"inlineCode","value":"composer","position":{"start":{"line":24,"column":197,"offset":1156},"end":{"line":24,"column":207,"offset":1166},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":24,"column":207,"offset":1166},"end":{"line":24,"column":208,"offset":1167},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":960},"end":{"line":24,"column":208,"offset":1167},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"mkdir slim-stripe && cd slim-stripe\ncomposer require slim/slim:\"4.*\"\n# required to enable App::Run() etc without manual ServerRequest\ncomposer require slim/psr7\n# installing for Stripe\ncomposer require stripe/stripe-php\n# required to read dotenv vars\ncomposer require vlucas/phpdotenv\nmkdir -p src/public\ntouch src/public/index.php\ntouch .env","position":{"start":{"line":26,"column":1,"offset":1169},"end":{"line":38,"column":4,"offset":1524},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To check Slim is up and working, add this to ","position":{"start":{"line":40,"column":1,"offset":1526},"end":{"line":40,"column":46,"offset":1571},"indent":[]}},{"type":"inlineCode","value":"src/public/index.php","position":{"start":{"line":40,"column":46,"offset":1571},"end":{"line":40,"column":68,"offset":1593},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":40,"column":68,"offset":1593},"end":{"line":40,"column":69,"offset":1594},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1526},"end":{"line":40,"column":69,"offset":1594},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse Slim\\Factory\\AppFactory;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n$app = AppFactory::create();\n\n$app->get('/', function (Request $request, Response $response, $args) {\n    $response->getBody()->write(\"Hello world!\");\n    return $response;\n});\n\n$app->run();","position":{"start":{"line":42,"column":1,"offset":1596},"end":{"line":58,"column":4,"offset":1990},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once completed, change into ","position":{"start":{"line":60,"column":1,"offset":1992},"end":{"line":60,"column":29,"offset":2020},"indent":[]}},{"type":"inlineCode","value":"src/public","position":{"start":{"line":60,"column":29,"offset":2020},"end":{"line":60,"column":41,"offset":2032},"indent":[]}},{"type":"text","value":" and run ","position":{"start":{"line":60,"column":41,"offset":2032},"end":{"line":60,"column":50,"offset":2041},"indent":[]}},{"type":"inlineCode","value":"php -S localhost:8080","position":{"start":{"line":60,"column":50,"offset":2041},"end":{"line":60,"column":73,"offset":2064},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":60,"column":73,"offset":2064},"end":{"line":60,"column":74,"offset":2065},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1992},"end":{"line":60,"column":74,"offset":2065},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we now ping ","position":{"start":{"line":62,"column":1,"offset":2067},"end":{"line":62,"column":16,"offset":2082},"indent":[]}},{"type":"inlineCode","value":"curl localhost:8080","position":{"start":{"line":62,"column":16,"offset":2082},"end":{"line":62,"column":37,"offset":2103},"indent":[]}},{"type":"text","value":" we will see our ","position":{"start":{"line":62,"column":37,"offset":2103},"end":{"line":62,"column":54,"offset":2120},"indent":[]}},{"type":"inlineCode","value":"Hello world!","position":{"start":{"line":62,"column":54,"offset":2120},"end":{"line":62,"column":68,"offset":2134},"indent":[]}},{"type":"text","value":" response.","position":{"start":{"line":62,"column":68,"offset":2134},"end":{"line":62,"column":78,"offset":2144},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2067},"end":{"line":62,"column":78,"offset":2144},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting up .env","position":{"start":{"line":64,"column":4,"offset":2149},"end":{"line":64,"column":19,"offset":2164},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2146},"end":{"line":64,"column":19,"offset":2164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our ","position":{"start":{"line":66,"column":1,"offset":2166},"end":{"line":66,"column":5,"offset":2170},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":66,"column":5,"offset":2170},"end":{"line":66,"column":11,"offset":2176},"indent":[]}},{"type":"text","value":" file should contain our keys for development. Get these from your Stripe Developer dashboard.","position":{"start":{"line":66,"column":11,"offset":2176},"end":{"line":66,"column":105,"offset":2270},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2166},"end":{"line":66,"column":105,"offset":2270},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add the following to the ","position":{"start":{"line":68,"column":1,"offset":2272},"end":{"line":68,"column":26,"offset":2297},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":68,"column":26,"offset":2297},"end":{"line":68,"column":32,"offset":2303},"indent":[]}},{"type":"text","value":" file in the root of your project directory:","position":{"start":{"line":68,"column":32,"offset":2303},"end":{"line":68,"column":76,"offset":2347},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2272},"end":{"line":68,"column":76,"offset":2347},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"SK_TEST_KEY= sk_test...\nPK_TEST_KEY=pk_test...","position":{"start":{"line":70,"column":1,"offset":2349},"end":{"line":73,"column":4,"offset":2408},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Making a simple charge with Stripe API","position":{"start":{"line":75,"column":4,"offset":2413},"end":{"line":75,"column":42,"offset":2451},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2410},"end":{"line":75,"column":42,"offset":2451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let us update ","position":{"start":{"line":77,"column":1,"offset":2453},"end":{"line":77,"column":15,"offset":2467},"indent":[]}},{"type":"inlineCode","value":"src/public/index.php","position":{"start":{"line":77,"column":15,"offset":2467},"end":{"line":77,"column":37,"offset":2489},"indent":[]}},{"type":"text","value":" to take a simple request to make a charge to our Stripe account.","position":{"start":{"line":77,"column":37,"offset":2489},"end":{"line":77,"column":102,"offset":2554},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2453},"end":{"line":77,"column":102,"offset":2554},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse Slim\\Factory\\AppFactory;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n$dotenv = Dotenv\\Dotenv::createImmutable(__DIR__ . '/../..');\n$dotenv->load();\n\n$stripeKey = getenv('SK_TEST_KEY');\n\\Stripe\\Stripe::setApiKey($stripeKey);\n\n$app = AppFactory::create();\n\n// Parse json, form data and xml\n$app->addBodyParsingMiddleware();\n$app->addRoutingMiddleware();\n$app->addErrorMiddleware(true, true, true);\n\n$app->get('/', function (Request $request, Response $response, $args) {\n    $response->getBody()->write(\"Hello world!\");\n    return $response;\n});\n\n$app->post('/api/charge', function (Request $request, Response $response, $args) {\n  try {\n    $data = $request->getParsedBody();\n\n    // parse attributes from JSON\n    $receiptEmail = $data['receiptEmail'];\n    $amount = $data['amount'];\n\n    // create the charge\n    $charge = \\Stripe\\Charge::create([\n      'amount' => $amount,\n      'currency' => 'usd',\n      'source' => 'tok_visa',\n      'receipt_email' => $receiptEmail\n    ]);\n\n    $response->getBody()->write('Successful charge');\n    $response->withStatus(201);\n    return $response;\n  } catch (Exception $e) {\n    $response->getBody()->write('Failed charge');\n    $response->withStatus(500);\n    return $response;\n  }\n});\n\n$app->run();","position":{"start":{"line":79,"column":1,"offset":2556},"end":{"line":132,"column":4,"offset":3932},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that in the above example we are loading keys from ","position":{"start":{"line":134,"column":1,"offset":3934},"end":{"line":134,"column":57,"offset":3990},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":134,"column":57,"offset":3990},"end":{"line":134,"column":63,"offset":3996},"indent":[]}},{"type":"text","value":", setting the Stripe API key, then using Slim 4's body parsing middleware to help us with parsing the request body from JSON.","position":{"start":{"line":134,"column":63,"offset":3996},"end":{"line":134,"column":188,"offset":4121},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":3934},"end":{"line":134,"column":188,"offset":4121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we run ","position":{"start":{"line":136,"column":1,"offset":4123},"end":{"line":136,"column":11,"offset":4133},"indent":[]}},{"type":"inlineCode","value":"http POST http://localhost:8080/api/charge amount:=500 receiptEmail=hello@example.com","position":{"start":{"line":136,"column":11,"offset":4133},"end":{"line":136,"column":98,"offset":4220},"indent":[]}},{"type":"text","value":" (using HTTPie) from the console, we will get our ","position":{"start":{"line":136,"column":98,"offset":4220},"end":{"line":136,"column":148,"offset":4270},"indent":[]}},{"type":"inlineCode","value":"Successful charge","position":{"start":{"line":136,"column":148,"offset":4270},"end":{"line":136,"column":167,"offset":4289},"indent":[]}},{"type":"text","value":" message back.","position":{"start":{"line":136,"column":167,"offset":4289},"end":{"line":136,"column":181,"offset":4303},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4123},"end":{"line":136,"column":181,"offset":4303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can head to our dashboard on Stripe and head to ","position":{"start":{"line":138,"column":1,"offset":4305},"end":{"line":138,"column":52,"offset":4356},"indent":[]}},{"type":"inlineCode","value":"Developers > Events","position":{"start":{"line":138,"column":52,"offset":4356},"end":{"line":138,"column":73,"offset":4377},"indent":[]}},{"type":"text","value":" to see the log of our successful charge for ","position":{"start":{"line":138,"column":73,"offset":4377},"end":{"line":138,"column":118,"offset":4422},"indent":[]}},{"type":"inlineCode","value":"US$5.00","position":{"start":{"line":138,"column":118,"offset":4422},"end":{"line":138,"column":127,"offset":4431},"indent":[]}},{"type":"text","value":". Hooray!","position":{"start":{"line":138,"column":127,"offset":4431},"end":{"line":138,"column":136,"offset":4440},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4305},"end":{"line":138,"column":136,"offset":4440},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":141,"column":1,"offset":4443},"end":{"line":141,"column":31,"offset":4473},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":141,"column":31,"offset":4473}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"configuring-stripe-for-php-and-slim\"\n    }}>{`Configuring Stripe for PHP and Slim`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://getcomposer.org/download/\"\n        }}>{`Composer installation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.slimframework.com/docs/v4/start/installation.html\"\n        }}>{`Getting started with Slim`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.slimframework.com/docs/v4/objects/request.html\"\n        }}>{`Request Object - Slim`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.php.net/manual/en/language.exceptions.php\"\n        }}>{`PHP Exceptions`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://akrabat.com/receiving-input-into-a-slim-4-application/\"\n        }}>{`Receiving input into a Slim 4 application`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/vlucas/phpdotenv\"\n        }}>{`PHP Dotenv`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-php\"\n        }}>{`Stripe PHP Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://hotexamples.com/examples/slim.http/Request/getParsedBody/php-request-getparsedbody-method-examples.html\"\n        }}>{`getParsedBody Slim`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"get-started\"\n    }}>{`Get Started`}</h2>\n    <p>{`Ensure `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{` is installed correctly and run the following. Note that you need to ensure that the downloaded `}<inlineCode parentName=\"p\">{`composer.phar`}</inlineCode>{` file from the installation instructions must be in your `}<inlineCode parentName=\"p\">{`$PATH`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir slim-stripe && cd slim-stripe\ncomposer require slim/slim:\"4.*\"\n# required to enable App::Run() etc without manual ServerRequest\ncomposer require slim/psr7\n# installing for Stripe\ncomposer require stripe/stripe-php\n# required to read dotenv vars\ncomposer require vlucas/phpdotenv\nmkdir -p src/public\ntouch src/public/index.php\ntouch .env\n`}</code></pre>\n    <p>{`To check Slim is up and working, add this to `}<inlineCode parentName=\"p\">{`src/public/index.php`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse Psr\\\\Http\\\\Message\\\\ResponseInterface as Response;\nuse Psr\\\\Http\\\\Message\\\\ServerRequestInterface as Request;\nuse Slim\\\\Factory\\\\AppFactory;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n$app = AppFactory::create();\n\n$app->get('/', function (Request $request, Response $response, $args) {\n    $response->getBody()->write(\"Hello world!\");\n    return $response;\n});\n\n$app->run();\n`}</code></pre>\n    <p>{`Once completed, change into `}<inlineCode parentName=\"p\">{`src/public`}</inlineCode>{` and run `}<inlineCode parentName=\"p\">{`php -S localhost:8080`}</inlineCode>{`.`}</p>\n    <p>{`If we now ping `}<inlineCode parentName=\"p\">{`curl localhost:8080`}</inlineCode>{` we will see our `}<inlineCode parentName=\"p\">{`Hello world!`}</inlineCode>{` response.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-env\"\n    }}>{`Setting up .env`}</h2>\n    <p>{`Our `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file should contain our keys for development. Get these from your Stripe Developer dashboard.`}</p>\n    <p>{`Add the following to the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file in the root of your project directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`SK_TEST_KEY= sk_test...\nPK_TEST_KEY=pk_test...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"making-a-simple-charge-with-stripe-api\"\n    }}>{`Making a simple charge with Stripe API`}</h2>\n    <p>{`Let us update `}<inlineCode parentName=\"p\">{`src/public/index.php`}</inlineCode>{` to take a simple request to make a charge to our Stripe account.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse Psr\\\\Http\\\\Message\\\\ResponseInterface as Response;\nuse Psr\\\\Http\\\\Message\\\\ServerRequestInterface as Request;\nuse Slim\\\\Factory\\\\AppFactory;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n$dotenv = Dotenv\\\\Dotenv::createImmutable(__DIR__ . '/../..');\n$dotenv->load();\n\n$stripeKey = getenv('SK_TEST_KEY');\n\\\\Stripe\\\\Stripe::setApiKey($stripeKey);\n\n$app = AppFactory::create();\n\n// Parse json, form data and xml\n$app->addBodyParsingMiddleware();\n$app->addRoutingMiddleware();\n$app->addErrorMiddleware(true, true, true);\n\n$app->get('/', function (Request $request, Response $response, $args) {\n    $response->getBody()->write(\"Hello world!\");\n    return $response;\n});\n\n$app->post('/api/charge', function (Request $request, Response $response, $args) {\n  try {\n    $data = $request->getParsedBody();\n\n    // parse attributes from JSON\n    $receiptEmail = $data['receiptEmail'];\n    $amount = $data['amount'];\n\n    // create the charge\n    $charge = \\\\Stripe\\\\Charge::create([\n      'amount' => $amount,\n      'currency' => 'usd',\n      'source' => 'tok_visa',\n      'receipt_email' => $receiptEmail\n    ]);\n\n    $response->getBody()->write('Successful charge');\n    $response->withStatus(201);\n    return $response;\n  } catch (Exception $e) {\n    $response->getBody()->write('Failed charge');\n    $response->withStatus(500);\n    return $response;\n  }\n});\n\n$app->run();\n`}</code></pre>\n    <p>{`Note that in the above example we are loading keys from `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`, setting the Stripe API key, then using Slim 4's body parsing middleware to help us with parsing the request body from JSON.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`http POST http://localhost:8080/api/charge amount:=500 receiptEmail=hello@example.com`}</inlineCode>{` (using HTTPie) from the console, we will get our `}<inlineCode parentName=\"p\">{`Successful charge`}</inlineCode>{` message back.`}</p>\n    <p>{`We can head to our dashboard on Stripe and head to `}<inlineCode parentName=\"p\">{`Developers > Events`}</inlineCode>{` to see the log of our successful charge for `}<inlineCode parentName=\"p\">{`US$5.00`}</inlineCode>{`. Hooray!`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}