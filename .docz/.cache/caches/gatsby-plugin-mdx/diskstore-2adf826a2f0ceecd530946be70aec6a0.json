{"expireTime":9007200867335967000,"key":"gatsby-plugin-mdx-entire-payload-64d579cc406312f5cddc7737c8967dee-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Adding a new lint rule","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":25,"offset":191},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":25,"offset":191},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":196},"end":{"line":10,"column":13,"offset":205},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":193},"end":{"line":10,"column":13,"offset":205},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://astexplorer.net/","children":[{"type":"text","value":"AST Explorer","position":{"start":{"line":12,"column":5,"offset":211},"end":{"line":12,"column":17,"offset":223},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":210},"end":{"line":12,"column":44,"offset":250},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":210},"end":{"line":12,"column":44,"offset":250},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":207},"end":{"line":12,"column":44,"offset":250},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://eslint.org/docs/developer-guide/working-with-rules","children":[{"type":"text","value":"ESLint Docs","position":{"start":{"line":13,"column":5,"offset":255},"end":{"line":13,"column":16,"offset":266},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":254},"end":{"line":13,"column":77,"offset":327},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":254},"end":{"line":13,"column":77,"offset":327},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":251},"end":{"line":13,"column":77,"offset":327},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://create-react-app.dev/docs/setting-up-your-editor/#experimental-extending-the-eslint-config","children":[{"type":"text","value":"Extending ESLint Config","position":{"start":{"line":14,"column":5,"offset":332},"end":{"line":14,"column":28,"offset":355},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":331},"end":{"line":14,"column":129,"offset":456},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":331},"end":{"line":14,"column":129,"offset":456},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":328},"end":{"line":14,"column":129,"offset":456},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://create-react-app.dev/docs/advanced-configuration/","children":[{"type":"text","value":"Advanced Config","position":{"start":{"line":15,"column":5,"offset":461},"end":{"line":15,"column":20,"offset":476},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":460},"end":{"line":15,"column":80,"offset":536},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":460},"end":{"line":15,"column":80,"offset":536},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":457},"end":{"line":15,"column":80,"offset":536},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":207},"end":{"line":15,"column":80,"offset":536},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Intro","position":{"start":{"line":17,"column":4,"offset":541},"end":{"line":17,"column":9,"offset":546},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":538},"end":{"line":17,"column":9,"offset":546},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way to do this is to jump onto AST Explorer and set ","position":{"start":{"line":19,"column":1,"offset":548},"end":{"line":19,"column":62,"offset":609},"indent":[]}},{"type":"inlineCode","value":"babel-eslint","position":{"start":{"line":19,"column":62,"offset":609},"end":{"line":19,"column":76,"offset":623},"indent":[]}},{"type":"text","value":" for the Parser and use ","position":{"start":{"line":19,"column":76,"offset":623},"end":{"line":19,"column":100,"offset":647},"indent":[]}},{"type":"inlineCode","value":"ESLint","position":{"start":{"line":19,"column":100,"offset":647},"end":{"line":19,"column":108,"offset":655},"indent":[]}},{"type":"text","value":" for the transform.","position":{"start":{"line":19,"column":108,"offset":655},"end":{"line":19,"column":127,"offset":674},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":548},"end":{"line":19,"column":127,"offset":674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add the following in:","position":{"start":{"line":21,"column":1,"offset":676},"end":{"line":21,"column":22,"offset":697},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":676},"end":{"line":21,"column":22,"offset":697},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import AnotherPackage from 'ratchet';\nimport _ from 'lodash';\nimport LastPackage from 'last-package';\nconst _ = require('lodash');","position":{"start":{"line":23,"column":1,"offset":699},"end":{"line":28,"column":4,"offset":839},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The replace function","position":{"start":{"line":30,"column":4,"offset":844},"end":{"line":30,"column":24,"offset":864},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":841},"end":{"line":30,"column":24,"offset":864},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the above code, let's block Lodash from being used:","position":{"start":{"line":32,"column":1,"offset":866},"end":{"line":32,"column":57,"offset":922},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":866},"end":{"line":32,"column":57,"offset":922},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export default function(context) {\n  return {\n    ImportDeclaration(node) {\n      if (node.source.value === 'lodash') {\n        context.report({\n          node,\n          message: 'Do not use Lodash',\n          fix: function(fixer) {\n            return fixer.replaceText(node, '');\n          },\n        });\n      }\n    },\n    CallExpression(node) {\n      if (\n        node.callee.name === 'require' &&\n        node.arguments.some(arg => arg.value === 'lodash')\n      ) {\n        context.report({\n          node,\n          message: 'Do not use Lodash',\n          fix: function(fixer) {\n            // node.parent.parent to replace the entire line\n            return fixer.replaceText(node.parent.parent, '');\n          },\n        });\n      }\n    },\n  };\n}","position":{"start":{"line":34,"column":1,"offset":924},"end":{"line":65,"column":4,"offset":1688},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Within the actual rule package","position":{"start":{"line":67,"column":4,"offset":1693},"end":{"line":67,"column":34,"offset":1723},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1690},"end":{"line":67,"column":34,"offset":1723},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"mkdir eslint-plugin-no-lodash\ncd eslint-plugin-no-lodash\nyarn init -y\nmkdir lib lib/rules\ntouch index.js lib/rules/no-lodash.js","position":{"start":{"line":69,"column":1,"offset":1725},"end":{"line":75,"column":4,"offset":1861},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Make sure ","position":{"start":{"line":77,"column":1,"offset":1863},"end":{"line":77,"column":11,"offset":1873},"indent":[]}},{"type":"inlineCode","value":"package.json","position":{"start":{"line":77,"column":11,"offset":1873},"end":{"line":77,"column":25,"offset":1887},"indent":[]}},{"type":"text","value":" has the following:","position":{"start":{"line":77,"column":25,"offset":1887},"end":{"line":77,"column":44,"offset":1906},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1863},"end":{"line":77,"column":44,"offset":1906},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"name\": \"eslint-plugin-no-lodash\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\"\n}","position":{"start":{"line":79,"column":1,"offset":1908},"end":{"line":86,"column":4,"offset":2023},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Inside of ","position":{"start":{"line":88,"column":1,"offset":2025},"end":{"line":88,"column":11,"offset":2035},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":88,"column":11,"offset":2035},"end":{"line":88,"column":21,"offset":2045},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":88,"column":21,"offset":2045},"end":{"line":88,"column":22,"offset":2046},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2025},"end":{"line":88,"column":22,"offset":2046},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const noLodash = require('./lib/rules/no-lodash');\n\nmodule.exports = {\n  rules: {\n    'no-lodash': noLodash,\n  },\n};","position":{"start":{"line":90,"column":1,"offset":2048},"end":{"line":98,"column":4,"offset":2174},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Inside of ","position":{"start":{"line":100,"column":1,"offset":2176},"end":{"line":100,"column":11,"offset":2186},"indent":[]}},{"type":"inlineCode","value":"lib/rules/no-lodash.js","position":{"start":{"line":100,"column":11,"offset":2186},"end":{"line":100,"column":35,"offset":2210},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":100,"column":35,"offset":2210},"end":{"line":100,"column":36,"offset":2211},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2176},"end":{"line":100,"column":36,"offset":2211},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @fileoverview Rule to disallow Lodash\n * @author Dennis O'Keeffe\n */\n\n'use strict';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n\n    docs: {\n      description: 'disallow Lodash',\n      category: 'Possible Errors',\n      recommended: true,\n    },\n    fixable: 'code',\n    schema: [], // no options\n  },\n  create: function(context) {\n    return {\n      ImportDeclaration(node) {\n        if (node.source.value === 'lodash') {\n          context.report({\n            node,\n            message: 'Do not use Lodash',\n            fix: function(fixer) {\n              return fixer.replaceText(node, '');\n            },\n          });\n        }\n      },\n      CallExpression(node) {\n        if (\n          node.callee.name === 'require' &&\n          node.arguments.some(arg => arg.value === 'lodash')\n        ) {\n          context.report({\n            node,\n            message: 'Do not use Lodash',\n            fix: function(fixer) {\n              // node.parent.parent to replace the entire line\n              return fixer.replaceText(node.parent.parent, '');\n            },\n          });\n        }\n      },\n    };\n  },\n};","position":{"start":{"line":102,"column":1,"offset":2213},"end":{"line":157,"column":4,"offset":3535},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding to CRA","position":{"start":{"line":159,"column":4,"offset":3540},"end":{"line":159,"column":17,"offset":3553},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":3537},"end":{"line":159,"column":17,"offset":3553},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"When set to true, user provided ESLint configs will be used by eslint-loader. Note that any rules set to \"error\" will stop the application from building.","position":{"start":{"line":161,"column":3,"offset":3557},"end":{"line":161,"column":156,"offset":3710},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":3557},"end":{"line":161,"column":156,"offset":3710},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3555},"end":{"line":161,"column":156,"offset":3710},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In a CRA app, add ","position":{"start":{"line":163,"column":1,"offset":3712},"end":{"line":163,"column":19,"offset":3730},"indent":[]}},{"type":"inlineCode","value":".eslintrc","position":{"start":{"line":163,"column":19,"offset":3730},"end":{"line":163,"column":30,"offset":3741},"indent":[]}},{"type":"text","value":" and add the following:","position":{"start":{"line":163,"column":30,"offset":3741},"end":{"line":163,"column":53,"offset":3764},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3712},"end":{"line":163,"column":53,"offset":3764},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"eslintConfig\": {\n    \"extends\": \"react-app\",\n    \"rules\": {\n      \"no-lodash/no-lodash\": \"warn\"\n    },\n    \"plugins\": [\"no-lodash\"]\n  }\n}","position":{"start":{"line":165,"column":1,"offset":3766},"end":{"line":175,"column":4,"offset":3920},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Finally, to test the rule add ","position":{"start":{"line":177,"column":1,"offset":3922},"end":{"line":177,"column":31,"offset":3952},"indent":[]}},{"type":"inlineCode","value":"import _ from 'lodash'","position":{"start":{"line":177,"column":31,"offset":3952},"end":{"line":177,"column":55,"offset":3976},"indent":[]}},{"type":"text","value":" into ","position":{"start":{"line":177,"column":55,"offset":3976},"end":{"line":177,"column":61,"offset":3982},"indent":[]}},{"type":"inlineCode","value":"src/app.jsx","position":{"start":{"line":177,"column":61,"offset":3982},"end":{"line":177,"column":74,"offset":3995},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":177,"column":74,"offset":3995},"end":{"line":177,"column":75,"offset":3996},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":3922},"end":{"line":177,"column":75,"offset":3996},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run ","position":{"start":{"line":179,"column":1,"offset":3998},"end":{"line":179,"column":5,"offset":4002},"indent":[]}},{"type":"inlineCode","value":"EXTEND_ESLINT=true yarn start","position":{"start":{"line":179,"column":5,"offset":4002},"end":{"line":179,"column":36,"offset":4033},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":179,"column":36,"offset":4033},"end":{"line":179,"column":37,"offset":4034},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":3998},"end":{"line":179,"column":37,"offset":4034},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":182,"column":1,"offset":4037},"end":{"line":182,"column":31,"offset":4067},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":182,"column":31,"offset":4067}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adding-a-new-lint-rule\"\n    }}>{`Adding a new lint rule`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://astexplorer.net/\"\n        }}>{`AST Explorer`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://eslint.org/docs/developer-guide/working-with-rules\"\n        }}>{`ESLint Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://create-react-app.dev/docs/setting-up-your-editor/#experimental-extending-the-eslint-config\"\n        }}>{`Extending ESLint Config`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://create-react-app.dev/docs/advanced-configuration/\"\n        }}>{`Advanced Config`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"intro\"\n    }}>{`Intro`}</h2>\n    <p>{`The best way to do this is to jump onto AST Explorer and set `}<inlineCode parentName=\"p\">{`babel-eslint`}</inlineCode>{` for the Parser and use `}<inlineCode parentName=\"p\">{`ESLint`}</inlineCode>{` for the transform.`}</p>\n    <p>{`Add the following in:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import AnotherPackage from 'ratchet';\nimport _ from 'lodash';\nimport LastPackage from 'last-package';\nconst _ = require('lodash');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-replace-function\"\n    }}>{`The replace function`}</h2>\n    <p>{`With the above code, let's block Lodash from being used:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default function(context) {\n  return {\n    ImportDeclaration(node) {\n      if (node.source.value === 'lodash') {\n        context.report({\n          node,\n          message: 'Do not use Lodash',\n          fix: function(fixer) {\n            return fixer.replaceText(node, '');\n          },\n        });\n      }\n    },\n    CallExpression(node) {\n      if (\n        node.callee.name === 'require' &&\n        node.arguments.some(arg => arg.value === 'lodash')\n      ) {\n        context.report({\n          node,\n          message: 'Do not use Lodash',\n          fix: function(fixer) {\n            // node.parent.parent to replace the entire line\n            return fixer.replaceText(node.parent.parent, '');\n          },\n        });\n      }\n    },\n  };\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"within-the-actual-rule-package\"\n    }}>{`Within the actual rule package`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`mkdir eslint-plugin-no-lodash\ncd eslint-plugin-no-lodash\nyarn init -y\nmkdir lib lib/rules\ntouch index.js lib/rules/no-lodash.js\n`}</code></pre>\n    <p>{`Make sure `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` has the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"eslint-plugin-no-lodash\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\"\n}\n`}</code></pre>\n    <p>{`Inside of `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const noLodash = require('./lib/rules/no-lodash');\n\nmodule.exports = {\n  rules: {\n    'no-lodash': noLodash,\n  },\n};\n`}</code></pre>\n    <p>{`Inside of `}<inlineCode parentName=\"p\">{`lib/rules/no-lodash.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/**\n * @fileoverview Rule to disallow Lodash\n * @author Dennis O'Keeffe\n */\n\n'use strict';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n\n    docs: {\n      description: 'disallow Lodash',\n      category: 'Possible Errors',\n      recommended: true,\n    },\n    fixable: 'code',\n    schema: [], // no options\n  },\n  create: function(context) {\n    return {\n      ImportDeclaration(node) {\n        if (node.source.value === 'lodash') {\n          context.report({\n            node,\n            message: 'Do not use Lodash',\n            fix: function(fixer) {\n              return fixer.replaceText(node, '');\n            },\n          });\n        }\n      },\n      CallExpression(node) {\n        if (\n          node.callee.name === 'require' &&\n          node.arguments.some(arg => arg.value === 'lodash')\n        ) {\n          context.report({\n            node,\n            message: 'Do not use Lodash',\n            fix: function(fixer) {\n              // node.parent.parent to replace the entire line\n              return fixer.replaceText(node.parent.parent, '');\n            },\n          });\n        }\n      },\n    };\n  },\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-to-cra\"\n    }}>{`Adding to CRA`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`When set to true, user provided ESLint configs will be used by eslint-loader. Note that any rules set to \"error\" will stop the application from building.`}</p>\n    </blockquote>\n    <p>{`In a CRA app, add `}<inlineCode parentName=\"p\">{`.eslintrc`}</inlineCode>{` and add the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"eslintConfig\": {\n    \"extends\": \"react-app\",\n    \"rules\": {\n      \"no-lodash/no-lodash\": \"warn\"\n    },\n    \"plugins\": [\"no-lodash\"]\n  }\n}\n`}</code></pre>\n    <p>{`Finally, to test the rule add `}<inlineCode parentName=\"p\">{`import _ from 'lodash'`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`src/app.jsx`}</inlineCode>{`.`}</p>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`EXTEND_ESLINT=true yarn start`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}