{"expireTime":9007200849425600000,"key":"gatsby-plugin-mdx-entire-payload-8fb9dad75a47e2b50debd45fb115b7ca-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Solving Liner Equations","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":26,"offset":192},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":26,"offset":192},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":197},"end":{"line":10,"column":13,"offset":206},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":194},"end":{"line":10,"column":13,"offset":206},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.purplemath.com/modules/solvelin5.htm","children":[{"type":"text","value":"Examples","position":{"start":{"line":12,"column":5,"offset":212},"end":{"line":12,"column":13,"offset":220},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":211},"end":{"line":12,"column":64,"offset":271},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":211},"end":{"line":12,"column":64,"offset":271},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":208},"end":{"line":12,"column":64,"offset":271},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.solve.html","children":[{"type":"text","value":"SciPy LinEq","position":{"start":{"line":13,"column":5,"offset":276},"end":{"line":13,"column":16,"offset":287},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":275},"end":{"line":13,"column":95,"offset":366},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":275},"end":{"line":13,"column":95,"offset":366},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":272},"end":{"line":13,"column":95,"offset":366},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stackabuse.com/solving-systems-of-linear-equations-with-pythons-numpy/","children":[{"type":"text","value":"SciPy Examples","position":{"start":{"line":14,"column":5,"offset":371},"end":{"line":14,"column":19,"offset":385},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":370},"end":{"line":14,"column":100,"offset":466},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":370},"end":{"line":14,"column":100,"offset":466},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":367},"end":{"line":14,"column":100,"offset":466},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":208},"end":{"line":14,"column":100,"offset":466},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":17,"column":1,"offset":469},"end":{"line":17,"column":31,"offset":499},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":17,"column":31,"offset":499}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"solving-liner-equations\"\n    }}>{`Solving Liner Equations`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.purplemath.com/modules/solvelin5.htm\"\n        }}>{`Examples`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.solve.html\"\n        }}>{`SciPy LinEq`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackabuse.com/solving-systems-of-linear-equations-with-pythons-numpy/\"\n        }}>{`SciPy Examples`}</a></li>\n    </ol>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}