{"expireTime":9007200849425571000,"key":"gatsby-plugin-mdx-entire-payload-fc8546fdc628291bee5fe95dc9758800-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Elm Collections","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":18,"offset":184},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":18,"offset":184},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Collections come as lists, records and tuples. One way they differ is that collections in Elm are always immutable.","position":{"start":{"line":10,"column":1,"offset":186},"end":{"line":10,"column":116,"offset":301},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":186},"end":{"line":10,"column":116,"offset":301},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Lists","position":{"start":{"line":12,"column":1,"offset":303},"end":{"line":12,"column":8,"offset":310},"indent":[]}},{"type":"text","value":" represent arrays, ","position":{"start":{"line":12,"column":8,"offset":310},"end":{"line":12,"column":27,"offset":329},"indent":[]}},{"type":"inlineCode","value":"Records","position":{"start":{"line":12,"column":27,"offset":329},"end":{"line":12,"column":36,"offset":338},"indent":[]}},{"type":"text","value":" represent objects and ","position":{"start":{"line":12,"column":36,"offset":338},"end":{"line":12,"column":59,"offset":361},"indent":[]}},{"type":"inlineCode","value":"Tuples","position":{"start":{"line":12,"column":59,"offset":361},"end":{"line":12,"column":67,"offset":369},"indent":[]}},{"type":"text","value":" represent collections of varying size (whose elements share a consistent type). Tuples are record-like but can only be accessed by position.","position":{"start":{"line":12,"column":67,"offset":369},"end":{"line":12,"column":208,"offset":510},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":303},"end":{"line":12,"column":208,"offset":510},"indent":[]}},{"type":"code","lang":"elm","meta":null,"value":"-- Destructuring a tuple\nmultiply3d (x,y,z) = x * y * z\nmultiply3d (1,2,3)","position":{"start":{"line":14,"column":1,"offset":512},"end":{"line":18,"column":4,"offset":597},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":20,"column":1,"offset":599},"end":{"line":20,"column":31,"offset":629},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":20,"column":31,"offset":629}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"elm-collections\"\n    }}>{`Elm Collections`}</h1>\n    <p>{`Collections come as lists, records and tuples. One way they differ is that collections in Elm are always immutable.`}</p>\n    <p><inlineCode parentName=\"p\">{`Lists`}</inlineCode>{` represent arrays, `}<inlineCode parentName=\"p\">{`Records`}</inlineCode>{` represent objects and `}<inlineCode parentName=\"p\">{`Tuples`}</inlineCode>{` represent collections of varying size (whose elements share a consistent type). Tuples are record-like but can only be accessed by position.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`-- Destructuring a tuple\nmultiply3d (x,y,z) = x * y * z\nmultiply3d (1,2,3)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}