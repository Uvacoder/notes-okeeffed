{"expireTime":9007200852878462000,"key":"gatsby-plugin-mdx-entire-payload-5c41922b6d8989af825d14270df9fa82-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Flexbox Help Sheet","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":21,"offset":186},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":21,"offset":186},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sources:","position":{"start":{"line":9,"column":1,"offset":188},"end":{"line":9,"column":9,"offset":196},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":188},"end":{"line":9,"column":9,"offset":196},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://css-tricks.com/snippets/css/a-guide-to-flexbox/","children":[{"type":"text","value":"CSS Tricks","position":{"start":{"line":11,"column":2,"offset":199},"end":{"line":11,"column":12,"offset":209},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":198},"end":{"line":11,"column":70,"offset":267},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":198},"end":{"line":11,"column":70,"offset":267},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Terminology","position":{"start":{"line":13,"column":4,"offset":272},"end":{"line":13,"column":15,"offset":283},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":269},"end":{"line":13,"column":15,"offset":283},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Flex Container (parent)","position":{"start":{"line":15,"column":6,"offset":290},"end":{"line":15,"column":29,"offset":313},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":285},"end":{"line":15,"column":29,"offset":313},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Properties of the parent:","position":{"start":{"line":17,"column":1,"offset":315},"end":{"line":17,"column":26,"offset":340},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":315},"end":{"line":17,"column":26,"offset":340},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":".container {\n  display: flex; /* or inline-flex */\n  flex-direction: row | row-reverse | column | column-reverse;\n  flex-wrap: nowrap | wrap | wrap-reverse;\n  flex-flow: <‘flex-direction’> || <‘flex-wrap’>; //shorthand code\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n  align-items: flex-start | flex-end | center | baseline | stretch;\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}","position":{"start":{"line":19,"column":1,"offset":342},"end":{"line":29,"column":4,"offset":818},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Flex Items (child)","position":{"start":{"line":31,"column":6,"offset":825},"end":{"line":31,"column":24,"offset":843},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":820},"end":{"line":31,"column":24,"offset":843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Properties of the child:","position":{"start":{"line":33,"column":1,"offset":845},"end":{"line":33,"column":25,"offset":869},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":845},"end":{"line":33,"column":25,"offset":869},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":".item {\n\torder: <integer>;\n\tflex-grow: <number>; /* default 0 */\n\tflex-shrink: <number>; /* default 1 */\n\tflex-basis: <length> | auto; /* default auto */\n\tflex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ];\n\talign-self: auto | flex-start | flex-end | center | baseline | stretch;\n}","position":{"start":{"line":35,"column":1,"offset":871},"end":{"line":44,"column":4,"offset":1178},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Example","position":{"start":{"line":46,"column":4,"offset":1183},"end":{"line":46,"column":11,"offset":1190},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1180},"end":{"line":46,"column":11,"offset":1190},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":".parent {\n  display: flex;\n  height: 300px; /* Or whatever */\n}\n\n.child {\n  width: 100px;  /* Or whatever */\n  height: 100px; /* Or whatever */\n  margin: auto;  /* Magic! */\n}\n\n.flex-container {\n  /* We first create a flex layout context */\n  display: flex;\n\n  /* Then we define the flow direction and if we allow the items to wrap\n   * Remember this is the same as:\n   * flex-direction: row;\n   * flex-wrap: wrap;\n   */\n  flex-flow: row wrap;\n\n  /* Then we define how is distributed the remaining space */\n  justify-content: space-around;\n}","position":{"start":{"line":48,"column":1,"offset":1192},"end":{"line":74,"column":4,"offset":1744},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":77,"column":1,"offset":1747},"end":{"line":77,"column":31,"offset":1777},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":77,"column":31,"offset":1777}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"flexbox-help-sheet\"\n    }}>{`Flexbox Help Sheet`}</h1>\n    <p>{`Sources:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\"\n      }}>{`CSS Tricks`}</a></p>\n    <h2 {...{\n      \"id\": \"terminology\"\n    }}>{`Terminology`}</h2>\n    <h4 {...{\n      \"id\": \"flex-container-parent\"\n    }}>{`Flex Container (parent)`}</h4>\n    <p>{`Properties of the parent:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.container {\n  display: flex; /* or inline-flex */\n  flex-direction: row | row-reverse | column | column-reverse;\n  flex-wrap: nowrap | wrap | wrap-reverse;\n  flex-flow: <‘flex-direction’> || <‘flex-wrap’>; //shorthand code\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n  align-items: flex-start | flex-end | center | baseline | stretch;\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"flex-items-child\"\n    }}>{`Flex Items (child)`}</h4>\n    <p>{`Properties of the child:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.item {\n    order: <integer>;\n    flex-grow: <number>; /* default 0 */\n    flex-shrink: <number>; /* default 1 */\n    flex-basis: <length> | auto; /* default auto */\n    flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ];\n    align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.parent {\n  display: flex;\n  height: 300px; /* Or whatever */\n}\n\n.child {\n  width: 100px;  /* Or whatever */\n  height: 100px; /* Or whatever */\n  margin: auto;  /* Magic! */\n}\n\n.flex-container {\n  /* We first create a flex layout context */\n  display: flex;\n\n  /* Then we define the flow direction and if we allow the items to wrap\n   * Remember this is the same as:\n   * flex-direction: row;\n   * flex-wrap: wrap;\n   */\n  flex-flow: row wrap;\n\n  /* Then we define how is distributed the remaining space */\n  justify-content: space-around;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}