{"expireTime":9007200852878419000,"key":"gatsby-plugin-mdx-entire-payload-ea94ab11381037b629cc4a7fc2e8e187-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Using Nightmare.js","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":21,"offset":186},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":22,"offset":187},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nightmare.js with Mocha, Chai and Nightmare.js ","position":{"start":{"line":9,"column":1,"offset":189},"end":{"line":9,"column":48,"offset":236},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":189},"end":{"line":9,"column":48,"offset":236},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var path = require('path');\nvar Nightmare = require('nightmare');\nvar should = require('chai').should();\n\ndescribe('Nightmare demo', function () {\n    this.timeout(15000); // Set timeout to 15 seconds, instead of the original 2 seconds\n\n    var url = 'http://localhost:3000';\n\n    describe('Start page', function () {\n        it('should show form when loaded', function (done) {\n            new Nightmare()\n                .goto(url)\n                .evaluate(function () {\n                    return document.querySelectorAll('form').length;\n                }, function (result) {\n                    result.should.equal(1);\n                    done();\n                })\n                .run();\n        });\n    });\n\n    describe('Send form', function () {\n        it('should print the posted string on submit', function (done) {\n            var expected = 'Hello, world!';\n\n            new Nightmare()\n                .goto(url)\n                .type('input[name=\"sometext\"]', expected)\n                .click('input[type=\"submit\"]')\n                .wait()\n                .evaluate(function () {\n                    return document.querySelector('#result');\n                }, function (element) {\n                    element.innerText.should.equal(expected);\n                    done();\n                })\n                .run();\n        });\n\n        it('should print \"nothing\" on submit if no string were provided', function (done) {\n            var expected = 'nothing';\n\n            new Nightmare()\n                .goto(url)\n                .click('input[type=\"submit\"]')\n                .wait()\n                .evaluate(function () {\n                    return document.querySelector('#result');\n                }, function (element) {\n                    element.innerText.should.equal(expected);\n                    done();\n                })\n                .run();\n        });\n    });\n});","position":{"start":{"line":11,"column":1,"offset":238},"end":{"line":70,"column":4,"offset":2160},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":72,"column":1,"offset":2162},"end":{"line":72,"column":31,"offset":2192},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":72,"column":31,"offset":2192}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-nightmarejs\"\n    }}>{`Using Nightmare.js`}</h1>\n    <p>{`Nightmare.js with Mocha, Chai and Nightmare.js `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var path = require('path');\nvar Nightmare = require('nightmare');\nvar should = require('chai').should();\n\ndescribe('Nightmare demo', function () {\n    this.timeout(15000); // Set timeout to 15 seconds, instead of the original 2 seconds\n\n    var url = 'http://localhost:3000';\n\n    describe('Start page', function () {\n        it('should show form when loaded', function (done) {\n            new Nightmare()\n                .goto(url)\n                .evaluate(function () {\n                    return document.querySelectorAll('form').length;\n                }, function (result) {\n                    result.should.equal(1);\n                    done();\n                })\n                .run();\n        });\n    });\n\n    describe('Send form', function () {\n        it('should print the posted string on submit', function (done) {\n            var expected = 'Hello, world!';\n\n            new Nightmare()\n                .goto(url)\n                .type('input[name=\"sometext\"]', expected)\n                .click('input[type=\"submit\"]')\n                .wait()\n                .evaluate(function () {\n                    return document.querySelector('#result');\n                }, function (element) {\n                    element.innerText.should.equal(expected);\n                    done();\n                })\n                .run();\n        });\n\n        it('should print \"nothing\" on submit if no string were provided', function (done) {\n            var expected = 'nothing';\n\n            new Nightmare()\n                .goto(url)\n                .click('input[type=\"submit\"]')\n                .wait()\n                .evaluate(function () {\n                    return document.querySelector('#result');\n                }, function (element) {\n                    element.innerText.should.equal(expected);\n                    done();\n                })\n                .run();\n        });\n    });\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}