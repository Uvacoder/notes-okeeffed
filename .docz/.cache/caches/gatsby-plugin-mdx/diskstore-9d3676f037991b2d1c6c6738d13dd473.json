{"expireTime":9007200849425513000,"key":"gatsby-plugin-mdx-entire-payload-72de8529eb64f591a6b8b21730c001c9-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setting up an expo project with Redux, Redux Persist, Redux Saga, Amplify etc","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":80,"offset":245},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":80,"offset":245},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Requirements for Kratos","position":{"start":{"line":9,"column":4,"offset":250},"end":{"line":9,"column":27,"offset":273},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":247},"end":{"line":9,"column":27,"offset":273},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You need to be storing Redux Reducers, Sagas, Components and Common.","position":{"start":{"line":11,"column":1,"offset":275},"end":{"line":11,"column":69,"offset":343},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":275},"end":{"line":11,"column":69,"offset":343},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Full (most should come from the DOK_ASSETS path):","position":{"start":{"line":13,"column":1,"offset":345},"end":{"line":13,"column":50,"offset":394},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":345},"end":{"line":13,"column":50,"offset":394},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kratos store react-native app/components\nkratos store sagas app/sagas\nkratos store redux app/reducers\nkratos store rn-styles app/styles\nkratos store js app/common\nkratos store manual manual\nkratos store cli cli\n# Install Redux\nkratos install redux rnmain\nkratos install redux copy\nkratos install redux auth\nkratos install redux navigation\nkratos install redux reduxnav\n# Install Sagas\nkratos install sagas root\nkratos install sagas amplify\n# Install Components\nkratos install react-native BaseCarousel\nkratos install react-native Button\nkratos install react-native TextElement\nkratos install react-native VerticalList\nkratos install react-native HorizontalList\nkratos install react-native StatusBar\nkratos install react-native DismissKeyboardView\n# Install JS\nkratos install js Amplify\nkratos install js Normalize\nkratos install js ReactNativeAlert\n# Install manuals\nkratos install manual ReactNative\nkratos install manual Redux\nkratos install manual Amplify\n# Install CLI\nkratos install cli copy-cli\nkratos install cli rename-cli","position":{"start":{"line":15,"column":1,"offset":396},"end":{"line":51,"column":4,"offset":1439},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":54,"column":1,"offset":1442},"end":{"line":54,"column":31,"offset":1472},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":54,"column":31,"offset":1472}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"setting-up-an-expo-project-with-redux-redux-persist-redux-saga-amplify-etc\"\n    }}>{`Setting up an expo project with Redux, Redux Persist, Redux Saga, Amplify etc`}</h1>\n    <h2 {...{\n      \"id\": \"requirements-for-kratos\"\n    }}>{`Requirements for Kratos`}</h2>\n    <p>{`You need to be storing Redux Reducers, Sagas, Components and Common.`}</p>\n    <p>{`Full (most should come from the DOK_ASSETS path):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kratos store react-native app/components\nkratos store sagas app/sagas\nkratos store redux app/reducers\nkratos store rn-styles app/styles\nkratos store js app/common\nkratos store manual manual\nkratos store cli cli\n# Install Redux\nkratos install redux rnmain\nkratos install redux copy\nkratos install redux auth\nkratos install redux navigation\nkratos install redux reduxnav\n# Install Sagas\nkratos install sagas root\nkratos install sagas amplify\n# Install Components\nkratos install react-native BaseCarousel\nkratos install react-native Button\nkratos install react-native TextElement\nkratos install react-native VerticalList\nkratos install react-native HorizontalList\nkratos install react-native StatusBar\nkratos install react-native DismissKeyboardView\n# Install JS\nkratos install js Amplify\nkratos install js Normalize\nkratos install js ReactNativeAlert\n# Install manuals\nkratos install manual ReactNative\nkratos install manual Redux\nkratos install manual Amplify\n# Install CLI\nkratos install cli copy-cli\nkratos install cli rename-cli\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}