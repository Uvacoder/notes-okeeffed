{"expireTime":9007200867336009000,"key":"gatsby-plugin-mdx-entire-payload-a15af651bfa4005945b0542a06011b69-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Setting up a Lambda/Cloudfront setup to fetch subdirectories in S3","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":69,"offset":234},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":69,"offset":234},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Links","position":{"start":{"line":9,"column":4,"offset":239},"end":{"line":9,"column":9,"offset":244},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":236},"end":{"line":9,"column":9,"offset":244},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://aws.amazon.com/blogs/compute/implementing-default-directory-indexes-in-amazon-s3-backed-amazon-cloudfront-origins-using-lambdaedge/","children":[{"type":"text","value":"Useful blog guide","position":{"start":{"line":11,"column":4,"offset":249},"end":{"line":11,"column":21,"offset":266},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":248},"end":{"line":11,"column":163,"offset":408},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":248},"end":{"line":11,"column":163,"offset":408},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":246},"end":{"line":11,"column":163,"offset":408},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/@svinkle/how-to-deploy-a-react-app-to-a-subdirectory-f694d46427c1","children":[{"type":"text","value":"Serving CRA from subdirectories","position":{"start":{"line":12,"column":4,"offset":412},"end":{"line":12,"column":35,"offset":443},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":411},"end":{"line":12,"column":122,"offset":530},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":411},"end":{"line":12,"column":122,"offset":530},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":409},"end":{"line":12,"column":122,"offset":530},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":246},"end":{"line":12,"column":122,"offset":530},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setup","position":{"start":{"line":14,"column":4,"offset":535},"end":{"line":14,"column":9,"offset":540},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":532},"end":{"line":14,"column":9,"offset":540},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. S3 Bucket","position":{"start":{"line":16,"column":5,"offset":546},"end":{"line":16,"column":17,"offset":558},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":542},"end":{"line":16,"column":17,"offset":558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Set up a restricted S3 bucket. Within this bucket, have subdirectories that house their own index.html file.","position":{"start":{"line":18,"column":1,"offset":560},"end":{"line":18,"column":109,"offset":668},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":560},"end":{"line":18,"column":109,"offset":668},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2. Set up CloudFront","position":{"start":{"line":20,"column":5,"offset":674},"end":{"line":20,"column":25,"offset":694},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":670},"end":{"line":20,"column":25,"offset":694},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Follow the permissions setup in the above article to know how to set up the correct event.","position":{"start":{"line":22,"column":1,"offset":696},"end":{"line":22,"column":91,"offset":786},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":696},"end":{"line":22,"column":91,"offset":786},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. This is the setup for a JavaScript Lambda call.","position":{"start":{"line":24,"column":5,"offset":792},"end":{"line":24,"column":55,"offset":842},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":788},"end":{"line":24,"column":55,"offset":842},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This must be done in a region that supports Lambda@next.","position":{"start":{"line":26,"column":1,"offset":844},"end":{"line":26,"column":57,"offset":900},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":844},"end":{"line":26,"column":57,"offset":900},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\nexports.handler = (event, context, callback) => {\n // Extract the request from the CloudFront event that is sent to Lambda@Edge\n var request = event.Records[0].cf.request;\n\n // Extract the URI from the request\n var olduri = request.uri;\n\n // Match any '/' that occurs at the end of a URI. Replace it with a default index\n var newuri = olduri.replace(/\\/$/, '/index.html');\n\n // Log the URI as received by CloudFront and the new URI to be used to fetch from origin\n console.log('Old URI: ' + olduri);\n console.log('New URI: ' + newuri);\n\n // Replace the received URI with the URI that includes the index page\n request.uri = newuri;\n\n // Return to CloudFront\n return callback(null, request);\n};","position":{"start":{"line":28,"column":1,"offset":902},"end":{"line":50,"column":4,"offset":1626},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deploying CRA App","position":{"start":{"line":52,"column":5,"offset":1632},"end":{"line":52,"column":22,"offset":1649},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1628},"end":{"line":52,"column":22,"offset":1649},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Update package.json","position":{"start":{"line":54,"column":5,"offset":1655},"end":{"line":54,"column":27,"offset":1677},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1651},"end":{"line":54,"column":27,"offset":1677},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"homepage\": \".\",","position":{"start":{"line":56,"column":1,"offset":1679},"end":{"line":58,"column":4,"offset":1707},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2. Update router","position":{"start":{"line":60,"column":5,"offset":1713},"end":{"line":60,"column":21,"offset":1729},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1709},"end":{"line":60,"column":21,"offset":1729},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"export const devRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path=\"*\" exact={true} component={PageHome} />\n </Router>\n);\n\nexport const prodRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path={'/'} component={PageHome} />\n  <Route path={'*'} exact={true} component={PageHome} />\n </Router>\n);\n\nexport const router = () =>\n process.env.NODE_ENV !== 'development' ? prodRouter() : devRouter();","position":{"start":{"line":62,"column":1,"offset":1731},"end":{"line":80,"column":4,"offset":2287},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Update router.push calls","position":{"start":{"line":82,"column":5,"offset":2293},"end":{"line":82,"column":32,"offset":2320},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2289},"end":{"line":82,"column":32,"offset":2320},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import Config from 'src/app.json';\nrouter.push(process.env.PUBLIC_URL + '/test');\n\n// In use\nfunction handleLink(e, d) {\n if (d.href[0] === '/') {\n  e.preventDefault();\n  const { router } = this.props;\n  router.push(Config.baseUrl + d.href);\n }\n}","position":{"start":{"line":84,"column":1,"offset":2322},"end":{"line":96,"column":4,"offset":2586},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Set a baseUrl in app.json","position":{"start":{"line":98,"column":5,"offset":2592},"end":{"line":98,"column":33,"offset":2620},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2588},"end":{"line":98,"column":33,"offset":2620},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n \"baseUrl\": \"/dato-cms-test\"\n}","position":{"start":{"line":100,"column":1,"offset":2622},"end":{"line":104,"column":4,"offset":2666},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":107,"column":1,"offset":2669},"end":{"line":107,"column":31,"offset":2699},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":107,"column":31,"offset":2699}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"setting-up-a-lambdacloudfront-setup-to-fetch-subdirectories-in-s3\"\n    }}>{`Setting up a Lambda/Cloudfront setup to fetch subdirectories in S3`}</h1>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://aws.amazon.com/blogs/compute/implementing-default-directory-indexes-in-amazon-s3-backed-amazon-cloudfront-origins-using-lambdaedge/\"\n        }}>{`Useful blog guide`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@svinkle/how-to-deploy-a-react-app-to-a-subdirectory-f694d46427c1\"\n        }}>{`Serving CRA from subdirectories`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <h3 {...{\n      \"id\": \"1-s3-bucket\"\n    }}>{`1. S3 Bucket`}</h3>\n    <p>{`Set up a restricted S3 bucket. Within this bucket, have subdirectories that house their own index.html file.`}</p>\n    <h3 {...{\n      \"id\": \"2-set-up-cloudfront\"\n    }}>{`2. Set up CloudFront`}</h3>\n    <p>{`Follow the permissions setup in the above article to know how to set up the correct event.`}</p>\n    <h3 {...{\n      \"id\": \"3-this-is-the-setup-for-a-javascript-lambda-call\"\n    }}>{`3. This is the setup for a JavaScript Lambda call.`}</h3>\n    <p>{`This must be done in a region that supports Lambda@next.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\nexports.handler = (event, context, callback) => {\n // Extract the request from the CloudFront event that is sent to Lambda@Edge\n var request = event.Records[0].cf.request;\n\n // Extract the URI from the request\n var olduri = request.uri;\n\n // Match any '/' that occurs at the end of a URI. Replace it with a default index\n var newuri = olduri.replace(/\\\\/$/, '/index.html');\n\n // Log the URI as received by CloudFront and the new URI to be used to fetch from origin\n console.log('Old URI: ' + olduri);\n console.log('New URI: ' + newuri);\n\n // Replace the received URI with the URI that includes the index page\n request.uri = newuri;\n\n // Return to CloudFront\n return callback(null, request);\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-cra-app\"\n    }}>{`Deploying CRA App`}</h3>\n    <h3 {...{\n      \"id\": \"1-update-packagejson\"\n    }}>{`1. Update package.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"homepage\": \".\",\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-update-router\"\n    }}>{`2. Update router`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export const devRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path=\"*\" exact={true} component={PageHome} />\n </Router>\n);\n\nexport const prodRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path={'/'} component={PageHome} />\n  <Route path={'*'} exact={true} component={PageHome} />\n </Router>\n);\n\nexport const router = () =>\n process.env.NODE_ENV !== 'development' ? prodRouter() : devRouter();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-update-routerpush-calls\"\n    }}>{`3. Update router.push calls`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Config from 'src/app.json';\nrouter.push(process.env.PUBLIC_URL + '/test');\n\n// In use\nfunction handleLink(e, d) {\n if (d.href[0] === '/') {\n  e.preventDefault();\n  const { router } = this.props;\n  router.push(Config.baseUrl + d.href);\n }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"4-set-a-baseurl-in-appjson\"\n    }}>{`4. Set a baseUrl in app.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"baseUrl\": \"/dato-cms-test\"\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}