{"expireTime":9007200867336008000,"key":"gatsby-plugin-mdx-entire-payload-f8203ebf8ad740c7d9dac906cfa67728-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Array Manipulation","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":21,"offset":187},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":21,"offset":187},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// Complete the arrayManipulation function below.\nfunction arrayManipulation(n, queries) {\n  let arr = new Array(n).fill(0);\n  for (let [a, b, k] of queries) {\n    let arrSlice = arr.slice(a - 1, b);\n    let updatedArrSlice = arrSlice.map(el => el + k);\n    arr = [...arr.slice(0, a - 1), ...updatedArrSlice, ...arr.slice(b + 1)];\n  }\n  return Math.max.apply(Math, arr);\n}","position":{"start":{"line":10,"column":1,"offset":189},"end":{"line":21,"column":4,"offset":579},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":24,"column":1,"offset":582},"end":{"line":24,"column":31,"offset":612},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":24,"column":31,"offset":612}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"array-manipulation\"\n    }}>{`Array Manipulation`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Complete the arrayManipulation function below.\nfunction arrayManipulation(n, queries) {\n  let arr = new Array(n).fill(0);\n  for (let [a, b, k] of queries) {\n    let arrSlice = arr.slice(a - 1, b);\n    let updatedArrSlice = arrSlice.map(el => el + k);\n    arr = [...arr.slice(0, a - 1), ...updatedArrSlice, ...arr.slice(b + 1)];\n  }\n  return Math.max.apply(Math, arr);\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}