{"expireTime":9007200852878472000,"key":"gatsby-plugin-mdx-entire-payload-bbb7445071aaa72bab0a03f1b18003dd-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Letter Changes","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":17,"offset":183},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":17,"offset":183},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":188},"end":{"line":10,"column":13,"offset":197},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":185},"end":{"line":10,"column":13,"offset":197},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.coderbyte.com/information/Letter%20Changes","children":[{"type":"text","value":"CoderByte Challenge","position":{"start":{"line":12,"column":5,"offset":203},"end":{"line":12,"column":24,"offset":222},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":202},"end":{"line":12,"column":81,"offset":279},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":202},"end":{"line":12,"column":81,"offset":279},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":199},"end":{"line":12,"column":81,"offset":279},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":199},"end":{"line":12,"column":81,"offset":279},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Question","position":{"start":{"line":14,"column":4,"offset":284},"end":{"line":14,"column":12,"offset":292},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":281},"end":{"line":14,"column":12,"offset":292},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Have the function LetterChanges(str) take the str parameter being passed and modify it using the following algorithm. Replace every letter in the string with the letter following it in the alphabet (ie. c becomes d, z becomes a). Then capitalize every vowel in this new string (a, e, i, o, u) and finally return this modified string.\nExamples","position":{"start":{"line":16,"column":1,"offset":294},"end":{"line":17,"column":9,"offset":636},"indent":[1]}}],"position":{"start":{"line":16,"column":1,"offset":294},"end":{"line":17,"column":9,"offset":636},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":19,"column":4,"offset":641},"end":{"line":19,"column":12,"offset":649},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":638},"end":{"line":19,"column":12,"offset":649},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"Input: \"hello*3\"\nOutput: Ifmmp*3","position":{"start":{"line":21,"column":1,"offset":651},"end":{"line":24,"column":4,"offset":696},"indent":[1,1,1]}},{"type":"code","lang":"shell","meta":null,"value":"Input: \"fun times!\"\nOutput: gvO Ujnft!","position":{"start":{"line":26,"column":1,"offset":698},"end":{"line":29,"column":4,"offset":749},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Answer","position":{"start":{"line":31,"column":4,"offset":754},"end":{"line":31,"column":10,"offset":760},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":751},"end":{"line":31,"column":10,"offset":760},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function LetterChanges(str) {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  // 1. Build out then new string\n  let newStr = '';\n  for (let i = 0; i < str.length; i++) {\n    console.log(str[i]);\n    let index = alphabet.indexOf(str[i]);\n    if (index === -1) {\n      newStr += str[i];\n    } else if (index === 25) {\n      newStr += 'A';\n    } else {\n      if (/([aeiou])/gi.test(alphabet[index + 1])) {\n        newStr += alphabet[index + 1].toUpperCase();\n      } else {\n        newStr += alphabet[index + 1];\n      }\n    }\n  }\n\n  // code goes here\n  return newStr;\n}","position":{"start":{"line":33,"column":1,"offset":762},"end":{"line":57,"column":4,"offset":1350},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":60,"column":1,"offset":1353},"end":{"line":60,"column":31,"offset":1383},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":31,"offset":1383}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"letter-changes\"\n    }}>{`Letter Changes`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.coderbyte.com/information/Letter%20Changes\"\n        }}>{`CoderByte Challenge`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"question\"\n    }}>{`Question`}</h2>\n    <p>{`Have the function LetterChanges(str) take the str parameter being passed and modify it using the following algorithm. Replace every letter in the string with the letter following it in the alphabet (ie. c becomes d, z becomes a). Then capitalize every vowel in this new string (a, e, i, o, u) and finally return this modified string.\nExamples`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"hello*3\"\nOutput: Ifmmp*3\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"fun times!\"\nOutput: gvO Ujnft!\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function LetterChanges(str) {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  // 1. Build out then new string\n  let newStr = '';\n  for (let i = 0; i < str.length; i++) {\n    console.log(str[i]);\n    let index = alphabet.indexOf(str[i]);\n    if (index === -1) {\n      newStr += str[i];\n    } else if (index === 25) {\n      newStr += 'A';\n    } else {\n      if (/([aeiou])/gi.test(alphabet[index + 1])) {\n        newStr += alphabet[index + 1].toUpperCase();\n      } else {\n        newStr += alphabet[index + 1];\n      }\n    }\n  }\n\n  // code goes here\n  return newStr;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}