{"expireTime":9007200867335911000,"key":"gatsby-plugin-mdx-entire-payload-33ef396bb60fd83b20d63ddf4a4b0ec7-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Simplest React Setup","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":23,"offset":189},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":23,"offset":189},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":194},"end":{"line":10,"column":13,"offset":203},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":191},"end":{"line":10,"column":13,"offset":203},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://kentcdodds.com/blog/super-simple-start-to-react","children":[{"type":"text","value":"Kent C Dodd's Blog - Super Simple Start to React","position":{"start":{"line":12,"column":5,"offset":209},"end":{"line":12,"column":53,"offset":257},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":208},"end":{"line":12,"column":111,"offset":315},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":208},"end":{"line":12,"column":111,"offset":315},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":205},"end":{"line":12,"column":111,"offset":315},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.dennisokeeffe.com/manual-react-data-vis-for-react-developers","children":[{"type":"text","value":"Data Vis for React Devs","position":{"start":{"line":13,"column":5,"offset":320},"end":{"line":13,"column":28,"offset":343},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":319},"end":{"line":13,"column":104,"offset":419},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":319},"end":{"line":13,"column":104,"offset":419},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":316},"end":{"line":13,"column":104,"offset":419},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":205},"end":{"line":13,"column":104,"offset":419},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":15,"column":4,"offset":424},"end":{"line":15,"column":9,"offset":429},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":421},"end":{"line":15,"column":9,"offset":429},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<html>\n  <body>\n    <div id=\"root\"></div>\n    <script src=\"https://unpkg.com/react@16.13.1/umd/react.development.js\"></script>\n    <script src=\"https://unpkg.com/react-dom@16.13.1/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/@babel/standalone@7.8.3/babel.js\"></script>\n    <script type=\"text/babel\">\n      ReactDOM.render(<div>Hello World</div>, document.getElementById('root'))\n    </script>\n  </body>\n</html>","position":{"start":{"line":17,"column":1,"offset":431},"end":{"line":29,"column":4,"offset":889},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Transforming to use D3","position":{"start":{"line":31,"column":4,"offset":894},"end":{"line":31,"column":26,"offset":916},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":891},"end":{"line":31,"column":26,"offset":916},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is nothing pretty, but there are no errors:","position":{"start":{"line":33,"column":1,"offset":918},"end":{"line":33,"column":49,"offset":966},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":918},"end":{"line":33,"column":49,"offset":966},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<html>\n  <body>\n    <div id=\"root\"></div>\n    <script src=\"https://unpkg.com/react@16.13.1/umd/react.development.js\"></script>\n    <script src=\"https://unpkg.com/react-dom@16.13.1/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/@babel/standalone@7.8.3/babel.js\"></script>\n     <script src=\"https://unpkg.com/d3@5.16.0/dist/d3.min.js\"></script>\n    <script type=\"text/babel\">\n      // helper func\n      const barChartData = (data, width, height) => {\n        const xAxis = d3.axisBottom();\n        const yAxis = d3.axisLeft();\n\n        const extent = d3.extent(data, d => d.date);\n        const xScale = d3\n          .scaleTime()\n          .domain(extent)\n          .range([0, width]);\n\n        const tempMax = d3.max(data, d => d.high);\n        const tempMin = d3.min(data, d => d.low);\n        const yScale = d3\n          .scaleLinear()\n          .domain([tempMin, tempMax])\n          .range([height, 0]);\n\n        // the important part\n        const colorExtent = d3.extent(data, d => d.avg).reverse();\n        // scaleSequential allows you to use an interpolator to map\n        // to the range.\n        const colorScale = d3\n          .scaleSequential()\n          .domain(colorExtent)\n          .interpolator(d3.interpolateRdYlBu);\n\n        return {\n          data: data.map(d => ({\n            x: xScale(d.date),\n            y: yScale(d.high),\n            height: yScale(d.low) - yScale(d.high),\n            fill: colorScale(d.avg),\n          }))\n        };\n      };\n\n      const BarChart = ({ chartData, width, height }) => {\n        const { data,  } = React.useCallback(() => barChartData(chartData, 400, height))();\n        const leftPadding = 2;\n\n        return (\n          <svg width={width} height={height}>\n            {data.map((d, i) => (\n              // she manually put <rect x={d.x} y={d.y} width={2} height={d.height} fill={d.fill}>\n              <rect key={i} x={d.x} y={d.y} width={100} height={d.height} fill={d.fill} />\n            ))}\n          </svg>\n        );\n      };\n\n      const data = [{\n          date: new Date(\"2017-01-02T00:00\"),\n          high: 52,\n          avg: 48,\n          low: 44\n        }, {\n          date: new Date(\"2017-01-01T00:00\"),\n          high: 54,\n          avg: 50,\n          low: 46\n        },\n        {\n          date: new Date(\"2017-01-03T00:00\"),\n          high: 49,\n          avg: 47,\n          low: 42\n        }, {\n          date: new Date(\"2017-01-04T00:00\"),\n          high: 56,\n          avg: 50,\n          low: 46\n        }]\n      ReactDOM.render(\n        <BarChart chartData={data} width={650} height={400} />\n      , document.getElementById('root'))\n    </script>\n  </body>\n</html>","position":{"start":{"line":35,"column":1,"offset":968},"end":{"line":123,"column":4,"offset":3659},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":126,"column":1,"offset":3662},"end":{"line":126,"column":31,"offset":3692},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":126,"column":31,"offset":3692}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"simplest-react-setup\"\n    }}>{`Simplest React Setup`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://kentcdodds.com/blog/super-simple-start-to-react\"\n        }}>{`Kent C Dodd's Blog - Super Simple Start to React`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.dennisokeeffe.com/manual-react-data-vis-for-react-developers\"\n        }}>{`Data Vis for React Devs`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<html>\n  <body>\n    <div id=\"root\"></div>\n    <script src=\"https://unpkg.com/react@16.13.1/umd/react.development.js\"></script>\n    <script src=\"https://unpkg.com/react-dom@16.13.1/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/@babel/standalone@7.8.3/babel.js\"></script>\n    <script type=\"text/babel\">\n      ReactDOM.render(<div>Hello World</div>, document.getElementById('root'))\n    </script>\n  </body>\n</html>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"transforming-to-use-d3\"\n    }}>{`Transforming to use D3`}</h2>\n    <p>{`This is nothing pretty, but there are no errors:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<html>\n  <body>\n    <div id=\"root\"></div>\n    <script src=\"https://unpkg.com/react@16.13.1/umd/react.development.js\"></script>\n    <script src=\"https://unpkg.com/react-dom@16.13.1/umd/react-dom.development.js\"></script>\n    <script src=\"https://unpkg.com/@babel/standalone@7.8.3/babel.js\"></script>\n     <script src=\"https://unpkg.com/d3@5.16.0/dist/d3.min.js\"></script>\n    <script type=\"text/babel\">\n      // helper func\n      const barChartData = (data, width, height) => {\n        const xAxis = d3.axisBottom();\n        const yAxis = d3.axisLeft();\n\n        const extent = d3.extent(data, d => d.date);\n        const xScale = d3\n          .scaleTime()\n          .domain(extent)\n          .range([0, width]);\n\n        const tempMax = d3.max(data, d => d.high);\n        const tempMin = d3.min(data, d => d.low);\n        const yScale = d3\n          .scaleLinear()\n          .domain([tempMin, tempMax])\n          .range([height, 0]);\n\n        // the important part\n        const colorExtent = d3.extent(data, d => d.avg).reverse();\n        // scaleSequential allows you to use an interpolator to map\n        // to the range.\n        const colorScale = d3\n          .scaleSequential()\n          .domain(colorExtent)\n          .interpolator(d3.interpolateRdYlBu);\n\n        return {\n          data: data.map(d => ({\n            x: xScale(d.date),\n            y: yScale(d.high),\n            height: yScale(d.low) - yScale(d.high),\n            fill: colorScale(d.avg),\n          }))\n        };\n      };\n\n      const BarChart = ({ chartData, width, height }) => {\n        const { data,  } = React.useCallback(() => barChartData(chartData, 400, height))();\n        const leftPadding = 2;\n\n        return (\n          <svg width={width} height={height}>\n            {data.map((d, i) => (\n              // she manually put <rect x={d.x} y={d.y} width={2} height={d.height} fill={d.fill}>\n              <rect key={i} x={d.x} y={d.y} width={100} height={d.height} fill={d.fill} />\n            ))}\n          </svg>\n        );\n      };\n\n      const data = [{\n          date: new Date(\"2017-01-02T00:00\"),\n          high: 52,\n          avg: 48,\n          low: 44\n        }, {\n          date: new Date(\"2017-01-01T00:00\"),\n          high: 54,\n          avg: 50,\n          low: 46\n        },\n        {\n          date: new Date(\"2017-01-03T00:00\"),\n          high: 49,\n          avg: 47,\n          low: 42\n        }, {\n          date: new Date(\"2017-01-04T00:00\"),\n          high: 56,\n          avg: 50,\n          low: 46\n        }]\n      ReactDOM.render(\n        <BarChart chartData={data} width={650} height={400} />\n      , document.getElementById('root'))\n    </script>\n  </body>\n</html>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}