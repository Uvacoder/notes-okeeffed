{"expireTime":9007200848610890000,"key":"gatsby-plugin-mdx-entire-payload-ec8e394dd2da39ac795c65a61435bb37-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"EKS Docker Setup","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":19,"offset":185},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":19,"offset":185},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Pull ubuntu latest image from Docker Hub.","position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":10,"column":42,"offset":228},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":10,"column":42,"offset":228},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Starting the image","position":{"start":{"line":12,"column":4,"offset":233},"end":{"line":12,"column":22,"offset":251},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":230},"end":{"line":12,"column":22,"offset":251},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# Start the container\ndocker run -dit -p 8001:8001 -e \"AWS_ACCESS_KEY=${AWS_ACCESS_KEY}\" -e \"AWS_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}\" -e \"AWS_REGION=ap-southeast-2\" --name eks ubuntu /bin/sh\n# Confirm it is running\nsudo docker ps\n# Attach to container\nsudo docker attach eks\n# If you need to copy files to /root\ndocker cp folder/ mycontainer:/root","position":{"start":{"line":14,"column":1,"offset":253},"end":{"line":23,"column":4,"offset":613},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Commit changes","position":{"start":{"line":25,"column":4,"offset":618},"end":{"line":25,"column":18,"offset":632},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":615},"end":{"line":25,"column":18,"offset":632},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"sudo docker commit CONTAINER_ID ubuntu:TAG","position":{"start":{"line":27,"column":1,"offset":634},"end":{"line":29,"column":4,"offset":689},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":31,"column":4,"offset":694},"end":{"line":31,"column":16,"offset":706},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":691},"end":{"line":31,"column":16,"offset":706},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you haven't saved an updated container, follow this to install AWS CLI, Python3, ","position":{"start":{"line":33,"column":1,"offset":708},"end":{"line":33,"column":85,"offset":792},"indent":[]}},{"type":"inlineCode","value":"aws-iam-authenticator","position":{"start":{"line":33,"column":85,"offset":792},"end":{"line":33,"column":108,"offset":815},"indent":[]}},{"type":"text","value":", eksctl and kubectl. Note you might need to use ","position":{"start":{"line":33,"column":108,"offset":815},"end":{"line":33,"column":157,"offset":864},"indent":[]}},{"type":"inlineCode","value":"sudo","position":{"start":{"line":33,"column":157,"offset":864},"end":{"line":33,"column":163,"offset":870},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":33,"column":163,"offset":870},"end":{"line":33,"column":164,"offset":871},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":708},"end":{"line":33,"column":164,"offset":871},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"apt-get update\n# Get AWS CLI\napt-get install awscli\napt-get install --reinstall groff-base # may be required is aws mentions it\napt-get install curl\n# Install kubectl\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\n# Install eksctl\ncurl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nmv /tmp/eksctl /usr/local/bin\n# Instal iam-aws-authenticator\ncurl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\ncp ./aws-iam-authenticator /usr/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH\n# Enable color prompt\nnano ~/.bashrc # uncomment section about bash","position":{"start":{"line":35,"column":1,"offset":873},"end":{"line":54,"column":4,"offset":1824},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":57,"column":1,"offset":1827},"end":{"line":57,"column":31,"offset":1857},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":57,"column":31,"offset":1857}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"eks-docker-setup\"\n    }}>{`EKS Docker Setup`}</h1>\n    <p>{`Pull ubuntu latest image from Docker Hub.`}</p>\n    <h2 {...{\n      \"id\": \"starting-the-image\"\n    }}>{`Starting the image`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Start the container\ndocker run -dit -p 8001:8001 -e \"AWS_ACCESS_KEY=\\${AWS_ACCESS_KEY}\" -e \"AWS_SECRET_KEY=\\${AWS_SECRET_ACCESS_KEY}\" -e \"AWS_REGION=ap-southeast-2\" --name eks ubuntu /bin/sh\n# Confirm it is running\nsudo docker ps\n# Attach to container\nsudo docker attach eks\n# If you need to copy files to /root\ndocker cp folder/ mycontainer:/root\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"commit-changes\"\n    }}>{`Commit changes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`sudo docker commit CONTAINER_ID ubuntu:TAG\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`If you haven't saved an updated container, follow this to install AWS CLI, Python3, `}<inlineCode parentName=\"p\">{`aws-iam-authenticator`}</inlineCode>{`, eksctl and kubectl. Note you might need to use `}<inlineCode parentName=\"p\">{`sudo`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`apt-get update\n# Get AWS CLI\napt-get install awscli\napt-get install --reinstall groff-base # may be required is aws mentions it\napt-get install curl\n# Install kubectl\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\n# Install eksctl\ncurl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nmv /tmp/eksctl /usr/local/bin\n# Instal iam-aws-authenticator\ncurl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\ncp ./aws-iam-authenticator /usr/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH\n# Enable color prompt\nnano ~/.bashrc # uncomment section about bash\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}