{"expireTime":9007200852878390000,"key":"gatsby-plugin-mdx-entire-payload-0938533acbf01033c3c87e55bcf3da04-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Kotlin From CLI","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":18,"offset":184},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":18,"offset":184},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":189},"end":{"line":10,"column":13,"offset":198},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":186},"end":{"line":10,"column":13,"offset":198},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.codexpedia.com/kotlin/install-compile-and-run-kotlin-from-command-line/","children":[{"type":"text","value":"Kotlin compile and run from CLI","position":{"start":{"line":12,"column":5,"offset":204},"end":{"line":12,"column":36,"offset":235},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":203},"end":{"line":12,"column":122,"offset":321},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":203},"end":{"line":12,"column":122,"offset":321},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":200},"end":{"line":12,"column":122,"offset":321},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":200},"end":{"line":12,"column":122,"offset":321},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Hello World from the CLI","position":{"start":{"line":14,"column":4,"offset":326},"end":{"line":14,"column":28,"offset":350},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":323},"end":{"line":14,"column":28,"offset":350},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"fun main(args: Array<String>) {\n    println(\"Hello World!\")\n}","position":{"start":{"line":16,"column":1,"offset":352},"end":{"line":20,"column":4,"offset":427},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Compiling","position":{"start":{"line":22,"column":4,"offset":432},"end":{"line":22,"column":13,"offset":441},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":429},"end":{"line":22,"column":13,"offset":441},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kotlinc greeting.kt hello.kt -include-runtime -d hello.jar","position":{"start":{"line":24,"column":1,"offset":443},"end":{"line":26,"column":4,"offset":514},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Running","position":{"start":{"line":28,"column":4,"offset":519},"end":{"line":28,"column":11,"offset":526},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":516},"end":{"line":28,"column":11,"offset":526},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"java -jar hello.jar","position":{"start":{"line":30,"column":1,"offset":528},"end":{"line":32,"column":4,"offset":560},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Running a task","position":{"start":{"line":34,"column":4,"offset":565},"end":{"line":34,"column":18,"offset":579},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":562},"end":{"line":34,"column":18,"offset":579},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find Kotlin path with ","position":{"start":{"line":36,"column":1,"offset":581},"end":{"line":36,"column":23,"offset":603},"indent":[]}},{"type":"inlineCode","value":"which kotlin","position":{"start":{"line":36,"column":23,"offset":603},"end":{"line":36,"column":37,"offset":617},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":36,"column":37,"offset":617},"end":{"line":36,"column":38,"offset":618},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":581},"end":{"line":36,"column":38,"offset":618},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"export PATH=$PATH:/path/from/which/kotlin\nfunction kotlinr() {\n  echo Compiling, please wait...\n  kotlinc $1 -include-runtime -d out.jar\n  java -jar out.jar\n}","position":{"start":{"line":38,"column":1,"offset":620},"end":{"line":45,"column":4,"offset":791},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After sourcing, you could now run ","position":{"start":{"line":47,"column":1,"offset":793},"end":{"line":47,"column":35,"offset":827},"indent":[]}},{"type":"inlineCode","value":"kotlinr hello.kt","position":{"start":{"line":47,"column":35,"offset":827},"end":{"line":47,"column":53,"offset":845},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":47,"column":53,"offset":845},"end":{"line":47,"column":54,"offset":846},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":793},"end":{"line":47,"column":54,"offset":846},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":50,"column":1,"offset":849},"end":{"line":50,"column":31,"offset":879},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":50,"column":31,"offset":879}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"kotlin-from-cli\"\n    }}>{`Kotlin From CLI`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.codexpedia.com/kotlin/install-compile-and-run-kotlin-from-command-line/\"\n        }}>{`Kotlin compile and run from CLI`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"hello-world-from-the-cli\"\n    }}>{`Hello World from the CLI`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun main(args: Array<String>) {\n    println(\"Hello World!\")\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"compiling\"\n    }}>{`Compiling`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kotlinc greeting.kt hello.kt -include-runtime -d hello.jar\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running\"\n    }}>{`Running`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`java -jar hello.jar\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-a-task\"\n    }}>{`Running a task`}</h2>\n    <p>{`Find Kotlin path with `}<inlineCode parentName=\"p\">{`which kotlin`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`export PATH=$PATH:/path/from/which/kotlin\nfunction kotlinr() {\n  echo Compiling, please wait...\n  kotlinc $1 -include-runtime -d out.jar\n  java -jar out.jar\n}\n`}</code></pre>\n    <p>{`After sourcing, you could now run `}<inlineCode parentName=\"p\">{`kotlinr hello.kt`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}