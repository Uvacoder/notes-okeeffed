{"expireTime":9007200867335891000,"key":"gatsby-plugin-mdx-entire-payload-fb745f151550fd93fa8346929624b997-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Building A Webpack Plugin","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":28,"offset":194},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":28,"offset":194},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":199},"end":{"line":10,"column":13,"offset":208},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":196},"end":{"line":10,"column":13,"offset":208},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://dev.to/royal_bhati/write-your-first-webpack-plugin-20fh","children":[{"type":"text","value":"This DEV.to article on removing logs using a plugin","position":{"start":{"line":12,"column":5,"offset":214},"end":{"line":12,"column":56,"offset":265},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":213},"end":{"line":12,"column":122,"offset":331},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":213},"end":{"line":12,"column":122,"offset":331},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":210},"end":{"line":12,"column":122,"offset":331},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":210},"end":{"line":12,"column":122,"offset":331},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Building A Plugin To Compile Tokens","position":{"start":{"line":14,"column":4,"offset":336},"end":{"line":14,"column":39,"offset":371},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":333},"end":{"line":14,"column":39,"offset":371},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This project enables us to look for ","position":{"start":{"line":16,"column":1,"offset":373},"end":{"line":16,"column":37,"offset":409},"indent":[]}},{"type":"inlineCode","value":".tokens.json","position":{"start":{"line":16,"column":37,"offset":409},"end":{"line":16,"column":51,"offset":423},"indent":[]}},{"type":"text","value":" files and compile the file tokens that we want.","position":{"start":{"line":16,"column":51,"offset":423},"end":{"line":16,"column":99,"offset":471},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":373},"end":{"line":16,"column":99,"offset":471},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Hello, World!","position":{"start":{"line":18,"column":4,"offset":476},"end":{"line":18,"column":17,"offset":489},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":473},"end":{"line":18,"column":17,"offset":489},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Touch a new file to use for the plugin. Below is an example taken from resource (1).","position":{"start":{"line":20,"column":1,"offset":491},"end":{"line":20,"column":85,"offset":575},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":491},"end":{"line":20,"column":85,"offset":575},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"//logRemover.ts\n\nmodule.exports = class RemoveLogs {\n  // not needed but can be used for params taken by plugin\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    console.log('Hello from the new plugin');\n  }\n};","position":{"start":{"line":22,"column":1,"offset":577},"end":{"line":35,"column":4,"offset":837},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In our example, we just need the following:","position":{"start":{"line":37,"column":1,"offset":839},"end":{"line":37,"column":44,"offset":882},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":839},"end":{"line":37,"column":44,"offset":882},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"module.exports = class CompileDesignTokens {\n  apply(compiler) {\n    console.log('Hello from the new plugin');\n  }\n};","position":{"start":{"line":39,"column":1,"offset":884},"end":{"line":45,"column":4,"offset":1019},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"todo: finish example (jan 8th 2020)","label":"TODO: Finish example (Jan 8th 2020)","referenceType":"shortcut","children":[{"type":"text","value":"TODO: Finish example (Jan 8th 2020)","position":{"start":{"line":47,"column":2,"offset":1022},"end":{"line":47,"column":37,"offset":1057},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1021},"end":{"line":47,"column":38,"offset":1058},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1021},"end":{"line":47,"column":38,"offset":1058},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":50,"column":1,"offset":1061},"end":{"line":50,"column":31,"offset":1091},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":50,"column":31,"offset":1091}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"building-a-webpack-plugin\"\n    }}>{`Building A Webpack Plugin`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dev.to/royal_bhati/write-your-first-webpack-plugin-20fh\"\n        }}>{`This DEV.to article on removing logs using a plugin`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"building-a-plugin-to-compile-tokens\"\n    }}>{`Building A Plugin To Compile Tokens`}</h2>\n    <p>{`This project enables us to look for `}<inlineCode parentName=\"p\">{`.tokens.json`}</inlineCode>{` files and compile the file tokens that we want.`}</p>\n    <h2 {...{\n      \"id\": \"hello-world\"\n    }}>{`Hello, World!`}</h2>\n    <p>{`Touch a new file to use for the plugin. Below is an example taken from resource (1).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`//logRemover.ts\n\nmodule.exports = class RemoveLogs {\n  // not needed but can be used for params taken by plugin\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    console.log('Hello from the new plugin');\n  }\n};\n`}</code></pre>\n    <p>{`In our example, we just need the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`module.exports = class CompileDesignTokens {\n  apply(compiler) {\n    console.log('Hello from the new plugin');\n  }\n};\n`}</code></pre>\n    <p>{`[TODO: Finish example (Jan 8th 2020)]`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}