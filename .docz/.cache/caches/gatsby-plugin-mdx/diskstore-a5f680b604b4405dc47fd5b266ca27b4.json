{"expireTime":9007200867335984000,"key":"gatsby-plugin-mdx-entire-payload-133b291b5335a48a682d56a241017c23-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Mac Crontab","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":14,"offset":180},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":14,"offset":180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Open Vim to add your cronjobs.","position":{"start":{"line":10,"column":1,"offset":182},"end":{"line":10,"column":31,"offset":212},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":182},"end":{"line":10,"column":31,"offset":212},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"crontab -e","position":{"start":{"line":12,"column":1,"offset":214},"end":{"line":14,"column":4,"offset":233},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Setting the format:","position":{"start":{"line":16,"column":1,"offset":235},"end":{"line":16,"column":20,"offset":254},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":235},"end":{"line":16,"column":20,"offset":254},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"* * * * * command\n* - minute (0-59)\n* - hour (0-23)\n* - day of the month (1-31)\n* - month (1-12)\n* - day of the week (0-6, 0 is Sunday)\ncommand - command to execute\n(from left-to-right)","position":{"start":{"line":18,"column":1,"offset":256},"end":{"line":27,"column":4,"offset":450},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then in Vim, you can write an expression like ","position":{"start":{"line":29,"column":1,"offset":452},"end":{"line":29,"column":47,"offset":498},"indent":[]}},{"type":"inlineCode","value":"0,15,30,45 * * * * cd ~/.scripts && ./work.sh","position":{"start":{"line":29,"column":47,"offset":498},"end":{"line":29,"column":94,"offset":545},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":29,"column":94,"offset":545},"end":{"line":29,"column":95,"offset":546},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":452},"end":{"line":29,"column":95,"offset":546},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To see active jobs, run ","position":{"start":{"line":31,"column":1,"offset":548},"end":{"line":31,"column":25,"offset":572},"indent":[]}},{"type":"inlineCode","value":"crontab -l","position":{"start":{"line":31,"column":25,"offset":572},"end":{"line":31,"column":37,"offset":584},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":31,"column":37,"offset":584},"end":{"line":31,"column":38,"offset":585},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":548},"end":{"line":31,"column":38,"offset":585},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":34,"column":1,"offset":588},"end":{"line":34,"column":31,"offset":618},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":34,"column":31,"offset":618}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"mac-crontab\"\n    }}>{`Mac Crontab`}</h1>\n    <p>{`Open Vim to add your cronjobs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`crontab -e\n`}</code></pre>\n    <p>{`Setting the format:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`* * * * * command\n* - minute (0-59)\n* - hour (0-23)\n* - day of the month (1-31)\n* - month (1-12)\n* - day of the week (0-6, 0 is Sunday)\ncommand - command to execute\n(from left-to-right)\n`}</code></pre>\n    <p>{`Then in Vim, you can write an expression like `}<inlineCode parentName=\"p\">{`0,15,30,45 * * * * cd ~/.scripts && ./work.sh`}</inlineCode>{`.`}</p>\n    <p>{`To see active jobs, run `}<inlineCode parentName=\"p\">{`crontab -l`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}