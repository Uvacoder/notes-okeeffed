{"expireTime":9007200867335907000,"key":"gatsby-plugin-mdx-entire-payload-c9d87577ea4ad7c595a14949abda4037-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"How Does The Ruby Interpret Work?","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":36,"offset":202},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":36,"offset":202},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":207},"end":{"line":10,"column":13,"offset":216},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":204},"end":{"line":10,"column":13,"offset":216},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.honeybadger.io/blog/how-ruby-interprets-and-runs-your-programs/","children":[{"type":"text","value":"How Ruby Interprets your programs","position":{"start":{"line":12,"column":5,"offset":222},"end":{"line":12,"column":38,"offset":255},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":221},"end":{"line":12,"column":116,"offset":333},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":221},"end":{"line":12,"column":116,"offset":333},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":218},"end":{"line":12,"column":116,"offset":333},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/datanorris/ruby-language-doc/wiki/Execution-Context-and-Closures","children":[{"type":"text","value":"Ruby Language Doc - GitHub","position":{"start":{"line":13,"column":5,"offset":338},"end":{"line":13,"column":31,"offset":364},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":337},"end":{"line":13,"column":117,"offset":450},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":337},"end":{"line":13,"column":117,"offset":450},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":334},"end":{"line":13,"column":117,"offset":450},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":218},"end":{"line":13,"column":117,"offset":450},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":15,"column":4,"offset":455},"end":{"line":15,"column":9,"offset":460},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":452},"end":{"line":15,"column":9,"offset":460},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tokenize","position":{"start":{"line":17,"column":4,"offset":465},"end":{"line":17,"column":12,"offset":473},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":465},"end":{"line":17,"column":12,"offset":473},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":462},"end":{"line":17,"column":12,"offset":473},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Lex the tokens","position":{"start":{"line":18,"column":4,"offset":477},"end":{"line":18,"column":18,"offset":491},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":477},"end":{"line":18,"column":18,"offset":491},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":474},"end":{"line":18,"column":18,"offset":491},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Parse the AST tree","position":{"start":{"line":19,"column":4,"offset":495},"end":{"line":19,"column":22,"offset":513},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":495},"end":{"line":19,"column":22,"offset":513},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":492},"end":{"line":19,"column":22,"offset":513},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Compile to byte code","position":{"start":{"line":20,"column":4,"offset":517},"end":{"line":20,"column":24,"offset":537},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":517},"end":{"line":20,"column":24,"offset":537},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":514},"end":{"line":20,"column":24,"offset":537},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":462},"end":{"line":20,"column":24,"offset":537},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":23,"column":1,"offset":540},"end":{"line":23,"column":31,"offset":570},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":23,"column":31,"offset":570}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-does-the-ruby-interpret-work\"\n    }}>{`How Does The Ruby Interpret Work?`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.honeybadger.io/blog/how-ruby-interprets-and-runs-your-programs/\"\n        }}>{`How Ruby Interprets your programs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/datanorris/ruby-language-doc/wiki/Execution-Context-and-Closures\"\n        }}>{`Ruby Language Doc - GitHub`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Tokenize`}</li>\n      <li parentName=\"ol\">{`Lex the tokens`}</li>\n      <li parentName=\"ol\">{`Parse the AST tree`}</li>\n      <li parentName=\"ol\">{`Compile to byte code`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}