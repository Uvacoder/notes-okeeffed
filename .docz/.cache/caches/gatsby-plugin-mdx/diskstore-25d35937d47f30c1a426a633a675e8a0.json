{"expireTime":9007200848610930000,"key":"gatsby-plugin-mdx-entire-payload-c0af06c1e3e7de1ff969c550bb4b5456-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Week 3 - Threads","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":19,"offset":184},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":19,"offset":184},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Processes and Threads","position":{"start":{"line":9,"column":4,"offset":189},"end":{"line":9,"column":25,"offset":210},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":186},"end":{"line":9,"column":26,"offset":211},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Processes have two characteristics:","position":{"start":{"line":11,"column":1,"offset":213},"end":{"line":11,"column":36,"offset":248},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":213},"end":{"line":11,"column":36,"offset":248},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Resource Ownership ","position":{"start":{"line":13,"column":4,"offset":253},"end":{"line":13,"column":23,"offset":272},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":253},"end":{"line":13,"column":23,"offset":272},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"process includes a virtual address space to hold the process image ","position":{"start":{"line":14,"column":4,"offset":276},"end":{"line":14,"column":71,"offset":343},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":276},"end":{"line":14,"column":71,"offset":343},"indent":[]}}],"position":{"start":{"line":14,"column":2,"offset":274},"end":{"line":14,"column":71,"offset":343},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the OS performs a protection function to prevent unwanted interference between processes with respect to resources","position":{"start":{"line":15,"column":4,"offset":347},"end":{"line":15,"column":118,"offset":461},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":347},"end":{"line":15,"column":118,"offset":461},"indent":[]}}],"position":{"start":{"line":15,"column":2,"offset":345},"end":{"line":15,"column":118,"offset":461},"indent":[]}}],"position":{"start":{"line":14,"column":2,"offset":274},"end":{"line":15,"column":118,"offset":461},"indent":[2]}}],"position":{"start":{"line":13,"column":1,"offset":250},"end":{"line":15,"column":118,"offset":461},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Scheduling/Execution","position":{"start":{"line":16,"column":4,"offset":465},"end":{"line":16,"column":24,"offset":485},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":465},"end":{"line":16,"column":24,"offset":485},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"follows an execution path that may be interleaved with other processes ","position":{"start":{"line":17,"column":4,"offset":489},"end":{"line":17,"column":75,"offset":560},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":489},"end":{"line":17,"column":75,"offset":560},"indent":[]}}],"position":{"start":{"line":17,"column":2,"offset":487},"end":{"line":17,"column":75,"offset":560},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"a process has an execution state (Running, Ready, etc.) and a dispatching priority and is scheduled and dispatched by the OS","position":{"start":{"line":18,"column":4,"offset":564},"end":{"line":18,"column":128,"offset":688},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":564},"end":{"line":18,"column":128,"offset":688},"indent":[]}}],"position":{"start":{"line":18,"column":2,"offset":562},"end":{"line":18,"column":128,"offset":688},"indent":[]}}],"position":{"start":{"line":17,"column":2,"offset":487},"end":{"line":18,"column":128,"offset":688},"indent":[2]}}],"position":{"start":{"line":16,"column":1,"offset":462},"end":{"line":18,"column":128,"offset":688},"indent":[1,1]}}],"position":{"start":{"line":13,"column":1,"offset":250},"end":{"line":18,"column":128,"offset":688},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These two characteristics are treated independently by modern operating systems:\n\t- the unit of dispatching is referred to as a ","position":{"start":{"line":20,"column":1,"offset":690},"end":{"line":21,"column":48,"offset":818},"indent":[1]}},{"type":"inlineCode","value":"thread","position":{"start":{"line":21,"column":48,"offset":818},"end":{"line":21,"column":56,"offset":826},"indent":[]}},{"type":"text","value":" or lightweight process \n\t- the unit of resource ownership is referred to as a ","position":{"start":{"line":21,"column":56,"offset":826},"end":{"line":22,"column":55,"offset":905},"indent":[1]}},{"type":"inlineCode","value":"process","position":{"start":{"line":22,"column":55,"offset":905},"end":{"line":22,"column":64,"offset":914},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":22,"column":64,"offset":914},"end":{"line":22,"column":68,"offset":918},"indent":[]}},{"type":"inlineCode","value":"task","position":{"start":{"line":22,"column":68,"offset":918},"end":{"line":22,"column":74,"offset":924},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":690},"end":{"line":22,"column":74,"offset":924},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Multithreading","position":{"start":{"line":24,"column":4,"offset":929},"end":{"line":24,"column":18,"offset":943},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":926},"end":{"line":24,"column":19,"offset":944},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ability of an OS to support multiple, concurrect paths of execution within a single process","position":{"start":{"line":26,"column":1,"offset":946},"end":{"line":26,"column":96,"offset":1041},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":946},"end":{"line":26,"column":96,"offset":1041},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Process","position":{"start":{"line":28,"column":4,"offset":1046},"end":{"line":28,"column":11,"offset":1053},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1043},"end":{"line":28,"column":12,"offset":1054},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The unit of resource allocation and a unit of protection.","position":{"start":{"line":30,"column":1,"offset":1056},"end":{"line":30,"column":58,"offset":1113},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1056},"end":{"line":30,"column":58,"offset":1113},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A process is associated with: ","position":{"start":{"line":32,"column":1,"offset":1115},"end":{"line":32,"column":31,"offset":1145},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1115},"end":{"line":32,"column":31,"offset":1145},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A virtual address space which holds the process image ","position":{"start":{"line":33,"column":3,"offset":1148},"end":{"line":33,"column":57,"offset":1202},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":1148},"end":{"line":33,"column":57,"offset":1202},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1146},"end":{"line":33,"column":57,"offset":1202},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Protected access to \n\t\t- Processors\n\t\t- Other processes \n\t\t- Files \n\t\t- I/O resources ","position":{"start":{"line":34,"column":3,"offset":1205},"end":{"line":38,"column":18,"offset":1287},"indent":[0,0,0,0]}}],"position":{"start":{"line":34,"column":3,"offset":1205},"end":{"line":38,"column":18,"offset":1287},"indent":[0,0,0,0]}}],"position":{"start":{"line":34,"column":1,"offset":1203},"end":{"line":38,"column":18,"offset":1287},"indent":[1,1,1,1]}}],"position":{"start":{"line":33,"column":1,"offset":1146},"end":{"line":38,"column":18,"offset":1287},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Multiple threads in Process","position":{"start":{"line":40,"column":4,"offset":1292},"end":{"line":40,"column":31,"offset":1319},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1289},"end":{"line":40,"column":32,"offset":1320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Each thread has:","position":{"start":{"line":42,"column":1,"offset":1322},"end":{"line":42,"column":17,"offset":1338},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1322},"end":{"line":42,"column":17,"offset":1338},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Access to the memory and resources of its process (all threads of a process share this)","position":{"start":{"line":43,"column":3,"offset":1341},"end":{"line":43,"column":90,"offset":1428},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":1341},"end":{"line":43,"column":90,"offset":1428},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1339},"end":{"line":43,"column":90,"offset":1428},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An execution state (running, ready, etc.)","position":{"start":{"line":44,"column":3,"offset":1431},"end":{"line":44,"column":44,"offset":1472},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":1431},"end":{"line":44,"column":44,"offset":1472},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1429},"end":{"line":44,"column":44,"offset":1472},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Saved thread context when not running ","position":{"start":{"line":45,"column":3,"offset":1475},"end":{"line":45,"column":41,"offset":1513},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":1475},"end":{"line":45,"column":41,"offset":1513},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1473},"end":{"line":45,"column":41,"offset":1513},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An execution stack ","position":{"start":{"line":46,"column":3,"offset":1516},"end":{"line":46,"column":22,"offset":1535},"indent":[]}}],"position":{"start":{"line":46,"column":3,"offset":1516},"end":{"line":46,"column":22,"offset":1535},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1514},"end":{"line":46,"column":22,"offset":1535},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Some per-thread static storage for local variables","position":{"start":{"line":47,"column":3,"offset":1538},"end":{"line":47,"column":53,"offset":1588},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":1538},"end":{"line":47,"column":53,"offset":1588},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1536},"end":{"line":47,"column":53,"offset":1588},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1339},"end":{"line":47,"column":53,"offset":1588},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Single-Threaded vs multi threaded","position":{"start":{"line":49,"column":4,"offset":1593},"end":{"line":49,"column":37,"offset":1626},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1590},"end":{"line":49,"column":38,"offset":1627},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Both have ","position":{"start":{"line":51,"column":3,"offset":1631},"end":{"line":51,"column":13,"offset":1641},"indent":[]}},{"type":"inlineCode","value":"Process Control Block","position":{"start":{"line":51,"column":13,"offset":1641},"end":{"line":51,"column":36,"offset":1664},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":1631},"end":{"line":51,"column":36,"offset":1664},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1629},"end":{"line":51,"column":36,"offset":1664},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Both have ","position":{"start":{"line":52,"column":3,"offset":1667},"end":{"line":52,"column":13,"offset":1677},"indent":[]}},{"type":"inlineCode","value":"User Address Space","position":{"start":{"line":52,"column":13,"offset":1677},"end":{"line":52,"column":33,"offset":1697},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":1667},"end":{"line":52,"column":33,"offset":1697},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1665},"end":{"line":52,"column":33,"offset":1697},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Single thread has a ","position":{"start":{"line":53,"column":3,"offset":1700},"end":{"line":53,"column":23,"offset":1720},"indent":[]}},{"type":"inlineCode","value":"User Stack","position":{"start":{"line":53,"column":23,"offset":1720},"end":{"line":53,"column":35,"offset":1732},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":53,"column":35,"offset":1732},"end":{"line":53,"column":40,"offset":1737},"indent":[]}},{"type":"inlineCode","value":"Kernel Stack","position":{"start":{"line":53,"column":40,"offset":1737},"end":{"line":53,"column":54,"offset":1751},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1700},"end":{"line":53,"column":54,"offset":1751},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1698},"end":{"line":53,"column":54,"offset":1751},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Multithread process has a ","position":{"start":{"line":54,"column":3,"offset":1754},"end":{"line":54,"column":29,"offset":1780},"indent":[]}},{"type":"inlineCode","value":"User Stack","position":{"start":{"line":54,"column":29,"offset":1780},"end":{"line":54,"column":41,"offset":1792},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":54,"column":41,"offset":1792},"end":{"line":54,"column":43,"offset":1794},"indent":[]}},{"type":"inlineCode","value":"Kernel Stack","position":{"start":{"line":54,"column":43,"offset":1794},"end":{"line":54,"column":57,"offset":1808},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":54,"column":57,"offset":1808},"end":{"line":54,"column":59,"offset":1810},"indent":[]}},{"type":"inlineCode","value":"Thread Control Block","position":{"start":{"line":54,"column":59,"offset":1810},"end":{"line":54,"column":81,"offset":1832},"indent":[]}},{"type":"text","value":" within each thread","position":{"start":{"line":54,"column":81,"offset":1832},"end":{"line":54,"column":100,"offset":1851},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1754},"end":{"line":54,"column":100,"offset":1851},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1752},"end":{"line":54,"column":100,"offset":1851},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1629},"end":{"line":54,"column":100,"offset":1851},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Threads","position":{"start":{"line":56,"column":4,"offset":1856},"end":{"line":56,"column":11,"offset":1863},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1853},"end":{"line":56,"column":12,"offset":1864},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In OS that supports threads: scheduling and dispatching done on thread basis ","position":{"start":{"line":58,"column":1,"offset":1866},"end":{"line":58,"column":78,"offset":1943},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1866},"end":{"line":58,"column":78,"offset":1943},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Most of the state info dealing with execution is maintained in thread-level data structures ","position":{"start":{"line":60,"column":3,"offset":1947},"end":{"line":60,"column":95,"offset":2039},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":1947},"end":{"line":60,"column":95,"offset":2039},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1945},"end":{"line":60,"column":95,"offset":2039},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Several actions that affect all of the threads in a process and that the OS must manage at the process level\n\t\t- Suspending process means all threads of a process \n\t\t- Terminates a process terminates all threads within the process ","position":{"start":{"line":61,"column":3,"offset":2042},"end":{"line":63,"column":67,"offset":2271},"indent":[0,0]}}],"position":{"start":{"line":61,"column":3,"offset":2042},"end":{"line":63,"column":67,"offset":2271},"indent":[0,0]}}],"position":{"start":{"line":61,"column":1,"offset":2040},"end":{"line":63,"column":67,"offset":2271},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Similar to processes, threads have execution states and may synchronize with one another.","position":{"start":{"line":64,"column":3,"offset":2274},"end":{"line":64,"column":92,"offset":2363},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":2274},"end":{"line":64,"column":92,"offset":2363},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2272},"end":{"line":64,"column":92,"offset":2363},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1945},"end":{"line":64,"column":92,"offset":2363},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Thread Execution States","position":{"start":{"line":67,"column":4,"offset":2369},"end":{"line":67,"column":27,"offset":2392},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2366},"end":{"line":67,"column":28,"offset":2393},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Three basic states","position":{"start":{"line":69,"column":1,"offset":2395},"end":{"line":69,"column":19,"offset":2413},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2395},"end":{"line":69,"column":19,"offset":2413},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Running ","position":{"start":{"line":71,"column":4,"offset":2418},"end":{"line":71,"column":12,"offset":2426},"indent":[]}}],"position":{"start":{"line":71,"column":4,"offset":2418},"end":{"line":71,"column":12,"offset":2426},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2415},"end":{"line":71,"column":12,"offset":2426},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ready ","position":{"start":{"line":72,"column":4,"offset":2430},"end":{"line":72,"column":10,"offset":2436},"indent":[]}}],"position":{"start":{"line":72,"column":4,"offset":2430},"end":{"line":72,"column":10,"offset":2436},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2427},"end":{"line":72,"column":10,"offset":2436},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Blocked ","position":{"start":{"line":73,"column":4,"offset":2440},"end":{"line":73,"column":12,"offset":2448},"indent":[]}}],"position":{"start":{"line":73,"column":4,"offset":2440},"end":{"line":73,"column":12,"offset":2448},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2437},"end":{"line":73,"column":12,"offset":2448},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2415},"end":{"line":73,"column":12,"offset":2448},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Operations associated with a change in thread state ","position":{"start":{"line":75,"column":1,"offset":2450},"end":{"line":75,"column":53,"offset":2502},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2450},"end":{"line":75,"column":53,"offset":2502},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Spawn (another thread)\n\t\t- allocate register context and stacks ","position":{"start":{"line":76,"column":3,"offset":2505},"end":{"line":77,"column":41,"offset":2568},"indent":[0]}}],"position":{"start":{"line":76,"column":3,"offset":2505},"end":{"line":77,"column":41,"offset":2568},"indent":[0]}}],"position":{"start":{"line":76,"column":1,"offset":2503},"end":{"line":77,"column":41,"offset":2568},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Block \n\t\t- move to an event queue waiting for the event \n\t\t- issue: will blocking a thread block other, or all, threads within the same process?","position":{"start":{"line":78,"column":3,"offset":2571},"end":{"line":80,"column":87,"offset":2713},"indent":[0,0]}}],"position":{"start":{"line":78,"column":3,"offset":2571},"end":{"line":80,"column":87,"offset":2713},"indent":[0,0]}}],"position":{"start":{"line":78,"column":1,"offset":2569},"end":{"line":80,"column":87,"offset":2713},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Unblock \n\t\t- moved the the ","position":{"start":{"line":81,"column":3,"offset":2716},"end":{"line":82,"column":18,"offset":2742},"indent":[0]}},{"type":"inlineCode","value":"Ready","position":{"start":{"line":82,"column":18,"offset":2742},"end":{"line":82,"column":25,"offset":2749},"indent":[]}},{"type":"text","value":" queue for execution","position":{"start":{"line":82,"column":25,"offset":2749},"end":{"line":82,"column":45,"offset":2769},"indent":[]}}],"position":{"start":{"line":81,"column":3,"offset":2716},"end":{"line":82,"column":45,"offset":2769},"indent":[0]}}],"position":{"start":{"line":81,"column":1,"offset":2714},"end":{"line":82,"column":45,"offset":2769},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Finish (thread)\n\t\t- de-allocate register context and stacks ","position":{"start":{"line":83,"column":3,"offset":2772},"end":{"line":84,"column":44,"offset":2831},"indent":[0]}}],"position":{"start":{"line":83,"column":3,"offset":2772},"end":{"line":84,"column":44,"offset":2831},"indent":[0]}}],"position":{"start":{"line":83,"column":1,"offset":2770},"end":{"line":84,"column":44,"offset":2831},"indent":[1]}}],"position":{"start":{"line":76,"column":1,"offset":2503},"end":{"line":84,"column":44,"offset":2831},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Thread Synchronization","position":{"start":{"line":86,"column":4,"offset":2836},"end":{"line":86,"column":26,"offset":2858},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2833},"end":{"line":86,"column":27,"offset":2859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Necessity to sync activities of all threads and prevent interference between each other.","position":{"start":{"line":88,"column":1,"offset":2861},"end":{"line":88,"column":89,"offset":2949},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2861},"end":{"line":88,"column":89,"offset":2949},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"all threads of a process share the same address space and other resources ","position":{"start":{"line":90,"column":3,"offset":2953},"end":{"line":90,"column":77,"offset":3027},"indent":[]}}],"position":{"start":{"line":90,"column":3,"offset":2953},"end":{"line":90,"column":77,"offset":3027},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2951},"end":{"line":90,"column":77,"offset":3027},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"any alteration of a resource by one thread affects the other threads in the same process ","position":{"start":{"line":91,"column":3,"offset":3030},"end":{"line":91,"column":92,"offset":3119},"indent":[]}}],"position":{"start":{"line":91,"column":3,"offset":3030},"end":{"line":91,"column":92,"offset":3119},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3028},"end":{"line":91,"column":92,"offset":3119},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2951},"end":{"line":91,"column":92,"offset":3119},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In general, the techniques used for thread sync are the same as those for process sync.","position":{"start":{"line":93,"column":1,"offset":3121},"end":{"line":93,"column":88,"offset":3208},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3121},"end":{"line":93,"column":88,"offset":3208},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Types of Threads","position":{"start":{"line":95,"column":4,"offset":3213},"end":{"line":95,"column":20,"offset":3229},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3210},"end":{"line":95,"column":21,"offset":3230},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"User Level Thread (ULT)","position":{"start":{"line":97,"column":4,"offset":3235},"end":{"line":97,"column":27,"offset":3258},"indent":[]}}],"position":{"start":{"line":97,"column":4,"offset":3235},"end":{"line":97,"column":27,"offset":3258},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3232},"end":{"line":97,"column":27,"offset":3258},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Kernel Level Thread (KLT) ","position":{"start":{"line":98,"column":4,"offset":3262},"end":{"line":98,"column":30,"offset":3288},"indent":[]}}],"position":{"start":{"line":98,"column":4,"offset":3262},"end":{"line":98,"column":30,"offset":3288},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"also called kernel-supported threads or lightweight threads","position":{"start":{"line":99,"column":4,"offset":3292},"end":{"line":99,"column":63,"offset":3351},"indent":[]}}],"position":{"start":{"line":99,"column":4,"offset":3292},"end":{"line":99,"column":63,"offset":3351},"indent":[]}}],"position":{"start":{"line":99,"column":2,"offset":3290},"end":{"line":99,"column":63,"offset":3351},"indent":[]}}],"position":{"start":{"line":99,"column":2,"offset":3290},"end":{"line":99,"column":63,"offset":3351},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3259},"end":{"line":99,"column":63,"offset":3351},"indent":[1]}}],"position":{"start":{"line":97,"column":1,"offset":3232},"end":{"line":99,"column":63,"offset":3351},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"User-Level Threads","position":{"start":{"line":101,"column":4,"offset":3356},"end":{"line":101,"column":22,"offset":3374},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3353},"end":{"line":101,"column":23,"offset":3375},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Thread management all done by application.","position":{"start":{"line":103,"column":1,"offset":3377},"end":{"line":103,"column":43,"offset":3419},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3377},"end":{"line":103,"column":43,"offset":3419},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Multithreading is managed by a runtime threads lib ","position":{"start":{"line":104,"column":3,"offset":3422},"end":{"line":104,"column":54,"offset":3473},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":3422},"end":{"line":104,"column":54,"offset":3473},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3420},"end":{"line":104,"column":54,"offset":3473},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3420},"end":{"line":104,"column":54,"offset":3473},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The kernel is not aware of the existence of threads ","position":{"start":{"line":106,"column":1,"offset":3475},"end":{"line":106,"column":53,"offset":3527},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3475},"end":{"line":106,"column":53,"offset":3527},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only schedule the process as a unit and assigns a single execution state to that process ","position":{"start":{"line":107,"column":3,"offset":3530},"end":{"line":107,"column":92,"offset":3619},"indent":[]}}],"position":{"start":{"line":107,"column":3,"offset":3530},"end":{"line":107,"column":92,"offset":3619},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3528},"end":{"line":107,"column":92,"offset":3619},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3528},"end":{"line":107,"column":92,"offset":3619},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Disadvantages of ULT","position":{"start":{"line":109,"column":4,"offset":3624},"end":{"line":109,"column":24,"offset":3644},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3621},"end":{"line":109,"column":25,"offset":3645},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In a typical OS many system calls are blocking ","position":{"start":{"line":111,"column":1,"offset":3647},"end":{"line":111,"column":48,"offset":3694},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3647},"end":{"line":111,"column":48,"offset":3694},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"as a result, when a ULT executes a system call, not only is the thread blocked, but all within the process are blocked ","position":{"start":{"line":112,"column":3,"offset":3697},"end":{"line":112,"column":122,"offset":3816},"indent":[]}}],"position":{"start":{"line":112,"column":3,"offset":3697},"end":{"line":112,"column":122,"offset":3816},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3695},"end":{"line":112,"column":122,"offset":3816},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3695},"end":{"line":112,"column":122,"offset":3816},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In a pure ULT strategy, multithreaded applications cannot take advantage of multiprocessing.","position":{"start":{"line":114,"column":1,"offset":3818},"end":{"line":114,"column":93,"offset":3910},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3818},"end":{"line":114,"column":93,"offset":3910},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Kernel-Level Threads","position":{"start":{"line":116,"column":4,"offset":3915},"end":{"line":116,"column":24,"offset":3935},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3912},"end":{"line":116,"column":25,"offset":3936},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kernel maintains context information for the process and the threads. ","position":{"start":{"line":118,"column":1,"offset":3938},"end":{"line":118,"column":71,"offset":4008},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3938},"end":{"line":118,"column":71,"offset":4008},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No thread management done by application ","position":{"start":{"line":119,"column":3,"offset":4011},"end":{"line":119,"column":44,"offset":4052},"indent":[]}}],"position":{"start":{"line":119,"column":3,"offset":4011},"end":{"line":119,"column":44,"offset":4052},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4009},"end":{"line":119,"column":44,"offset":4052},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4009},"end":{"line":119,"column":44,"offset":4052},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scheduling is done on a thread basis.","position":{"start":{"line":121,"column":1,"offset":4054},"end":{"line":121,"column":38,"offset":4091},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":4054},"end":{"line":121,"column":38,"offset":4091},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Windows is an example of this approach.","position":{"start":{"line":123,"column":1,"offset":4093},"end":{"line":123,"column":40,"offset":4132},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4093},"end":{"line":123,"column":40,"offset":4132},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Advantages of KLT","position":{"start":{"line":125,"column":4,"offset":4137},"end":{"line":125,"column":21,"offset":4154},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4134},"end":{"line":125,"column":22,"offset":4155},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The kernel can simultaneously schedule multiple threads from the same process on multiple processors.","position":{"start":{"line":127,"column":1,"offset":4157},"end":{"line":127,"column":102,"offset":4258},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4157},"end":{"line":127,"column":102,"offset":4258},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If one thread is blocked, the kernel schedules another thread of the same process.","position":{"start":{"line":129,"column":1,"offset":4260},"end":{"line":129,"column":83,"offset":4342},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4260},"end":{"line":129,"column":83,"offset":4342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kernel routines themselves can be multithreaded.","position":{"start":{"line":131,"column":1,"offset":4344},"end":{"line":131,"column":49,"offset":4392},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":4344},"end":{"line":131,"column":49,"offset":4392},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Multicore & Multithreading","position":{"start":{"line":133,"column":4,"offset":4397},"end":{"line":133,"column":30,"offset":4423},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4394},"end":{"line":133,"column":31,"offset":4424},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Achieves concurrency without the overhead of using multiple processes.","position":{"start":{"line":135,"column":1,"offset":4426},"end":{"line":135,"column":71,"offset":4496},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4426},"end":{"line":135,"column":71,"offset":4496},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Threads within the same process can exchange information through their common address space and have access to the shared resources of the process.","position":{"start":{"line":137,"column":1,"offset":4498},"end":{"line":137,"column":148,"offset":4645},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4498},"end":{"line":137,"column":148,"offset":4645},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Threads of any process can run on any processor","position":{"start":{"line":139,"column":3,"offset":4649},"end":{"line":139,"column":50,"offset":4696},"indent":[]}}],"position":{"start":{"line":139,"column":3,"offset":4649},"end":{"line":139,"column":50,"offset":4696},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4647},"end":{"line":139,"column":50,"offset":4696},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Soft affinity:\n\t\t- dispatcher tries to assign a ready thread to the same processor it last ran on \n\t\t- helps reuse data still in that processor's memory caches from the previous execution of the thread ","position":{"start":{"line":140,"column":3,"offset":4699},"end":{"line":142,"column":103,"offset":4899},"indent":[0,0]}}],"position":{"start":{"line":140,"column":3,"offset":4699},"end":{"line":142,"column":103,"offset":4899},"indent":[0,0]}}],"position":{"start":{"line":140,"column":1,"offset":4697},"end":{"line":142,"column":103,"offset":4899},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Hard affinity:\n\t\t- an application restricts thread execution to certain processors","position":{"start":{"line":143,"column":3,"offset":4902},"end":{"line":144,"column":67,"offset":4983},"indent":[0]}}],"position":{"start":{"line":143,"column":3,"offset":4902},"end":{"line":144,"column":67,"offset":4983},"indent":[0]}}],"position":{"start":{"line":143,"column":1,"offset":4900},"end":{"line":144,"column":67,"offset":4983},"indent":[1]}}],"position":{"start":{"line":139,"column":1,"offset":4647},"end":{"line":144,"column":67,"offset":4983},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Multicore Challenges","position":{"start":{"line":146,"column":4,"offset":4988},"end":{"line":146,"column":24,"offset":5008},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":4985},"end":{"line":146,"column":25,"offset":5009},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Dividing activities ","position":{"start":{"line":148,"column":3,"offset":5013},"end":{"line":148,"column":23,"offset":5033},"indent":[]}}],"position":{"start":{"line":148,"column":3,"offset":5013},"end":{"line":148,"column":23,"offset":5033},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":5011},"end":{"line":148,"column":23,"offset":5033},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Balance ","position":{"start":{"line":149,"column":3,"offset":5036},"end":{"line":149,"column":11,"offset":5044},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":5036},"end":{"line":149,"column":11,"offset":5044},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5034},"end":{"line":149,"column":11,"offset":5044},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Data splitting ","position":{"start":{"line":150,"column":3,"offset":5047},"end":{"line":150,"column":18,"offset":5062},"indent":[]}}],"position":{"start":{"line":150,"column":3,"offset":5047},"end":{"line":150,"column":18,"offset":5062},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":5045},"end":{"line":150,"column":18,"offset":5062},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Data dependency ","position":{"start":{"line":151,"column":3,"offset":5065},"end":{"line":151,"column":19,"offset":5081},"indent":[]}}],"position":{"start":{"line":151,"column":3,"offset":5065},"end":{"line":151,"column":19,"offset":5081},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":5063},"end":{"line":151,"column":19,"offset":5081},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Testing and debugging ","position":{"start":{"line":152,"column":3,"offset":5084},"end":{"line":152,"column":25,"offset":5106},"indent":[]}}],"position":{"start":{"line":152,"column":3,"offset":5084},"end":{"line":152,"column":25,"offset":5106},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5082},"end":{"line":152,"column":25,"offset":5106},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":5011},"end":{"line":152,"column":25,"offset":5106},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Linux Threads","position":{"start":{"line":154,"column":4,"offset":5111},"end":{"line":154,"column":17,"offset":5124},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5108},"end":{"line":154,"column":18,"offset":5125},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Linux uses the same internal representation for processes and threads; a thread is simply a new process (or task) that happens to share the same address space as its parent.","position":{"start":{"line":156,"column":1,"offset":5127},"end":{"line":156,"column":174,"offset":5300},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":5127},"end":{"line":156,"column":174,"offset":5300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A distinction is only made when a new thread is created by the ","position":{"start":{"line":158,"column":1,"offset":5302},"end":{"line":158,"column":64,"offset":5365},"indent":[]}},{"type":"inlineCode","value":"clone","position":{"start":{"line":158,"column":64,"offset":5365},"end":{"line":158,"column":71,"offset":5372},"indent":[]}},{"type":"text","value":" system call\n\t- ","position":{"start":{"line":158,"column":71,"offset":5372},"end":{"line":159,"column":4,"offset":5388},"indent":[1]}},{"type":"inlineCode","value":"fork","position":{"start":{"line":159,"column":4,"offset":5388},"end":{"line":159,"column":10,"offset":5394},"indent":[]}},{"type":"text","value":" creates a new process with its own entirely new process context \n\t- ","position":{"start":{"line":159,"column":10,"offset":5394},"end":{"line":160,"column":4,"offset":5463},"indent":[1]}},{"type":"inlineCode","value":"clone","position":{"start":{"line":160,"column":4,"offset":5463},"end":{"line":160,"column":11,"offset":5470},"indent":[]}},{"type":"text","value":" creates a new process with its own identity, but that is allowed to share the data structures of its parent","position":{"start":{"line":160,"column":11,"offset":5470},"end":{"line":160,"column":119,"offset":5578},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":5302},"end":{"line":160,"column":119,"offset":5578},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":162,"column":1,"offset":5580},"end":{"line":162,"column":7,"offset":5586},"indent":[]}},{"type":"inlineCode","value":"clone","position":{"start":{"line":162,"column":7,"offset":5586},"end":{"line":162,"column":14,"offset":5593},"indent":[]}},{"type":"text","value":" gives the application fine-grained control over exactly what is shared between two threads.","position":{"start":{"line":162,"column":14,"offset":5593},"end":{"line":162,"column":106,"offset":5685},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5580},"end":{"line":162,"column":106,"offset":5685},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"flag","position":{"start":{"line":164,"column":1,"offset":5687},"end":{"line":164,"column":5,"offset":5691},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5687},"end":{"line":164,"column":5,"offset":5691},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"meaning","position":{"start":{"line":164,"column":8,"offset":5694},"end":{"line":164,"column":15,"offset":5701},"indent":[]}}],"position":{"start":{"line":164,"column":8,"offset":5694},"end":{"line":164,"column":15,"offset":5701},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5687},"end":{"line":164,"column":15,"offset":5701},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"CLONE_FS","position":{"start":{"line":166,"column":1,"offset":5713},"end":{"line":166,"column":11,"offset":5723},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5713},"end":{"line":166,"column":11,"offset":5723},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"File-system info is shared","position":{"start":{"line":166,"column":14,"offset":5726},"end":{"line":166,"column":40,"offset":5752},"indent":[]}}],"position":{"start":{"line":166,"column":14,"offset":5726},"end":{"line":166,"column":40,"offset":5752},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5713},"end":{"line":166,"column":41,"offset":5753},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"CLONE_VM","position":{"start":{"line":167,"column":1,"offset":5754},"end":{"line":167,"column":11,"offset":5764},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5754},"end":{"line":167,"column":11,"offset":5764},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The same mem space is shared","position":{"start":{"line":167,"column":14,"offset":5767},"end":{"line":167,"column":42,"offset":5795},"indent":[]}}],"position":{"start":{"line":167,"column":14,"offset":5767},"end":{"line":167,"column":42,"offset":5795},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5754},"end":{"line":167,"column":43,"offset":5796},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"CLONE_SIGHAND","position":{"start":{"line":168,"column":1,"offset":5797},"end":{"line":168,"column":16,"offset":5812},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5797},"end":{"line":168,"column":16,"offset":5812},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Signal handlers are shared","position":{"start":{"line":168,"column":19,"offset":5815},"end":{"line":168,"column":45,"offset":5841},"indent":[]}}],"position":{"start":{"line":168,"column":19,"offset":5815},"end":{"line":168,"column":45,"offset":5841},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5797},"end":{"line":168,"column":46,"offset":5842},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"CLONE_FILES","position":{"start":{"line":169,"column":1,"offset":5843},"end":{"line":169,"column":14,"offset":5856},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5843},"end":{"line":169,"column":14,"offset":5856},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The set of open files are shared","position":{"start":{"line":169,"column":17,"offset":5859},"end":{"line":169,"column":49,"offset":5891},"indent":[]}}],"position":{"start":{"line":169,"column":17,"offset":5859},"end":{"line":169,"column":49,"offset":5891},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5843},"end":{"line":169,"column":49,"offset":5891},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5687},"end":{"line":169,"column":49,"offset":5891},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Windows Threads","position":{"start":{"line":171,"column":4,"offset":5896},"end":{"line":171,"column":19,"offset":5911},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5893},"end":{"line":171,"column":20,"offset":5912},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Processes and servies provided by the Windows Kernel are relatively simple and general purpose.","position":{"start":{"line":173,"column":1,"offset":5914},"end":{"line":173,"column":96,"offset":6009},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":5914},"end":{"line":173,"column":96,"offset":6009},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"implemented as objects ","position":{"start":{"line":175,"column":3,"offset":6013},"end":{"line":175,"column":26,"offset":6036},"indent":[]}}],"position":{"start":{"line":175,"column":3,"offset":6013},"end":{"line":175,"column":26,"offset":6036},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":6011},"end":{"line":175,"column":26,"offset":6036},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"created as new process or a copy of an existing process ","position":{"start":{"line":176,"column":3,"offset":6039},"end":{"line":176,"column":59,"offset":6095},"indent":[]}}],"position":{"start":{"line":176,"column":3,"offset":6039},"end":{"line":176,"column":59,"offset":6095},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":6037},"end":{"line":176,"column":59,"offset":6095},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"exec proc may contain one or more threads ","position":{"start":{"line":177,"column":3,"offset":6098},"end":{"line":177,"column":45,"offset":6140},"indent":[]}}],"position":{"start":{"line":177,"column":3,"offset":6098},"end":{"line":177,"column":45,"offset":6140},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":6096},"end":{"line":177,"column":45,"offset":6140},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"both procs and thread objects have built-in sync capabilities","position":{"start":{"line":178,"column":3,"offset":6143},"end":{"line":178,"column":64,"offset":6204},"indent":[]}}],"position":{"start":{"line":178,"column":3,"offset":6143},"end":{"line":178,"column":64,"offset":6204},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":6141},"end":{"line":178,"column":64,"offset":6204},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":6011},"end":{"line":178,"column":64,"offset":6204},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Windows makes use of two types of process-related objects:","position":{"start":{"line":180,"column":1,"offset":6206},"end":{"line":180,"column":59,"offset":6264},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":6206},"end":{"line":180,"column":59,"offset":6264},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Processes","position":{"start":{"line":182,"column":3,"offset":6268},"end":{"line":182,"column":12,"offset":6277},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":6266},"end":{"line":182,"column":14,"offset":6279},"indent":[]}},{"type":"text","value":"\n– an entity corresponding to a user job or application that owns resources","position":{"start":{"line":182,"column":14,"offset":6279},"end":{"line":183,"column":75,"offset":6354},"indent":[1]}}],"position":{"start":{"line":182,"column":1,"offset":6266},"end":{"line":183,"column":75,"offset":6354},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Threads","position":{"start":{"line":185,"column":3,"offset":6358},"end":{"line":185,"column":10,"offset":6365},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":6356},"end":{"line":185,"column":12,"offset":6367},"indent":[]}},{"type":"text","value":"\n– a dispatchable unit of work that executes sequentially and is interruptible","position":{"start":{"line":185,"column":12,"offset":6367},"end":{"line":186,"column":78,"offset":6445},"indent":[1]}}],"position":{"start":{"line":185,"column":1,"offset":6356},"end":{"line":186,"column":78,"offset":6445},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":188,"column":1,"offset":6447},"end":{"line":188,"column":31,"offset":6477},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":188,"column":31,"offset":6477}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"week-3---threads\"\n    }}>{`Week 3 - Threads`}</h1>\n    <h2 {...{\n      \"id\": \"processes-and-threads\"\n    }}>{`Processes and Threads`}</h2>\n    <p>{`Processes have two characteristics:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Resource Ownership `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`process includes a virtual address space to hold the process image `}</li>\n          <li parentName=\"ul\">{`the OS performs a protection function to prevent unwanted interference between processes with respect to resources`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Scheduling/Execution`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`follows an execution path that may be interleaved with other processes `}</li>\n          <li parentName=\"ul\">{`a process has an execution state (Running, Ready, etc.) and a dispatching priority and is scheduled and dispatched by the OS`}</li>\n        </ul></li>\n    </ol>\n    <p>{`These two characteristics are treated independently by modern operating systems:\n- the unit of dispatching is referred to as a `}<inlineCode parentName=\"p\">{`thread`}</inlineCode>{` or lightweight process\n- the unit of resource ownership is referred to as a `}<inlineCode parentName=\"p\">{`process`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`task`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"multithreading\"\n    }}>{`Multithreading`}</h2>\n    <p>{`The ability of an OS to support multiple, concurrect paths of execution within a single process`}</p>\n    <h2 {...{\n      \"id\": \"process\"\n    }}>{`Process`}</h2>\n    <p>{`The unit of resource allocation and a unit of protection.`}</p>\n    <p>{`A process is associated with: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`A virtual address space which holds the process image `}</li>\n      <li parentName=\"ul\">{`Protected access to\n- Processors\n- Other processes\n- Files\n- I/O resources `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"multiple-threads-in-process\"\n    }}>{`Multiple threads in Process`}</h2>\n    <p>{`Each thread has:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Access to the memory and resources of its process (all threads of a process share this)`}</li>\n      <li parentName=\"ul\">{`An execution state (running, ready, etc.)`}</li>\n      <li parentName=\"ul\">{`Saved thread context when not running `}</li>\n      <li parentName=\"ul\">{`An execution stack `}</li>\n      <li parentName=\"ul\">{`Some per-thread static storage for local variables`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"single-threaded-vs-multi-threaded\"\n    }}>{`Single-Threaded vs multi threaded`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Both have `}<inlineCode parentName=\"li\">{`Process Control Block`}</inlineCode></li>\n      <li parentName=\"ul\">{`Both have `}<inlineCode parentName=\"li\">{`User Address Space`}</inlineCode></li>\n      <li parentName=\"ul\">{`Single thread has a `}<inlineCode parentName=\"li\">{`User Stack`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Kernel Stack`}</inlineCode></li>\n      <li parentName=\"ul\">{`Multithread process has a `}<inlineCode parentName=\"li\">{`User Stack`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Kernel Stack`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Thread Control Block`}</inlineCode>{` within each thread`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"threads\"\n    }}>{`Threads`}</h2>\n    <p>{`In OS that supports threads: scheduling and dispatching done on thread basis `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Most of the state info dealing with execution is maintained in thread-level data structures `}</li>\n      <li parentName=\"ul\">{`Several actions that affect all of the threads in a process and that the OS must manage at the process level\n- Suspending process means all threads of a process\n- Terminates a process terminates all threads within the process `}</li>\n      <li parentName=\"ul\">{`Similar to processes, threads have execution states and may synchronize with one another.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"thread-execution-states\"\n    }}>{`Thread Execution States`}</h2>\n    <p>{`Three basic states`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Running `}</li>\n      <li parentName=\"ol\">{`Ready `}</li>\n      <li parentName=\"ol\">{`Blocked `}</li>\n    </ol>\n    <p>{`Operations associated with a change in thread state `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Spawn (another thread)\n- allocate register context and stacks `}</li>\n      <li parentName=\"ul\">{`Block\n- move to an event queue waiting for the event\n- issue: will blocking a thread block other, or all, threads within the same process?`}</li>\n      <li parentName=\"ul\">{`Unblock\n- moved the the `}<inlineCode parentName=\"li\">{`Ready`}</inlineCode>{` queue for execution`}</li>\n      <li parentName=\"ul\">{`Finish (thread)\n- de-allocate register context and stacks `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"thread-synchronization\"\n    }}>{`Thread Synchronization`}</h2>\n    <p>{`Necessity to sync activities of all threads and prevent interference between each other.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`all threads of a process share the same address space and other resources `}</li>\n      <li parentName=\"ul\">{`any alteration of a resource by one thread affects the other threads in the same process `}</li>\n    </ul>\n    <p>{`In general, the techniques used for thread sync are the same as those for process sync.`}</p>\n    <h2 {...{\n      \"id\": \"types-of-threads\"\n    }}>{`Types of Threads`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`User Level Thread (ULT)`}</li>\n      <li parentName=\"ol\">{`Kernel Level Thread (KLT) `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`also called kernel-supported threads or lightweight threads`}</li>\n        </ul></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"user-level-threads\"\n    }}>{`User-Level Threads`}</h2>\n    <p>{`Thread management all done by application.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Multithreading is managed by a runtime threads lib `}</li>\n    </ul>\n    <p>{`The kernel is not aware of the existence of threads `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Only schedule the process as a unit and assigns a single execution state to that process `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"disadvantages-of-ult\"\n    }}>{`Disadvantages of ULT`}</h2>\n    <p>{`In a typical OS many system calls are blocking `}</p>\n    <ul>\n      <li parentName=\"ul\">{`as a result, when a ULT executes a system call, not only is the thread blocked, but all within the process are blocked `}</li>\n    </ul>\n    <p>{`In a pure ULT strategy, multithreaded applications cannot take advantage of multiprocessing.`}</p>\n    <h2 {...{\n      \"id\": \"kernel-level-threads\"\n    }}>{`Kernel-Level Threads`}</h2>\n    <p>{`Kernel maintains context information for the process and the threads. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`No thread management done by application `}</li>\n    </ul>\n    <p>{`Scheduling is done on a thread basis.`}</p>\n    <p>{`Windows is an example of this approach.`}</p>\n    <h2 {...{\n      \"id\": \"advantages-of-klt\"\n    }}>{`Advantages of KLT`}</h2>\n    <p>{`The kernel can simultaneously schedule multiple threads from the same process on multiple processors.`}</p>\n    <p>{`If one thread is blocked, the kernel schedules another thread of the same process.`}</p>\n    <p>{`Kernel routines themselves can be multithreaded.`}</p>\n    <h2 {...{\n      \"id\": \"multicore--multithreading\"\n    }}>{`Multicore & Multithreading`}</h2>\n    <p>{`Achieves concurrency without the overhead of using multiple processes.`}</p>\n    <p>{`Threads within the same process can exchange information through their common address space and have access to the shared resources of the process.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Threads of any process can run on any processor`}</li>\n      <li parentName=\"ul\">{`Soft affinity:\n- dispatcher tries to assign a ready thread to the same processor it last ran on\n- helps reuse data still in that processor's memory caches from the previous execution of the thread `}</li>\n      <li parentName=\"ul\">{`Hard affinity:\n- an application restricts thread execution to certain processors`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"multicore-challenges\"\n    }}>{`Multicore Challenges`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Dividing activities `}</li>\n      <li parentName=\"ul\">{`Balance `}</li>\n      <li parentName=\"ul\">{`Data splitting `}</li>\n      <li parentName=\"ul\">{`Data dependency `}</li>\n      <li parentName=\"ul\">{`Testing and debugging `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"linux-threads\"\n    }}>{`Linux Threads`}</h2>\n    <p>{`Linux uses the same internal representation for processes and threads; a thread is simply a new process (or task) that happens to share the same address space as its parent.`}</p>\n    <p>{`A distinction is only made when a new thread is created by the `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` system call\n- `}<inlineCode parentName=\"p\">{`fork`}</inlineCode>{` creates a new process with its own entirely new process context\n- `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` creates a new process with its own identity, but that is allowed to share the data structures of its parent`}</p>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` gives the application fine-grained control over exactly what is shared between two threads.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`flag`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`meaning`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_FS`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`File-system info is shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_VM`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The same mem space is shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_SIGHAND`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Signal handlers are shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_FILES`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The set of open files are shared`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"windows-threads\"\n    }}>{`Windows Threads`}</h2>\n    <p>{`Processes and servies provided by the Windows Kernel are relatively simple and general purpose.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`implemented as objects `}</li>\n      <li parentName=\"ul\">{`created as new process or a copy of an existing process `}</li>\n      <li parentName=\"ul\">{`exec proc may contain one or more threads `}</li>\n      <li parentName=\"ul\">{`both procs and thread objects have built-in sync capabilities`}</li>\n    </ul>\n    <p>{`Windows makes use of two types of process-related objects:`}</p>\n    <p><strong parentName=\"p\">{`Processes`}</strong>{`\n– an entity corresponding to a user job or application that owns resources`}</p>\n    <p><strong parentName=\"p\">{`Threads`}</strong>{`\n– a dispatchable unit of work that executes sequentially and is interruptible`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}