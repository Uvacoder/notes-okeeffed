{"expireTime":9007200848610848000,"key":"gatsby-plugin-mdx-entire-payload-999a4e48e3125b1574c9f6696fe50eaf-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"WP PRES COMPANY CHEAT SHEET","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":30,"offset":195},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":30,"offset":195},"indent":[]}},{"type":"jsx","value":"<!-- TOC -->","position":{"start":{"line":9,"column":1,"offset":197},"end":{"line":9,"column":13,"offset":209},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#wp-pres-company-cheat-sheet","children":[{"type":"text","value":"WP PRES COMPANY CHEAT SHEET","position":{"start":{"line":11,"column":6,"offset":216},"end":{"line":11,"column":33,"offset":243},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":215},"end":{"line":11,"column":64,"offset":274},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":215},"end":{"line":11,"column":64,"offset":274},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#wppres-1-faq","children":[{"type":"text","value":"WPPRES-1: FAQ","position":{"start":{"line":12,"column":10,"offset":284},"end":{"line":12,"column":23,"offset":297},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":283},"end":{"line":12,"column":39,"offset":313},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":283},"end":{"line":12,"column":39,"offset":313},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":279},"end":{"line":12,"column":39,"offset":313},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#wppres-2-custom-type-relationships","children":[{"type":"text","value":"WPPRES-2: Custom Type Relationships","position":{"start":{"line":13,"column":10,"offset":323},"end":{"line":13,"column":45,"offset":358},"indent":[]}}],"position":{"start":{"line":13,"column":9,"offset":322},"end":{"line":13,"column":83,"offset":396},"indent":[]}}],"position":{"start":{"line":13,"column":9,"offset":322},"end":{"line":13,"column":83,"offset":396},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":318},"end":{"line":13,"column":83,"offset":396},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions","children":[{"type":"text","value":"WPPRES-3: Example of Rendering a .twig file using Timber WP functions","position":{"start":{"line":14,"column":10,"offset":406},"end":{"line":14,"column":79,"offset":475},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":405},"end":{"line":14,"column":150,"offset":546},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":405},"end":{"line":14,"column":150,"offset":546},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":401},"end":{"line":14,"column":150,"offset":546},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#wppres-4-example-php-functionsphp","children":[{"type":"text","value":"WPPRES-4: Example PHP functions.php","position":{"start":{"line":15,"column":10,"offset":556},"end":{"line":15,"column":45,"offset":591},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":555},"end":{"line":15,"column":82,"offset":628},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":555},"end":{"line":15,"column":82,"offset":628},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":551},"end":{"line":15,"column":82,"offset":628},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#wppres-5-creating-ajax-loading-example","children":[{"type":"text","value":"WPPRES-5: Creating AJAX (Loading example)","position":{"start":{"line":16,"column":10,"offset":638},"end":{"line":16,"column":51,"offset":679},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":637},"end":{"line":16,"column":93,"offset":721},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":637},"end":{"line":16,"column":93,"offset":721},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":633},"end":{"line":16,"column":93,"offset":721},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":279},"end":{"line":16,"column":93,"offset":721},"indent":[5,5,5,5]}}],"position":{"start":{"line":11,"column":1,"offset":211},"end":{"line":16,"column":93,"offset":721},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":11,"column":1,"offset":211},"end":{"line":16,"column":93,"offset":721},"indent":[1,1,1,1,1]}},{"type":"jsx","value":"<!-- /TOC -->","position":{"start":{"line":18,"column":1,"offset":723},"end":{"line":18,"column":14,"offset":736},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"WPPRES-1: FAQ","position":{"start":{"line":20,"column":4,"offset":741},"end":{"line":20,"column":17,"offset":754},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":738},"end":{"line":20,"column":17,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Q: I'm having a database connection failure through MAMP","position":{"start":{"line":22,"column":3,"offset":758},"end":{"line":22,"column":59,"offset":814},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":756},"end":{"line":22,"column":61,"offset":816},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":756},"end":{"line":22,"column":61,"offset":816},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.","position":{"start":{"line":24,"column":1,"offset":818},"end":{"line":24,"column":282,"offset":1099},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":818},"end":{"line":24,"column":282,"offset":1099},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.","position":{"start":{"line":26,"column":1,"offset":1101},"end":{"line":26,"column":144,"offset":1244},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1101},"end":{"line":26,"column":144,"offset":1244},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Q: Adjust get_posts posts_per_page for a data","position":{"start":{"line":28,"column":3,"offset":1248},"end":{"line":28,"column":48,"offset":1293},"indent":[]}},{"type":"linkReference","identifier":"\"term\"","label":"\"term\"","referenceType":"shortcut","children":[{"type":"text","value":"\"term\"","position":{"start":{"line":28,"column":49,"offset":1294},"end":{"line":28,"column":55,"offset":1300},"indent":[]}}],"position":{"start":{"line":28,"column":48,"offset":1293},"end":{"line":28,"column":56,"offset":1301},"indent":[]}},{"type":"text","value":" request","position":{"start":{"line":28,"column":56,"offset":1301},"end":{"line":28,"column":64,"offset":1309},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1246},"end":{"line":28,"column":66,"offset":1311},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1246},"end":{"line":28,"column":66,"offset":1311},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.","position":{"start":{"line":30,"column":1,"offset":1313},"end":{"line":30,"column":148,"offset":1460},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1313},"end":{"line":30,"column":148,"offset":1460},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Q: Where can I find what I need?","position":{"start":{"line":32,"column":3,"offset":1464},"end":{"line":32,"column":35,"offset":1496},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1462},"end":{"line":32,"column":37,"offset":1498},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1462},"end":{"line":32,"column":37,"offset":1498},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.","position":{"start":{"line":34,"column":1,"offset":1500},"end":{"line":34,"column":118,"offset":1617},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1500},"end":{"line":34,"column":118,"offset":1617},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"WPPRES-2: Custom Type Relationships","position":{"start":{"line":36,"column":4,"offset":1622},"end":{"line":36,"column":39,"offset":1657},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1619},"end":{"line":36,"column":39,"offset":1657},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"// in author-articles.php\n\n// be sure to require it in the functions.php file!\n\n<?php\n\nclass AuthorArticles {\n\n\t// Get all locations w/ recent posts\n\tpublic static function getAuthorArticles($author) {\n\n\t\t$args = new WP_Query([\n\t\t    'post_type' => 'post',\n\t\t    'no_found_rows' => true,\n\t\t\t'fields' => 'ids',\n\t\t\t'orderby' => 'date',\n\t\t\t'order' => 'desc',\n\t\t\t'meta_query' => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'key' => 'article_author',\n\t\t\t\t\t\t'value' => $author,\n\t\t\t\t\t\t'compare' => 'LIKE'\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t]);\n\n\t\t$postIds = $args->get_posts();\n\n\t\t$results = Timber::get_posts($postIds);\n\n\t\treturn Timber::get_posts($postIds);\n\t}\n\n}\n\n?>\n\n// example in use\n// Author Template - single-authors.php file\n\n<?php\n\n/* Template Name: Author */\n\n$data = Context::getDefaultContext();\n\n$data['author'] = Timber::get_post();\n\n$data['posts'] = AuthorArticles::getAuthorArticles($data['author']->id);\n\n$data['breadcrumbs'] = [\n\t[\n\t\t'text' => 'Authors',\n\t\t'url' => $data['site']->url .'/authors'\n\t]\n];\n\n\nTimber::render('author.twig', $data);\n\n?>","position":{"start":{"line":38,"column":1,"offset":1659},"end":{"line":100,"column":4,"offset":2679},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"WPPRES-3: Example of Rendering a .twig file using Timber WP functions","position":{"start":{"line":102,"column":4,"offset":2684},"end":{"line":102,"column":73,"offset":2753},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2681},"end":{"line":102,"column":73,"offset":2753},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"using the above examples","position":{"start":{"line":104,"column":5,"offset":2759},"end":{"line":104,"column":29,"offset":2783},"indent":[]}}],"position":{"start":{"line":104,"column":5,"offset":2759},"end":{"line":104,"column":29,"offset":2783},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2755},"end":{"line":104,"column":29,"offset":2783},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2755},"end":{"line":104,"column":29,"offset":2783},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"// __author.twig__\n\n{% if post.article_author %}\n{% set author = TimberPost(post.get_field('article_author')) %}\n<div class=\"author-container\">\n\t<p>Article By</p>\n\t<div class=\"author\">\n\t\t<div class=\"image\">\n\t\t\t{% set image = TimberImage(author.get_thumbnail) %}\n\t\t\t{% include 'partials/image.twig' with {\n\t\t\t\timage: image,\n\t\t\t\tsize: 'square_400'\n\t\t\t} %}\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<h3 class=\"title\">{{ author.title }}</h3>\n\t\t\t{% for social in author.get_field('social') %}\n\t\t\t\t<div class='social'>\n\t\t\t\t\t<a href='{{ social.url }}' target=\"_blank\" class='icon'>\n\t\t\t\t\t\t<i class='{{ socialIcons[social.network] }}'></i>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href='{{ social.url }}' target=\"_blank\">\n\t\t\t\t\t\t<span>{{ social.display }}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t{% endfor %}\n\t\t\t<a class=\"authorlink\" href=\"{{ author.link }}\">View Author Page</a>\n\t\t</div>\n\t</div>\n</div>\n{% endif %}\n\n***\n\n// __list.twig__\n\n<div class=\"list -post\">\n\t<ul class=\"list-items\">\n\t{% for post in posts %}\n \t\t{% include 'partials/post/list-item.twig' %}\n \t{% else %}\n        <p>Sorry, no posts matched your criteria</p>\n\t{% endfor %}\n\t</ul>\n</div>\n\n***\n\n__list-item.twig__\n\n<li class=\"list-item -post tile\">\n\t<a href=\"#\">\n\t\t<div class=\"image\">\n\t\t\t<img src=\"{{ post.get_thumbnail }}\" alt=\"\">\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<h3 class=\"title\">{{ post.title }}</h3>\n\t\t\t<p>{{ post.intro }}</p>\n\t\t\t<div class=\"read-more\">\n\t\t\t\t<a href=\"{{ post.link }}\">read more ></a>\n\t\t\t</div>\n\t\t</div>\n\t</a>\n</li>","position":{"start":{"line":106,"column":1,"offset":2785},"end":{"line":171,"column":4,"offset":4249},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"WPPRES-4: Example PHP functions.php","position":{"start":{"line":173,"column":4,"offset":4254},"end":{"line":173,"column":39,"offset":4289},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":4251},"end":{"line":173,"column":39,"offset":4289},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n\nadd_filter('show_admin_bar', '__return_false');\n\nrequire_once('functions/routes.php');\nrequire_once('functions/twig.php');\nrequire_once('functions/theme_support.php');\nrequire_once('functions/enqueue_scripts.php');\nrequire_once('functions/acf.php');\nrequire_once('functions/timber.php');\nrequire_once('functions/context.php');\nrequire_once('functions/locations.php');\nrequire_once('functions/author_articles.php');\nrequire_once('functions/infobox.php');\n\nif (!is_admin()) {\n\trequire_once('functions/post_filters.php');\n}\n\n?>","position":{"start":{"line":175,"column":1,"offset":4291},"end":{"line":196,"column":4,"offset":4833},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"WPPRES-5: Creating AJAX (Loading example)","position":{"start":{"line":198,"column":4,"offset":4838},"end":{"line":198,"column":45,"offset":4879},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":4835},"end":{"line":198,"column":45,"offset":4879},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using twig, variables were passed down to be used for things such as ","position":{"start":{"line":200,"column":1,"offset":4881},"end":{"line":200,"column":70,"offset":4950},"indent":[]}},{"type":"inlineCode","value":"loadmore.twig","position":{"start":{"line":200,"column":70,"offset":4950},"end":{"line":200,"column":85,"offset":4965},"indent":[]}},{"type":"text","value":", while a PHP class, routes and functions were set up to interact with the JS file.","position":{"start":{"line":200,"column":85,"offset":4965},"end":{"line":200,"column":168,"offset":5048},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":4881},"end":{"line":200,"column":168,"offset":5048},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"function.php","position":{"start":{"line":202,"column":3,"offset":5052},"end":{"line":202,"column":15,"offset":5064},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":5050},"end":{"line":202,"column":17,"offset":5066},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":5050},"end":{"line":202,"column":17,"offset":5066},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n...\nrequire_once('functions/load_more.php');\n...\n?>","position":{"start":{"line":204,"column":1,"offset":5068},"end":{"line":210,"column":4,"offset":5136},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"loadmore.php","position":{"start":{"line":212,"column":3,"offset":5140},"end":{"line":212,"column":15,"offset":5152},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":5138},"end":{"line":212,"column":17,"offset":5154},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":5138},"end":{"line":212,"column":17,"offset":5154},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n\nclass LoadMore {\n\tpublic function loadNextSet($params) {\n\t\t$perPage = 6;\n\t    $page = $params['page'];\n\t    $category = $params['cat'];\n\t    $data = Context::getDefaultContext();\n\t    $data['category'] = new TimberTerm($category);\n\t    $data['tag'] = 'tag';\n\n\t    $posts = $data['category']->get_posts([\n\t      'posts_per_page' => $perPage,\n\t      'orderby' => 'date',\n\t      'order' => 'DESC',\n\t      'offset' => ($perPage*$page) + 3,\n\t    ]);\n\n\t    $data['posts'] = $posts;\n\n\t    Timber::render('partials/post/grid.twig', $data);\n\t    exit();\n\t}\n}\n\n?>","position":{"start":{"line":214,"column":1,"offset":5156},"end":{"line":241,"column":4,"offset":5727},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"routes.php","position":{"start":{"line":243,"column":3,"offset":5731},"end":{"line":243,"column":13,"offset":5741},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":5729},"end":{"line":243,"column":15,"offset":5743},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":5729},"end":{"line":243,"column":15,"offset":5743},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"...\n// $params are the :section, :cat and :page args\nRoutes::map(':section/:cat/:page', function($params){\n    $articles = new LoadMore();\n    echo $articles->loadNextSet($params);\n});\n...","position":{"start":{"line":245,"column":1,"offset":5745},"end":{"line":253,"column":4,"offset":5944},"indent":[1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"__loadmore.twig__\n\n```html\n<div class=\"loadmore-container\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\n\t<a>Load More</a>\n</div>","position":{"start":{"line":255,"column":1,"offset":5946},"end":{"line":262,"column":5,"offset":6114},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"load-more.js","position":{"start":{"line":264,"column":3,"offset":6118},"end":{"line":264,"column":15,"offset":6130},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":6116},"end":{"line":264,"column":17,"offset":6132},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":6116},"end":{"line":264,"column":17,"offset":6132},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var titleTagline = require('./title-tagline.js');\n\nvar loadMore = {\n    $loadMoreContainer: $('.loadmore-container'),\n    category: $('.loadmore-container').data('category'),\n    section: $('.loadmore-container').data('section'),\n    search: $('.loadmore-container').data('search'),\n    page: $('.loadmore-container').data('page'),\n    base_url: $('meta[name=base_url]').attr('content'),\n    perPage: 6,\n\n    init: function() {\n        // Show mega-menu when mega-menu link is focused\n        loadMore.$loadMoreContainer.on('click', function(e) {\n            e.preventDefault();\n            if ($('ul.grid').length > 0) {\n                loadMore.loadNextSection();\n            } else {\n                loadMore.loadNextSearch();\n            }\n        });\n    },\n\n    loadNextSection: function() {\n        return $.ajax({\n            url:\n                loadMore.base_url +\n                '/section/' +\n                loadMore.section +\n                '/' +\n                loadMore.category +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSection,\n            error: loadMore.outputError\n        });\n    },\n\n    loadNextSearch: function() {\n        var urlString = loadMore.search;\n        urlString = urlString.replace(' ', '+');\n        console.log(urlString);\n        return $.ajax({\n            url:\n                loadMore.base_url +\n                '/search/' +\n                urlString +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSearch,\n            error: loadMore.outputError\n        });\n    },\n\n    resultsSection: function(data) {\n        var numPosts = $(data).find('li.-post').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n        var render = $(data)\n            .find('li.-post')\n            .unwrap();\n        $('ul.grid')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n\n        titleTagline.init();\n        titleTagline.doneResizing();\n    },\n\n    resultsSearch: function(data) {\n        console.log(data);\n\n        var numPosts = $(data).find('li.list-item').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n\n        var render = $(data)\n            .find('li.list-item')\n            .unwrap();\n        $('ul.list')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n    },\n\n    hideViewAll: function() {\n        loadMore.$loadMoreContainer.css('display', 'none');\n    }\n};\n\nmodule.exports = {\n    init: loadMore.init\n};","position":{"start":{"line":266,"column":1,"offset":6134},"end":{"line":367,"column":4,"offset":8846},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"loadmore.php","position":{"start":{"line":369,"column":3,"offset":8850},"end":{"line":369,"column":15,"offset":8862},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":8848},"end":{"line":369,"column":17,"offset":8864},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":8848},"end":{"line":369,"column":17,"offset":8864},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n\nclass LoadMore {\n\tpublic function loadNextLocationsSet($params) {\n\t\t$perPage = 6;\n\t    $page = $params['page'];\n\t    $category = $params['cat'];\n\t    $data = Context::getDefaultContext();\n\t    $data['category'] = new TimberTerm($category);\n\t    $data['tag'] = 'tag';\n\n\t    $posts = $data['category']->get_posts([\n\t      'posts_per_page' => $perPage,\n\t      'orderby' => 'date',\n\t      'order' => 'DESC',\n\t      'offset' => ($perPage*$page) + 3,\n\t    ]);\n\n\t    $data['posts'] = $posts;\n\n\t    Timber::render('partials/post/grid.twig', $data);\n\t    exit();\n\t}\n\n\tpublic function loadNextSearchSet($params) {\n\t\t$perPage = 6;\n\t    $page = (int)$params['page'];\n\t    $field = $params['search'];\n\t    $offset = ($perPage*$page) + 4;\n\t    $data = Context::getDefaultContext();\n\t    $search = get_query_var('s');\n\t\t$searchTerm = htmlspecialchars($field);\n\n\t    $data['posts'] = SearchTerms::getSearchArticles($field, $offset, $perPage);\n\n\t    Timber::render('partials/post/list.twig', $data);\n\t    exit();\n\t}\n\n\tpublic function loadNextInspirationsSet($params) {\n\n\t\t$exclusion = [];\n\n\t\t$perPage = 6;\n\t\t$page = $params['page'];\n\t\t$category = $params['cat'];\n\t\t$data = Context::getDefaultContext();\n\t\t$data['category'] = new TimberTerm($category);\n\t\t$data['tag'] = 'tag';\n\n\t\tif($featuredIds = $data['category']->featured) {\n\t\t\t$data['categoryFeatured'] = Timber::get_posts($featuredIds);\n\t\t\t$exclusion = self::updateExclusionList($data['categoryFeatured'], $exclusion);\n\t\t}\n\n\t\t$posts = $data['category']->get_posts([\n\t\t\t'posts_per_page' => $perPage,\n\t\t\t'orderby' => 'date',\n\t\t\t'order' => 'DESC',\n\t\t\t'offset' => ($perPage*$page) + 4,\n\t\t\t'post__not_in' => $exclusion,\n\t\t]);\n\n\t\t$data['posts'] = $posts;\n\n\t    Timber::render('partials/post/grid.twig', $data);\n\t    exit();\n\t}\n\n\tstatic function updateExclusionList($original, $exclusion) {\n\t\tforeach($original as $post) {\n\t\t\tif($post) {\n\t\t\t\tarray_push($exclusion, $post->id);\n\t\t\t}\n\t\t}\n\t\treturn $exclusion;\n\t}\n}\n\n?>","position":{"start":{"line":371,"column":1,"offset":8866},"end":{"line":452,"column":4,"offset":10830},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"WPPRES-6: Custom Search Terms","position":{"start":{"line":454,"column":4,"offset":10835},"end":{"line":454,"column":33,"offset":10864},"indent":[]}}],"position":{"start":{"line":454,"column":1,"offset":10832},"end":{"line":454,"column":33,"offset":10864},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.","position":{"start":{"line":456,"column":1,"offset":10866},"end":{"line":456,"column":156,"offset":11021},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":10866},"end":{"line":456,"column":156,"offset":11021},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"// from functions > search_term.php\n\nglobal $wpdb;\n\n$park_ids = [];\n$meta_arrays = [];\n$posts_park = [];\n\nif (strlen($search_term) > 3) {\n\n\t$park_post_type='parks';\n\t$park_post_status='publish';\n\n\t// get the park ids that relate to the search\n\t$park_args = $wpdb->get_col( $wpdb->prepare(\n\t\t\t\"\n\t\t\tSELECT ID\n\t\t\tFROM $wpdb->posts WP\n\t\t\tWHERE WP.post_title LIKE '%%%s%%'\n\t\t\tAND post_type='%s'\n\t\t\tAND post_status='%s'\n\t\t\t\",\n\t\t\tesc_sql($search_term),\n\t\t\tesc_sql($park_post_type),\n\t\t\tesc_sql($park_post_status)\n\t\t)\n\t);\n\n\t$park_ids = $park_args;\n\n\tif ($park_ids != null ) {\n\n\t\t$park_ids = esc_sql( $park_ids );\n\t\t$park_ids_str = \"'[^0-9]*\" . implode( \"[^0-9]*'|'[^0-9]*\", $park_ids ) . \"[^0-9]*'\";\n\t\t$park = 'park';\n\n\t\t//find the parks\n\t\t$init_park = $wpdb->get_col( $wpdb->prepare(\n\t\t\t\t\"\n\t\t\t\tSELECT WP.ID\n\t\t\t\tFROM $wpdb->posts WP\n\t\t\t\tINNER JOIN $wpdb->postmeta PM\n\t\t\t\tON ( WP.ID = PM.post_id )\n\t\t\t\tWHERE 1=1\n\t\t\t\tAND ( ( PM.meta_key = %s\n\t\t\t\tAND PM.meta_value REGEXP {$park_ids_str} ) )\n\t\t\t\tAND WP.post_type = 'post'\n\t\t\t\tAND (WP.post_status = 'publish')\n\t\t\t\tGROUP BY WP.ID\n\t\t\t\tORDER BY WP.post_title DESC, WP.post_date DESC\n\t\t\t\t\",\n\t\t\t\tesc_sql($park)\n\t\t\t)\n\t\t);\n\n\t\t// grab post results to allow metadata\n\t\t// comparison for park\n\t\t$results = Timber::get_posts($init_park);\n\n\t\t// filter the results to ensure posts are associated with\n\t\t// the latest and correct `park` value\n\t\tif ($results) {\n\t\t\tforeach ($results as $result) {\n\t\t\t\tif (array_intersect($result->custom['park'], $park_ids)) {\n\t\t\t\t\t$posts_park[] = $result->id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","position":{"start":{"line":458,"column":1,"offset":11023},"end":{"line":529,"column":4,"offset":12569},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":532,"column":1,"offset":12572},"end":{"line":532,"column":31,"offset":12602},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":532,"column":31,"offset":12602}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"wp-pres-company-cheat-sheet\"\n    }}>{`WP PRES COMPANY CHEAT SHEET`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#wp-pres-company-cheat-sheet\"\n        }}>{`WP PRES COMPANY CHEAT SHEET`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-1-faq\"\n            }}>{`WPPRES-1: FAQ`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-2-custom-type-relationships\"\n            }}>{`WPPRES-2: Custom Type Relationships`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"\n            }}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-4-example-php-functionsphp\"\n            }}>{`WPPRES-4: Example PHP functions.php`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-5-creating-ajax-loading-example\"\n            }}>{`WPPRES-5: Creating AJAX (Loading example)`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"wppres-1-faq\"\n    }}>{`WPPRES-1: FAQ`}</h2>\n    <p><strong parentName=\"p\">{`Q: I'm having a database connection failure through MAMP`}</strong></p>\n    <p>{`A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.`}</p>\n    <p>{`Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.`}</p>\n    <p><strong parentName=\"p\">{`Q: Adjust get_posts posts_per_page for a data`}{`[\"term\"]`}{` request`}</strong></p>\n    <p>{`A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.`}</p>\n    <p><strong parentName=\"p\">{`Q: Where can I find what I need?`}</strong></p>\n    <p>{`A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.`}</p>\n    <h2 {...{\n      \"id\": \"wppres-2-custom-type-relationships\"\n    }}>{`WPPRES-2: Custom Type Relationships`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// in author-articles.php\n\n// be sure to require it in the functions.php file!\n\n<?php\n\nclass AuthorArticles {\n\n    // Get all locations w/ recent posts\n    public static function getAuthorArticles($author) {\n\n        $args = new WP_Query([\n            'post_type' => 'post',\n            'no_found_rows' => true,\n            'fields' => 'ids',\n            'orderby' => 'date',\n            'order' => 'desc',\n            'meta_query' => [\n                    [\n                        'key' => 'article_author',\n                        'value' => $author,\n                        'compare' => 'LIKE'\n                    ]\n                ]\n        ]);\n\n        $postIds = $args->get_posts();\n\n        $results = Timber::get_posts($postIds);\n\n        return Timber::get_posts($postIds);\n    }\n\n}\n\n?>\n\n// example in use\n// Author Template - single-authors.php file\n\n<?php\n\n/* Template Name: Author */\n\n$data = Context::getDefaultContext();\n\n$data['author'] = Timber::get_post();\n\n$data['posts'] = AuthorArticles::getAuthorArticles($data['author']->id);\n\n$data['breadcrumbs'] = [\n    [\n        'text' => 'Authors',\n        'url' => $data['site']->url .'/authors'\n    ]\n];\n\n\nTimber::render('author.twig', $data);\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"\n    }}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`using the above examples`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`// __author.twig__\n\n{% if post.article_author %}\n{% set author = TimberPost(post.get_field('article_author')) %}\n<div class=\"author-container\">\n    <p>Article By</p>\n    <div class=\"author\">\n        <div class=\"image\">\n            {% set image = TimberImage(author.get_thumbnail) %}\n            {% include 'partials/image.twig' with {\n                image: image,\n                size: 'square_400'\n            } %}\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ author.title }}</h3>\n            {% for social in author.get_field('social') %}\n                <div class='social'>\n                    <a href='{{ social.url }}' target=\"_blank\" class='icon'>\n                        <i class='{{ socialIcons[social.network] }}'></i>\n                    </a>\n                    <a href='{{ social.url }}' target=\"_blank\">\n                        <span>{{ social.display }}</span>\n                    </a>\n                </div>\n            {% endfor %}\n            <a class=\"authorlink\" href=\"{{ author.link }}\">View Author Page</a>\n        </div>\n    </div>\n</div>\n{% endif %}\n\n***\n\n// __list.twig__\n\n<div class=\"list -post\">\n    <ul class=\"list-items\">\n    {% for post in posts %}\n        {% include 'partials/post/list-item.twig' %}\n    {% else %}\n        <p>Sorry, no posts matched your criteria</p>\n    {% endfor %}\n    </ul>\n</div>\n\n***\n\n__list-item.twig__\n\n<li class=\"list-item -post tile\">\n    <a href=\"#\">\n        <div class=\"image\">\n            <img src=\"{{ post.get_thumbnail }}\" alt=\"\">\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ post.title }}</h3>\n            <p>{{ post.intro }}</p>\n            <div class=\"read-more\">\n                <a href=\"{{ post.link }}\">read more ></a>\n            </div>\n        </div>\n    </a>\n</li>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-4-example-php-functionsphp\"\n    }}>{`WPPRES-4: Example PHP functions.php`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nadd_filter('show_admin_bar', '__return_false');\n\nrequire_once('functions/routes.php');\nrequire_once('functions/twig.php');\nrequire_once('functions/theme_support.php');\nrequire_once('functions/enqueue_scripts.php');\nrequire_once('functions/acf.php');\nrequire_once('functions/timber.php');\nrequire_once('functions/context.php');\nrequire_once('functions/locations.php');\nrequire_once('functions/author_articles.php');\nrequire_once('functions/infobox.php');\n\nif (!is_admin()) {\n    require_once('functions/post_filters.php');\n}\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-5-creating-ajax-loading-example\"\n    }}>{`WPPRES-5: Creating AJAX (Loading example)`}</h2>\n    <p>{`Using twig, variables were passed down to be used for things such as `}<inlineCode parentName=\"p\">{`loadmore.twig`}</inlineCode>{`, while a PHP class, routes and functions were set up to interact with the JS file.`}</p>\n    <p><strong parentName=\"p\">{`function.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n...\nrequire_once('functions/load_more.php');\n...\n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`loadmore.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nclass LoadMore {\n    public function loadNextSet($params) {\n        $perPage = 6;\n        $page = $params['page'];\n        $category = $params['cat'];\n        $data = Context::getDefaultContext();\n        $data['category'] = new TimberTerm($category);\n        $data['tag'] = 'tag';\n\n        $posts = $data['category']->get_posts([\n          'posts_per_page' => $perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => ($perPage*$page) + 3,\n        ]);\n\n        $data['posts'] = $posts;\n\n        Timber::render('partials/post/grid.twig', $data);\n        exit();\n    }\n}\n\n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`routes.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\n// $params are the :section, :cat and :page args\nRoutes::map(':section/:cat/:page', function($params){\n    $articles = new LoadMore();\n    echo $articles->loadNextSet($params);\n});\n...\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`__loadmore.twig__\n\n\\`\\`\\`html\n<div class=\"loadmore-container\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\n    <a>Load More</a>\n</div>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`load-more.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var titleTagline = require('./title-tagline.js');\n\nvar loadMore = {\n    $loadMoreContainer: $('.loadmore-container'),\n    category: $('.loadmore-container').data('category'),\n    section: $('.loadmore-container').data('section'),\n    search: $('.loadmore-container').data('search'),\n    page: $('.loadmore-container').data('page'),\n    base_url: $('meta[name=base_url]').attr('content'),\n    perPage: 6,\n\n    init: function() {\n        // Show mega-menu when mega-menu link is focused\n        loadMore.$loadMoreContainer.on('click', function(e) {\n            e.preventDefault();\n            if ($('ul.grid').length > 0) {\n                loadMore.loadNextSection();\n            } else {\n                loadMore.loadNextSearch();\n            }\n        });\n    },\n\n    loadNextSection: function() {\n        return $.ajax({\n            url:\n                loadMore.base_url +\n                '/section/' +\n                loadMore.section +\n                '/' +\n                loadMore.category +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSection,\n            error: loadMore.outputError\n        });\n    },\n\n    loadNextSearch: function() {\n        var urlString = loadMore.search;\n        urlString = urlString.replace(' ', '+');\n        console.log(urlString);\n        return $.ajax({\n            url:\n                loadMore.base_url +\n                '/search/' +\n                urlString +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSearch,\n            error: loadMore.outputError\n        });\n    },\n\n    resultsSection: function(data) {\n        var numPosts = $(data).find('li.-post').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n        var render = $(data)\n            .find('li.-post')\n            .unwrap();\n        $('ul.grid')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n\n        titleTagline.init();\n        titleTagline.doneResizing();\n    },\n\n    resultsSearch: function(data) {\n        console.log(data);\n\n        var numPosts = $(data).find('li.list-item').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n\n        var render = $(data)\n            .find('li.list-item')\n            .unwrap();\n        $('ul.list')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n    },\n\n    hideViewAll: function() {\n        loadMore.$loadMoreContainer.css('display', 'none');\n    }\n};\n\nmodule.exports = {\n    init: loadMore.init\n};\n`}</code></pre>\n    <p><strong parentName=\"p\">{`loadmore.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nclass LoadMore {\n    public function loadNextLocationsSet($params) {\n        $perPage = 6;\n        $page = $params['page'];\n        $category = $params['cat'];\n        $data = Context::getDefaultContext();\n        $data['category'] = new TimberTerm($category);\n        $data['tag'] = 'tag';\n\n        $posts = $data['category']->get_posts([\n          'posts_per_page' => $perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => ($perPage*$page) + 3,\n        ]);\n\n        $data['posts'] = $posts;\n\n        Timber::render('partials/post/grid.twig', $data);\n        exit();\n    }\n\n    public function loadNextSearchSet($params) {\n        $perPage = 6;\n        $page = (int)$params['page'];\n        $field = $params['search'];\n        $offset = ($perPage*$page) + 4;\n        $data = Context::getDefaultContext();\n        $search = get_query_var('s');\n        $searchTerm = htmlspecialchars($field);\n\n        $data['posts'] = SearchTerms::getSearchArticles($field, $offset, $perPage);\n\n        Timber::render('partials/post/list.twig', $data);\n        exit();\n    }\n\n    public function loadNextInspirationsSet($params) {\n\n        $exclusion = [];\n\n        $perPage = 6;\n        $page = $params['page'];\n        $category = $params['cat'];\n        $data = Context::getDefaultContext();\n        $data['category'] = new TimberTerm($category);\n        $data['tag'] = 'tag';\n\n        if($featuredIds = $data['category']->featured) {\n            $data['categoryFeatured'] = Timber::get_posts($featuredIds);\n            $exclusion = self::updateExclusionList($data['categoryFeatured'], $exclusion);\n        }\n\n        $posts = $data['category']->get_posts([\n            'posts_per_page' => $perPage,\n            'orderby' => 'date',\n            'order' => 'DESC',\n            'offset' => ($perPage*$page) + 4,\n            'post__not_in' => $exclusion,\n        ]);\n\n        $data['posts'] = $posts;\n\n        Timber::render('partials/post/grid.twig', $data);\n        exit();\n    }\n\n    static function updateExclusionList($original, $exclusion) {\n        foreach($original as $post) {\n            if($post) {\n                array_push($exclusion, $post->id);\n            }\n        }\n        return $exclusion;\n    }\n}\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-6-custom-search-terms\"\n    }}>{`WPPRES-6: Custom Search Terms`}</h2>\n    <p>{`This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// from functions > search_term.php\n\nglobal $wpdb;\n\n$park_ids = [];\n$meta_arrays = [];\n$posts_park = [];\n\nif (strlen($search_term) > 3) {\n\n    $park_post_type='parks';\n    $park_post_status='publish';\n\n    // get the park ids that relate to the search\n    $park_args = $wpdb->get_col( $wpdb->prepare(\n            \"\n            SELECT ID\n            FROM $wpdb->posts WP\n            WHERE WP.post_title LIKE '%%%s%%'\n            AND post_type='%s'\n            AND post_status='%s'\n            \",\n            esc_sql($search_term),\n            esc_sql($park_post_type),\n            esc_sql($park_post_status)\n        )\n    );\n\n    $park_ids = $park_args;\n\n    if ($park_ids != null ) {\n\n        $park_ids = esc_sql( $park_ids );\n        $park_ids_str = \"'[^0-9]*\" . implode( \"[^0-9]*'|'[^0-9]*\", $park_ids ) . \"[^0-9]*'\";\n        $park = 'park';\n\n        //find the parks\n        $init_park = $wpdb->get_col( $wpdb->prepare(\n                \"\n                SELECT WP.ID\n                FROM $wpdb->posts WP\n                INNER JOIN $wpdb->postmeta PM\n                ON ( WP.ID = PM.post_id )\n                WHERE 1=1\n                AND ( ( PM.meta_key = %s\n                AND PM.meta_value REGEXP {$park_ids_str} ) )\n                AND WP.post_type = 'post'\n                AND (WP.post_status = 'publish')\n                GROUP BY WP.ID\n                ORDER BY WP.post_title DESC, WP.post_date DESC\n                \",\n                esc_sql($park)\n            )\n        );\n\n        // grab post results to allow metadata\n        // comparison for park\n        $results = Timber::get_posts($init_park);\n\n        // filter the results to ensure posts are associated with\n        // the latest and correct \\`park\\` value\n        if ($results) {\n            foreach ($results as $result) {\n                if (array_intersect($result->custom['park'], $park_ids)) {\n                    $posts_park[] = $result->id;\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}