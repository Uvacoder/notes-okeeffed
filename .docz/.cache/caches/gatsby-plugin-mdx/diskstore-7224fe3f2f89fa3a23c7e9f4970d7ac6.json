{"expireTime":9007200848610936000,"key":"gatsby-plugin-mdx-entire-payload-5edcf4298ebecae31be1c6834c925e8e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Run Length","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":13,"offset":179},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":13,"offset":179},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Question","position":{"start":{"line":10,"column":4,"offset":184},"end":{"line":10,"column":12,"offset":192},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":181},"end":{"line":10,"column":12,"offset":192},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Have the function RunLength(str) take the str parameter being passed and return a compressed version of the string using the Run-length encoding algorithm. This algorithm works by taking the occurrence of each repeating character and outputting that number along with a single character of the repeating sequence. For example: \"wwwggopp\" would return 3w2g1o2p. The string will not contain any numbers, punctuation, or symbols.","position":{"start":{"line":12,"column":1,"offset":194},"end":{"line":12,"column":427,"offset":620},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":194},"end":{"line":12,"column":427,"offset":620},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Solution","position":{"start":{"line":14,"column":4,"offset":625},"end":{"line":14,"column":12,"offset":633},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":622},"end":{"line":14,"column":12,"offset":633},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function RunLength(str) {\n  // handle base case\n  if (str.length === 1) {\n    return `1${str}`;\n  }\n\n  // iterate through str, set current index and count number until change in char\n  let res = '';\n  let original = str.toLowerCase();\n  let curLetter = original[0];\n  let count = 1;\n  for (let i = 1; i < original.length; i++) {\n    if (original[i] === curLetter) {\n      count++;\n    } else {\n      res += `${count}${curLetter}`;\n      curLetter = original[i];\n      count = 1;\n    }\n\n    // handle final letter\n    if (i === original.length - 1) {\n      res += `${count}${curLetter}`;\n    }\n  }\n\n  // code goes here\n  return res;\n}","position":{"start":{"line":16,"column":1,"offset":635},"end":{"line":46,"column":4,"offset":1286},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":49,"column":1,"offset":1289},"end":{"line":49,"column":31,"offset":1319},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":49,"column":31,"offset":1319}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"run-length\"\n    }}>{`Run Length`}</h1>\n    <h2 {...{\n      \"id\": \"question\"\n    }}>{`Question`}</h2>\n    <p>{`Have the function RunLength(str) take the str parameter being passed and return a compressed version of the string using the Run-length encoding algorithm. This algorithm works by taking the occurrence of each repeating character and outputting that number along with a single character of the repeating sequence. For example: \"wwwggopp\" would return 3w2g1o2p. The string will not contain any numbers, punctuation, or symbols.`}</p>\n    <h2 {...{\n      \"id\": \"solution\"\n    }}>{`Solution`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function RunLength(str) {\n  // handle base case\n  if (str.length === 1) {\n    return \\`1\\${str}\\`;\n  }\n\n  // iterate through str, set current index and count number until change in char\n  let res = '';\n  let original = str.toLowerCase();\n  let curLetter = original[0];\n  let count = 1;\n  for (let i = 1; i < original.length; i++) {\n    if (original[i] === curLetter) {\n      count++;\n    } else {\n      res += \\`\\${count}\\${curLetter}\\`;\n      curLetter = original[i];\n      count = 1;\n    }\n\n    // handle final letter\n    if (i === original.length - 1) {\n      res += \\`\\${count}\\${curLetter}\\`;\n    }\n  }\n\n  // code goes here\n  return res;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}