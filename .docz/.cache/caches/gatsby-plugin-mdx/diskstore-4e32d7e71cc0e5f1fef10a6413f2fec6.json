{"expireTime":9007200849425585000,"key":"gatsby-plugin-mdx-entire-payload-f0d065025e773993fa1cc45ea04fd273-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Automating Versioning","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":24,"offset":190},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":24,"offset":190},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":195},"end":{"line":10,"column":13,"offset":204},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":192},"end":{"line":10,"column":13,"offset":204},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/@jsilvax/automate-semantic-versioning-with-conventional-commits-d76a9f45f2fa","children":[{"type":"text","value":"Automate Versioning blog post","position":{"start":{"line":12,"column":5,"offset":210},"end":{"line":12,"column":34,"offset":239},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":209},"end":{"line":12,"column":132,"offset":337},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":209},"end":{"line":12,"column":132,"offset":337},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":206},"end":{"line":12,"column":132,"offset":337},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":206},"end":{"line":12,"column":132,"offset":337},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"For local packages","position":{"start":{"line":14,"column":4,"offset":342},"end":{"line":14,"column":22,"offset":360},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":339},"end":{"line":14,"column":22,"offset":360},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following is the tl;dr for getting this done.","position":{"start":{"line":16,"column":1,"offset":362},"end":{"line":16,"column":50,"offset":411},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":362},"end":{"line":16,"column":50,"offset":411},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"yarn add husky @commitlint/cli @commitlint/config-conventional standard-version --dev","position":{"start":{"line":18,"column":1,"offset":413},"end":{"line":20,"column":4,"offset":511},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Updating package.json","position":{"start":{"line":22,"column":4,"offset":516},"end":{"line":22,"column":25,"offset":537},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":513},"end":{"line":22,"column":25,"offset":537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For the release script:","position":{"start":{"line":24,"column":1,"offset":539},"end":{"line":24,"column":24,"offset":562},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":539},"end":{"line":24,"column":24,"offset":562},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"scripts\" : {\n  \"release\" : \"standard-version\"\n}","position":{"start":{"line":26,"column":1,"offset":564},"end":{"line":30,"column":4,"offset":624},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For commit lint:","position":{"start":{"line":32,"column":1,"offset":626},"end":{"line":32,"column":17,"offset":642},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":626},"end":{"line":32,"column":17,"offset":642},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"commitlint\": {\n \"extends\": [\n   \"@commitlint/config-conventional\"\n ],\n \"rules\": {\n   \"subject-case\": [\n     2,\n     \"never\",\n     [\n       \"start-case\",\n       \"pascal-case\"\n     ]\n   ]\n }\n}","position":{"start":{"line":34,"column":1,"offset":644},"end":{"line":50,"column":4,"offset":847},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For Husky (with some examples from another project). The follow expects a generation of the ","position":{"start":{"line":52,"column":1,"offset":849},"end":{"line":52,"column":93,"offset":941},"indent":[]}},{"type":"inlineCode","value":"CHANGELOG.md","position":{"start":{"line":52,"column":93,"offset":941},"end":{"line":52,"column":107,"offset":955},"indent":[]}},{"type":"text","value":" pre-push and also to run the test suite prior to deploy:","position":{"start":{"line":52,"column":107,"offset":955},"end":{"line":52,"column":164,"offset":1012},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":849},"end":{"line":52,"column":164,"offset":1012},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"husky\": {\n  \"hooks\": {\n    \"pre-push\": \"yarn release && yarn test\",\n    \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n  }\n}","position":{"start":{"line":54,"column":1,"offset":1014},"end":{"line":61,"column":4,"offset":1151},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":64,"column":1,"offset":1154},"end":{"line":64,"column":31,"offset":1184},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":31,"offset":1184}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"automating-versioning\"\n    }}>{`Automating Versioning`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@jsilvax/automate-semantic-versioning-with-conventional-commits-d76a9f45f2fa\"\n        }}>{`Automate Versioning blog post`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"for-local-packages\"\n    }}>{`For local packages`}</h2>\n    <p>{`The following is the tl;dr for getting this done.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add husky @commitlint/cli @commitlint/config-conventional standard-version --dev\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"updating-packagejson\"\n    }}>{`Updating package.json`}</h2>\n    <p>{`For the release script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"scripts\" : {\n  \"release\" : \"standard-version\"\n}\n`}</code></pre>\n    <p>{`For commit lint:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"commitlint\": {\n \"extends\": [\n   \"@commitlint/config-conventional\"\n ],\n \"rules\": {\n   \"subject-case\": [\n     2,\n     \"never\",\n     [\n       \"start-case\",\n       \"pascal-case\"\n     ]\n   ]\n }\n}\n`}</code></pre>\n    <p>{`For Husky (with some examples from another project). The follow expects a generation of the `}<inlineCode parentName=\"p\">{`CHANGELOG.md`}</inlineCode>{` pre-push and also to run the test suite prior to deploy:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"husky\": {\n  \"hooks\": {\n    \"pre-push\": \"yarn release && yarn test\",\n    \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}