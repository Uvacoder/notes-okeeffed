{"expireTime":9007200848610862000,"key":"gatsby-plugin-mdx-entire-payload-d88976010d48c277982cfd28f6d6d78f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Ruby Contructors","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":19,"offset":185},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":19,"offset":185},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The important constructor method is the ","position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":10,"column":41,"offset":227},"indent":[]}},{"type":"inlineCode","value":"initialize","position":{"start":{"line":10,"column":41,"offset":227},"end":{"line":10,"column":53,"offset":239},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":10,"column":53,"offset":239},"end":{"line":10,"column":61,"offset":247},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":10,"column":61,"offset":247},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":12,"column":4,"offset":252},"end":{"line":12,"column":9,"offset":257},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":249},"end":{"line":12,"column":9,"offset":257},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"class Employee\n\n  # change scope to public\n  public\n\n  # static class variable\n  @@count = 0\n\n  # constructor\n  def initialize(name, designation, salary)\n    @name = name\n    @designation = designation\n    @salary = salary\n    @@count += 1\n  end\n\n  # class method\n  def self.count\n    @@count\n  end\n\n  # getters/setters for name, designation, and salary\n  def name\n    @name\n  end\n\n  def name=(name)\n    @name = name\n  end\n\n  def designation\n    @designation\n  end\n\n  def designation=(designation)\n    @designation = designation\n  end\n\n  def salary\n    @salary\n  end\n\n  def salary=(salary)\n    @salary = salary\n  end\n\n  # change scope to private\n  private\n\n  def organization\n    \"Hackers de Anonymous\"\n  end\n\n  # change scope to protected\n  protected\n\n  def owner\n    \"We never mention his name!\"\n  end\n\nend","position":{"start":{"line":14,"column":1,"offset":259},"end":{"line":76,"column":4,"offset":1079},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Inheritance","position":{"start":{"line":78,"column":5,"offset":1085},"end":{"line":78,"column":16,"offset":1096},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1081},"end":{"line":78,"column":16,"offset":1096},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"class SoftwareEngineer < Employee\n\n  # code for SoftwareEngineer class\n\nend","position":{"start":{"line":80,"column":1,"offset":1098},"end":{"line":86,"column":4,"offset":1185},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Attribute accessors","position":{"start":{"line":88,"column":5,"offset":1191},"end":{"line":88,"column":24,"offset":1210},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":1187},"end":{"line":88,"column":24,"offset":1210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For what is readable/writable:","position":{"start":{"line":90,"column":1,"offset":1212},"end":{"line":90,"column":31,"offset":1242},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":1212},"end":{"line":90,"column":31,"offset":1242},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"class Employee\n\n  attr_accessor :name, :designation, :salary\n\n  @@count = 0\n\n  def initialize(name, designation, salary)\n    @name = name\n    @designation = designation\n    @salary = salary\n    @@count += 1\n  end\n\n  def self.count\n    @@count\n  end\n\n  private\n\n  def organization\n    \"Hackers de Anonymous\"\n  end\n\n  protected\n\n  def owner\n    \"We never mention his name!\"\n  end\n\nend","position":{"start":{"line":92,"column":1,"offset":1244},"end":{"line":123,"column":4,"offset":1638},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Simple Example","position":{"start":{"line":125,"column":4,"offset":1643},"end":{"line":125,"column":18,"offset":1657},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":1640},"end":{"line":125,"column":18,"offset":1657},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"# Ruby program to initialize instance\n# variable using constructor\n\n#!/usr/bin/ruby\n\n# class name\nclass Geeks\n\t# constructor\n\tdef initialize\n\n\t\t# instance variable intialzation\n\t\t@inst_1 = \"GeeksforGeeks\"\n\t\t@inst_2 = \"Sudo Placement\"\n\tend\n\n\t# display method\n\tdef display\n\t\tputs \"Value of First instance variable is: #{@inst_1}\"\n\t\tputs \"Value of Second instance variable is: #{@inst_2}\"\n\tend\nend\n\n# creating object\nobj1 = Geeks.new()\n\n# calling display method\nobj1.display()","position":{"start":{"line":127,"column":1,"offset":1659},"end":{"line":155,"column":4,"offset":2144},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Linked List Example","position":{"start":{"line":157,"column":4,"offset":2149},"end":{"line":157,"column":23,"offset":2168},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":2146},"end":{"line":157,"column":23,"offset":2168},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"\"\"\"\nBasic implementation without all methods\n\"\"\"\n\nclass LinkedList\n    def initialize(head=nil)\n        if head.nil?\n            @size = 0\n        else\n            @size = 1\n        end\n        @head = head\n    end\n\n    def getSize\n        @size\n    end\n\n    def insertFirst(n)\n        if @head.nil?\n            @head = n\n        else\n            tmp = @head\n            @head = n\n            n.setNext(tmp)\n        end\n        @size += 1\n    end\n\n    def clear\n        @head = nil\n        @size = 0\n    end\n\n    def getFirst\n        @head\n    end\nend\n\nclass Node\n    def initialize(data = nil)\n        @data = data\n        @next = nil\n    end\n\n    def getNext\n        @next\n    end\n\n    def setNext(n)\n        @next = n\n    end\nend\n\n# test Ruby file\nbegin\n  gem 'minitest', '>= 5.0.0'\n  require 'minitest/autorun'\n  require_relative 'linked_list'\nrescue Gem::LoadError => e\n  puts \"\\nMissing Dependency:\\n#{e.backtrace.first} #{e.message}\"\n  puts 'Minitest 5.0 gem must be installed for the Ruby track.'\nrescue LoadError => e\n  puts \"\\nError:\\n#{e.backtrace.first} #{e.message}\"\n  puts DATA.read\n  exit 1\nend\n\n# Common test data version: 1.1.0 be3ae66\nclass LinkedListTest < Minitest::Test\n  def test_get_size\n    # skip\n    n1 = Node.new(1)\n    ll = LinkedList.new(n1)\n    assert_equal 1, ll.getSize()\n  end\n\n  def test_insert_first\n    # skip\n    n1 = Node.new(1)\n    n2 = Node.new(1)\n    ll = LinkedList.new(n1)\n    ll.insertFirst(n2)\n    assert_equal 2, ll.getSize()\n  end\n\n  def test_clear\n    # skip\n    n1 = Node.new(1)\n    n2 = Node.new(1)\n    ll = LinkedList.new(n1)\n    ll.insertFirst(n2)\n    ll.clear()\n    assert_equal 0, ll.getSize()\n    assert_nil nil, ll.getFirst()\n  end\nend\n\n__END__","position":{"start":{"line":159,"column":1,"offset":2170},"end":{"line":259,"column":4,"offset":3882},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":262,"column":1,"offset":3885},"end":{"line":262,"column":31,"offset":3915},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":262,"column":31,"offset":3915}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ruby-contructors\"\n    }}>{`Ruby Contructors`}</h1>\n    <p>{`The important constructor method is the `}<inlineCode parentName=\"p\">{`initialize`}</inlineCode>{` method.`}</p>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class Employee\n\n  # change scope to public\n  public\n\n  # static class variable\n  @@count = 0\n\n  # constructor\n  def initialize(name, designation, salary)\n    @name = name\n    @designation = designation\n    @salary = salary\n    @@count += 1\n  end\n\n  # class method\n  def self.count\n    @@count\n  end\n\n  # getters/setters for name, designation, and salary\n  def name\n    @name\n  end\n\n  def name=(name)\n    @name = name\n  end\n\n  def designation\n    @designation\n  end\n\n  def designation=(designation)\n    @designation = designation\n  end\n\n  def salary\n    @salary\n  end\n\n  def salary=(salary)\n    @salary = salary\n  end\n\n  # change scope to private\n  private\n\n  def organization\n    \"Hackers de Anonymous\"\n  end\n\n  # change scope to protected\n  protected\n\n  def owner\n    \"We never mention his name!\"\n  end\n\nend\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"inheritance\"\n    }}>{`Inheritance`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class SoftwareEngineer < Employee\n\n  # code for SoftwareEngineer class\n\nend\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"attribute-accessors\"\n    }}>{`Attribute accessors`}</h3>\n    <p>{`For what is readable/writable:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class Employee\n\n  attr_accessor :name, :designation, :salary\n\n  @@count = 0\n\n  def initialize(name, designation, salary)\n    @name = name\n    @designation = designation\n    @salary = salary\n    @@count += 1\n  end\n\n  def self.count\n    @@count\n  end\n\n  private\n\n  def organization\n    \"Hackers de Anonymous\"\n  end\n\n  protected\n\n  def owner\n    \"We never mention his name!\"\n  end\n\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"simple-example\"\n    }}>{`Simple Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# Ruby program to initialize instance\n# variable using constructor\n\n#!/usr/bin/ruby\n\n# class name\nclass Geeks\n    # constructor\n    def initialize\n\n        # instance variable intialzation\n        @inst_1 = \"GeeksforGeeks\"\n        @inst_2 = \"Sudo Placement\"\n    end\n\n    # display method\n    def display\n        puts \"Value of First instance variable is: #{@inst_1}\"\n        puts \"Value of Second instance variable is: #{@inst_2}\"\n    end\nend\n\n# creating object\nobj1 = Geeks.new()\n\n# calling display method\nobj1.display()\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"linked-list-example\"\n    }}>{`Linked List Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`\"\"\"\nBasic implementation without all methods\n\"\"\"\n\nclass LinkedList\n    def initialize(head=nil)\n        if head.nil?\n            @size = 0\n        else\n            @size = 1\n        end\n        @head = head\n    end\n\n    def getSize\n        @size\n    end\n\n    def insertFirst(n)\n        if @head.nil?\n            @head = n\n        else\n            tmp = @head\n            @head = n\n            n.setNext(tmp)\n        end\n        @size += 1\n    end\n\n    def clear\n        @head = nil\n        @size = 0\n    end\n\n    def getFirst\n        @head\n    end\nend\n\nclass Node\n    def initialize(data = nil)\n        @data = data\n        @next = nil\n    end\n\n    def getNext\n        @next\n    end\n\n    def setNext(n)\n        @next = n\n    end\nend\n\n# test Ruby file\nbegin\n  gem 'minitest', '>= 5.0.0'\n  require 'minitest/autorun'\n  require_relative 'linked_list'\nrescue Gem::LoadError => e\n  puts \"\\\\nMissing Dependency:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts 'Minitest 5.0 gem must be installed for the Ruby track.'\nrescue LoadError => e\n  puts \"\\\\nError:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts DATA.read\n  exit 1\nend\n\n# Common test data version: 1.1.0 be3ae66\nclass LinkedListTest < Minitest::Test\n  def test_get_size\n    # skip\n    n1 = Node.new(1)\n    ll = LinkedList.new(n1)\n    assert_equal 1, ll.getSize()\n  end\n\n  def test_insert_first\n    # skip\n    n1 = Node.new(1)\n    n2 = Node.new(1)\n    ll = LinkedList.new(n1)\n    ll.insertFirst(n2)\n    assert_equal 2, ll.getSize()\n  end\n\n  def test_clear\n    # skip\n    n1 = Node.new(1)\n    n2 = Node.new(1)\n    ll = LinkedList.new(n1)\n    ll.insertFirst(n2)\n    ll.clear()\n    assert_equal 0, ll.getSize()\n    assert_nil nil, ll.getFirst()\n  end\nend\n\n__END__\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}