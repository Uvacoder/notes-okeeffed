{"expireTime":9007200848610927000,"key":"gatsby-plugin-mdx-entire-payload-a06619980730b884ecd2bf4018d0039f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Type Theory","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":14,"offset":180},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":14,"offset":180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In mathematics, logic, and computer science, a type theory is any of a class of formal systems, some of which can serve as alternatives to set theory as a foundation for all mathematics. In type theory, every ","position":{"start":{"line":10,"column":1,"offset":182},"end":{"line":10,"column":210,"offset":391},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"\"term\"","position":{"start":{"line":10,"column":212,"offset":393},"end":{"line":10,"column":218,"offset":399},"indent":[]}}],"position":{"start":{"line":10,"column":210,"offset":391},"end":{"line":10,"column":220,"offset":401},"indent":[]}},{"type":"text","value":" has a ","position":{"start":{"line":10,"column":220,"offset":401},"end":{"line":10,"column":227,"offset":408},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"\"type\"","position":{"start":{"line":10,"column":229,"offset":410},"end":{"line":10,"column":235,"offset":416},"indent":[]}}],"position":{"start":{"line":10,"column":227,"offset":408},"end":{"line":10,"column":237,"offset":418},"indent":[]}},{"type":"text","value":" and operations are restricted to terms of a certain type.","position":{"start":{"line":10,"column":237,"offset":418},"end":{"line":10,"column":295,"offset":476},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":182},"end":{"line":10,"column":295,"offset":476},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Type theory is closely related to (and in some cases overlaps with) type systems, which are a programming language feature used to reduce bugs. Type theory was created to avoid paradoxes in a variety of formal logics and rewrite systems.","position":{"start":{"line":12,"column":1,"offset":478},"end":{"line":12,"column":238,"offset":715},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":478},"end":{"line":12,"column":238,"offset":715},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Links","position":{"start":{"line":14,"column":4,"offset":720},"end":{"line":14,"column":9,"offset":725},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":717},"end":{"line":14,"column":9,"offset":725},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Type_theory","children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Type_theory","position":{"start":{"line":16,"column":3,"offset":729},"end":{"line":16,"column":44,"offset":770},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":729},"end":{"line":16,"column":44,"offset":770},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":729},"end":{"line":16,"column":44,"offset":770},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":727},"end":{"line":16,"column":44,"offset":770},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":727},"end":{"line":16,"column":44,"offset":770},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":19,"column":1,"offset":773},"end":{"line":19,"column":31,"offset":803},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":19,"column":31,"offset":803}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"type-theory\"\n    }}>{`Type Theory`}</h1>\n    <p>{`In mathematics, logic, and computer science, a type theory is any of a class of formal systems, some of which can serve as alternatives to set theory as a foundation for all mathematics. In type theory, every `}<strong parentName=\"p\">{`\"term\"`}</strong>{` has a `}<strong parentName=\"p\">{`\"type\"`}</strong>{` and operations are restricted to terms of a certain type.`}</p>\n    <p>{`Type theory is closely related to (and in some cases overlaps with) type systems, which are a programming language feature used to reduce bugs. Type theory was created to avoid paradoxes in a variety of formal logics and rewrite systems.`}</p>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Type_theory\"\n        }}>{`https://en.wikipedia.org/wiki/Type_theory`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}