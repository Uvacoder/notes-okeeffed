{"expireTime":9007200848610917000,"key":"gatsby-plugin-mdx-entire-payload-d43fc7ef06d7fd8e55e62b2ff301a005-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Getting Start with Dotnet","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":28,"offset":194},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":28,"offset":194},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":199},"end":{"line":10,"column":13,"offset":208},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":196},"end":{"line":10,"column":13,"offset":208},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro","children":[{"type":"text","value":"Dotnet in 10 Minutes","position":{"start":{"line":12,"column":5,"offset":214},"end":{"line":12,"column":25,"offset":234},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":213},"end":{"line":12,"column":96,"offset":305},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":213},"end":{"line":12,"column":96,"offset":305},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":210},"end":{"line":12,"column":96,"offset":305},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codeburst.io/how-to-set-up-a-modern-full-stack-net-web-development-environment-on-mac-os-542dcd43a564","children":[{"type":"text","value":"Setting up full stack .NET web on MacOS","position":{"start":{"line":13,"column":5,"offset":310},"end":{"line":13,"column":44,"offset":349},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":309},"end":{"line":13,"column":156,"offset":461},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":309},"end":{"line":13,"column":156,"offset":461},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":306},"end":{"line":13,"column":156,"offset":461},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://dotnet.microsoft.com/download","children":[{"type":"text","value":"Dotnet install","position":{"start":{"line":14,"column":5,"offset":466},"end":{"line":14,"column":19,"offset":480},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":465},"end":{"line":14,"column":59,"offset":520},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":465},"end":{"line":14,"column":59,"offset":520},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":462},"end":{"line":14,"column":59,"offset":520},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stackoverflow.com/questions/53030531/dotnet-command-not-found-in-mac","children":[{"type":"text","value":"Symlinking Dotnet to /usr/local/bin post-installation","position":{"start":{"line":15,"column":5,"offset":525},"end":{"line":15,"column":58,"offset":578},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":524},"end":{"line":15,"column":137,"offset":657},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":524},"end":{"line":15,"column":137,"offset":657},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":521},"end":{"line":15,"column":137,"offset":657},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://dotnet.microsoft.com/learn/aspnet/hello-world-tutorial/intro","children":[{"type":"text","value":"First web application","position":{"start":{"line":16,"column":5,"offset":662},"end":{"line":16,"column":26,"offset":683},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":661},"end":{"line":16,"column":97,"offset":754},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":661},"end":{"line":16,"column":97,"offset":754},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":658},"end":{"line":16,"column":97,"offset":754},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio","children":[{"type":"text","value":"Building a web API","position":{"start":{"line":17,"column":5,"offset":759},"end":{"line":17,"column":23,"offset":777},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":758},"end":{"line":17,"column":133,"offset":887},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":758},"end":{"line":17,"column":133,"offset":887},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":755},"end":{"line":17,"column":133,"offset":887},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":210},"end":{"line":17,"column":133,"offset":887},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Getting started","position":{"start":{"line":19,"column":4,"offset":892},"end":{"line":19,"column":19,"offset":907},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":889},"end":{"line":19,"column":19,"offset":907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Follow resources ","position":{"start":{"line":21,"column":1,"offset":909},"end":{"line":21,"column":18,"offset":926},"indent":[]}},{"type":"linkReference","identifier":"3","label":"3","referenceType":"shortcut","children":[{"type":"text","value":"3","position":{"start":{"line":21,"column":19,"offset":927},"end":{"line":21,"column":20,"offset":928},"indent":[]}}],"position":{"start":{"line":21,"column":18,"offset":926},"end":{"line":21,"column":21,"offset":929},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":21,"column":21,"offset":929},"end":{"line":21,"column":26,"offset":934},"indent":[]}},{"type":"linkReference","identifier":"4","label":"4","referenceType":"shortcut","children":[{"type":"text","value":"4","position":{"start":{"line":21,"column":27,"offset":935},"end":{"line":21,"column":28,"offset":936},"indent":[]}}],"position":{"start":{"line":21,"column":26,"offset":934},"end":{"line":21,"column":29,"offset":937},"indent":[]}},{"type":"text","value":" for getting installation going (installation example above is for MacOS).","position":{"start":{"line":21,"column":29,"offset":937},"end":{"line":21,"column":103,"offset":1011},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":909},"end":{"line":21,"column":103,"offset":1011},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Afterwards, run ","position":{"start":{"line":23,"column":1,"offset":1013},"end":{"line":23,"column":17,"offset":1029},"indent":[]}},{"type":"inlineCode","value":"dotnet","position":{"start":{"line":23,"column":17,"offset":1029},"end":{"line":23,"column":25,"offset":1037},"indent":[]}},{"type":"text","value":" to confirm things are working. If nothing happens after installation, ensure you have followed resource ","position":{"start":{"line":23,"column":25,"offset":1037},"end":{"line":23,"column":130,"offset":1142},"indent":[]}},{"type":"linkReference","identifier":"4","label":"4","referenceType":"shortcut","children":[{"type":"text","value":"4","position":{"start":{"line":23,"column":131,"offset":1143},"end":{"line":23,"column":132,"offset":1144},"indent":[]}}],"position":{"start":{"line":23,"column":130,"offset":1142},"end":{"line":23,"column":133,"offset":1145},"indent":[]}},{"type":"text","value":" to symlink the installation to your path (or add the folder to path).","position":{"start":{"line":23,"column":133,"offset":1145},"end":{"line":23,"column":203,"offset":1215},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1013},"end":{"line":23,"column":203,"offset":1215},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating a Console App","position":{"start":{"line":25,"column":4,"offset":1220},"end":{"line":25,"column":26,"offset":1242},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1217},"end":{"line":25,"column":26,"offset":1242},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We simply run the following to start a new console app.","position":{"start":{"line":27,"column":1,"offset":1244},"end":{"line":27,"column":56,"offset":1299},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1244},"end":{"line":27,"column":56,"offset":1299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following creates new app of type console into the ","position":{"start":{"line":29,"column":1,"offset":1301},"end":{"line":29,"column":56,"offset":1356},"indent":[]}},{"type":"inlineCode","value":"myApp","position":{"start":{"line":29,"column":56,"offset":1356},"end":{"line":29,"column":63,"offset":1363},"indent":[]}},{"type":"text","value":" folder:","position":{"start":{"line":29,"column":63,"offset":1363},"end":{"line":29,"column":71,"offset":1371},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1301},"end":{"line":29,"column":71,"offset":1371},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"dotnet new console -o myApp\ncd myApp","position":{"start":{"line":31,"column":1,"offset":1373},"end":{"line":34,"column":4,"offset":1422},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The above code will also generate a file named ","position":{"start":{"line":36,"column":1,"offset":1424},"end":{"line":36,"column":48,"offset":1471},"indent":[]}},{"type":"inlineCode","value":"Program.cs","position":{"start":{"line":36,"column":48,"offset":1471},"end":{"line":36,"column":60,"offset":1483},"indent":[]}},{"type":"text","value":" into ","position":{"start":{"line":36,"column":60,"offset":1483},"end":{"line":36,"column":66,"offset":1489},"indent":[]}},{"type":"inlineCode","value":"myApp","position":{"start":{"line":36,"column":66,"offset":1489},"end":{"line":36,"column":73,"offset":1496},"indent":[]}},{"type":"text","value":", along with ","position":{"start":{"line":36,"column":73,"offset":1496},"end":{"line":36,"column":86,"offset":1509},"indent":[]}},{"type":"inlineCode","value":"myApp.csproj","position":{"start":{"line":36,"column":86,"offset":1509},"end":{"line":36,"column":100,"offset":1523},"indent":[]}},{"type":"text","value":" config for library usage and an ","position":{"start":{"line":36,"column":100,"offset":1523},"end":{"line":36,"column":133,"offset":1556},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":36,"column":133,"offset":1556},"end":{"line":36,"column":138,"offset":1561},"indent":[]}},{"type":"text","value":" folder.","position":{"start":{"line":36,"column":138,"offset":1561},"end":{"line":36,"column":146,"offset":1569},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1424},"end":{"line":36,"column":146,"offset":1569},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"// Program.cs\nusing System;\n\nnamespace myApp\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!\");\n        }\n    }\n}","position":{"start":{"line":38,"column":1,"offset":1571},"end":{"line":52,"column":4,"offset":1770},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we now fire ","position":{"start":{"line":54,"column":1,"offset":1772},"end":{"line":54,"column":16,"offset":1787},"indent":[]}},{"type":"inlineCode","value":"dotnet run","position":{"start":{"line":54,"column":16,"offset":1787},"end":{"line":54,"column":28,"offset":1799},"indent":[]}},{"type":"text","value":" from the command line, we will see our ","position":{"start":{"line":54,"column":28,"offset":1799},"end":{"line":54,"column":68,"offset":1839},"indent":[]}},{"type":"inlineCode","value":"Hello World!","position":{"start":{"line":54,"column":68,"offset":1839},"end":{"line":54,"column":82,"offset":1853},"indent":[]}},{"type":"text","value":" response. Hooray!","position":{"start":{"line":54,"column":82,"offset":1853},"end":{"line":54,"column":100,"offset":1871},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1772},"end":{"line":54,"column":100,"offset":1871},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Moving further, we could add more lines into our ","position":{"start":{"line":56,"column":1,"offset":1873},"end":{"line":56,"column":50,"offset":1922},"indent":[]}},{"type":"inlineCode","value":"Main","position":{"start":{"line":56,"column":50,"offset":1922},"end":{"line":56,"column":56,"offset":1928},"indent":[]}},{"type":"text","value":" program like ","position":{"start":{"line":56,"column":56,"offset":1928},"end":{"line":56,"column":70,"offset":1942},"indent":[]}},{"type":"inlineCode","value":"Console.WriteLine(\"The current time is \" + DateTime.Now);","position":{"start":{"line":56,"column":70,"offset":1942},"end":{"line":56,"column":129,"offset":2001},"indent":[]}},{"type":"text","value":" to update what we get.","position":{"start":{"line":56,"column":129,"offset":2001},"end":{"line":56,"column":152,"offset":2024},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1873},"end":{"line":56,"column":152,"offset":2024},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating a Web application","position":{"start":{"line":58,"column":4,"offset":2029},"end":{"line":58,"column":30,"offset":2055},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2026},"end":{"line":58,"column":30,"offset":2055},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following initialises a web application in the folder ","position":{"start":{"line":60,"column":1,"offset":2057},"end":{"line":60,"column":59,"offset":2115},"indent":[]}},{"type":"inlineCode","value":"myWebApp","position":{"start":{"line":60,"column":59,"offset":2115},"end":{"line":60,"column":69,"offset":2125},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":60,"column":69,"offset":2125},"end":{"line":60,"column":70,"offset":2126},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2057},"end":{"line":60,"column":70,"offset":2126},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# note that we are specifying not to enable https in this particular instance\ndotnet new webApp -o myWebApp --no-https","position":{"start":{"line":62,"column":1,"offset":2128},"end":{"line":65,"column":4,"offset":2259},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Several files were created in the myWebApp directory, to give you a simple web application that is ready to run.","position":{"start":{"line":67,"column":1,"offset":2261},"end":{"line":67,"column":113,"offset":2373},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2261},"end":{"line":67,"column":113,"offset":2373},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Startup.cs","position":{"start":{"line":69,"column":4,"offset":2378},"end":{"line":69,"column":16,"offset":2390},"indent":[]}},{"type":"text","value":" contains all the settings and configurations.","position":{"start":{"line":69,"column":16,"offset":2390},"end":{"line":69,"column":62,"offset":2436},"indent":[]}}],"position":{"start":{"line":69,"column":4,"offset":2378},"end":{"line":69,"column":62,"offset":2436},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2375},"end":{"line":69,"column":62,"offset":2436},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":70,"column":4,"offset":2440},"end":{"line":70,"column":8,"offset":2444},"indent":[]}},{"type":"inlineCode","value":"myWebApp/Pages","position":{"start":{"line":70,"column":8,"offset":2444},"end":{"line":70,"column":24,"offset":2460},"indent":[]}},{"type":"text","value":" directory contains some example web pages for the application.","position":{"start":{"line":70,"column":24,"offset":2460},"end":{"line":70,"column":87,"offset":2523},"indent":[]}}],"position":{"start":{"line":70,"column":4,"offset":2440},"end":{"line":70,"column":87,"offset":2523},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2437},"end":{"line":70,"column":87,"offset":2523},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"myWebApp.csproj","position":{"start":{"line":71,"column":4,"offset":2527},"end":{"line":71,"column":21,"offset":2544},"indent":[]}},{"type":"text","value":" defines what libraries are referenced etc.","position":{"start":{"line":71,"column":21,"offset":2544},"end":{"line":71,"column":64,"offset":2587},"indent":[]}}],"position":{"start":{"line":71,"column":4,"offset":2527},"end":{"line":71,"column":64,"offset":2587},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2524},"end":{"line":71,"column":64,"offset":2587},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2375},"end":{"line":71,"column":64,"offset":2587},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we run ","position":{"start":{"line":73,"column":1,"offset":2589},"end":{"line":73,"column":11,"offset":2599},"indent":[]}},{"type":"inlineCode","value":"dotnet run","position":{"start":{"line":73,"column":11,"offset":2599},"end":{"line":73,"column":23,"offset":2611},"indent":[]}},{"type":"text","value":" we will have a local development environment open up at port ","position":{"start":{"line":73,"column":23,"offset":2611},"end":{"line":73,"column":85,"offset":2673},"indent":[]}},{"type":"inlineCode","value":"5000","position":{"start":{"line":73,"column":85,"offset":2673},"end":{"line":73,"column":91,"offset":2679},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":73,"column":91,"offset":2679},"end":{"line":73,"column":92,"offset":2680},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2589},"end":{"line":73,"column":92,"offset":2680},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Updating the code in the application","position":{"start":{"line":75,"column":4,"offset":2685},"end":{"line":75,"column":40,"offset":2721},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2682},"end":{"line":75,"column":40,"offset":2721},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Editing ","position":{"start":{"line":77,"column":1,"offset":2723},"end":{"line":77,"column":9,"offset":2731},"indent":[]}},{"type":"inlineCode","value":"Pages/Index.cshtml","position":{"start":{"line":77,"column":9,"offset":2731},"end":{"line":77,"column":29,"offset":2751},"indent":[]}},{"type":"text","value":" with the following will edit the application to show the server time:","position":{"start":{"line":77,"column":29,"offset":2751},"end":{"line":77,"column":99,"offset":2821},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2723},"end":{"line":77,"column":99,"offset":2821},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"@page\n@model IndexModel\n@{\n    ViewData[\"Title\"] = \"Home page\";\n}\n\n<div class=\"text-center\">\n    <h1>Hello, world!</h1>\n    <p>The time on the server is @DateTime.Now</p>\n</div>","position":{"start":{"line":79,"column":1,"offset":2823},"end":{"line":90,"column":4,"offset":3014},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":93,"column":1,"offset":3017},"end":{"line":93,"column":31,"offset":3047},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":93,"column":31,"offset":3047}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-start-with-dotnet\"\n    }}>{`Getting Start with Dotnet`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro\"\n        }}>{`Dotnet in 10 Minutes`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://codeburst.io/how-to-set-up-a-modern-full-stack-net-web-development-environment-on-mac-os-542dcd43a564\"\n        }}>{`Setting up full stack .NET web on MacOS`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dotnet.microsoft.com/download\"\n        }}>{`Dotnet install`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackoverflow.com/questions/53030531/dotnet-command-not-found-in-mac\"\n        }}>{`Symlinking Dotnet to /usr/local/bin post-installation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dotnet.microsoft.com/learn/aspnet/hello-world-tutorial/intro\"\n        }}>{`First web application`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio\"\n        }}>{`Building a web API`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting started`}</h2>\n    <p>{`Follow resources `}{`[3]`}{` and `}{`[4]`}{` for getting installation going (installation example above is for MacOS).`}</p>\n    <p>{`Afterwards, run `}<inlineCode parentName=\"p\">{`dotnet`}</inlineCode>{` to confirm things are working. If nothing happens after installation, ensure you have followed resource `}{`[4]`}{` to symlink the installation to your path (or add the folder to path).`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-console-app\"\n    }}>{`Creating a Console App`}</h2>\n    <p>{`We simply run the following to start a new console app.`}</p>\n    <p>{`The following creates new app of type console into the `}<inlineCode parentName=\"p\">{`myApp`}</inlineCode>{` folder:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`dotnet new console -o myApp\ncd myApp\n`}</code></pre>\n    <p>{`The above code will also generate a file named `}<inlineCode parentName=\"p\">{`Program.cs`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`myApp`}</inlineCode>{`, along with `}<inlineCode parentName=\"p\">{`myApp.csproj`}</inlineCode>{` config for library usage and an `}<inlineCode parentName=\"p\">{`obj`}</inlineCode>{` folder.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Program.cs\nusing System;\n\nnamespace myApp\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n`}</code></pre>\n    <p>{`If we now fire `}<inlineCode parentName=\"p\">{`dotnet run`}</inlineCode>{` from the command line, we will see our `}<inlineCode parentName=\"p\">{`Hello World!`}</inlineCode>{` response. Hooray!`}</p>\n    <p>{`Moving further, we could add more lines into our `}<inlineCode parentName=\"p\">{`Main`}</inlineCode>{` program like `}<inlineCode parentName=\"p\">{`Console.WriteLine(\"The current time is \" + DateTime.Now);`}</inlineCode>{` to update what we get.`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-web-application\"\n    }}>{`Creating a Web application`}</h2>\n    <p>{`The following initialises a web application in the folder `}<inlineCode parentName=\"p\">{`myWebApp`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# note that we are specifying not to enable https in this particular instance\ndotnet new webApp -o myWebApp --no-https\n`}</code></pre>\n    <p>{`Several files were created in the myWebApp directory, to give you a simple web application that is ready to run.`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`Startup.cs`}</inlineCode>{` contains all the settings and configurations.`}</li>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`myWebApp/Pages`}</inlineCode>{` directory contains some example web pages for the application.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`myWebApp.csproj`}</inlineCode>{` defines what libraries are referenced etc.`}</li>\n    </ol>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`dotnet run`}</inlineCode>{` we will have a local development environment open up at port `}<inlineCode parentName=\"p\">{`5000`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"updating-the-code-in-the-application\"\n    }}>{`Updating the code in the application`}</h2>\n    <p>{`Editing `}<inlineCode parentName=\"p\">{`Pages/Index.cshtml`}</inlineCode>{` with the following will edit the application to show the server time:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`@page\n@model IndexModel\n@{\n    ViewData[\"Title\"] = \"Home page\";\n}\n\n<div class=\"text-center\">\n    <h1>Hello, world!</h1>\n    <p>The time on the server is @DateTime.Now</p>\n</div>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}