{"expireTime":9007200852878371000,"key":"gatsby-plugin-mdx-entire-payload-8c15e585f79f80f81eaaf6b2cc99b84f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Resources","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":12,"offset":178},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":12,"offset":178},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.digitalocean.com/community/tutorials/react-server-side-rendering","children":[{"type":"text","value":"Digital Ocean article","position":{"start":{"line":10,"column":5,"offset":184},"end":{"line":10,"column":26,"offset":205},"indent":[]}}],"position":{"start":{"line":10,"column":4,"offset":183},"end":{"line":10,"column":105,"offset":284},"indent":[]}}],"position":{"start":{"line":10,"column":4,"offset":183},"end":{"line":10,"column":105,"offset":284},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":180},"end":{"line":10,"column":105,"offset":284},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":180},"end":{"line":10,"column":105,"offset":284},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Create React App","position":{"start":{"line":12,"column":4,"offset":289},"end":{"line":12,"column":20,"offset":305},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":286},"end":{"line":12,"column":20,"offset":305},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"npx create-react-app example","position":{"start":{"line":14,"column":1,"offset":307},"end":{"line":16,"column":4,"offset":344},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update ReactDOM","position":{"start":{"line":18,"column":4,"offset":349},"end":{"line":18,"column":19,"offset":364},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":346},"end":{"line":18,"column":19,"offset":364},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.hydrate(<App />, document.getElementById('root'));","position":{"start":{"line":20,"column":1,"offset":366},"end":{"line":26,"column":4,"offset":522},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update the Express server","position":{"start":{"line":28,"column":4,"offset":527},"end":{"line":28,"column":29,"offset":552},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":524},"end":{"line":28,"column":29,"offset":552},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import path from 'path';\nimport fs from 'fs';\n\nimport React from 'react';\nimport express from 'express';\nimport ReactDOMServer from 'react-dom/server';\nimport App from '../src/App';\n\napp.get('/', (req, res) => {\n  const app = ReactDOMServer.renderToString(<App />);\n\n  const indexFile = path.resolve('./build/index.html');\n  fs.readFile(indexFile, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Something went wrong:', err);\n      return res.status(500).send('Oops, better luck next time!');\n    }\n\n    return res.send(\n      data.replace('<div id=\"root\"></div>', `<div id=\"root\">${app}</div>`),\n    );\n  });\n});\n\napp.use(express.static('./build'));\n\nconst PORT = process.env.PORT || 3006;\nconst app = express();\n\napp.get('/', (req, res) => {\n  const app = ReactDOMServer.renderToString(<App />);\n\n  const indexFile = path.resolve('./build/index.html');\n  fs.readFile(indexFile, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Something went wrong:', err);\n      return res.status(500).send('Oops, better luck next time!');\n    }\n\n    return res.send(\n      data.replace('<div id=\"root\"></div>', `<div id=\"root\">${app}</div>`),\n    );\n  });\n});\n\napp.use(express.static('./build'));\n\napp.listen(PORT, () => {\n  console.log(`Server is listening on port ${PORT}`);\n});","position":{"start":{"line":30,"column":1,"offset":554},"end":{"line":81,"column":4,"offset":1856},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Create Webpack Server config","position":{"start":{"line":83,"column":4,"offset":1861},"end":{"line":83,"column":32,"offset":1889},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1858},"end":{"line":83,"column":32,"offset":1889},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"npm install webpack-node-externals --save-dev\n# For the style loaders\nnpm install css-loader style-loader --save-dev","position":{"start":{"line":85,"column":1,"offset":1891},"end":{"line":89,"column":4,"offset":2016},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":".babelrc.json","position":{"start":{"line":91,"column":4,"offset":2021},"end":{"line":91,"column":17,"offset":2034},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2018},"end":{"line":91,"column":17,"offset":2034},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\n}","position":{"start":{"line":93,"column":1,"offset":2036},"end":{"line":97,"column":4,"offset":2109},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"webpack.server.js","position":{"start":{"line":99,"column":4,"offset":2114},"end":{"line":99,"column":21,"offset":2131},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2111},"end":{"line":99,"column":21,"offset":2131},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const path = require('path');\nconst nodeExternals = require('webpack-node-externals');\n\nmodule.exports = {\n  entry: './server/index.js',\n\n  target: 'node',\n\n  externals: [nodeExternals()],\n\n  output: {\n    path: path.resolve('server-build'),\n    filename: 'index.js',\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: 'babel-loader',\n      },\n    ],\n  },\n};","position":{"start":{"line":101,"column":1,"offset":2133},"end":{"line":126,"column":4,"offset":2525},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update package.json","position":{"start":{"line":128,"column":4,"offset":2530},"end":{"line":128,"column":23,"offset":2549},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":2527},"end":{"line":128,"column":23,"offset":2549},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"scripts\": {\n  \"dev:build-server\": \"NODE_ENV=development webpack --config webpack.server.js --mode=development -w\",\n  \"dev:start\": \"nodemon ./server-build/index.js\",\n  \"dev\": \"npm-run-all --parallel build dev:*\"\n},","position":{"start":{"line":130,"column":1,"offset":2551},"end":{"line":136,"column":4,"offset":2777},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":139,"column":1,"offset":2780},"end":{"line":139,"column":31,"offset":2810},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":139,"column":31,"offset":2810}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h1>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.digitalocean.com/community/tutorials/react-server-side-rendering\"\n        }}>{`Digital Ocean article`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"create-react-app\"\n    }}>{`Create React App`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`npx create-react-app example\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-reactdom\"\n    }}>{`Update ReactDOM`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.hydrate(<App />, document.getElementById('root'));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-the-express-server\"\n    }}>{`Update the Express server`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import path from 'path';\nimport fs from 'fs';\n\nimport React from 'react';\nimport express from 'express';\nimport ReactDOMServer from 'react-dom/server';\nimport App from '../src/App';\n\napp.get('/', (req, res) => {\n  const app = ReactDOMServer.renderToString(<App />);\n\n  const indexFile = path.resolve('./build/index.html');\n  fs.readFile(indexFile, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Something went wrong:', err);\n      return res.status(500).send('Oops, better luck next time!');\n    }\n\n    return res.send(\n      data.replace('<div id=\"root\"></div>', \\`<div id=\"root\">\\${app}</div>\\`),\n    );\n  });\n});\n\napp.use(express.static('./build'));\n\nconst PORT = process.env.PORT || 3006;\nconst app = express();\n\napp.get('/', (req, res) => {\n  const app = ReactDOMServer.renderToString(<App />);\n\n  const indexFile = path.resolve('./build/index.html');\n  fs.readFile(indexFile, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Something went wrong:', err);\n      return res.status(500).send('Oops, better luck next time!');\n    }\n\n    return res.send(\n      data.replace('<div id=\"root\"></div>', \\`<div id=\"root\">\\${app}</div>\\`),\n    );\n  });\n});\n\napp.use(express.static('./build'));\n\napp.listen(PORT, () => {\n  console.log(\\`Server is listening on port \\${PORT}\\`);\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-webpack-server-config\"\n    }}>{`Create Webpack Server config`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`npm install webpack-node-externals --save-dev\n# For the style loaders\nnpm install css-loader style-loader --save-dev\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"babelrcjson\"\n    }}>{`.babelrc.json`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"]\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"webpackserverjs\"\n    }}>{`webpack.server.js`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const path = require('path');\nconst nodeExternals = require('webpack-node-externals');\n\nmodule.exports = {\n  entry: './server/index.js',\n\n  target: 'node',\n\n  externals: [nodeExternals()],\n\n  output: {\n    path: path.resolve('server-build'),\n    filename: 'index.js',\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\\\.js$/,\n        use: 'babel-loader',\n      },\n    ],\n  },\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-packagejson\"\n    }}>{`Update package.json`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"scripts\": {\n  \"dev:build-server\": \"NODE_ENV=development webpack --config webpack.server.js --mode=development -w\",\n  \"dev:start\": \"nodemon ./server-build/index.js\",\n  \"dev\": \"npm-run-all --parallel build dev:*\"\n},\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}