{"expireTime":9007200852878465000,"key":"gatsby-plugin-mdx-entire-payload-07059c7c8bfde471139df75c8a424e97-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Simple Mode","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":14,"offset":180},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":14,"offset":180},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Answer","position":{"start":{"line":10,"column":4,"offset":185},"end":{"line":10,"column":10,"offset":191},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":182},"end":{"line":10,"column":10,"offset":191},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function SimpleMode(arr) {\n  let map = {};\n\n  for (let el of arr) {\n    if (map[el]) map[el]++;\n    else map[el] = 1;\n  }\n\n  let max = 1;\n  let maxRes = -1;\n  for (let [k, v] of Object.entries(map)) {\n    if (v > max) {\n      maxRes = k;\n      max = v;\n    }\n  }\n\n  if (max === 1) return -1;\n\n  for (let el of arr) {\n    if (map[el] === max) {\n      maxRes = el;\n      break;\n    }\n  }\n\n  // code goes here\n  return maxRes;\n}","position":{"start":{"line":12,"column":1,"offset":193},"end":{"line":42,"column":4,"offset":636},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":45,"column":1,"offset":639},"end":{"line":45,"column":31,"offset":669},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":45,"column":31,"offset":669}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"simple-mode\"\n    }}>{`Simple Mode`}</h1>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function SimpleMode(arr) {\n  let map = {};\n\n  for (let el of arr) {\n    if (map[el]) map[el]++;\n    else map[el] = 1;\n  }\n\n  let max = 1;\n  let maxRes = -1;\n  for (let [k, v] of Object.entries(map)) {\n    if (v > max) {\n      maxRes = k;\n      max = v;\n    }\n  }\n\n  if (max === 1) return -1;\n\n  for (let el of arr) {\n    if (map[el] === max) {\n      maxRes = el;\n      break;\n    }\n  }\n\n  // code goes here\n  return maxRes;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}