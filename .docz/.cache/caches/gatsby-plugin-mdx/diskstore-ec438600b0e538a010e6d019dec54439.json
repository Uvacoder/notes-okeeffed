{"expireTime":9007200849425598000,"key":"gatsby-plugin-mdx-entire-payload-5fc5b98351127d1664b8195e72b1b6e1-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Bracket Matcher","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":18,"offset":184},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":18,"offset":184},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Answers","position":{"start":{"line":10,"column":4,"offset":189},"end":{"line":10,"column":11,"offset":196},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":186},"end":{"line":10,"column":11,"offset":196},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function BracketMatcher(str) {\n  let left = 0;\n  let right = 0;\n\n  let diff = 0;\n  let mismatched = false;\n  str\n    .replace(/[^\\(\\)]/gi, '')\n    .split('')\n    .map(bracket => {\n      if (bracket === '(') {\n        diff++;\n        left++;\n      } else if (bracket === ')') {\n        diff--;\n        right++;\n      }\n\n      if (diff < 0) {\n        mismatched = true;\n      }\n    });\n\n  if (mismatched) return 0;\n  return left === right ? 1 : 0;\n}","position":{"start":{"line":12,"column":1,"offset":198},"end":{"line":39,"column":4,"offset":663},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":42,"column":1,"offset":666},"end":{"line":42,"column":31,"offset":696},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":42,"column":31,"offset":696}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"bracket-matcher\"\n    }}>{`Bracket Matcher`}</h1>\n    <h2 {...{\n      \"id\": \"answers\"\n    }}>{`Answers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function BracketMatcher(str) {\n  let left = 0;\n  let right = 0;\n\n  let diff = 0;\n  let mismatched = false;\n  str\n    .replace(/[^\\\\(\\\\)]/gi, '')\n    .split('')\n    .map(bracket => {\n      if (bracket === '(') {\n        diff++;\n        left++;\n      } else if (bracket === ')') {\n        diff--;\n        right++;\n      }\n\n      if (diff < 0) {\n        mismatched = true;\n      }\n    });\n\n  if (mismatched) return 0;\n  return left === right ? 1 : 0;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}