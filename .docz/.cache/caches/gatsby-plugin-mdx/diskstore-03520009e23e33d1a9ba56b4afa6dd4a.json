{"expireTime":9007200848610856000,"key":"gatsby-plugin-mdx-entire-payload-711367bcaa9bce00324d1bfa68f3c7a7-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Styles > Base > Mixins","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":25,"offset":190},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":25,"offset":190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The mixins file is the place to store all of the functional Sass mixins used throughout the project.","position":{"start":{"line":9,"column":1,"offset":192},"end":{"line":9,"column":101,"offset":292},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":192},"end":{"line":9,"column":101,"offset":292},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"inline-block-list","position":{"start":{"line":11,"column":4,"offset":297},"end":{"line":11,"column":21,"offset":314},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":294},"end":{"line":11,"column":21,"offset":314},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"// inline-block list\n@mixin inline-block-list($padding: false) {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    @include clearfix;\n\n    li {\n        list-style-type: none;\n        @include inline-block();\n        white-space: nowrap;\n        @if $padding {\n            padding: {\n                left: $padding;\n                right: $padding;\n            }\n        }\n    }\n}","position":{"start":{"line":13,"column":1,"offset":316},"end":{"line":33,"column":4,"offset":706},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"omega-reset","position":{"start":{"line":35,"column":4,"offset":711},"end":{"line":35,"column":15,"offset":722},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":708},"end":{"line":35,"column":15,"offset":722},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin omega-reset($nth) {\n    &:nth-child(#{$nth}) {\n        margin-right: flex-gutter();\n    }\n    &:nth-child(#{$nth} + 1) {\n        clear: none;\n    }\n}","position":{"start":{"line":37,"column":1,"offset":724},"end":{"line":46,"column":4,"offset":891},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"font-size","position":{"start":{"line":48,"column":4,"offset":896},"end":{"line":48,"column":13,"offset":905},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":893},"end":{"line":48,"column":13,"offset":905},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin font-size($fontSize, $lineHeight: null) {\n    font-size: $fontSize;\n    font-size: rem($fontSize) / 0.625;\n\n    @if ($lineHeight) {\n        line-height: em($lineHeight, $fontSize);\n    } @else {\n        line-height: inherit;\n    }\n}","position":{"start":{"line":50,"column":1,"offset":907},"end":{"line":61,"column":4,"offset":1157},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"inline-block","position":{"start":{"line":63,"column":4,"offset":1162},"end":{"line":63,"column":16,"offset":1174},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1159},"end":{"line":63,"column":16,"offset":1174},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"// inline-block for old browsers\n@mixin inline-block() {\n    display: inline-block;\n    *zoom: 1;\n    *display: inline;\n}","position":{"start":{"line":65,"column":1,"offset":1176},"end":{"line":72,"column":4,"offset":1308},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"reset-box-model","position":{"start":{"line":74,"column":4,"offset":1313},"end":{"line":74,"column":19,"offset":1328},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1310},"end":{"line":74,"column":19,"offset":1328},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin reset-box-model {\n    margin: 0;\n    padding: 0;\n    border: 0;\n}","position":{"start":{"line":76,"column":1,"offset":1330},"end":{"line":82,"column":4,"offset":1413},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"absolute-fill","position":{"start":{"line":84,"column":4,"offset":1418},"end":{"line":84,"column":17,"offset":1431},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":1415},"end":{"line":84,"column":17,"offset":1431},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin absolute-fill {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}","position":{"start":{"line":86,"column":1,"offset":1433},"end":{"line":94,"column":4,"offset":1552},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"headings","position":{"start":{"line":96,"column":4,"offset":1557},"end":{"line":96,"column":12,"offset":1565},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":1554},"end":{"line":96,"column":12,"offset":1565},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin headings($from: 1, $to: 6) {\n    @for $i from $from through $to {\n        h#{$i} {\n            @content;\n        }\n    }\n}","position":{"start":{"line":98,"column":1,"offset":1567},"end":{"line":106,"column":4,"offset":1707},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"background-image","position":{"start":{"line":108,"column":4,"offset":1712},"end":{"line":108,"column":20,"offset":1728},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":1709},"end":{"line":108,"column":20,"offset":1728},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin background-image($path) {\n    background-image: url(../img/#{$path}.png);\n    background-image: linear-gradient(transparent, transparent), url(../img/#{$path}.svg);\n}","position":{"start":{"line":110,"column":1,"offset":1730},"end":{"line":115,"column":4,"offset":1914},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"reset-ul","position":{"start":{"line":117,"column":4,"offset":1919},"end":{"line":117,"column":12,"offset":1927},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":1916},"end":{"line":117,"column":12,"offset":1927},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"/* Reset unordered list style */\n@mixin reset-ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: auto;\n}","position":{"start":{"line":119,"column":1,"offset":1929},"end":{"line":127,"column":4,"offset":2070},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"hide-text","position":{"start":{"line":129,"column":4,"offset":2075},"end":{"line":129,"column":13,"offset":2084},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":2072},"end":{"line":129,"column":13,"offset":2084},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin hide-text {\n    overflow: hidden;\n    text-indent: 101%;\n    white-space: nowrap;\n}","position":{"start":{"line":131,"column":1,"offset":2086},"end":{"line":137,"column":4,"offset":2187},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"_","position":{"start":{"line":139,"column":4,"offset":2192},"end":{"line":139,"column":6,"offset":2194},"indent":[]}},{"type":"text","value":"neat-parse-media","position":{"start":{"line":139,"column":6,"offset":2194},"end":{"line":139,"column":22,"offset":2210},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2189},"end":{"line":139,"column":22,"offset":2210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Swaps neat 2.0 to desktop first","position":{"start":{"line":141,"column":1,"offset":2212},"end":{"line":141,"column":32,"offset":2243},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":2212},"end":{"line":141,"column":32,"offset":2243},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@function _neat-parse-media($media) {\n    @if type-of($media) == number {\n        @return \"only screen and (max-width: #{$media})\";\n    } @else if type-of($media) == string {\n        @return \"#{$media}\";\n    }\n}","position":{"start":{"line":143,"column":1,"offset":2245},"end":{"line":151,"column":4,"offset":2467},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"background-color","position":{"start":{"line":153,"column":4,"offset":2472},"end":{"line":153,"column":20,"offset":2488},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":2469},"end":{"line":153,"column":20,"offset":2488},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Set default background-color transition.","position":{"start":{"line":155,"column":1,"offset":2490},"end":{"line":155,"column":41,"offset":2530},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":2490},"end":{"line":155,"column":41,"offset":2530},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin background-color$color, $lighten: false) {\n    background-color: $color;\n    transition: background-color 600ms ease-in;\n\n    &:hover,\n    &:active {\n        @if $lighten {\n            background-color: lighten($color, 30%);\n        } @else {\n            background-color: darken($color, 30%);\n        }\n    }\n}","position":{"start":{"line":157,"column":1,"offset":2532},"end":{"line":171,"column":4,"offset":2861},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"color","position":{"start":{"line":173,"column":4,"offset":2866},"end":{"line":173,"column":9,"offset":2871},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":2863},"end":{"line":173,"column":9,"offset":2871},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@mixin color($color, $lighten: false) {\n    color: $color;\n    transition: color 600ms ease-in;\n\n    &:hover,\n    &:active {\n        @if $lighten {\n            color: lighten($color, 30%);\n        } @else {\n            color: darken($color, 30%);\n        }\n    }\n}","position":{"start":{"line":175,"column":1,"offset":2873},"end":{"line":189,"column":4,"offset":3148},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":192,"column":1,"offset":3151},"end":{"line":192,"column":31,"offset":3181},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":192,"column":31,"offset":3181}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"styles--base--mixins\"\n    }}>{`Styles > Base > Mixins`}</h1>\n    <p>{`The mixins file is the place to store all of the functional Sass mixins used throughout the project.`}</p>\n    <h2 {...{\n      \"id\": \"inline-block-list\"\n    }}>{`inline-block-list`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`// inline-block list\n@mixin inline-block-list($padding: false) {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    @include clearfix;\n\n    li {\n        list-style-type: none;\n        @include inline-block();\n        white-space: nowrap;\n        @if $padding {\n            padding: {\n                left: $padding;\n                right: $padding;\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"omega-reset\"\n    }}>{`omega-reset`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin omega-reset($nth) {\n    &:nth-child(#{$nth}) {\n        margin-right: flex-gutter();\n    }\n    &:nth-child(#{$nth} + 1) {\n        clear: none;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"font-size\"\n    }}>{`font-size`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin font-size($fontSize, $lineHeight: null) {\n    font-size: $fontSize;\n    font-size: rem($fontSize) / 0.625;\n\n    @if ($lineHeight) {\n        line-height: em($lineHeight, $fontSize);\n    } @else {\n        line-height: inherit;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"inline-block\"\n    }}>{`inline-block`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`// inline-block for old browsers\n@mixin inline-block() {\n    display: inline-block;\n    *zoom: 1;\n    *display: inline;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"reset-box-model\"\n    }}>{`reset-box-model`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin reset-box-model {\n    margin: 0;\n    padding: 0;\n    border: 0;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"absolute-fill\"\n    }}>{`absolute-fill`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin absolute-fill {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"headings\"\n    }}>{`headings`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin headings($from: 1, $to: 6) {\n    @for $i from $from through $to {\n        h#{$i} {\n            @content;\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"background-image\"\n    }}>{`background-image`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin background-image($path) {\n    background-image: url(../img/#{$path}.png);\n    background-image: linear-gradient(transparent, transparent), url(../img/#{$path}.svg);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"reset-ul\"\n    }}>{`reset-ul`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* Reset unordered list style */\n@mixin reset-ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: auto;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hide-text\"\n    }}>{`hide-text`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin hide-text {\n    overflow: hidden;\n    text-indent: 101%;\n    white-space: nowrap;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"_neat-parse-media\"\n    }}>{`_`}{`neat-parse-media`}</h2>\n    <p>{`Swaps neat 2.0 to desktop first`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@function _neat-parse-media($media) {\n    @if type-of($media) == number {\n        @return \"only screen and (max-width: #{$media})\";\n    } @else if type-of($media) == string {\n        @return \"#{$media}\";\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"background-color\"\n    }}>{`background-color`}</h2>\n    <p>{`Set default background-color transition.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin background-color$color, $lighten: false) {\n    background-color: $color;\n    transition: background-color 600ms ease-in;\n\n    &:hover,\n    &:active {\n        @if $lighten {\n            background-color: lighten($color, 30%);\n        } @else {\n            background-color: darken($color, 30%);\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"color\"\n    }}>{`color`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin color($color, $lighten: false) {\n    color: $color;\n    transition: color 600ms ease-in;\n\n    &:hover,\n    &:active {\n        @if $lighten {\n            color: lighten($color, 30%);\n        } @else {\n            color: darken($color, 30%);\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}