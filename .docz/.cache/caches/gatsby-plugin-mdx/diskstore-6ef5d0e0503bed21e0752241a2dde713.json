{"expireTime":9007200849425597000,"key":"gatsby-plugin-mdx-entire-payload-ec4833807af2b54e619d6cb18d7a7eac-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Letter Count","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":15,"offset":181},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":15,"offset":181},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":186},"end":{"line":10,"column":13,"offset":195},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":183},"end":{"line":10,"column":13,"offset":195},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.regular-expressions.info/lookaround2.html","children":[{"type":"text","value":"Look around regex blog","position":{"start":{"line":12,"column":5,"offset":201},"end":{"line":12,"column":27,"offset":223},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":200},"end":{"line":12,"column":83,"offset":279},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":200},"end":{"line":12,"column":83,"offset":279},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":12,"column":83,"offset":279},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":12,"column":83,"offset":279},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Answer","position":{"start":{"line":14,"column":4,"offset":284},"end":{"line":14,"column":10,"offset":290},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":281},"end":{"line":14,"column":10,"offset":290},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function LetterCount(str) {\n  let maxLen = 0;\n  let letterCountIndex = 0;\n  const strArr = str.split(' ');\n  strArr.map((word, index) => {\n    const regex = /([a-z])(\\1?)(.?|.+)(\\1+)/gi;\n    const regMatches = word.toLowerCase().match(regex);\n    if (!regMatches) return;\n\n    for (match of regMatches) {\n      const repRegex = new RegExp(`[^${match[0]}]`, 'ig');\n      const updated = word.replace(repRegex, '');\n      if (updated.length > maxLen) {\n        maxLen = updated.length;\n        letterCountIndex = index;\n      }\n    }\n  });\n\n  if (maxLen === 0) return -1;\n  return strArr[letterCountIndex];\n}","position":{"start":{"line":16,"column":1,"offset":292},"end":{"line":39,"column":4,"offset":916},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":42,"column":1,"offset":919},"end":{"line":42,"column":31,"offset":949},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":42,"column":31,"offset":949}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"letter-count\"\n    }}>{`Letter Count`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.regular-expressions.info/lookaround2.html\"\n        }}>{`Look around regex blog`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function LetterCount(str) {\n  let maxLen = 0;\n  let letterCountIndex = 0;\n  const strArr = str.split(' ');\n  strArr.map((word, index) => {\n    const regex = /([a-z])(\\\\1?)(.?|.+)(\\\\1+)/gi;\n    const regMatches = word.toLowerCase().match(regex);\n    if (!regMatches) return;\n\n    for (match of regMatches) {\n      const repRegex = new RegExp(\\`[^\\${match[0]}]\\`, 'ig');\n      const updated = word.replace(repRegex, '');\n      if (updated.length > maxLen) {\n        maxLen = updated.length;\n        letterCountIndex = index;\n      }\n    }\n  });\n\n  if (maxLen === 0) return -1;\n  return strArr[letterCountIndex];\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}