{"expireTime":9007200852878358000,"key":"gatsby-plugin-mdx-entire-payload-713cf638bc49ce4013a2b26fcf32d1ad-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Tensorflow.js","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":16,"offset":182},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":16,"offset":182},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Problem Solving Process","position":{"start":{"line":10,"column":4,"offset":187},"end":{"line":10,"column":27,"offset":210},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":184},"end":{"line":10,"column":27,"offset":210},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Identify data relevant to problem (features, labels)","position":{"start":{"line":12,"column":4,"offset":215},"end":{"line":12,"column":56,"offset":267},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":215},"end":{"line":12,"column":56,"offset":267},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":212},"end":{"line":12,"column":56,"offset":267},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Assemble a set of data related to problem to be solved","position":{"start":{"line":13,"column":4,"offset":271},"end":{"line":13,"column":58,"offset":325},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":271},"end":{"line":13,"column":58,"offset":325},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":268},"end":{"line":13,"column":58,"offset":325},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Decide on the type of output you are predicting","position":{"start":{"line":14,"column":4,"offset":329},"end":{"line":14,"column":51,"offset":376},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":329},"end":{"line":14,"column":51,"offset":376},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":326},"end":{"line":14,"column":51,"offset":376},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Based on type of output, pick an algorithm that will determine a correlation between your 'features' and 'labels'","position":{"start":{"line":15,"column":4,"offset":380},"end":{"line":15,"column":117,"offset":493},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":380},"end":{"line":15,"column":117,"offset":493},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":377},"end":{"line":15,"column":117,"offset":493},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"use model generated by algorithm to make a prediction","position":{"start":{"line":16,"column":4,"offset":497},"end":{"line":16,"column":57,"offset":550},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":497},"end":{"line":16,"column":57,"offset":550},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":494},"end":{"line":16,"column":57,"offset":550},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":212},"end":{"line":16,"column":57,"offset":550},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Continuous vs Discrete","position":{"start":{"line":18,"column":4,"offset":555},"end":{"line":18,"column":26,"offset":577},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":552},"end":{"line":18,"column":26,"offset":577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can decide what application or technique we are going to used based on the type of output.","position":{"start":{"line":20,"column":1,"offset":579},"end":{"line":20,"column":94,"offset":672},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":579},"end":{"line":20,"column":94,"offset":672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, if the output data itself is continuous, we know that we would apply regression. If in fact the output data is discrete in nature ie pass/fail, then we would consider options like classification.","position":{"start":{"line":22,"column":1,"offset":674},"end":{"line":22,"column":209,"offset":882},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":674},"end":{"line":22,"column":209,"offset":882},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Plinko Example","position":{"start":{"line":24,"column":4,"offset":887},"end":{"line":24,"column":18,"offset":901},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":884},"end":{"line":24,"column":18,"offset":901},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the example of Plinko, we want to try figure out where a ball dropped into the Plinko grid will end up.","position":{"start":{"line":26,"column":1,"offset":903},"end":{"line":26,"column":107,"offset":1009},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":903},"end":{"line":26,"column":107,"offset":1009},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From the example, we can determine that we have these features:","position":{"start":{"line":28,"column":1,"offset":1011},"end":{"line":28,"column":64,"offset":1074},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1011},"end":{"line":28,"column":64,"offset":1074},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Drop Position","position":{"start":{"line":30,"column":4,"offset":1079},"end":{"line":30,"column":17,"offset":1092},"indent":[]}}],"position":{"start":{"line":30,"column":4,"offset":1079},"end":{"line":30,"column":17,"offset":1092},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1076},"end":{"line":30,"column":17,"offset":1092},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ball Bounciness","position":{"start":{"line":31,"column":4,"offset":1096},"end":{"line":31,"column":19,"offset":1111},"indent":[]}}],"position":{"start":{"line":31,"column":4,"offset":1096},"end":{"line":31,"column":19,"offset":1111},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1093},"end":{"line":31,"column":19,"offset":1111},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ball Size","position":{"start":{"line":32,"column":4,"offset":1115},"end":{"line":32,"column":13,"offset":1124},"indent":[]}}],"position":{"start":{"line":32,"column":4,"offset":1115},"end":{"line":32,"column":13,"offset":1124},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1112},"end":{"line":32,"column":13,"offset":1124},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1076},"end":{"line":32,"column":13,"offset":1124},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"From these pieces of data, we want to know the output label of which bucket a ball lands in.","position":{"start":{"line":34,"column":1,"offset":1126},"end":{"line":34,"column":93,"offset":1218},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1126},"end":{"line":34,"column":93,"offset":1218},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":37,"column":1,"offset":1221},"end":{"line":37,"column":31,"offset":1251},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":37,"column":31,"offset":1251}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tensorflowjs\"\n    }}>{`Tensorflow.js`}</h1>\n    <h2 {...{\n      \"id\": \"problem-solving-process\"\n    }}>{`Problem Solving Process`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Identify data relevant to problem (features, labels)`}</li>\n      <li parentName=\"ol\">{`Assemble a set of data related to problem to be solved`}</li>\n      <li parentName=\"ol\">{`Decide on the type of output you are predicting`}</li>\n      <li parentName=\"ol\">{`Based on type of output, pick an algorithm that will determine a correlation between your 'features' and 'labels'`}</li>\n      <li parentName=\"ol\">{`use model generated by algorithm to make a prediction`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"continuous-vs-discrete\"\n    }}>{`Continuous vs Discrete`}</h2>\n    <p>{`We can decide what application or technique we are going to used based on the type of output.`}</p>\n    <p>{`For example, if the output data itself is continuous, we know that we would apply regression. If in fact the output data is discrete in nature ie pass/fail, then we would consider options like classification.`}</p>\n    <h2 {...{\n      \"id\": \"plinko-example\"\n    }}>{`Plinko Example`}</h2>\n    <p>{`In the example of Plinko, we want to try figure out where a ball dropped into the Plinko grid will end up.`}</p>\n    <p>{`From the example, we can determine that we have these features:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Drop Position`}</li>\n      <li parentName=\"ol\">{`Ball Bounciness`}</li>\n      <li parentName=\"ol\">{`Ball Size`}</li>\n    </ol>\n    <p>{`From these pieces of data, we want to know the output label of which bucket a ball lands in.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}