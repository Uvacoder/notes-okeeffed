{"expireTime":9007200852878369000,"key":"gatsby-plugin-mdx-entire-payload-95a94a98e6de851b4218cc6bbd5bff85-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Ruby Intro","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":13,"offset":179},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":13,"offset":179},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":184},"end":{"line":10,"column":13,"offset":193},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":181},"end":{"line":10,"column":13,"offset":193},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://rubystyle.guide/#introduction","children":[{"type":"text","value":"Ruby Style Guide","position":{"start":{"line":12,"column":5,"offset":199},"end":{"line":12,"column":21,"offset":215},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":198},"end":{"line":12,"column":61,"offset":255},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":198},"end":{"line":12,"column":61,"offset":255},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":195},"end":{"line":12,"column":61,"offset":255},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://rails.rubystyle.guide/#introduction","children":[{"type":"text","value":"Rails Stylde Guide","position":{"start":{"line":13,"column":5,"offset":260},"end":{"line":13,"column":23,"offset":278},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":259},"end":{"line":13,"column":69,"offset":324},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":259},"end":{"line":13,"column":69,"offset":324},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":256},"end":{"line":13,"column":69,"offset":324},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://dev.to/vvo/modern-resources-for-learning-rails-6-and-ruby-2cbe","children":[{"type":"text","value":"Modern Resources for Rails 6","position":{"start":{"line":14,"column":5,"offset":329},"end":{"line":14,"column":33,"offset":357},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":328},"end":{"line":14,"column":106,"offset":430},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":328},"end":{"line":14,"column":106,"offset":430},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":325},"end":{"line":14,"column":106,"offset":430},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/ankane/secure_rails","children":[{"type":"text","value":"Secure Rails","position":{"start":{"line":15,"column":5,"offset":435},"end":{"line":15,"column":17,"offset":447},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":434},"end":{"line":15,"column":58,"offset":488},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":434},"end":{"line":15,"column":58,"offset":488},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":431},"end":{"line":15,"column":58,"offset":488},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/gramantin/awesome-rails","children":[{"type":"text","value":"Awesome Rails","position":{"start":{"line":16,"column":5,"offset":493},"end":{"line":16,"column":18,"offset":506},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":492},"end":{"line":16,"column":63,"offset":551},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":492},"end":{"line":16,"column":63,"offset":551},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":489},"end":{"line":16,"column":63,"offset":551},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/markets/awesome-ruby","children":[{"type":"text","value":"Awesome Ruby","position":{"start":{"line":17,"column":5,"offset":556},"end":{"line":17,"column":17,"offset":568},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":555},"end":{"line":17,"column":59,"offset":610},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":555},"end":{"line":17,"column":59,"offset":610},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":552},"end":{"line":17,"column":59,"offset":610},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/@lcriswell/ruby-symbols-vs-strings-248842529fd9","children":[{"type":"text","value":"Ruby Symbols vs Strings","position":{"start":{"line":18,"column":5,"offset":615},"end":{"line":18,"column":28,"offset":638},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":614},"end":{"line":18,"column":97,"offset":707},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":614},"end":{"line":18,"column":97,"offset":707},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":611},"end":{"line":18,"column":97,"offset":707},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://levelup.gitconnected.com/ultimate-guide-to-blazing-fast-performance-in-rails-1-77e281a1df52","children":[{"type":"text","value":"Rails Performance","position":{"start":{"line":19,"column":5,"offset":712},"end":{"line":19,"column":22,"offset":729},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":711},"end":{"line":19,"column":124,"offset":831},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":711},"end":{"line":19,"column":124,"offset":831},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":708},"end":{"line":19,"column":124,"offset":831},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://cultureamp.atlassian.net/wiki/spaces/CP/pages/1067976141/Developer+guide","children":[{"type":"text","value":"Culture Amp Guide - Requires Auth","position":{"start":{"line":20,"column":5,"offset":836},"end":{"line":20,"column":38,"offset":869},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":835},"end":{"line":20,"column":121,"offset":952},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":835},"end":{"line":20,"column":121,"offset":952},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":832},"end":{"line":20,"column":121,"offset":952},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://cultureamp.atlassian.net/wiki/spaces/CP/pages/1072759314/Testing+Guidelines","children":[{"type":"text","value":"Culture Amp Testing Guide (Performance) - Requires Auth","position":{"start":{"line":21,"column":6,"offset":958},"end":{"line":21,"column":61,"offset":1013},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":957},"end":{"line":21,"column":147,"offset":1099},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":957},"end":{"line":21,"column":147,"offset":1099},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":953},"end":{"line":21,"column":147,"offset":1099},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/testdouble/standard","children":[{"type":"text","value":"Standard - RuboCop Subset","position":{"start":{"line":22,"column":6,"offset":1105},"end":{"line":22,"column":31,"offset":1130},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":1104},"end":{"line":22,"column":72,"offset":1171},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":1104},"end":{"line":22,"column":72,"offset":1171},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1100},"end":{"line":22,"column":72,"offset":1171},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://semaphoreci.com/community/tutorials/working-effectively-with-data-factories-using-factorygirl","children":[{"type":"text","value":"Factory Bot Tutorial","position":{"start":{"line":23,"column":6,"offset":1177},"end":{"line":23,"column":26,"offset":1197},"indent":[]}}],"position":{"start":{"line":23,"column":5,"offset":1176},"end":{"line":23,"column":130,"offset":1301},"indent":[]}}],"position":{"start":{"line":23,"column":5,"offset":1176},"end":{"line":23,"column":130,"offset":1301},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1172},"end":{"line":23,"column":130,"offset":1301},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":195},"end":{"line":23,"column":130,"offset":1301},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Bang (!) Methods","position":{"start":{"line":25,"column":4,"offset":1306},"end":{"line":25,"column":20,"offset":1322},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1303},"end":{"line":25,"column":20,"offset":1322},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ruby methods that modify an object in-place and end in an exclamation mark are known as bang methods. By convention, the bang labels a method as dangerous - specifically, as the dangerous equivalent of a method with the same name but without the bang.","position":{"start":{"line":27,"column":1,"offset":1324},"end":{"line":27,"column":252,"offset":1575},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1324},"end":{"line":27,"column":252,"offset":1575},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You'll find a number of pairs of methods, one with the bang and one without. Those without the bang perform an action and return a freshly minted object, reflecting the results of the action (capitalizing a string, sorting an array, and so on). The bang versions of the same methods perform the action, but they do so in place: Instead of creating a new object, they transform the original object.","position":{"start":{"line":29,"column":1,"offset":1577},"end":{"line":29,"column":398,"offset":1974},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1577},"end":{"line":29,"column":398,"offset":1974},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Examples of such pairs of methods include sort/sort! for arrays, upcase/upcase! for strings, chomp/chomp! for strings, and reverse/reverse! for strings and arrays. In each case, if you call the non-bang version of the method on the object, you get a new object. If you call the bang version, you operate in-place on the same object to which you sent the message.","position":{"start":{"line":31,"column":1,"offset":1976},"end":{"line":31,"column":363,"offset":2338},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1976},"end":{"line":31,"column":363,"offset":2338},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":34,"column":1,"offset":2341},"end":{"line":34,"column":31,"offset":2371},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":34,"column":31,"offset":2371}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ruby-intro\"\n    }}>{`Ruby Intro`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://rubystyle.guide/#introduction\"\n        }}>{`Ruby Style Guide`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://rails.rubystyle.guide/#introduction\"\n        }}>{`Rails Stylde Guide`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dev.to/vvo/modern-resources-for-learning-rails-6-and-ruby-2cbe\"\n        }}>{`Modern Resources for Rails 6`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ankane/secure_rails\"\n        }}>{`Secure Rails`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/gramantin/awesome-rails\"\n        }}>{`Awesome Rails`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/markets/awesome-ruby\"\n        }}>{`Awesome Ruby`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@lcriswell/ruby-symbols-vs-strings-248842529fd9\"\n        }}>{`Ruby Symbols vs Strings`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://levelup.gitconnected.com/ultimate-guide-to-blazing-fast-performance-in-rails-1-77e281a1df52\"\n        }}>{`Rails Performance`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://cultureamp.atlassian.net/wiki/spaces/CP/pages/1067976141/Developer+guide\"\n        }}>{`Culture Amp Guide - Requires Auth`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://cultureamp.atlassian.net/wiki/spaces/CP/pages/1072759314/Testing+Guidelines\"\n        }}>{`Culture Amp Testing Guide (Performance) - Requires Auth`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/testdouble/standard\"\n        }}>{`Standard - RuboCop Subset`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://semaphoreci.com/community/tutorials/working-effectively-with-data-factories-using-factorygirl\"\n        }}>{`Factory Bot Tutorial`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"bang--methods\"\n    }}>{`Bang (!) Methods`}</h2>\n    <p>{`Ruby methods that modify an object in-place and end in an exclamation mark are known as bang methods. By convention, the bang labels a method as dangerous - specifically, as the dangerous equivalent of a method with the same name but without the bang.`}</p>\n    <p>{`You'll find a number of pairs of methods, one with the bang and one without. Those without the bang perform an action and return a freshly minted object, reflecting the results of the action (capitalizing a string, sorting an array, and so on). The bang versions of the same methods perform the action, but they do so in place: Instead of creating a new object, they transform the original object.`}</p>\n    <p>{`Examples of such pairs of methods include sort/sort! for arrays, upcase/upcase! for strings, chomp/chomp! for strings, and reverse/reverse! for strings and arrays. In each case, if you call the non-bang version of the method on the object, you get a new object. If you call the bang version, you operate in-place on the same object to which you sent the message.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}