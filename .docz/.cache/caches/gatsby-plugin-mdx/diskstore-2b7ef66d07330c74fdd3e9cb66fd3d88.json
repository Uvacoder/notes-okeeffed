{"expireTime":9007200848610903000,"key":"gatsby-plugin-mdx-entire-payload-45a63361a8304e6f7a70b11ec151f53e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"ES6 Fiddle","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":13,"offset":178},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":13,"offset":178},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":9,"column":1,"offset":180},"end":{"line":9,"column":4,"offset":183},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Map Function","position":{"start":{"line":11,"column":4,"offset":188},"end":{"line":11,"column":16,"offset":200},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":185},"end":{"line":11,"column":16,"offset":200},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let doubles = [1,2,3,4].map(v => v+1);\nconsole.log(doubles[0]); //2\n\nlet terms = [\"Ben\", \"Den\", \"Sam\"];\nconsole.log(terms.map(name => `I am ${name}`));\n// I am Ben, I am Den, I am Sam","position":{"start":{"line":13,"column":1,"offset":202},"end":{"line":20,"column":4,"offset":393},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arrow Function","position":{"start":{"line":22,"column":4,"offset":398},"end":{"line":22,"column":18,"offset":412},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":395},"end":{"line":22,"column":18,"offset":412},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let nums = [1,2,3,4,5,6];\nlet fives = [];\n\nnums.forEach(v => {\n   if (v % 5 === 0)\n       fives.push(v)\n})\n\nconsole.log(fives);\n// print 5","position":{"start":{"line":24,"column":1,"offset":414},"end":{"line":35,"column":4,"offset":560},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Rest Parameter","position":{"start":{"line":37,"column":4,"offset":565},"end":{"line":37,"column":18,"offset":579},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":562},"end":{"line":37,"column":18,"offset":579},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function f (x, y, ...a) {\n    return (x + y) * a.length;\n}\nconsole.log(f(1, 2, \"hello\", true, 7) === 9);\n// returns true","position":{"start":{"line":39,"column":1,"offset":581},"end":{"line":45,"column":4,"offset":709},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":47,"column":1,"offset":711},"end":{"line":47,"column":31,"offset":741},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":47,"column":31,"offset":741}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"es6-fiddle\"\n    }}>{`ES6 Fiddle`}</h1>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"map-function\"\n    }}>{`Map Function`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`let doubles = [1,2,3,4].map(v => v+1);\nconsole.log(doubles[0]); //2\n\nlet terms = [\"Ben\", \"Den\", \"Sam\"];\nconsole.log(terms.map(name => \\`I am \\${name}\\`));\n// I am Ben, I am Den, I am Sam\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"arrow-function\"\n    }}>{`Arrow Function`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`let nums = [1,2,3,4,5,6];\nlet fives = [];\n\nnums.forEach(v => {\n   if (v % 5 === 0)\n       fives.push(v)\n})\n\nconsole.log(fives);\n// print 5\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rest-parameter\"\n    }}>{`Rest Parameter`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`function f (x, y, ...a) {\n    return (x + y) * a.length;\n}\nconsole.log(f(1, 2, \"hello\", true, 7) === 9);\n// returns true\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}