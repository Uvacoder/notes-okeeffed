{"expireTime":9007200867335913000,"key":"gatsby-plugin-mdx-entire-payload-11c084b56d624ef14c3eec9d3ad97e1d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python Exceptions","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":20,"offset":186},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":20,"offset":186},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The base example is to use a try/except block. You can raise exceptions in code that can be caught by the except block.","position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":120,"offset":307},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":120,"offset":307},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"try:\n    linux_interaction()\nexcept:\n    print('Linux function was not executed')","position":{"start":{"line":12,"column":1,"offset":309},"end":{"line":17,"column":4,"offset":404},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Example case","position":{"start":{"line":19,"column":4,"offset":409},"end":{"line":19,"column":16,"offset":421},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":406},"end":{"line":19,"column":16,"offset":421},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"class LinkedList:\n    def __init__(self, head=None):\n        self.head = head\n\n    def getFirst(self):\n        if self.head == None:\n            raise Exception(\"No items in list\")\n        else:\n            return self.head\n\ntry:\n    ll = LinkedList()\n    ll.getFirst()\nexcept Exception, error:\n    print(error)","position":{"start":{"line":21,"column":1,"offset":423},"end":{"line":37,"column":4,"offset":748},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":40,"column":1,"offset":751},"end":{"line":40,"column":31,"offset":781},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":40,"column":31,"offset":781}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"python-exceptions\"\n    }}>{`Python Exceptions`}</h1>\n    <p>{`The base example is to use a try/except block. You can raise exceptions in code that can be caught by the except block.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`try:\n    linux_interaction()\nexcept:\n    print('Linux function was not executed')\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-case\"\n    }}>{`Example case`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`class LinkedList:\n    def __init__(self, head=None):\n        self.head = head\n\n    def getFirst(self):\n        if self.head == None:\n            raise Exception(\"No items in list\")\n        else:\n            return self.head\n\ntry:\n    ll = LinkedList()\n    ll.getFirst()\nexcept Exception, error:\n    print(error)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}