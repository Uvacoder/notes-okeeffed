{"expireTime":9007200867335943000,"key":"gatsby-plugin-mdx-entire-payload-98fddbaac19eca227dae5bca1fd89abd-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Introducing ES2015","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":21,"offset":186},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":21,"offset":186},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ES6-1: ES2015 Basics","position":{"start":{"line":9,"column":4,"offset":191},"end":{"line":9,"column":24,"offset":211},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":188},"end":{"line":9,"column":24,"offset":211},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"6th Edition to ECMA Script","position":{"start":{"line":11,"column":1,"offset":213},"end":{"line":11,"column":27,"offset":239},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":213},"end":{"line":11,"column":27,"offset":239},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-2: Getting Started with ES2015","position":{"start":{"line":13,"column":5,"offset":245},"end":{"line":13,"column":39,"offset":279},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":241},"end":{"line":13,"column":39,"offset":279},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"biggest change up to JS since its inception","position":{"start":{"line":15,"column":3,"offset":283},"end":{"line":15,"column":46,"offset":326},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":283},"end":{"line":15,"column":46,"offset":326},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":281},"end":{"line":15,"column":46,"offset":326},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"JS built in 10 days","position":{"start":{"line":16,"column":3,"offset":329},"end":{"line":16,"column":22,"offset":348},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":329},"end":{"line":16,"column":22,"offset":348},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":327},"end":{"line":16,"column":22,"offset":348},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Microsoft used Jscript","position":{"start":{"line":17,"column":3,"offset":351},"end":{"line":17,"column":25,"offset":373},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":351},"end":{"line":17,"column":25,"offset":373},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":349},"end":{"line":17,"column":25,"offset":373},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"ECMAScript and JavaScript are the same (ECMA named 1997)","position":{"start":{"line":18,"column":3,"offset":376},"end":{"line":18,"column":59,"offset":432},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":376},"end":{"line":18,"column":59,"offset":432},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":374},"end":{"line":18,"column":59,"offset":432},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"ECMAScript 5 (2009)","position":{"start":{"line":19,"column":3,"offset":435},"end":{"line":19,"column":22,"offset":454},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":435},"end":{"line":19,"column":22,"offset":454},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":433},"end":{"line":19,"column":22,"offset":454},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Most browsers are using the latest","position":{"start":{"line":20,"column":3,"offset":457},"end":{"line":20,"column":37,"offset":491},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":457},"end":{"line":20,"column":37,"offset":491},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":455},"end":{"line":20,"column":37,"offset":491},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Babel can be used to compile for those using older browsers","position":{"start":{"line":21,"column":3,"offset":494},"end":{"line":21,"column":62,"offset":553},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":494},"end":{"line":21,"column":62,"offset":553},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":492},"end":{"line":21,"column":62,"offset":553},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":281},"end":{"line":21,"column":62,"offset":553},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Let and Const","position":{"start":{"line":23,"column":3,"offset":557},"end":{"line":23,"column":16,"offset":570},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":555},"end":{"line":23,"column":18,"offset":572},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":555},"end":{"line":23,"column":18,"offset":572},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so far, we need to be on top of scope","position":{"start":{"line":25,"column":3,"offset":576},"end":{"line":25,"column":40,"offset":613},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":576},"end":{"line":25,"column":40,"offset":613},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":574},"end":{"line":25,"column":40,"offset":613},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":574},"end":{"line":25,"column":40,"offset":613},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nvar hello = 'hello'\n\n// ecma2015\n\nA block can be either a loop, if statement or function\n\n'use strict'\n\n(function initLoop() {\n\tfunction doLoop(x) {\n\t\tconsole.log('loop: ', x);\n\t}\n\n\tfor (var i=0; i < 10; i++) {\n\t\tdoLoop(i + 1);\n\t}\n})","position":{"start":{"line":27,"column":1,"offset":615},"end":{"line":47,"column":4,"offset":881},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"...what can go wrong? Dirty Read","position":{"start":{"line":49,"column":1,"offset":883},"end":{"line":49,"column":33,"offset":915},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":883},"end":{"line":49,"column":33,"offset":915},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict'\n\n(function initLoop() {\n\tfunction doLoop(x) {\n\t\ti=3;\n\t\tconsole.log('loop: ', x);\n\t}\n\n\tfor (var i=0; i < 10; i++) {\n\t\tdoLoop(i + 1);\n\t}\n})\n\nWe can fix this with the let keyword\n\n'use strict'\n\n(function initLoop() {\n\tfunction doLoop(x) {\n\t\t// i=3; -> this won't be allowed\n\t\tconsole.log('loop: ', x);\n\t}\n\n\tfor (let i=0; i < 10; i++) {\n\t\tdoLoop(i + 1);\n\t}\n})","position":{"start":{"line":51,"column":1,"offset":917},"end":{"line":79,"column":4,"offset":1303},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"this will throw an error at us!","position":{"start":{"line":81,"column":3,"offset":1307},"end":{"line":81,"column":34,"offset":1338},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1305},"end":{"line":81,"column":36,"offset":1340},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1305},"end":{"line":81,"column":36,"offset":1340},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-3: Duplicate values","position":{"start":{"line":83,"column":5,"offset":1346},"end":{"line":83,"column":28,"offset":1369},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1342},"end":{"line":83,"column":28,"offset":1369},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nvar student = { name: 'Ken' };\nvar student = { name: 'James' };\n\nconsole.log(student);\n\n// student become James\n\n'use strict';\n\nconst student = { name: 'Ken' };\nvar student = { name: 'James' };\n\nconsole.log(student);\n\n// we will now get an exception (happens for let or const)\n\n- you can have different const variables of the same name for different constants\n\n**not allowed**\n\n... {\n\tconst student = 'test';\n\t... {\n\t\tstudent = 'test'\n\t}\n}\n\n**allowed**\n\n... {\n\tlet student = 'test';\n\t... {\n\t\tstudent = 'test'\n\t}\n}","position":{"start":{"line":85,"column":1,"offset":1371},"end":{"line":123,"column":4,"offset":1917},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Use let when you need to reassign, use const when you do not want the value to change. ","position":{"start":{"line":125,"column":3,"offset":1921},"end":{"line":125,"column":91,"offset":2009},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":1919},"end":{"line":125,"column":93,"offset":2011},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":1919},"end":{"line":125,"column":93,"offset":2011},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-4: Template Strings","position":{"start":{"line":127,"column":5,"offset":2017},"end":{"line":127,"column":28,"offset":2040},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2013},"end":{"line":127,"column":28,"offset":2040},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" ES5 Strings ","position":{"start":{"line":129,"column":3,"offset":2044},"end":{"line":129,"column":16,"offset":2057},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":2042},"end":{"line":129,"column":18,"offset":2059},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":2042},"end":{"line":129,"column":18,"offset":2059},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let str = 'My favourite name is';","position":{"start":{"line":131,"column":1,"offset":2061},"end":{"line":131,"column":34,"offset":2094},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":2061},"end":{"line":131,"column":34,"offset":2094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log(str, 5);","position":{"start":{"line":133,"column":1,"offset":2096},"end":{"line":133,"column":21,"offset":2116},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":2096},"end":{"line":133,"column":21,"offset":2116},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" ES2015 Strings ","position":{"start":{"line":135,"column":3,"offset":2120},"end":{"line":135,"column":19,"offset":2136},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2118},"end":{"line":135,"column":21,"offset":2138},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2118},"end":{"line":135,"column":21,"offset":2138},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// interpolation","position":{"start":{"line":137,"column":1,"offset":2140},"end":{"line":137,"column":17,"offset":2156},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":2140},"end":{"line":137,"column":17,"offset":2156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"const student = { name: 'James', followerCount: 34 }","position":{"start":{"line":139,"column":1,"offset":2158},"end":{"line":139,"column":53,"offset":2210},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2158},"end":{"line":139,"column":53,"offset":2210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"${student.name}","position":{"start":{"line":141,"column":1,"offset":2212},"end":{"line":141,"column":16,"offset":2227},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":2212},"end":{"line":141,"column":16,"offset":2227},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"<this stuff is neatly formatted>","position":{"start":{"line":143,"column":1,"offset":2229},"end":{"line":143,"column":37,"offset":2265},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":2229},"end":{"line":143,"column":37,"offset":2265},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-5: String search methods","position":{"start":{"line":145,"column":5,"offset":2271},"end":{"line":145,"column":33,"offset":2299},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":2267},"end":{"line":145,"column":33,"offset":2299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"new functions:","position":{"start":{"line":147,"column":1,"offset":2301},"end":{"line":147,"column":15,"offset":2315},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":2301},"end":{"line":147,"column":15,"offset":2315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"startsWith\nendsWith\nincludes","position":{"start":{"line":149,"column":1,"offset":2317},"end":{"line":151,"column":9,"offset":2345},"indent":[1,1]}}],"position":{"start":{"line":149,"column":1,"offset":2317},"end":{"line":151,"column":9,"offset":2345},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"console.log(strToSearch.startsWith('example-at-start'));\nconsole.log(strToSearch.endsWith('example-at-end'));\nconsole.log(strToSearch.includes('example-in-the-middle'));","position":{"start":{"line":153,"column":1,"offset":2347},"end":{"line":155,"column":60,"offset":2516},"indent":[1,1]}}],"position":{"start":{"line":153,"column":1,"offset":2347},"end":{"line":155,"column":60,"offset":2516},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" all take an optional parameter ","position":{"start":{"line":157,"column":3,"offset":2520},"end":{"line":157,"column":35,"offset":2552},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":2518},"end":{"line":157,"column":37,"offset":2554},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":2518},"end":{"line":157,"column":37,"offset":2554},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"startsWith('example', 5); //start search from 5th index\nendsWith('example', 21); //searches the first 21 characters","position":{"start":{"line":159,"column":1,"offset":2556},"end":{"line":160,"column":60,"offset":2671},"indent":[1]}}],"position":{"start":{"line":159,"column":1,"offset":2556},"end":{"line":160,"column":60,"offset":2671},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":162,"column":1,"offset":2673},"end":{"line":162,"column":4,"offset":2676},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ES6-6: The Cooler Parts of ES2015","position":{"start":{"line":164,"column":4,"offset":2681},"end":{"line":164,"column":37,"offset":2714},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":2678},"end":{"line":164,"column":37,"offset":2714},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-7: Arrow Functions","position":{"start":{"line":166,"column":5,"offset":2720},"end":{"line":166,"column":27,"offset":2742},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":2716},"end":{"line":166,"column":27,"offset":2742},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Bound to its parent scope","position":{"start":{"line":168,"column":3,"offset":2746},"end":{"line":168,"column":28,"offset":2771},"indent":[]}}],"position":{"start":{"line":168,"column":3,"offset":2746},"end":{"line":168,"column":28,"offset":2771},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":2744},"end":{"line":168,"column":28,"offset":2771},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":2744},"end":{"line":168,"column":28,"offset":2771},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"New syntax for writing functions","position":{"start":{"line":170,"column":1,"offset":2773},"end":{"line":170,"column":33,"offset":2805},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":2773},"end":{"line":170,"column":33,"offset":2805},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"referred to as Lamda functions in other languages","position":{"start":{"line":171,"column":3,"offset":2808},"end":{"line":171,"column":52,"offset":2857},"indent":[]}}],"position":{"start":{"line":171,"column":3,"offset":2808},"end":{"line":171,"column":52,"offset":2857},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":2806},"end":{"line":171,"column":52,"offset":2857},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":2806},"end":{"line":171,"column":52,"offset":2857},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" ES5 ","position":{"start":{"line":173,"column":3,"offset":2861},"end":{"line":173,"column":8,"offset":2866},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":2859},"end":{"line":173,"column":10,"offset":2868},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":2859},"end":{"line":173,"column":10,"offset":2868},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nvar Person = function (data) {\n  for (var key in data) {\n    this[key] = data[key];  \n  }\n  this.getKeys = function () {\n    return Object.keys(this);\n  }\n}\n\nvar Alena = new Person({ name: 'Alena', role: 'Teacher' });\n\nconsole.log('Alena\\'s Keys:', Alena.getKeys()); // 'this' refers to 'Alena'\n\nvar getKeys = Alena.getKeys;\n\nconsole.log(getKeys()); // 'this' refers to the node process\n\n// throws error get getKeys()","position":{"start":{"line":175,"column":1,"offset":2870},"end":{"line":196,"column":4,"offset":3320},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"ES2015","position":{"start":{"line":198,"column":3,"offset":3324},"end":{"line":198,"column":9,"offset":3330},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":3322},"end":{"line":198,"column":11,"offset":3332},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":3322},"end":{"line":198,"column":11,"offset":3332},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nvar Person = function (data) {\n  for (var key in data) {\n    this[key] = data[key];  \n  }\n  this.getKeys = () => {\n    return Object.keys(this);\n  }\n}\n\nvar Alena = new Person({ name: 'Alena', role: 'Teacher' });\n\nconsole.log('Alena\\'s Keys:', Alena.getKeys()); // 'this' refers to 'Alena'\n\nvar getKeys = Alena.getKeys;\n\nconsole.log(getKeys()); // 'this' refers to the node process\n\n// this fixes it!","position":{"start":{"line":200,"column":1,"offset":3334},"end":{"line":221,"column":4,"offset":3766},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The lamda function binds the function to the instance of the person no matter where it was called","position":{"start":{"line":223,"column":1,"offset":3768},"end":{"line":223,"column":98,"offset":3865},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":3768},"end":{"line":223,"column":98,"offset":3865},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Promises ","position":{"start":{"line":225,"column":3,"offset":3869},"end":{"line":225,"column":13,"offset":3879},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":3867},"end":{"line":225,"column":15,"offset":3881},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":3867},"end":{"line":225,"column":15,"offset":3881},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nvar Teacher = function (data) {\n  this.name = data.name;\n  this.greet = function (studentCnt) {\n    let promise = new Promise(function (resolve, reject) {\n      if (studentCnt === 0) {\n        reject('Zero students in class');\n      } else {\n        resolve(`Hello to ${studentCnt} of my favorite students!`);\n      }\n    });\n    return promise;\n  }\n}\n\nvar Classroom = function (data) {\n  this.subject = data.name;\n  this.teacher = data.teacher;\n  this.students = [];\n  this.addStudent = function (data) {\n    this.students.push(data);\n    this.greet();\n  }\n  this.greet = () => {\n    this.teacher.greet(this.students.length).then(\n      (function (classroom) {\n        return function (greeting) {\n          console.log(`${classroom.teacher.name} says: `, greeting);\n        }\n      })(this),\n      function (err) {\n        console.log(err);\n      })\n  }\n}\n\nvar myTeacher = new Teacher({ name: 'James' });\nvar myClassroom = new Classroom({ name: 'The Future of JavaScript', teacher: myTeacher });\n\nmyClassroom.addStudent({ name: 'Dave' });","position":{"start":{"line":227,"column":1,"offset":3883},"end":{"line":269,"column":4,"offset":4956},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"ES 2015 Promises","position":{"start":{"line":271,"column":3,"offset":4960},"end":{"line":271,"column":19,"offset":4976},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":4958},"end":{"line":271,"column":21,"offset":4978},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":4958},"end":{"line":271,"column":21,"offset":4978},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nvar Teacher = function (data) {\n  this.name = data.name;\n  this.greet = function (studentCnt) {\n    let promise = new Promise(function (resolve, reject) {\n      if (studentCnt === 0) {\n        reject('Zero students in class');\n      } else {\n        resolve(`Hello to ${studentCnt} of my favorite students!`);\n      }\n    });\n    return promise;\n  }\n}\n\nvar Classroom = function (data) {\n  this.subject = data.name;\n  this.teacher = data.teacher;\n  this.students = [];\n  this.addStudent = function (data) {\n    this.students.push(data);\n    this.greet();\n  }\n  this.greet = () => {\n    this.teacher.greet(this.students.length).then(\n      greeting => console.log(`${this.classroom.teacher.name} says: `, greeting);\n\t  error => console.log(err);\n  }\n}\n\nvar myTeacher = new Teacher({ name: 'James' });\nvar myClassroom = new Classroom({ name: 'The Future of JavaScript', teacher: myTeacher });\n\nmyClassroom.addStudent({ name: 'Dave' });","position":{"start":{"line":273,"column":1,"offset":4980},"end":{"line":309,"column":4,"offset":5945},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-8: Default Parameters","position":{"start":{"line":311,"column":6,"offset":5952},"end":{"line":311,"column":31,"offset":5977},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":5947},"end":{"line":311,"column":31,"offset":5977},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Set default parameters for a function -> similar to other languages","position":{"start":{"line":313,"column":1,"offset":5979},"end":{"line":313,"column":68,"offset":6046},"indent":[]}}],"position":{"start":{"line":313,"column":1,"offset":5979},"end":{"line":313,"column":68,"offset":6046},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"ES5","position":{"start":{"line":315,"column":3,"offset":6050},"end":{"line":315,"column":6,"offset":6053},"indent":[]}}],"position":{"start":{"line":315,"column":1,"offset":6048},"end":{"line":315,"column":8,"offset":6055},"indent":[]}}],"position":{"start":{"line":315,"column":1,"offset":6048},"end":{"line":315,"column":8,"offset":6055},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict'\n\nfunction greet(name, timeOfDay) {\n\tname = name || 'Guil';\n\ttimeofDay = timeOfDay || 'Day';\n\t...\n}\n\ngreet();\n\n**ES 2015**\n\n'use strict'\n\nfunction greet(name = 'Guil', timeOfDay = 'Day') {\n\t...\n}\n\ngreet(undefined, 'Afternoon');\t// defaults are optional, need to undefine","position":{"start":{"line":317,"column":1,"offset":6057},"end":{"line":337,"column":4,"offset":6357},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-9: Rest Parameters and Spread Operator","position":{"start":{"line":339,"column":5,"offset":6363},"end":{"line":339,"column":47,"offset":6405},"indent":[]}}],"position":{"start":{"line":339,"column":1,"offset":6359},"end":{"line":339,"column":47,"offset":6405},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"How to use the rest parameters","position":{"start":{"line":341,"column":3,"offset":6409},"end":{"line":341,"column":33,"offset":6439},"indent":[]}}],"position":{"start":{"line":341,"column":1,"offset":6407},"end":{"line":341,"column":35,"offset":6441},"indent":[]}}],"position":{"start":{"line":341,"column":1,"offset":6407},"end":{"line":341,"column":35,"offset":6441},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"rest must be the last parameter","position":{"start":{"line":343,"column":3,"offset":6445},"end":{"line":343,"column":34,"offset":6476},"indent":[]}}],"position":{"start":{"line":343,"column":3,"offset":6445},"end":{"line":343,"column":34,"offset":6476},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":6443},"end":{"line":343,"column":34,"offset":6476},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":6443},"end":{"line":343,"column":34,"offset":6476},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function myFunction(name, ...params) {\n\tconsole.log(name, params);\n}\n\nmyFunction('Andrew', 1, 2, 3);\n\n// output Andrew [1, 2, 3]","position":{"start":{"line":345,"column":1,"offset":6478},"end":{"line":353,"column":4,"offset":6624},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Spread parameters","position":{"start":{"line":355,"column":3,"offset":6628},"end":{"line":355,"column":20,"offset":6645},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":6626},"end":{"line":355,"column":22,"offset":6647},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":6626},"end":{"line":355,"column":22,"offset":6647},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\nconst originalFlavors = ['Chocolate', 'Vanilla'];\n\nconst newFlavors = ['Strawberry', 'Mint Chocolate Chip'];\n\nconst inventory = ['Rocky Road', ...originalFlavors, 'Neopolitan', ...newFlavors];\n\nconsole.log(inventory);\n\n// spitting an array and them using them as arguments using the spread operator\n\nfunction myFunction(name, iceCreamFlavor) {\n\tconsole.log('${name} really likes ${iceCreamFlavor} ice cream.')\n}\n\nlet args = ['Gabe', 'Vanilla'];\n\nmyFunction(...args);\t// sends as separate arguments","position":{"start":{"line":357,"column":1,"offset":6649},"end":{"line":376,"column":4,"offset":7165},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-10: Destructuring","position":{"start":{"line":378,"column":5,"offset":7171},"end":{"line":378,"column":26,"offset":7192},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":7167},"end":{"line":378,"column":26,"offset":7192},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Relatively simple concept","position":{"start":{"line":380,"column":1,"offset":7194},"end":{"line":380,"column":26,"offset":7219},"indent":[]}}],"position":{"start":{"line":380,"column":1,"offset":7194},"end":{"line":380,"column":26,"offset":7219},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's you extract values from arrays or objects","position":{"start":{"line":382,"column":1,"offset":7221},"end":{"line":382,"column":48,"offset":7268},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":7221},"end":{"line":382,"column":48,"offset":7268},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\nlet toybox = { item1: 'car', item2: 'ball', item3: 'frisbee' };\n\nlet { item3: disc} = toybox;\n\nconsole.log(disc);\n\n// logs item3 value\n\nlet widgets = ['wid1','wid2','wid3','wid4','wid5'];\n\nlet [a,b,c, ...d] = widgets;","position":{"start":{"line":384,"column":1,"offset":7270},"end":{"line":397,"column":4,"offset":7506},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":399,"column":1,"offset":7508},"end":{"line":399,"column":4,"offset":7511},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ES6-11: Objects and New Collection Types","position":{"start":{"line":401,"column":4,"offset":7516},"end":{"line":401,"column":44,"offset":7556},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":7513},"end":{"line":401,"column":44,"offset":7556},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-12: Object Property Shorthand","position":{"start":{"line":403,"column":5,"offset":7562},"end":{"line":403,"column":38,"offset":7595},"indent":[]}}],"position":{"start":{"line":403,"column":1,"offset":7558},"end":{"line":403,"column":38,"offset":7595},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"\nfunction submit(name, comments, rating = 5) {\n\tlet data = { name, comments, rating };\n\n\tfor (let key in data) {\n\t\tconsole.log(key + ':', data[key]);\n\t}\n\n\t// ... do ajax request\n}\n\nsubmit('English', 'Great course!');\n\n// without a default name, the key because the parameter for the object\n// works with all forms","position":{"start":{"line":405,"column":1,"offset":7597},"end":{"line":421,"column":4,"offset":7928},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-13: for...of","position":{"start":{"line":423,"column":5,"offset":7934},"end":{"line":423,"column":21,"offset":7950},"indent":[]}}],"position":{"start":{"line":423,"column":1,"offset":7930},"end":{"line":423,"column":21,"offset":7950},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For iterating over a data set","position":{"start":{"line":425,"column":1,"offset":7952},"end":{"line":425,"column":30,"offset":7981},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":7952},"end":{"line":425,"column":30,"offset":7981},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// previous for (let ... )\n// ES5 gave us for each\n\nlet myNumbers = [1,2,3,4,5,6];\n\nfor (let number of myNumbers) {\n\t...\n\tif (example) {\n\t\tbreak; // you can break!\n\t}\n}\n\n// still use for...in for iterating over regular objects","position":{"start":{"line":427,"column":1,"offset":7983},"end":{"line":441,"column":4,"offset":8227},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-14: Set","position":{"start":{"line":443,"column":5,"offset":8233},"end":{"line":443,"column":16,"offset":8244},"indent":[]}}],"position":{"start":{"line":443,"column":1,"offset":8229},"end":{"line":443,"column":16,"offset":8244},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let classroom = new Set(); // unique collection of values\n\nlet stevenJ = { name: 'Steven', age: 22 },\n\tsarah = { name: 'Sarah', age: 23 },\n\tstevenS = { name: 'Steve', age: 22 }\n\nclassroom.add(stevenJ);\nclassroom.add(sarah);\nclassroom.add(stevenS);\n\nif (classroom.has(stevenJ)) console.log('stevenJ is in the classroom');\t//true\nif (classroom.has(sarah)) console.log('sarah is in the classroom');\t//true\nif (classroom.has(stevenS)) console.log('sarah is in the classroom'); //true\n\nBUT IF stevenS = stevenJ\n\nlet stevenJ = { name: 'Steven', age: 22 },\n\tsarah = { name: 'Sarah', age: 23 },\n\tstevenS = stevenJ;\n\nclassroom.add(stevenJ);\nclassroom.add(sarah);\nclassroom.add(stevenS);\n\nif (classroom.has(stevenJ)) console.log('stevenJ is in the classroom');\t//true\nif (classroom.has(sarah)) console.log('sarah is in the classroom');\t//true\nif (classroom.has(stevenS)) console.log('sarah is in the classroom'); //true\n\nconsole.log(classroom.size()); //3\n\nclassroom.delete(stevenJ)\n\nconsole.log(classroom.size()); //2\n\n// Create array of students from the classroom set\n\nlet arrayOfStrudents = Array.from(classroom);\nconsole.log(arrayOfStudents);\n\n// Create set from set\n\nlet alumni = new Set(arrayOfStudents);","position":{"start":{"line":445,"column":1,"offset":8246},"end":{"line":488,"column":4,"offset":9465},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-15: Map","position":{"start":{"line":490,"column":5,"offset":9471},"end":{"line":490,"column":16,"offset":9482},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":9467},"end":{"line":490,"column":16,"offset":9482},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict'\n\nlet classroom = new Map();\n\nlet stevenJ = { name: 'Steven', age: 22 },\n    sarah = { name: 'Sarah', age: 23 },\n    stevenS = { name: 'Steven', age: 22 };\n\nclassroom.set('stevenJ', stevenJ);\nclassroom.set('sarah',sarah);\nclassroom.set('stevenS', stevenS);\n\nconsole.log(classroom.size);\n\nif (classroom.has('stevenJ')) console.log('stevenJ is in the classroom');\nif (classroom.has('sarah')) console.log('sarah is in the classroom');\nif (classroom.has('stevenS')) console.log('stevenS is in the classroom');\n\nconsole.log('sarah:', classroom.get('sarah'));\n\nclassroom.delete('sarah');\nclassroom.clear();        //deletes all\n\nfor (let student of classroom) {\n  console.log('${student[0]} : ${student[1].name} is ${student[1].age} years old');\n}","position":{"start":{"line":492,"column":1,"offset":9484},"end":{"line":519,"column":4,"offset":10255},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ES6-16: Classes","position":{"start":{"line":521,"column":4,"offset":10260},"end":{"line":521,"column":19,"offset":10275},"indent":[]}}],"position":{"start":{"line":521,"column":1,"offset":10257},"end":{"line":521,"column":19,"offset":10275},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-17: Structure of a Class","position":{"start":{"line":523,"column":5,"offset":10281},"end":{"line":523,"column":33,"offset":10309},"indent":[]}}],"position":{"start":{"line":523,"column":1,"offset":10277},"end":{"line":523,"column":33,"offset":10309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A class is a blueprint for those that share similar properties or methods","position":{"start":{"line":525,"column":1,"offset":10311},"end":{"line":525,"column":74,"offset":10384},"indent":[]}}],"position":{"start":{"line":525,"column":1,"offset":10311},"end":{"line":525,"column":74,"offset":10384},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// old way\n\nlet Student = function(data) {\n  this.name = data.name;\n  this.age = data.age\n}\n\n// new way\n\nclass Student {\n  constructor({ name, age, interestLevel = 5 } = {}) {\n    this.name = name;\n    this.age = age;\n    this.interestLevel = interestLevel;\n    this.grades = new Map();\n  }\n}\n\nlet sarah = new Student('Sarah', 11);\n\nconsole.log(Array.from(sarah.grades));","position":{"start":{"line":527,"column":1,"offset":10386},"end":{"line":549,"column":4,"offset":10775},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ES6-18: Subclasses","position":{"start":{"line":551,"column":5,"offset":10781},"end":{"line":551,"column":23,"offset":10799},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":10777},"end":{"line":551,"column":23,"offset":10799},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"classes can inherit from other classes","position":{"start":{"line":553,"column":3,"offset":10803},"end":{"line":553,"column":41,"offset":10841},"indent":[]}}],"position":{"start":{"line":553,"column":3,"offset":10803},"end":{"line":553,"column":41,"offset":10841},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":10801},"end":{"line":553,"column":41,"offset":10841},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"var hoisting","position":{"start":{"line":554,"column":3,"offset":10844},"end":{"line":554,"column":15,"offset":10856},"indent":[]}}],"position":{"start":{"line":554,"column":3,"offset":10844},"end":{"line":554,"column":15,"offset":10856},"indent":[]}}],"position":{"start":{"line":554,"column":1,"offset":10842},"end":{"line":554,"column":15,"offset":10856},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"destructuring is one way to set default values for class properties","position":{"start":{"line":555,"column":3,"offset":10859},"end":{"line":555,"column":70,"offset":10926},"indent":[]}}],"position":{"start":{"line":555,"column":3,"offset":10859},"end":{"line":555,"column":70,"offset":10926},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":10857},"end":{"line":555,"column":70,"offset":10926},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":10801},"end":{"line":555,"column":70,"offset":10926},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"bla = 2\nvar bla;\n// ...\n\n// is implicitly understood as:\n\nvar bla;\nbla = 2;","position":{"start":{"line":557,"column":1,"offset":10928},"end":{"line":566,"column":4,"offset":11021},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"class Person {\n  dance() {\n    const dances = [\n      'waltz',\n      'tango',\n      'mambo'\n    ];\n\n    console.log(${this.name} is doing the ${dances[Math.floor(Math.random()*dances.length)]}!);\n  }\n  constructor({ name, age, eyeColor = 'brown' } = {}) {\n    this.name = name;\n    this.age = age;\n    this.eyeColor = eyeColor;\n  }\n}\n\nclass Student extends Person {\n\n  dance(traditional) {\n    if (traditional) {\n      super.dance();\n      return;\n    }\n\n    const dances = [\n      'lyrical',\n      'tap',\n      'jazz'\n    ];\n\n    console.log(${this.name} is doing the ${dances[Math.floor(Math.random()*dances.length)]}!);\n  }\n\n  constructor({ name, age, interestLevel = 5 } = {} ) {\n    super({ name, age });\n    this.name = name;\n    this.age = age;\n    this.interestLevel = interestLevel;\n    this.grades = new Map;\n  }\n}\n\nlet stevenJ = new Student({name: 'Steven', age: 22, interestLevel: 3 });\nstevenJ.dance();","position":{"start":{"line":568,"column":1,"offset":11023},"end":{"line":614,"column":4,"offset":11956},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ES6-19: Static Methods","position":{"start":{"line":616,"column":4,"offset":11961},"end":{"line":616,"column":26,"offset":11983},"indent":[]}}],"position":{"start":{"line":616,"column":1,"offset":11958},"end":{"line":616,"column":26,"offset":11983},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"class Bird {\n  static changeColor(color) {\n    this.color = color;\n  }\n  constructor({ color = 'red' } = {}) {\n    this.color = color;\n  }\n}\n\nlet redBird = new Bird;\nconsole.log(redBird.color);\nredBird.changeColor('blue');\nconsole.log(redBird.color); // would call an error!\n\n// what we could do\n\nBird.changeColor.call(redBird, 'blue');\nconsole.log(redBird.color);\n\n/* the other option is to change the changeColor function to accept (bird, color) and then change this.color to bird.color\n*/","position":{"start":{"line":618,"column":1,"offset":11985},"end":{"line":640,"column":4,"offset":12494},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ES6-20: Getter and Setter methods in a class","position":{"start":{"line":642,"column":4,"offset":12499},"end":{"line":642,"column":48,"offset":12543},"indent":[]}}],"position":{"start":{"line":642,"column":1,"offset":12496},"end":{"line":642,"column":48,"offset":12543},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"class Bird {\n  changeColor(color) {\n    this.color = color;\n  }\n\n  set color(color) {\n    this.color = color;\n  }\n\n  get color() {\n    return this.color;\n  }\n\n  constructor({ color = 'red' } = {}) {\n    this.color = color;\n  }\n}","position":{"start":{"line":644,"column":1,"offset":12545},"end":{"line":662,"column":4,"offset":12791},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":665,"column":1,"offset":12794},"end":{"line":665,"column":31,"offset":12824},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":665,"column":31,"offset":12824}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"introducing-es2015\"\n    }}>{`Introducing ES2015`}</h1>\n    <h2 {...{\n      \"id\": \"es6-1-es2015-basics\"\n    }}>{`ES6-1: ES2015 Basics`}</h2>\n    <p>{`6th Edition to ECMA Script`}</p>\n    <h3 {...{\n      \"id\": \"es6-2-getting-started-with-es2015\"\n    }}>{`ES6-2: Getting Started with ES2015`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`biggest change up to JS since its inception`}</li>\n      <li parentName=\"ul\">{`JS built in 10 days`}</li>\n      <li parentName=\"ul\">{`Microsoft used Jscript`}</li>\n      <li parentName=\"ul\">{`ECMAScript and JavaScript are the same (ECMA named 1997)`}</li>\n      <li parentName=\"ul\">{`ECMAScript 5 (2009)`}</li>\n      <li parentName=\"ul\">{`Most browsers are using the latest`}</li>\n      <li parentName=\"ul\">{`Babel can be used to compile for those using older browsers`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Let and Const`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`so far, we need to be on top of scope`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nvar hello = 'hello'\n\n// ecma2015\n\nA block can be either a loop, if statement or function\n\n'use strict'\n\n(function initLoop() {\n    function doLoop(x) {\n        console.log('loop: ', x);\n    }\n\n    for (var i=0; i < 10; i++) {\n        doLoop(i + 1);\n    }\n})\n`}</code></pre>\n    <p>{`...what can go wrong? Dirty Read`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict'\n\n(function initLoop() {\n    function doLoop(x) {\n        i=3;\n        console.log('loop: ', x);\n    }\n\n    for (var i=0; i < 10; i++) {\n        doLoop(i + 1);\n    }\n})\n\nWe can fix this with the let keyword\n\n'use strict'\n\n(function initLoop() {\n    function doLoop(x) {\n        // i=3; -> this won't be allowed\n        console.log('loop: ', x);\n    }\n\n    for (let i=0; i < 10; i++) {\n        doLoop(i + 1);\n    }\n})\n`}</code></pre>\n    <p><strong parentName=\"p\">{`this will throw an error at us!`}</strong></p>\n    <h3 {...{\n      \"id\": \"es6-3-duplicate-values\"\n    }}>{`ES6-3: Duplicate values`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nvar student = { name: 'Ken' };\nvar student = { name: 'James' };\n\nconsole.log(student);\n\n// student become James\n\n'use strict';\n\nconst student = { name: 'Ken' };\nvar student = { name: 'James' };\n\nconsole.log(student);\n\n// we will now get an exception (happens for let or const)\n\n- you can have different const variables of the same name for different constants\n\n**not allowed**\n\n... {\n    const student = 'test';\n    ... {\n        student = 'test'\n    }\n}\n\n**allowed**\n\n... {\n    let student = 'test';\n    ... {\n        student = 'test'\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{` Use let when you need to reassign, use const when you do not want the value to change. `}</strong></p>\n    <h3 {...{\n      \"id\": \"es6-4-template-strings\"\n    }}>{`ES6-4: Template Strings`}</h3>\n    <p><strong parentName=\"p\">{` ES5 Strings `}</strong></p>\n    <p>{`let str = 'My favourite name is';`}</p>\n    <p>{`console.log(str, 5);`}</p>\n    <p><strong parentName=\"p\">{` ES2015 Strings `}</strong></p>\n    <p>{`// interpolation`}</p>\n    <p>{`const student = { name: 'James', followerCount: 34 }`}</p>\n    <p>{`\\${student.name}`}</p>\n    <p><inlineCode parentName=\"p\">{`<this stuff is neatly formatted>`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"es6-5-string-search-methods\"\n    }}>{`ES6-5: String search methods`}</h3>\n    <p>{`new functions:`}</p>\n    <p>{`startsWith\nendsWith\nincludes`}</p>\n    <p>{`console.log(strToSearch.startsWith('example-at-start'));\nconsole.log(strToSearch.endsWith('example-at-end'));\nconsole.log(strToSearch.includes('example-in-the-middle'));`}</p>\n    <p><strong parentName=\"p\">{` all take an optional parameter `}</strong></p>\n    <p>{`startsWith('example', 5); //start search from 5th index\nendsWith('example', 21); //searches the first 21 characters`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"es6-6-the-cooler-parts-of-es2015\"\n    }}>{`ES6-6: The Cooler Parts of ES2015`}</h2>\n    <h3 {...{\n      \"id\": \"es6-7-arrow-functions\"\n    }}>{`ES6-7: Arrow Functions`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Bound to its parent scope`}</li>\n    </ul>\n    <p>{`New syntax for writing functions`}</p>\n    <ul>\n      <li parentName=\"ul\">{`referred to as Lamda functions in other languages`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{` ES5 `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nvar Person = function (data) {\n  for (var key in data) {\n    this[key] = data[key];  \n  }\n  this.getKeys = function () {\n    return Object.keys(this);\n  }\n}\n\nvar Alena = new Person({ name: 'Alena', role: 'Teacher' });\n\nconsole.log('Alena\\\\'s Keys:', Alena.getKeys()); // 'this' refers to 'Alena'\n\nvar getKeys = Alena.getKeys;\n\nconsole.log(getKeys()); // 'this' refers to the node process\n\n// throws error get getKeys()\n`}</code></pre>\n    <p><strong parentName=\"p\">{`ES2015`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nvar Person = function (data) {\n  for (var key in data) {\n    this[key] = data[key];  \n  }\n  this.getKeys = () => {\n    return Object.keys(this);\n  }\n}\n\nvar Alena = new Person({ name: 'Alena', role: 'Teacher' });\n\nconsole.log('Alena\\\\'s Keys:', Alena.getKeys()); // 'this' refers to 'Alena'\n\nvar getKeys = Alena.getKeys;\n\nconsole.log(getKeys()); // 'this' refers to the node process\n\n// this fixes it!\n`}</code></pre>\n    <p>{`The lamda function binds the function to the instance of the person no matter where it was called`}</p>\n    <p><strong parentName=\"p\">{` Promises `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nvar Teacher = function (data) {\n  this.name = data.name;\n  this.greet = function (studentCnt) {\n    let promise = new Promise(function (resolve, reject) {\n      if (studentCnt === 0) {\n        reject('Zero students in class');\n      } else {\n        resolve(\\`Hello to \\${studentCnt} of my favorite students!\\`);\n      }\n    });\n    return promise;\n  }\n}\n\nvar Classroom = function (data) {\n  this.subject = data.name;\n  this.teacher = data.teacher;\n  this.students = [];\n  this.addStudent = function (data) {\n    this.students.push(data);\n    this.greet();\n  }\n  this.greet = () => {\n    this.teacher.greet(this.students.length).then(\n      (function (classroom) {\n        return function (greeting) {\n          console.log(\\`\\${classroom.teacher.name} says: \\`, greeting);\n        }\n      })(this),\n      function (err) {\n        console.log(err);\n      })\n  }\n}\n\nvar myTeacher = new Teacher({ name: 'James' });\nvar myClassroom = new Classroom({ name: 'The Future of JavaScript', teacher: myTeacher });\n\nmyClassroom.addStudent({ name: 'Dave' });\n`}</code></pre>\n    <p><strong parentName=\"p\">{`ES 2015 Promises`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nvar Teacher = function (data) {\n  this.name = data.name;\n  this.greet = function (studentCnt) {\n    let promise = new Promise(function (resolve, reject) {\n      if (studentCnt === 0) {\n        reject('Zero students in class');\n      } else {\n        resolve(\\`Hello to \\${studentCnt} of my favorite students!\\`);\n      }\n    });\n    return promise;\n  }\n}\n\nvar Classroom = function (data) {\n  this.subject = data.name;\n  this.teacher = data.teacher;\n  this.students = [];\n  this.addStudent = function (data) {\n    this.students.push(data);\n    this.greet();\n  }\n  this.greet = () => {\n    this.teacher.greet(this.students.length).then(\n      greeting => console.log(\\`\\${this.classroom.teacher.name} says: \\`, greeting);\n      error => console.log(err);\n  }\n}\n\nvar myTeacher = new Teacher({ name: 'James' });\nvar myClassroom = new Classroom({ name: 'The Future of JavaScript', teacher: myTeacher });\n\nmyClassroom.addStudent({ name: 'Dave' });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"es6-8-default-parameters\"\n    }}>{`ES6-8: Default Parameters`}</h3>\n    <p>{`Set default parameters for a function -> similar to other languages`}</p>\n    <p><strong parentName=\"p\">{`ES5`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict'\n\nfunction greet(name, timeOfDay) {\n    name = name || 'Guil';\n    timeofDay = timeOfDay || 'Day';\n    ...\n}\n\ngreet();\n\n**ES 2015**\n\n'use strict'\n\nfunction greet(name = 'Guil', timeOfDay = 'Day') {\n    ...\n}\n\ngreet(undefined, 'Afternoon');  // defaults are optional, need to undefine\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"es6-9-rest-parameters-and-spread-operator\"\n    }}>{`ES6-9: Rest Parameters and Spread Operator`}</h3>\n    <p><strong parentName=\"p\">{`How to use the rest parameters`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`rest must be the last parameter`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function myFunction(name, ...params) {\n    console.log(name, params);\n}\n\nmyFunction('Andrew', 1, 2, 3);\n\n// output Andrew [1, 2, 3]\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Spread parameters`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nconst originalFlavors = ['Chocolate', 'Vanilla'];\n\nconst newFlavors = ['Strawberry', 'Mint Chocolate Chip'];\n\nconst inventory = ['Rocky Road', ...originalFlavors, 'Neopolitan', ...newFlavors];\n\nconsole.log(inventory);\n\n// spitting an array and them using them as arguments using the spread operator\n\nfunction myFunction(name, iceCreamFlavor) {\n    console.log('\\${name} really likes \\${iceCreamFlavor} ice cream.')\n}\n\nlet args = ['Gabe', 'Vanilla'];\n\nmyFunction(...args);    // sends as separate arguments\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"es6-10-destructuring\"\n    }}>{`ES6-10: Destructuring`}</h3>\n    <p>{`Relatively simple concept`}</p>\n    <p>{`Let's you extract values from arrays or objects`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nlet toybox = { item1: 'car', item2: 'ball', item3: 'frisbee' };\n\nlet { item3: disc} = toybox;\n\nconsole.log(disc);\n\n// logs item3 value\n\nlet widgets = ['wid1','wid2','wid3','wid4','wid5'];\n\nlet [a,b,c, ...d] = widgets;\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"es6-11-objects-and-new-collection-types\"\n    }}>{`ES6-11: Objects and New Collection Types`}</h2>\n    <h3 {...{\n      \"id\": \"es6-12-object-property-shorthand\"\n    }}>{`ES6-12: Object Property Shorthand`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nfunction submit(name, comments, rating = 5) {\n    let data = { name, comments, rating };\n\n    for (let key in data) {\n        console.log(key + ':', data[key]);\n    }\n\n    // ... do ajax request\n}\n\nsubmit('English', 'Great course!');\n\n// without a default name, the key because the parameter for the object\n// works with all forms\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"es6-13-forof\"\n    }}>{`ES6-13: for...of`}</h3>\n    <p>{`For iterating over a data set`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// previous for (let ... )\n// ES5 gave us for each\n\nlet myNumbers = [1,2,3,4,5,6];\n\nfor (let number of myNumbers) {\n    ...\n    if (example) {\n        break; // you can break!\n    }\n}\n\n// still use for...in for iterating over regular objects\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"es6-14-set\"\n    }}>{`ES6-14: Set`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`let classroom = new Set(); // unique collection of values\n\nlet stevenJ = { name: 'Steven', age: 22 },\n    sarah = { name: 'Sarah', age: 23 },\n    stevenS = { name: 'Steve', age: 22 }\n\nclassroom.add(stevenJ);\nclassroom.add(sarah);\nclassroom.add(stevenS);\n\nif (classroom.has(stevenJ)) console.log('stevenJ is in the classroom'); //true\nif (classroom.has(sarah)) console.log('sarah is in the classroom'); //true\nif (classroom.has(stevenS)) console.log('sarah is in the classroom'); //true\n\nBUT IF stevenS = stevenJ\n\nlet stevenJ = { name: 'Steven', age: 22 },\n    sarah = { name: 'Sarah', age: 23 },\n    stevenS = stevenJ;\n\nclassroom.add(stevenJ);\nclassroom.add(sarah);\nclassroom.add(stevenS);\n\nif (classroom.has(stevenJ)) console.log('stevenJ is in the classroom'); //true\nif (classroom.has(sarah)) console.log('sarah is in the classroom'); //true\nif (classroom.has(stevenS)) console.log('sarah is in the classroom'); //true\n\nconsole.log(classroom.size()); //3\n\nclassroom.delete(stevenJ)\n\nconsole.log(classroom.size()); //2\n\n// Create array of students from the classroom set\n\nlet arrayOfStrudents = Array.from(classroom);\nconsole.log(arrayOfStudents);\n\n// Create set from set\n\nlet alumni = new Set(arrayOfStudents);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"es6-15-map\"\n    }}>{`ES6-15: Map`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict'\n\nlet classroom = new Map();\n\nlet stevenJ = { name: 'Steven', age: 22 },\n    sarah = { name: 'Sarah', age: 23 },\n    stevenS = { name: 'Steven', age: 22 };\n\nclassroom.set('stevenJ', stevenJ);\nclassroom.set('sarah',sarah);\nclassroom.set('stevenS', stevenS);\n\nconsole.log(classroom.size);\n\nif (classroom.has('stevenJ')) console.log('stevenJ is in the classroom');\nif (classroom.has('sarah')) console.log('sarah is in the classroom');\nif (classroom.has('stevenS')) console.log('stevenS is in the classroom');\n\nconsole.log('sarah:', classroom.get('sarah'));\n\nclassroom.delete('sarah');\nclassroom.clear();        //deletes all\n\nfor (let student of classroom) {\n  console.log('\\${student[0]} : \\${student[1].name} is \\${student[1].age} years old');\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"es6-16-classes\"\n    }}>{`ES6-16: Classes`}</h2>\n    <h3 {...{\n      \"id\": \"es6-17-structure-of-a-class\"\n    }}>{`ES6-17: Structure of a Class`}</h3>\n    <p>{`A class is a blueprint for those that share similar properties or methods`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// old way\n\nlet Student = function(data) {\n  this.name = data.name;\n  this.age = data.age\n}\n\n// new way\n\nclass Student {\n  constructor({ name, age, interestLevel = 5 } = {}) {\n    this.name = name;\n    this.age = age;\n    this.interestLevel = interestLevel;\n    this.grades = new Map();\n  }\n}\n\nlet sarah = new Student('Sarah', 11);\n\nconsole.log(Array.from(sarah.grades));\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"es6-18-subclasses\"\n    }}>{`ES6-18: Subclasses`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`classes can inherit from other classes`}</li>\n      <li parentName=\"ul\">{`var hoisting`}</li>\n      <li parentName=\"ul\">{`destructuring is one way to set default values for class properties`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`bla = 2\nvar bla;\n// ...\n\n// is implicitly understood as:\n\nvar bla;\nbla = 2;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class Person {\n  dance() {\n    const dances = [\n      'waltz',\n      'tango',\n      'mambo'\n    ];\n\n    console.log(\\${this.name} is doing the \\${dances[Math.floor(Math.random()*dances.length)]}!);\n  }\n  constructor({ name, age, eyeColor = 'brown' } = {}) {\n    this.name = name;\n    this.age = age;\n    this.eyeColor = eyeColor;\n  }\n}\n\nclass Student extends Person {\n\n  dance(traditional) {\n    if (traditional) {\n      super.dance();\n      return;\n    }\n\n    const dances = [\n      'lyrical',\n      'tap',\n      'jazz'\n    ];\n\n    console.log(\\${this.name} is doing the \\${dances[Math.floor(Math.random()*dances.length)]}!);\n  }\n\n  constructor({ name, age, interestLevel = 5 } = {} ) {\n    super({ name, age });\n    this.name = name;\n    this.age = age;\n    this.interestLevel = interestLevel;\n    this.grades = new Map;\n  }\n}\n\nlet stevenJ = new Student({name: 'Steven', age: 22, interestLevel: 3 });\nstevenJ.dance();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"es6-19-static-methods\"\n    }}>{`ES6-19: Static Methods`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class Bird {\n  static changeColor(color) {\n    this.color = color;\n  }\n  constructor({ color = 'red' } = {}) {\n    this.color = color;\n  }\n}\n\nlet redBird = new Bird;\nconsole.log(redBird.color);\nredBird.changeColor('blue');\nconsole.log(redBird.color); // would call an error!\n\n// what we could do\n\nBird.changeColor.call(redBird, 'blue');\nconsole.log(redBird.color);\n\n/* the other option is to change the changeColor function to accept (bird, color) and then change this.color to bird.color\n*/\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"es6-20-getter-and-setter-methods-in-a-class\"\n    }}>{`ES6-20: Getter and Setter methods in a class`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class Bird {\n  changeColor(color) {\n    this.color = color;\n  }\n\n  set color(color) {\n    this.color = color;\n  }\n\n  get color() {\n    return this.color;\n  }\n\n  constructor({ color = 'red' } = {}) {\n    this.color = color;\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}