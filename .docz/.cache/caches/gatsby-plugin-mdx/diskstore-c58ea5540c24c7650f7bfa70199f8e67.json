{"expireTime":9007200852878392000,"key":"gatsby-plugin-mdx-entire-payload-999c71b8822e65d470150ab455cb4b4a-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Running Container Clusters with Kuberentes","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":45,"offset":210},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":45,"offset":210},"indent":[]}},{"type":"jsx","value":"<!-- TOC -->","position":{"start":{"line":9,"column":1,"offset":212},"end":{"line":9,"column":13,"offset":224},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#running-container-clusters-with-kuberentes","children":[{"type":"text","value":"Running Container Clusters with Kuberentes","position":{"start":{"line":11,"column":6,"offset":231},"end":{"line":11,"column":48,"offset":273},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":230},"end":{"line":11,"column":94,"offset":319},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":230},"end":{"line":11,"column":94,"offset":319},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#intro-to-kubernetes","children":[{"type":"text","value":"Intro to Kubernetes","position":{"start":{"line":12,"column":10,"offset":329},"end":{"line":12,"column":29,"offset":348},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":328},"end":{"line":12,"column":52,"offset":371},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":328},"end":{"line":12,"column":52,"offset":371},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----kubernetes-architecture","children":[{"type":"text","value":"---- Kubernetes Architecture","position":{"start":{"line":13,"column":14,"offset":385},"end":{"line":13,"column":42,"offset":413},"indent":[]}}],"position":{"start":{"line":13,"column":13,"offset":384},"end":{"line":13,"column":74,"offset":445},"indent":[]}}],"position":{"start":{"line":13,"column":13,"offset":384},"end":{"line":13,"column":74,"offset":445},"indent":[]}}],"position":{"start":{"line":13,"column":9,"offset":380},"end":{"line":13,"column":74,"offset":445},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----introduction-to-yaml","children":[{"type":"text","value":"---- Introduction to YAML","position":{"start":{"line":14,"column":14,"offset":459},"end":{"line":14,"column":39,"offset":484},"indent":[]}}],"position":{"start":{"line":14,"column":13,"offset":458},"end":{"line":14,"column":68,"offset":513},"indent":[]}}],"position":{"start":{"line":14,"column":13,"offset":458},"end":{"line":14,"column":68,"offset":513},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":454},"end":{"line":14,"column":68,"offset":513},"indent":[]}}],"position":{"start":{"line":13,"column":9,"offset":380},"end":{"line":14,"column":68,"offset":513},"indent":[9]}}],"position":{"start":{"line":12,"column":5,"offset":324},"end":{"line":14,"column":68,"offset":513},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#kubernetes-setup-and-config","children":[{"type":"text","value":"Kubernetes Setup and Config","position":{"start":{"line":15,"column":10,"offset":523},"end":{"line":15,"column":37,"offset":550},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":522},"end":{"line":15,"column":68,"offset":581},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":522},"end":{"line":15,"column":68,"offset":581},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----multi-pod-container-replication-controller","children":[{"type":"text","value":"---- Multi-Pod (Container) Replication Controller","position":{"start":{"line":16,"column":14,"offset":595},"end":{"line":16,"column":63,"offset":644},"indent":[]}}],"position":{"start":{"line":16,"column":13,"offset":594},"end":{"line":16,"column":114,"offset":695},"indent":[]}}],"position":{"start":{"line":16,"column":13,"offset":594},"end":{"line":16,"column":114,"offset":695},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":590},"end":{"line":16,"column":114,"offset":695},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----create-and-deploy-service-definitions","children":[{"type":"text","value":"---- Create and Deploy Service Definitions","position":{"start":{"line":17,"column":14,"offset":709},"end":{"line":17,"column":56,"offset":751},"indent":[]}}],"position":{"start":{"line":17,"column":13,"offset":708},"end":{"line":17,"column":102,"offset":797},"indent":[]}}],"position":{"start":{"line":17,"column":13,"offset":708},"end":{"line":17,"column":102,"offset":797},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":704},"end":{"line":17,"column":102,"offset":797},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":590},"end":{"line":17,"column":102,"offset":797},"indent":[9]}}],"position":{"start":{"line":15,"column":5,"offset":518},"end":{"line":17,"column":102,"offset":797},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#logs-scaling-and-recovery","children":[{"type":"text","value":"Logs, Scaling and Recovery","position":{"start":{"line":18,"column":10,"offset":807},"end":{"line":18,"column":36,"offset":833},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":806},"end":{"line":18,"column":65,"offset":862},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":806},"end":{"line":18,"column":65,"offset":862},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----creating-temporary-pods-at-the-command-line","children":[{"type":"text","value":"---- Creating Temporary Pods at the Command Line","position":{"start":{"line":19,"column":14,"offset":876},"end":{"line":19,"column":62,"offset":924},"indent":[]}}],"position":{"start":{"line":19,"column":13,"offset":875},"end":{"line":19,"column":114,"offset":976},"indent":[]}}],"position":{"start":{"line":19,"column":13,"offset":875},"end":{"line":19,"column":114,"offset":976},"indent":[]}}],"position":{"start":{"line":19,"column":9,"offset":871},"end":{"line":19,"column":114,"offset":976},"indent":[]}}],"position":{"start":{"line":19,"column":9,"offset":871},"end":{"line":19,"column":114,"offset":976},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":802},"end":{"line":19,"column":114,"offset":976},"indent":[5]}}],"position":{"start":{"line":12,"column":5,"offset":324},"end":{"line":19,"column":114,"offset":976},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":11,"column":1,"offset":226},"end":{"line":19,"column":114,"offset":976},"indent":[1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":11,"column":1,"offset":226},"end":{"line":19,"column":114,"offset":976},"indent":[1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!-- /TOC -->","position":{"start":{"line":21,"column":1,"offset":978},"end":{"line":21,"column":14,"offset":991},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Intro to Kubernetes","position":{"start":{"line":23,"column":4,"offset":996},"end":{"line":23,"column":23,"offset":1015},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":993},"end":{"line":23,"column":23,"offset":1015},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"k8s is an open source container cluster manager.","position":{"start":{"line":25,"column":1,"offset":1017},"end":{"line":25,"column":49,"offset":1065},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1017},"end":{"line":25,"column":49,"offset":1065},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google donated it under the Apache Commons license.","position":{"start":{"line":27,"column":1,"offset":1067},"end":{"line":27,"column":52,"offset":1118},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1067},"end":{"line":27,"column":52,"offset":1118},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's obejctive is to provide a platform for deploying, scaling and operations of application containers across a cluster of hosts.","position":{"start":{"line":29,"column":1,"offset":1120},"end":{"line":29,"column":131,"offset":1250},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1120},"end":{"line":29,"column":131,"offset":1250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google uses it to run billions of containers a day on Google Cloud.","position":{"start":{"line":31,"column":1,"offset":1252},"end":{"line":31,"column":68,"offset":1319},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1252},"end":{"line":31,"column":68,"offset":1319},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Components of Kubernetes","position":{"start":{"line":33,"column":3,"offset":1323},"end":{"line":33,"column":27,"offset":1347},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1321},"end":{"line":33,"column":29,"offset":1349},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1321},"end":{"line":33,"column":29,"offset":1349},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Nodes","position":{"start":{"line":35,"column":5,"offset":1355},"end":{"line":35,"column":10,"offset":1360},"indent":[]}}],"position":{"start":{"line":35,"column":5,"offset":1355},"end":{"line":35,"column":10,"offset":1360},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1351},"end":{"line":35,"column":10,"offset":1360},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Pods","position":{"start":{"line":36,"column":5,"offset":1365},"end":{"line":36,"column":9,"offset":1369},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":1365},"end":{"line":36,"column":9,"offset":1369},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1361},"end":{"line":36,"column":9,"offset":1369},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Labels","position":{"start":{"line":37,"column":5,"offset":1374},"end":{"line":37,"column":11,"offset":1380},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":1374},"end":{"line":37,"column":11,"offset":1380},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1370},"end":{"line":37,"column":11,"offset":1380},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Selectors","position":{"start":{"line":38,"column":5,"offset":1385},"end":{"line":38,"column":14,"offset":1394},"indent":[]}}],"position":{"start":{"line":38,"column":5,"offset":1385},"end":{"line":38,"column":14,"offset":1394},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1381},"end":{"line":38,"column":14,"offset":1394},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controllers","position":{"start":{"line":39,"column":5,"offset":1399},"end":{"line":39,"column":16,"offset":1410},"indent":[]}}],"position":{"start":{"line":39,"column":5,"offset":1399},"end":{"line":39,"column":16,"offset":1410},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1395},"end":{"line":39,"column":16,"offset":1410},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Services","position":{"start":{"line":40,"column":5,"offset":1415},"end":{"line":40,"column":13,"offset":1423},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":1415},"end":{"line":40,"column":13,"offset":1423},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1411},"end":{"line":40,"column":13,"offset":1423},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Control Page","position":{"start":{"line":41,"column":5,"offset":1428},"end":{"line":41,"column":17,"offset":1440},"indent":[]}}],"position":{"start":{"line":41,"column":5,"offset":1428},"end":{"line":41,"column":17,"offset":1440},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1424},"end":{"line":41,"column":17,"offset":1440},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"API","position":{"start":{"line":42,"column":5,"offset":1445},"end":{"line":42,"column":8,"offset":1448},"indent":[]}}],"position":{"start":{"line":42,"column":5,"offset":1445},"end":{"line":42,"column":8,"offset":1448},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1441},"end":{"line":42,"column":8,"offset":1448},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1351},"end":{"line":42,"column":8,"offset":1448},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Kubernetes Architecture","position":{"start":{"line":44,"column":4,"offset":1453},"end":{"line":44,"column":27,"offset":1476},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1450},"end":{"line":44,"column":27,"offset":1476},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We will end up with one ","position":{"start":{"line":46,"column":1,"offset":1478},"end":{"line":46,"column":25,"offset":1502},"indent":[]}},{"type":"inlineCode","value":"Master/Controller","position":{"start":{"line":46,"column":25,"offset":1502},"end":{"line":46,"column":44,"offset":1521},"indent":[]}},{"type":"text","value":" which can have ","position":{"start":{"line":46,"column":44,"offset":1521},"end":{"line":46,"column":60,"offset":1537},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":46,"column":61,"offset":1538},"end":{"line":46,"column":62,"offset":1539},"indent":[]}}],"position":{"start":{"line":46,"column":60,"offset":1537},"end":{"line":46,"column":63,"offset":1540},"indent":[]}},{"type":"text","value":" Minions, which can have ","position":{"start":{"line":46,"column":63,"offset":1540},"end":{"line":46,"column":88,"offset":1565},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":46,"column":89,"offset":1566},"end":{"line":46,"column":90,"offset":1567},"indent":[]}}],"position":{"start":{"line":46,"column":88,"offset":1565},"end":{"line":46,"column":91,"offset":1568},"indent":[]}},{"type":"text","value":" pods which themselves can container ","position":{"start":{"line":46,"column":91,"offset":1568},"end":{"line":46,"column":128,"offset":1605},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":46,"column":129,"offset":1606},"end":{"line":46,"column":130,"offset":1607},"indent":[]}}],"position":{"start":{"line":46,"column":128,"offset":1605},"end":{"line":46,"column":131,"offset":1608},"indent":[]}},{"type":"text","value":" containers.","position":{"start":{"line":46,"column":131,"offset":1608},"end":{"line":46,"column":143,"offset":1620},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1478},"end":{"line":46,"column":143,"offset":1620},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Minions (Nodes)","position":{"start":{"line":48,"column":3,"offset":1624},"end":{"line":48,"column":18,"offset":1639},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1622},"end":{"line":48,"column":20,"offset":1641},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1622},"end":{"line":48,"column":20,"offset":1641},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These are the physical/virtual container clients. They host the various containers within the cluster.","position":{"start":{"line":50,"column":1,"offset":1643},"end":{"line":50,"column":103,"offset":1745},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1643},"end":{"line":50,"column":103,"offset":1745},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Each of them run ","position":{"start":{"line":52,"column":1,"offset":1747},"end":{"line":52,"column":18,"offset":1764},"indent":[]}},{"type":"inlineCode","value":"ETCD","position":{"start":{"line":52,"column":18,"offset":1764},"end":{"line":52,"column":24,"offset":1770},"indent":[]}},{"type":"text","value":" (a key pair management and communication service) - it's how we can keep everything in sync and the ","position":{"start":{"line":52,"column":24,"offset":1770},"end":{"line":52,"column":125,"offset":1871},"indent":[]}},{"type":"inlineCode","value":"Kubernetes Proxy","position":{"start":{"line":52,"column":125,"offset":1871},"end":{"line":52,"column":143,"offset":1889},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":52,"column":143,"offset":1889},"end":{"line":52,"column":144,"offset":1890},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1747},"end":{"line":52,"column":144,"offset":1890},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Docker must be installed on each of these ","position":{"start":{"line":54,"column":1,"offset":1892},"end":{"line":54,"column":43,"offset":1934},"indent":[]}},{"type":"inlineCode","value":"minions","position":{"start":{"line":54,"column":43,"offset":1934},"end":{"line":54,"column":52,"offset":1943},"indent":[]}},{"type":"text","value":" as well.","position":{"start":{"line":54,"column":52,"offset":1943},"end":{"line":54,"column":61,"offset":1952},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1892},"end":{"line":54,"column":61,"offset":1952},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Pods","position":{"start":{"line":56,"column":3,"offset":1956},"end":{"line":56,"column":7,"offset":1960},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1954},"end":{"line":56,"column":9,"offset":1962},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1954},"end":{"line":56,"column":9,"offset":1962},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One or more containers. These containers are then guarenteed by the ","position":{"start":{"line":58,"column":1,"offset":1964},"end":{"line":58,"column":69,"offset":2032},"indent":[]}},{"type":"inlineCode","value":"Master/Controller","position":{"start":{"line":58,"column":69,"offset":2032},"end":{"line":58,"column":88,"offset":2051},"indent":[]}},{"type":"text","value":" to be located on the same host machine in order to facilitate sharing of resources.","position":{"start":{"line":58,"column":88,"offset":2051},"end":{"line":58,"column":172,"offset":2135},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1964},"end":{"line":58,"column":172,"offset":2135},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Pods are assigned unique IPs within each cluster.","position":{"start":{"line":60,"column":1,"offset":2137},"end":{"line":60,"column":50,"offset":2186},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2137},"end":{"line":60,"column":50,"offset":2186},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Pods can container definitions of disk volumes or share, and then provide access from those to all the members (containers) within the pod.","position":{"start":{"line":62,"column":1,"offset":2188},"end":{"line":62,"column":140,"offset":2327},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2188},"end":{"line":62,"column":140,"offset":2327},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Labels","position":{"start":{"line":64,"column":3,"offset":2331},"end":{"line":64,"column":9,"offset":2337},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2329},"end":{"line":64,"column":11,"offset":2339},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2329},"end":{"line":64,"column":11,"offset":2339},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Clients can attach \"key-value pairs\" to any object in the system (like Pods or Minions). The become the labels that identify them in the config and management of them.","position":{"start":{"line":66,"column":1,"offset":2341},"end":{"line":66,"column":168,"offset":2508},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2341},"end":{"line":66,"column":168,"offset":2508},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Selectors","position":{"start":{"line":68,"column":3,"offset":2512},"end":{"line":68,"column":12,"offset":2521},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2510},"end":{"line":68,"column":14,"offset":2523},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2510},"end":{"line":68,"column":14,"offset":2523},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Label Selectors represent queries that are made against those labels. The resolve to the corresponding matching objects.","position":{"start":{"line":70,"column":1,"offset":2525},"end":{"line":70,"column":121,"offset":2645},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2525},"end":{"line":70,"column":121,"offset":2645},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These two items are the primary way that grouping is done in Kubernetes and determine which components that a given operation applies to when indicated.","position":{"start":{"line":72,"column":1,"offset":2647},"end":{"line":72,"column":153,"offset":2799},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2647},"end":{"line":72,"column":153,"offset":2799},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Controllers","position":{"start":{"line":74,"column":3,"offset":2803},"end":{"line":74,"column":14,"offset":2814},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2801},"end":{"line":74,"column":16,"offset":2816},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2801},"end":{"line":74,"column":16,"offset":2816},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These are used in the management of your cluster. Controllers are the mechanism by which your desired configuration state is enforced.","position":{"start":{"line":76,"column":1,"offset":2818},"end":{"line":76,"column":135,"offset":2952},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2818},"end":{"line":76,"column":135,"offset":2952},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Controllers manage a set of pods and - depending on the desired configuration state - may engage other controllers to handle replication and scaling (Replication Controller) of X number of containers and pods across the cluster. it is also responsible for replacing any container in a pod that fails (based on the desired state of the cluster).","position":{"start":{"line":78,"column":1,"offset":2954},"end":{"line":78,"column":345,"offset":3298},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2954},"end":{"line":78,"column":345,"offset":3298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Other controllers that can be engaged include a DaemonSet Controller (enforces a 1 to 1 ratio of pods to minions) and a Job Controller (that runs pods to \"completion\" such as in batch jobs).","position":{"start":{"line":80,"column":1,"offset":3300},"end":{"line":80,"column":191,"offset":3490},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":3300},"end":{"line":80,"column":191,"offset":3490},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Each set of pods any controller manages is determined by the label selectors that are part of its definition.","position":{"start":{"line":82,"column":1,"offset":3492},"end":{"line":82,"column":110,"offset":3601},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3492},"end":{"line":82,"column":110,"offset":3601},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Services","position":{"start":{"line":84,"column":3,"offset":3605},"end":{"line":84,"column":11,"offset":3613},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":3603},"end":{"line":84,"column":13,"offset":3615},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":3603},"end":{"line":84,"column":13,"offset":3615},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Services allow pods to ","position":{"start":{"line":86,"column":1,"offset":3617},"end":{"line":86,"column":24,"offset":3640},"indent":[]}},{"type":"inlineCode","value":"work together","position":{"start":{"line":86,"column":24,"offset":3640},"end":{"line":86,"column":39,"offset":3655},"indent":[]}},{"type":"text","value":" eg multi-tiered application eg. web layer, db layer etc. are defined by the label selector.","position":{"start":{"line":86,"column":39,"offset":3655},"end":{"line":86,"column":131,"offset":3747},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":3617},"end":{"line":86,"column":131,"offset":3747},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kubernetes can then provide service discovery and handle routing with the static IP for each pod as well as load balancing (round robin based) connections to that service among the pods that match the label selector indicated.","position":{"start":{"line":88,"column":1,"offset":3749},"end":{"line":88,"column":227,"offset":3975},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":3749},"end":{"line":88,"column":227,"offset":3975},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By default, although a service is only exposed inside a cluster, it can also be exposed outside a cluster as needed.","position":{"start":{"line":90,"column":1,"offset":3977},"end":{"line":90,"column":117,"offset":4093},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3977},"end":{"line":90,"column":117,"offset":4093},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Introduction to YAML","position":{"start":{"line":92,"column":4,"offset":4098},"end":{"line":92,"column":24,"offset":4118},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":4095},"end":{"line":92,"column":24,"offset":4118},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Yet Another Markup Language","position":{"start":{"line":94,"column":1,"offset":4120},"end":{"line":94,"column":30,"offset":4149},"indent":[]}},{"type":"text","value":", although it moved to ","position":{"start":{"line":94,"column":30,"offset":4149},"end":{"line":94,"column":53,"offset":4172},"indent":[]}},{"type":"inlineCode","value":"YAML Ain't Markup Language","position":{"start":{"line":94,"column":53,"offset":4172},"end":{"line":94,"column":81,"offset":4200},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":4120},"end":{"line":94,"column":81,"offset":4200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's a data serialisation format. It's designed to be easy to map to high level languages.","position":{"start":{"line":96,"column":1,"offset":4202},"end":{"line":96,"column":91,"offset":4292},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":4202},"end":{"line":96,"column":91,"offset":4292},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"--- # Our Favourite Movies of All Time\n- The Terminator\n- Star Wars","position":{"start":{"line":98,"column":1,"offset":4294},"end":{"line":102,"column":4,"offset":4369},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is highly dependent on the dashes and indentations.","position":{"start":{"line":104,"column":1,"offset":4371},"end":{"line":104,"column":55,"offset":4425},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":4371},"end":{"line":104,"column":55,"offset":4425},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":106,"column":1,"offset":4427},"end":{"line":106,"column":4,"offset":4430},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Kubernetes Setup and Config","position":{"start":{"line":108,"column":4,"offset":4435},"end":{"line":108,"column":31,"offset":4462},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4432},"end":{"line":108,"column":31,"offset":4462},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure that for your nodes etc and the control-master that you apt-get/yum install ","position":{"start":{"line":110,"column":1,"offset":4464},"end":{"line":110,"column":84,"offset":4547},"indent":[]}},{"type":"inlineCode","value":"ntp","position":{"start":{"line":110,"column":84,"offset":4547},"end":{"line":110,"column":89,"offset":4552},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4464},"end":{"line":110,"column":89,"offset":4552},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":112,"column":1,"offset":4554},"end":{"line":112,"column":8,"offset":4561},"indent":[]}},{"type":"inlineCode","value":"ntp","position":{"start":{"line":112,"column":8,"offset":4561},"end":{"line":112,"column":13,"offset":4566},"indent":[]}},{"type":"text","value":" for accurate reporting. Ensure for each node you use ","position":{"start":{"line":112,"column":13,"offset":4566},"end":{"line":112,"column":67,"offset":4620},"indent":[]}},{"type":"inlineCode","value":"systemctl enable ntpd && sysmctl start ntpd","position":{"start":{"line":112,"column":67,"offset":4620},"end":{"line":112,"column":112,"offset":4665},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":112,"column":112,"offset":4665},"end":{"line":112,"column":113,"offset":4666},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4554},"end":{"line":112,"column":113,"offset":4666},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To ensure that they can all communicate, edit the ","position":{"start":{"line":114,"column":1,"offset":4668},"end":{"line":114,"column":51,"offset":4718},"indent":[]}},{"type":"inlineCode","value":"/etc/hosts","position":{"start":{"line":114,"column":51,"offset":4718},"end":{"line":114,"column":63,"offset":4730},"indent":[]}},{"type":"text","value":" file and paste in the IP addresses and names of the minions. That hosts will allow you to ping that minion name.","position":{"start":{"line":114,"column":63,"offset":4730},"end":{"line":114,"column":176,"offset":4843},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4668},"end":{"line":114,"column":176,"offset":4843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the ","position":{"start":{"line":116,"column":1,"offset":4845},"end":{"line":116,"column":8,"offset":4852},"indent":[]}},{"type":"inlineCode","value":"master/controller","position":{"start":{"line":116,"column":8,"offset":4852},"end":{"line":116,"column":27,"offset":4871},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":116,"column":27,"offset":4871},"end":{"line":116,"column":29,"offset":4873},"indent":[]}},{"type":"inlineCode","value":"vim /etc/yum.repos.d/virt7-docker-common-release.repo","position":{"start":{"line":116,"column":29,"offset":4873},"end":{"line":116,"column":84,"offset":4928},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4845},"end":{"line":116,"column":84,"offset":4928},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[virt7-docker-common-release]\nname=virt7-docker-common-release\nbaseurl=http://cbs.centos.org/repos/virt7-docker-common-release/x86_64/0s/\ngpgcheck=0","position":{"start":{"line":118,"column":1,"offset":4930},"end":{"line":123,"column":4,"offset":5086},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then hit ","position":{"start":{"line":125,"column":1,"offset":5088},"end":{"line":125,"column":10,"offset":5097},"indent":[]}},{"type":"inlineCode","value":"yum update","position":{"start":{"line":125,"column":10,"offset":5097},"end":{"line":125,"column":22,"offset":5109},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":125,"column":22,"offset":5109},"end":{"line":125,"column":23,"offset":5110},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":5088},"end":{"line":125,"column":23,"offset":5110},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure ","position":{"start":{"line":127,"column":1,"offset":5112},"end":{"line":127,"column":8,"offset":5119},"indent":[]}},{"type":"inlineCode","value":"systemctl status [iptables|firewalld]","position":{"start":{"line":127,"column":8,"offset":5119},"end":{"line":127,"column":47,"offset":5158},"indent":[]}},{"type":"text","value":" are not running.","position":{"start":{"line":127,"column":47,"offset":5158},"end":{"line":127,"column":64,"offset":5175},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5112},"end":{"line":127,"column":64,"offset":5175},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Now to ensure that we can share and communicate values, we will install `etcd` and `kubernetes`.\n\n`yum install -y --enablerepo=virt7-docker-common-release kubernetes docker`\n\n## Install and Configure the Master Controller\n\nFor the master, we want to edit the Kubernetes config file.\n\n__Master Kube Config__","position":{"start":{"line":129,"column":1,"offset":5177},"end":{"line":139,"column":4,"offset":5491},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"cd /etc/kubernetes\nvim config","position":{"start":{"line":141,"column":1,"offset":5493},"end":{"line":142,"column":11,"offset":5522},"indent":[1]}}],"position":{"start":{"line":141,"column":1,"offset":5493},"end":{"line":142,"column":11,"offset":5522},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"In the file, the `KUBE_LOTOSTDERR` we want one, `KUBE_LOG_LEBEL` can be set as 0 for debug, `KUBE_ALLOW_PRIV` can be left as false - it is a way to allow any docker container to run in our kube cluster, but we can learn about this later. `KUBE_MASTER` we want to change to ensure that it binds to an interface that we can communicate with. It will default at localhost, so for this example we would do something like `--master=http://centos-master:8080` where centos-master is what we set up in `/etc/hosts`\n\nWe will then add `KUBE_ETCD_SERVERS=\"--etcd-servers=http://centos-master:2379\"`\n\n__Setting up etcd__","position":{"start":{"line":144,"column":1,"offset":5524},"end":{"line":150,"column":4,"offset":6141},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"cd /etc/etcd\nvim etcd.conf","position":{"start":{"line":152,"column":1,"offset":6143},"end":{"line":153,"column":14,"offset":6169},"indent":[1]}}],"position":{"start":{"line":152,"column":1,"offset":6143},"end":{"line":153,"column":14,"offset":6169},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"In the file, we want to change `ETCD_LISTEN_CLIENT_URLS=\"http://0.0.0.0:2379\"` and the same value in the cluster section for `ETCD_ADVERTISE_CLIENT_URLS`\n\n__Editing the Kubernetes APIServer___","position":{"start":{"line":155,"column":1,"offset":6171},"end":{"line":159,"column":4,"offset":6371},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"cd /etc/kubernetes\nvim apiserver","position":{"start":{"line":161,"column":1,"offset":6373},"end":{"line":162,"column":14,"offset":6405},"indent":[1]}}],"position":{"start":{"line":161,"column":1,"offset":6373},"end":{"line":162,"column":14,"offset":6405},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"Inside, we need to change to the following for the following fields:","position":{"start":{"line":164,"column":1,"offset":6407},"end":{"line":166,"column":4,"offset":6483},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"KUBE_API_ADDRESS=\"--address=0.0.0.0\"\nKUBE_API_PORT=\"--port=8080\"\nKUBELET_PORT=\"--kubelet-port=10250\"","position":{"start":{"line":168,"column":1,"offset":6485},"end":{"line":170,"column":36,"offset":6585},"indent":[1,1]}}],"position":{"start":{"line":168,"column":1,"offset":6485},"end":{"line":170,"column":36,"offset":6585},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// for the basic config, we can comment out the KUBE_ADMISSION_CONTROL","position":{"start":{"line":172,"column":1,"offset":6587},"end":{"line":172,"column":71,"offset":6657},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":6587},"end":{"line":172,"column":71,"offset":6657},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"__systemctl enable___\n\nFinally, we want to enable the following with the command:","position":{"start":{"line":174,"column":1,"offset":6659},"end":{"line":178,"column":4,"offset":6748},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"systemctl enable etcd kube-apiserver kube-controller-manager kube-scheduler\nsystemctl start etcd kube-apiserver kube-controller-manager kube-scheduler\nsystemctl status etcd kube-apiserver kube-controller-manager kube-scheduler | grep\"(running)\" | wc -l","position":{"start":{"line":180,"column":1,"offset":6750},"end":{"line":182,"column":102,"offset":7002},"indent":[1,1]}}],"position":{"start":{"line":180,"column":1,"offset":6750},"end":{"line":182,"column":102,"offset":7002},"indent":[1,1]}},{"type":"code","lang":null,"meta":null,"value":"## Install and Configure the Minions\n\nAt this stage, we should be able to see the master controller from the minions.\n\n__Minion Kube Config__","position":{"start":{"line":184,"column":1,"offset":7004},"end":{"line":190,"column":4,"offset":7153},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"KUBE_MASTER=\"--master=","position":{"start":{"line":192,"column":1,"offset":7155},"end":{"line":192,"column":23,"offset":7177},"indent":[]}},{"type":"link","title":null,"url":"http://centos-master:8080","children":[{"type":"text","value":"http://centos-master:8080","position":{"start":{"line":192,"column":23,"offset":7177},"end":{"line":192,"column":48,"offset":7202},"indent":[]}}],"position":{"start":{"line":192,"column":23,"offset":7177},"end":{"line":192,"column":48,"offset":7202},"indent":[]}},{"type":"text","value":"\"","position":{"start":{"line":192,"column":48,"offset":7202},"end":{"line":192,"column":49,"offset":7203},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":7155},"end":{"line":192,"column":49,"offset":7203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// add the following\nKUBE_ETCD_SERVERS=\"--etcd-server=","position":{"start":{"line":194,"column":1,"offset":7205},"end":{"line":195,"column":34,"offset":7259},"indent":[1]}},{"type":"link","title":null,"url":"http://centos-master:2379","children":[{"type":"text","value":"http://centos-master:2379","position":{"start":{"line":195,"column":34,"offset":7259},"end":{"line":195,"column":59,"offset":7284},"indent":[]}}],"position":{"start":{"line":195,"column":34,"offset":7259},"end":{"line":195,"column":59,"offset":7284},"indent":[]}},{"type":"text","value":"\"","position":{"start":{"line":195,"column":59,"offset":7284},"end":{"line":195,"column":60,"offset":7285},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":7205},"end":{"line":195,"column":60,"offset":7285},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"__Kublet Config__\n\nEdit the `/etc/kubernetes/kublet` file.","position":{"start":{"line":197,"column":1,"offset":7287},"end":{"line":201,"column":4,"offset":7353},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"KUBELET_ADDRESS=\"--address=0.0.0.0\"","position":{"start":{"line":203,"column":1,"offset":7355},"end":{"line":203,"column":36,"offset":7390},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":7355},"end":{"line":203,"column":36,"offset":7390},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"KUBELET_PORT=\"--port=102050\"","position":{"start":{"line":205,"column":1,"offset":7392},"end":{"line":205,"column":29,"offset":7420},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":7392},"end":{"line":205,"column":29,"offset":7420},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"KUBELET_HOSTNAME=\"--hostname-override=centos-minion1\"","position":{"start":{"line":207,"column":1,"offset":7422},"end":{"line":207,"column":54,"offset":7475},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":7422},"end":{"line":207,"column":54,"offset":7475},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"KUBELET_API_SERVER=\"--api-servers=","position":{"start":{"line":209,"column":1,"offset":7477},"end":{"line":209,"column":35,"offset":7511},"indent":[]}},{"type":"link","title":null,"url":"http://centos-master:8080","children":[{"type":"text","value":"http://centos-master:8080","position":{"start":{"line":209,"column":35,"offset":7511},"end":{"line":209,"column":60,"offset":7536},"indent":[]}}],"position":{"start":{"line":209,"column":35,"offset":7511},"end":{"line":209,"column":60,"offset":7536},"indent":[]}},{"type":"text","value":"\"","position":{"start":{"line":209,"column":60,"offset":7536},"end":{"line":209,"column":61,"offset":7537},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":7477},"end":{"line":209,"column":61,"offset":7537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// comment out pod_infra_container","position":{"start":{"line":211,"column":1,"offset":7539},"end":{"line":211,"column":35,"offset":7573},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":7539},"end":{"line":211,"column":35,"offset":7573},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Afterwards, ensure you run the following:","position":{"start":{"line":213,"column":1,"offset":7575},"end":{"line":215,"column":4,"offset":7624},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"systemctl enable kube-proxy kubelet docker\nsystemctl start kube-proxy kubelet docker\nsystemctl status kube-proxy kubelet docker | grep \"(running)\" | wc-l","position":{"start":{"line":217,"column":1,"offset":7626},"end":{"line":219,"column":69,"offset":7779},"indent":[1,1]}}],"position":{"start":{"line":217,"column":1,"offset":7626},"end":{"line":219,"column":69,"offset":7779},"indent":[1,1]}},{"type":"code","lang":null,"meta":null,"value":"## Exploring the Environment\n\nWe will use `kubectl` from the command line to control the cluster manager.\n\nMain functions:","position":{"start":{"line":221,"column":1,"offset":7781},"end":{"line":227,"column":4,"offset":7911},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// list of registered nodes for the cluster\nkubectl get nodes","position":{"start":{"line":229,"column":1,"offset":7913},"end":{"line":230,"column":18,"offset":7974},"indent":[1]}}],"position":{"start":{"line":229,"column":1,"offset":7913},"end":{"line":230,"column":18,"offset":7974},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"// to get help on it\nman kubectl-get","position":{"start":{"line":232,"column":1,"offset":7976},"end":{"line":233,"column":16,"offset":8012},"indent":[1]}}],"position":{"start":{"line":232,"column":1,"offset":7976},"end":{"line":233,"column":16,"offset":8012},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"// how to get the ip addresses/info\nkubetrl describe nodes","position":{"start":{"line":235,"column":1,"offset":8014},"end":{"line":236,"column":23,"offset":8072},"indent":[1]}}],"position":{"start":{"line":235,"column":1,"offset":8014},"end":{"line":236,"column":23,"offset":8072},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"// getting the json info\nkubectl get nodes -o jsonpath='{.items","position":{"start":{"line":238,"column":1,"offset":8074},"end":{"line":239,"column":39,"offset":8137},"indent":[1]}},{"type":"linkReference","identifier":"*","label":"*","referenceType":"shortcut","children":[{"type":"text","value":"*","position":{"start":{"line":239,"column":40,"offset":8138},"end":{"line":239,"column":41,"offset":8139},"indent":[]}}],"position":{"start":{"line":239,"column":39,"offset":8137},"end":{"line":239,"column":42,"offset":8140},"indent":[]}},{"type":"text","value":".status.addresses","position":{"start":{"line":239,"column":42,"offset":8140},"end":{"line":239,"column":59,"offset":8157},"indent":[]}},{"type":"linkReference","identifier":"?(@.type==\"externalip\")","label":"?(@.type==\"ExternalIP\")","referenceType":"shortcut","children":[{"type":"text","value":"?(@.type==\"ExternalIP\")","position":{"start":{"line":239,"column":60,"offset":8158},"end":{"line":239,"column":83,"offset":8181},"indent":[]}}],"position":{"start":{"line":239,"column":59,"offset":8157},"end":{"line":239,"column":84,"offset":8182},"indent":[]}},{"type":"text","value":".address}'","position":{"start":{"line":239,"column":84,"offset":8182},"end":{"line":239,"column":94,"offset":8192},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":8074},"end":{"line":239,"column":94,"offset":8192},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"***\n\n## Pods, Tags and Services\n\n## Create and Deploy Pod Definitions\n\nLet's start running containers in pods in our cluster.\n\nFor configuration, you can use both `json` or `yaml` file format. From a definitions standpoint, it may be better for the current input configuration.\n\n`Desired State` for our system is a key concept. It's the only responsibility of Kubernetes to match the defined `desired state`.\n\nOn the master node, `cd Builds` and inside that directory `vim nginx.yaml`","position":{"start":{"line":241,"column":1,"offset":8194},"end":{"line":255,"column":4,"offset":8686},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"apiVersion: v1\nkind: Pod\nmetadata:\nname: nginx\nspec:\ncontainers: - name: nginx\nimage: nginx:1.7.9 # this is not the latest - used for a reason\nports: - containerPort: 80","position":{"start":{"line":257,"column":1,"offset":8688},"end":{"line":264,"column":27,"offset":8857},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":257,"column":1,"offset":8688},"end":{"line":264,"column":27,"offset":8857},"indent":[1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"If we now use `kubectl get pods`, we should get no pods that are running.\n\nThat will be because there are no containers running on any minions.\n\nRun `kubectl create -f ./nginx.yaml` and we'll get a notification.\n\n`kubectl get pods` should now return results and the minion should now have a container running!\n\n__Describing a pod__\n\n`kubectl describe pod nginx`\n\nThis will tell us a number of things including IDs assigned to the minion, labels if they are assigned, IP etc and info on the containers.\n\nThe events will also describe how the container has gone.\n\n__Accessing the pod from master___\n\nCan we ping that address? No. The reason is that we have no extenal route to that pod. What we can do is run a busy-box image. This will allow us to connect to or test our container.","position":{"start":{"line":266,"column":1,"offset":8859},"end":{"line":286,"column":4,"offset":9647},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// -t is not --tty for kubectl\nkubectl run busybox --image=busybox --restart=Never --tty -i --generator=run-pod/v1","position":{"start":{"line":288,"column":1,"offset":9649},"end":{"line":289,"column":84,"offset":9763},"indent":[1]}}],"position":{"start":{"line":288,"column":1,"offset":9649},"end":{"line":289,"column":84,"offset":9763},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"// this will spin up the pod called busybox\n// we will then be in the command line for that pod\n// If we have this pod running within the minion\n// we will then have access to other pods on the\n// same environment\nwget -q0- ","position":{"start":{"line":291,"column":1,"offset":9765},"end":{"line":296,"column":11,"offset":9989},"indent":[1,1,1,1,1]}},{"type":"link","title":null,"url":"http://172.1.0.2","children":[{"type":"text","value":"http://172.1.0.2","position":{"start":{"line":296,"column":11,"offset":9989},"end":{"line":296,"column":27,"offset":10005},"indent":[]}}],"position":{"start":{"line":296,"column":11,"offset":9989},"end":{"line":296,"column":27,"offset":10005},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":9765},"end":{"line":296,"column":27,"offset":10005},"indent":[1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"To clean up the system, we can use `kubectl delete pod podName`\n\nFrom the master, we can then see that the pod is no longer running.\n\nWe can also forward temporarily our ports to a remote copy. We can do this with port forward.","position":{"start":{"line":298,"column":1,"offset":10007},"end":{"line":304,"column":4,"offset":10242},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"kubectl get pods\nkubectl create -f nginx.yaml\nkubectl get pods # will show the pods","position":{"start":{"line":306,"column":1,"offset":10244},"end":{"line":308,"column":38,"offset":10327},"indent":[1,1]}}],"position":{"start":{"line":306,"column":1,"offset":10244},"end":{"line":308,"column":38,"offset":10327},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// to forward ports\n// & means to run in the background\n// this will return a port above 34000 - otherwise we can specify\nkubectl port-forward nginx :80 &\n// from still in the master\nwget -q0- ","position":{"start":{"line":310,"column":1,"offset":10329},"end":{"line":315,"column":11,"offset":10522},"indent":[1,1,1,1,1]}},{"type":"link","title":null,"url":"http://localhost:34853","children":[{"type":"text","value":"http://localhost:34853","position":{"start":{"line":315,"column":11,"offset":10522},"end":{"line":315,"column":33,"offset":10544},"indent":[]}}],"position":{"start":{"line":315,"column":11,"offset":10522},"end":{"line":315,"column":33,"offset":10544},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":10329},"end":{"line":315,"column":33,"offset":10544},"indent":[1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"## Tags, Labels and Selectors\n\nCreate `nginx-pod-label.yaml`","position":{"start":{"line":317,"column":1,"offset":10546},"end":{"line":321,"column":4,"offset":10614},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"apiVersion: v1\nkind: Pod\nmetadata:\nname: nginx\nlabels:\napp: nginx\nspec:\ncontainers: - name: nginx\nimage: nginx:1.7.9 # this is not the latest - used for a reason\nports: - containerPort: 80","position":{"start":{"line":323,"column":1,"offset":10616},"end":{"line":332,"column":27,"offset":10804},"indent":[1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":323,"column":1,"offset":10616},"end":{"line":332,"column":27,"offset":10804},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"","position":{"start":{"line":334,"column":1,"offset":10806},"end":{"line":336,"column":4,"offset":10814},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"kubectl create -f nginx-pod-label.yaml\nkubectl get pods # will be running\nkubectl get -l app=nginx","position":{"start":{"line":338,"column":1,"offset":10816},"end":{"line":340,"column":25,"offset":10914},"indent":[1,1]}}],"position":{"start":{"line":338,"column":1,"offset":10816},"end":{"line":340,"column":25,"offset":10914},"indent":[1,1]}},{"type":"code","lang":null,"meta":null,"value":"If we copy that .yaml file and rename `nginx` to `nginx2`, we can get info just by searching for that name.\n\nIf we also do `kubectl decribe pod -l app=nginx2`, we'd just get the info for that name.\n\n## Deployment State\n\nCreate `nginx-deployment-prod.yaml`\n\nThis will make a number of changes. This will go from a simple pod definition to a deployment production set.","position":{"start":{"line":342,"column":1,"offset":10916},"end":{"line":352,"column":4,"offset":11290},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"apiVersion: extensions/v1beta1 # this should now be in v1.3\nkind: Deployment\nmetadata:\nname: nginx-deployment-prod\nspec:\nreplicas: 1\ntemplate: # this will be for the pod replicas\nmetadata:\nlabels:\napp: nginx-deployment-prod\nspec:\ncontainers: - name: nginx\nimage: nginx:1.7.9 # this is not the latest - used for a reason\nports: - containerPort: 80","position":{"start":{"line":354,"column":1,"offset":11292},"end":{"line":367,"column":27,"offset":11638},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":354,"column":1,"offset":11292},"end":{"line":367,"column":27,"offset":11638},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"","position":{"start":{"line":369,"column":1,"offset":11640},"end":{"line":371,"column":4,"offset":11648},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"kubectl create -f -nginx-deployent-prod.yaml\nkubectl get pods\n// this will now return the name + the id concatentated to the end!\nkubectl get deployments\n// this will now give us the nginx-deployment-prod with details","position":{"start":{"line":373,"column":1,"offset":11650},"end":{"line":377,"column":64,"offset":11867},"indent":[1,1,1,1]}}],"position":{"start":{"line":373,"column":1,"offset":11650},"end":{"line":377,"column":64,"offset":11867},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This seems like we're making it more complex than we need to be... but...","position":{"start":{"line":379,"column":1,"offset":11869},"end":{"line":379,"column":74,"offset":11942},"indent":[]}}],"position":{"start":{"line":379,"column":1,"offset":11869},"end":{"line":379,"column":74,"offset":11942},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create ","position":{"start":{"line":381,"column":1,"offset":11944},"end":{"line":381,"column":8,"offset":11951},"indent":[]}},{"type":"inlineCode","value":"nginx-deployment-dev.yaml","position":{"start":{"line":381,"column":8,"offset":11951},"end":{"line":381,"column":35,"offset":11978},"indent":[]}},{"type":"text","value":" and just change everything to dev.","position":{"start":{"line":381,"column":35,"offset":11978},"end":{"line":381,"column":70,"offset":12013},"indent":[]}}],"position":{"start":{"line":381,"column":1,"offset":11944},"end":{"line":381,"column":70,"offset":12013},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Again, create the .yaml kubectl. It will now show two deployments.","position":{"start":{"line":383,"column":1,"offset":12015},"end":{"line":383,"column":67,"offset":12081},"indent":[]}}],"position":{"start":{"line":383,"column":1,"offset":12015},"end":{"line":383,"column":67,"offset":12081},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we create ","position":{"start":{"line":385,"column":1,"offset":12083},"end":{"line":385,"column":14,"offset":12096},"indent":[]}},{"type":"inlineCode","value":"nginx-deployment-dev-update.yaml","position":{"start":{"line":385,"column":14,"offset":12096},"end":{"line":385,"column":48,"offset":12130},"indent":[]}},{"type":"text","value":" and just change a few things. If we run ","position":{"start":{"line":385,"column":48,"offset":12130},"end":{"line":385,"column":89,"offset":12171},"indent":[]}},{"type":"inlineCode","value":"kubectl apply -f nginx-deployment-dev-update.yaml","position":{"start":{"line":385,"column":89,"offset":12171},"end":{"line":385,"column":140,"offset":12222},"indent":[]}},{"type":"text","value":" and it will update by apply the contents of that to the name deployment cluster.","position":{"start":{"line":385,"column":140,"offset":12222},"end":{"line":385,"column":221,"offset":12303},"indent":[]}}],"position":{"start":{"line":385,"column":1,"offset":12083},"end":{"line":385,"column":221,"offset":12303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we run ","position":{"start":{"line":387,"column":1,"offset":12305},"end":{"line":387,"column":11,"offset":12315},"indent":[]}},{"type":"inlineCode","value":"kubectl describe deployments ...","position":{"start":{"line":387,"column":11,"offset":12315},"end":{"line":387,"column":45,"offset":12349},"indent":[]}},{"type":"text","value":", we can get the details with things like the ","position":{"start":{"line":387,"column":45,"offset":12349},"end":{"line":387,"column":91,"offset":12395},"indent":[]}},{"type":"inlineCode","value":"StrategyType","position":{"start":{"line":387,"column":91,"offset":12395},"end":{"line":387,"column":105,"offset":12409},"indent":[]}},{"type":"text","value":" etc.","position":{"start":{"line":387,"column":105,"offset":12409},"end":{"line":387,"column":110,"offset":12414},"indent":[]}}],"position":{"start":{"line":387,"column":1,"offset":12305},"end":{"line":387,"column":110,"offset":12414},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Multi-Pod (Container) Replication Controller","position":{"start":{"line":389,"column":4,"offset":12419},"end":{"line":389,"column":48,"offset":12463},"indent":[]}}],"position":{"start":{"line":389,"column":1,"offset":12416},"end":{"line":389,"column":48,"offset":12463},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Until now, we have been creating one or more pods either directly or using a file. However, there has only been one container in each of the pods that we've been working with.","position":{"start":{"line":391,"column":1,"offset":12465},"end":{"line":391,"column":176,"offset":12640},"indent":[]}}],"position":{"start":{"line":391,"column":1,"offset":12465},"end":{"line":391,"column":176,"offset":12640},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use the replication controller to do more than one container in a pod. It will allow us to deploy 1 to n pods of a particular container.","position":{"start":{"line":393,"column":1,"offset":12642},"end":{"line":393,"column":144,"offset":12785},"indent":[]}}],"position":{"start":{"line":393,"column":1,"offset":12642},"end":{"line":393,"column":144,"offset":12785},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl get pods # we will initially have nothing\n\nvim nginx-multi-label.yaml","position":{"start":{"line":395,"column":1,"offset":12787},"end":{"line":399,"column":4,"offset":12872},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"nginx-multi-label.yaml","position":{"start":{"line":401,"column":3,"offset":12876},"end":{"line":401,"column":25,"offset":12898},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":12874},"end":{"line":401,"column":27,"offset":12900},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":12874},"end":{"line":401,"column":27,"offset":12900},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"apiVersion: v1\nkind: ReplicationController\nmetadata:\n\tname: nginx-www\nspec:\n\treplicas: 3\n\tselect:\n\t\tapp: nginx\n\ttemplate:\n\t\tmetadata:\n\t\t\tname: nginx\n\t\t\tlabels:\n\t\t\t\tapp: nginx\n\t\t\tspec:\n\t\t\t\tcontainers:\n\t\t\t\t\t- name: nginx\n\t\t\t\t\t\timage: nginx\n\t\t\t\t\t\tports:\n\t\t\t\t\t\t- containerPort: 80","position":{"start":{"line":403,"column":1,"offset":12902},"end":{"line":423,"column":4,"offset":13186},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure that if you're going to do this, start the ","position":{"start":{"line":425,"column":1,"offset":13188},"end":{"line":425,"column":51,"offset":13238},"indent":[]}},{"type":"inlineCode","value":"kubelet","position":{"start":{"line":425,"column":51,"offset":13238},"end":{"line":425,"column":60,"offset":13247},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":425,"column":60,"offset":13247},"end":{"line":425,"column":65,"offset":13252},"indent":[]}},{"type":"inlineCode","value":"kube-proxy","position":{"start":{"line":425,"column":65,"offset":13252},"end":{"line":425,"column":77,"offset":13264},"indent":[]}},{"type":"text","value":" on the other nodes.","position":{"start":{"line":425,"column":77,"offset":13264},"end":{"line":425,"column":97,"offset":13284},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":13188},"end":{"line":425,"column":97,"offset":13284},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl get nodes\n# if everything is on, all three minions should report that they are ready\nkubectl create -f nginx-multi-label.yaml\n# replicationcontroller \"nginx-www\" created\nkubectl get pods\n# will show the pods\nkubectrl describe replicationcontroller\n# tells us 3 running and 3 pods\nkubectl describe pods\n# it will show all of our pods being happy!\nkubectl get services\n# gives us just the one service","position":{"start":{"line":427,"column":1,"offset":13286},"end":{"line":440,"column":4,"offset":13700},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we delete a pod, we will still end up having a service! When we create a definition, that defines the expected state of the entire environment!","position":{"start":{"line":442,"column":1,"offset":13702},"end":{"line":442,"column":147,"offset":13848},"indent":[]}}],"position":{"start":{"line":442,"column":1,"offset":13702},"end":{"line":442,"column":147,"offset":13848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If there is an app error etc. the service will ensure that it gets back to the expected state.","position":{"start":{"line":444,"column":1,"offset":13850},"end":{"line":444,"column":95,"offset":13944},"indent":[]}}],"position":{"start":{"line":444,"column":1,"offset":13850},"end":{"line":444,"column":95,"offset":13944},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Create and Deploy Service Definitions","position":{"start":{"line":446,"column":4,"offset":13949},"end":{"line":446,"column":41,"offset":13986},"indent":[]}}],"position":{"start":{"line":446,"column":1,"offset":13946},"end":{"line":446,"column":41,"offset":13986},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Starting to put things together.","position":{"start":{"line":448,"column":1,"offset":13988},"end":{"line":448,"column":33,"offset":14020},"indent":[]}}],"position":{"start":{"line":448,"column":1,"offset":13988},"end":{"line":448,"column":33,"offset":14020},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"kubectl get replicationcontrollers\nkubectl get pods\nkubectl get nodes","position":{"start":{"line":450,"column":1,"offset":14022},"end":{"line":454,"column":4,"offset":14099},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Time to use the multicontainer configuration.","position":{"start":{"line":456,"column":1,"offset":14101},"end":{"line":456,"column":46,"offset":14146},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":14101},"end":{"line":456,"column":46,"offset":14146},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"nginx-multi-label.yaml","position":{"start":{"line":458,"column":3,"offset":14150},"end":{"line":458,"column":25,"offset":14172},"indent":[]}}],"position":{"start":{"line":458,"column":1,"offset":14148},"end":{"line":458,"column":27,"offset":14174},"indent":[]}}],"position":{"start":{"line":458,"column":1,"offset":14148},"end":{"line":458,"column":27,"offset":14174},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"apiVersion: v1\nkind: ReplicationController\nmetadata:\n\tname: nginx-www\nspec:\n\treplicas: 3\n\tselect:\n\t\tapp: nginx\n\ttemplate:\n\t\tmetadata:\n\t\t\tname: nginx\n\t\t\tlabels:\n\t\t\t\tapp: nginx\n\t\t\tspec:\n\t\t\t\tcontainers:\n\t\t\t\t\t- name: nginx\n\t\t\t\t\t\timage: nginx\n\t\t\t\t\t\tports:\n\t\t\t\t\t\t- containerPort: 80","position":{"start":{"line":460,"column":1,"offset":14176},"end":{"line":480,"column":4,"offset":14460},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"kubectl create -f nginx-multi-label.yaml","position":{"start":{"line":482,"column":1,"offset":14462},"end":{"line":482,"column":43,"offset":14504},"indent":[]}}],"position":{"start":{"line":482,"column":1,"offset":14462},"end":{"line":482,"column":43,"offset":14504},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Defining an nginx service","position":{"start":{"line":484,"column":3,"offset":14508},"end":{"line":484,"column":28,"offset":14533},"indent":[]}}],"position":{"start":{"line":484,"column":1,"offset":14506},"end":{"line":484,"column":30,"offset":14535},"indent":[]}}],"position":{"start":{"line":484,"column":1,"offset":14506},"end":{"line":484,"column":30,"offset":14535},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"apiVersion: v1\nkind: Service\nmetadata:\n\tdata: nginx-service\nspec:\n\tports:\n\t\tport: 8080\n\t\ttargetPort: 80\n\t\tprotocol: TCP\n\tselector:\n\t\tapp: nginx","position":{"start":{"line":486,"column":1,"offset":14537},"end":{"line":498,"column":4,"offset":14688},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"kubectl create -f nginx-service.yaml","position":{"start":{"line":500,"column":1,"offset":14690},"end":{"line":500,"column":39,"offset":14728},"indent":[]}}],"position":{"start":{"line":500,"column":1,"offset":14690},"end":{"line":500,"column":39,"offset":14728},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now, if we run ","position":{"start":{"line":502,"column":1,"offset":14730},"end":{"line":502,"column":16,"offset":14745},"indent":[]}},{"type":"inlineCode","value":"kubectl get services","position":{"start":{"line":502,"column":16,"offset":14745},"end":{"line":502,"column":38,"offset":14767},"indent":[]}},{"type":"text","value":", we will now have two services.","position":{"start":{"line":502,"column":38,"offset":14767},"end":{"line":502,"column":70,"offset":14799},"indent":[]}}],"position":{"start":{"line":502,"column":1,"offset":14730},"end":{"line":502,"column":70,"offset":14799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we run ","position":{"start":{"line":504,"column":1,"offset":14801},"end":{"line":504,"column":11,"offset":14811},"indent":[]}},{"type":"inlineCode","value":"kubectl describe service nginx-service","position":{"start":{"line":504,"column":11,"offset":14811},"end":{"line":504,"column":51,"offset":14851},"indent":[]}},{"type":"text","value":", we can see info about and that it is a ClusterIP and that the endpoints are assigned to the minions with Kubernetes managing this.","position":{"start":{"line":504,"column":51,"offset":14851},"end":{"line":504,"column":183,"offset":14983},"indent":[]}}],"position":{"start":{"line":504,"column":1,"offset":14801},"end":{"line":504,"column":183,"offset":14983},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So how do we connect?","position":{"start":{"line":506,"column":1,"offset":14985},"end":{"line":506,"column":22,"offset":15006},"indent":[]}}],"position":{"start":{"line":506,"column":1,"offset":14985},"end":{"line":506,"column":22,"offset":15006},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"kubectl run busybox --generator=run-pod/v1 --image=busybox --restart=Never --tty -i","position":{"start":{"line":508,"column":1,"offset":15008},"end":{"line":508,"column":86,"offset":15093},"indent":[]}}],"position":{"start":{"line":508,"column":1,"offset":15008},"end":{"line":508,"column":86,"offset":15093},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once it is running, we should be able to do ","position":{"start":{"line":510,"column":1,"offset":15095},"end":{"line":510,"column":45,"offset":15139},"indent":[]}},{"type":"inlineCode","value":"wget -q0- http://10.254.197.123:8080","position":{"start":{"line":510,"column":45,"offset":15139},"end":{"line":510,"column":83,"offset":15177},"indent":[]}}],"position":{"start":{"line":510,"column":1,"offset":15095},"end":{"line":510,"column":83,"offset":15177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now this idea is referring to a cluster of this IP. So now we've tied everything together to have a clustered referred to with just one IP address. We no longer even have to know the other IPs.","position":{"start":{"line":512,"column":1,"offset":15179},"end":{"line":512,"column":194,"offset":15372},"indent":[]}}],"position":{"start":{"line":512,"column":1,"offset":15179},"end":{"line":512,"column":194,"offset":15372},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":514,"column":1,"offset":15374},"end":{"line":514,"column":4,"offset":15377},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Logs, Scaling and Recovery","position":{"start":{"line":516,"column":4,"offset":15382},"end":{"line":516,"column":30,"offset":15408},"indent":[]}}],"position":{"start":{"line":516,"column":1,"offset":15379},"end":{"line":516,"column":30,"offset":15408},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating Temporary Pods at the Command Line","position":{"start":{"line":518,"column":4,"offset":15413},"end":{"line":518,"column":47,"offset":15456},"indent":[]}}],"position":{"start":{"line":518,"column":1,"offset":15410},"end":{"line":518,"column":47,"offset":15456},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":521,"column":1,"offset":15459},"end":{"line":521,"column":31,"offset":15489},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":521,"column":31,"offset":15489}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"running-container-clusters-with-kuberentes\"\n    }}>{`Running Container Clusters with Kuberentes`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#running-container-clusters-with-kuberentes\"\n        }}>{`Running Container Clusters with Kuberentes`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#intro-to-kubernetes\"\n            }}>{`Intro to Kubernetes`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----kubernetes-architecture\"\n                }}>{`---- Kubernetes Architecture`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----introduction-to-yaml\"\n                }}>{`---- Introduction to YAML`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#kubernetes-setup-and-config\"\n            }}>{`Kubernetes Setup and Config`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----multi-pod-container-replication-controller\"\n                }}>{`---- Multi-Pod (Container) Replication Controller`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----create-and-deploy-service-definitions\"\n                }}>{`---- Create and Deploy Service Definitions`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#logs-scaling-and-recovery\"\n            }}>{`Logs, Scaling and Recovery`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----creating-temporary-pods-at-the-command-line\"\n                }}>{`---- Creating Temporary Pods at the Command Line`}</a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"intro-to-kubernetes\"\n    }}>{`Intro to Kubernetes`}</h2>\n    <p>{`k8s is an open source container cluster manager.`}</p>\n    <p>{`Google donated it under the Apache Commons license.`}</p>\n    <p>{`It's obejctive is to provide a platform for deploying, scaling and operations of application containers across a cluster of hosts.`}</p>\n    <p>{`Google uses it to run billions of containers a day on Google Cloud.`}</p>\n    <p><strong parentName=\"p\">{`Components of Kubernetes`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Nodes`}</li>\n      <li parentName=\"ul\">{`Pods`}</li>\n      <li parentName=\"ul\">{`Labels`}</li>\n      <li parentName=\"ul\">{`Selectors`}</li>\n      <li parentName=\"ul\">{`Controllers`}</li>\n      <li parentName=\"ul\">{`Services`}</li>\n      <li parentName=\"ul\">{`Control Page`}</li>\n      <li parentName=\"ul\">{`API`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"kubernetes-architecture\"\n    }}>{`Kubernetes Architecture`}</h2>\n    <p>{`We will end up with one `}<inlineCode parentName=\"p\">{`Master/Controller`}</inlineCode>{` which can have `}<em parentName=\"p\">{`n`}</em>{` Minions, which can have `}<em parentName=\"p\">{`n`}</em>{` pods which themselves can container `}<em parentName=\"p\">{`n`}</em>{` containers.`}</p>\n    <p><strong parentName=\"p\">{`Minions (Nodes)`}</strong></p>\n    <p>{`These are the physical/virtual container clients. They host the various containers within the cluster.`}</p>\n    <p>{`Each of them run `}<inlineCode parentName=\"p\">{`ETCD`}</inlineCode>{` (a key pair management and communication service) - it's how we can keep everything in sync and the `}<inlineCode parentName=\"p\">{`Kubernetes Proxy`}</inlineCode>{`.`}</p>\n    <p>{`Docker must be installed on each of these `}<inlineCode parentName=\"p\">{`minions`}</inlineCode>{` as well.`}</p>\n    <p><strong parentName=\"p\">{`Pods`}</strong></p>\n    <p>{`One or more containers. These containers are then guarenteed by the `}<inlineCode parentName=\"p\">{`Master/Controller`}</inlineCode>{` to be located on the same host machine in order to facilitate sharing of resources.`}</p>\n    <p>{`Pods are assigned unique IPs within each cluster.`}</p>\n    <p>{`Pods can container definitions of disk volumes or share, and then provide access from those to all the members (containers) within the pod.`}</p>\n    <p><strong parentName=\"p\">{`Labels`}</strong></p>\n    <p>{`Clients can attach \"key-value pairs\" to any object in the system (like Pods or Minions). The become the labels that identify them in the config and management of them.`}</p>\n    <p><strong parentName=\"p\">{`Selectors`}</strong></p>\n    <p>{`Label Selectors represent queries that are made against those labels. The resolve to the corresponding matching objects.`}</p>\n    <p>{`These two items are the primary way that grouping is done in Kubernetes and determine which components that a given operation applies to when indicated.`}</p>\n    <p><strong parentName=\"p\">{`Controllers`}</strong></p>\n    <p>{`These are used in the management of your cluster. Controllers are the mechanism by which your desired configuration state is enforced.`}</p>\n    <p>{`Controllers manage a set of pods and - depending on the desired configuration state - may engage other controllers to handle replication and scaling (Replication Controller) of X number of containers and pods across the cluster. it is also responsible for replacing any container in a pod that fails (based on the desired state of the cluster).`}</p>\n    <p>{`Other controllers that can be engaged include a DaemonSet Controller (enforces a 1 to 1 ratio of pods to minions) and a Job Controller (that runs pods to \"completion\" such as in batch jobs).`}</p>\n    <p>{`Each set of pods any controller manages is determined by the label selectors that are part of its definition.`}</p>\n    <p><strong parentName=\"p\">{`Services`}</strong></p>\n    <p>{`Services allow pods to `}<inlineCode parentName=\"p\">{`work together`}</inlineCode>{` eg multi-tiered application eg. web layer, db layer etc. are defined by the label selector.`}</p>\n    <p>{`Kubernetes can then provide service discovery and handle routing with the static IP for each pod as well as load balancing (round robin based) connections to that service among the pods that match the label selector indicated.`}</p>\n    <p>{`By default, although a service is only exposed inside a cluster, it can also be exposed outside a cluster as needed.`}</p>\n    <h2 {...{\n      \"id\": \"introduction-to-yaml\"\n    }}>{`Introduction to YAML`}</h2>\n    <p><inlineCode parentName=\"p\">{`Yet Another Markup Language`}</inlineCode>{`, although it moved to `}<inlineCode parentName=\"p\">{`YAML Ain't Markup Language`}</inlineCode></p>\n    <p>{`It's a data serialisation format. It's designed to be easy to map to high level languages.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`--- # Our Favourite Movies of All Time\n- The Terminator\n- Star Wars\n`}</code></pre>\n    <p>{`It is highly dependent on the dashes and indentations.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"kubernetes-setup-and-config\"\n    }}>{`Kubernetes Setup and Config`}</h2>\n    <p>{`Ensure that for your nodes etc and the control-master that you apt-get/yum install `}<inlineCode parentName=\"p\">{`ntp`}</inlineCode></p>\n    <p>{`We use `}<inlineCode parentName=\"p\">{`ntp`}</inlineCode>{` for accurate reporting. Ensure for each node you use `}<inlineCode parentName=\"p\">{`systemctl enable ntpd && sysmctl start ntpd`}</inlineCode>{`.`}</p>\n    <p>{`To ensure that they can all communicate, edit the `}<inlineCode parentName=\"p\">{`/etc/hosts`}</inlineCode>{` file and paste in the IP addresses and names of the minions. That hosts will allow you to ping that minion name.`}</p>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`master/controller`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`vim /etc/yum.repos.d/virt7-docker-common-release.repo`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`[virt7-docker-common-release]\nname=virt7-docker-common-release\nbaseurl=http://cbs.centos.org/repos/virt7-docker-common-release/x86_64/0s/\ngpgcheck=0\n`}</code></pre>\n    <p>{`Then hit `}<inlineCode parentName=\"p\">{`yum update`}</inlineCode>{`.`}</p>\n    <p>{`Ensure `}<inlineCode parentName=\"p\">{`systemctl status [iptables|firewalld]`}</inlineCode>{` are not running.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Now to ensure that we can share and communicate values, we will install \\`etcd\\` and \\`kubernetes\\`.\n\n\\`yum install -y --enablerepo=virt7-docker-common-release kubernetes docker\\`\n\n## Install and Configure the Master Controller\n\nFor the master, we want to edit the Kubernetes config file.\n\n__Master Kube Config__\n`}</code></pre>\n    <p>{`cd /etc/kubernetes\nvim config`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`In the file, the \\`KUBE_LOTOSTDERR\\` we want one, \\`KUBE_LOG_LEBEL\\` can be set as 0 for debug, \\`KUBE_ALLOW_PRIV\\` can be left as false - it is a way to allow any docker container to run in our kube cluster, but we can learn about this later. \\`KUBE_MASTER\\` we want to change to ensure that it binds to an interface that we can communicate with. It will default at localhost, so for this example we would do something like \\`--master=http://centos-master:8080\\` where centos-master is what we set up in \\`/etc/hosts\\`\n\nWe will then add \\`KUBE_ETCD_SERVERS=\"--etcd-servers=http://centos-master:2379\"\\`\n\n__Setting up etcd__\n`}</code></pre>\n    <p>{`cd /etc/etcd\nvim etcd.conf`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`In the file, we want to change \\`ETCD_LISTEN_CLIENT_URLS=\"http://0.0.0.0:2379\"\\` and the same value in the cluster section for \\`ETCD_ADVERTISE_CLIENT_URLS\\`\n\n__Editing the Kubernetes APIServer___\n`}</code></pre>\n    <p>{`cd /etc/kubernetes\nvim apiserver`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Inside, we need to change to the following for the following fields:\n`}</code></pre>\n    <p>{`KUBE_API_ADDRESS=\"--address=0.0.0.0\"\nKUBE_API_PORT=\"--port=8080\"\nKUBELET_PORT=\"--kubelet-port=10250\"`}</p>\n    <p>{`// for the basic config, we can comment out the KUBE_ADMISSION_CONTROL`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`__systemctl enable___\n\nFinally, we want to enable the following with the command:\n`}</code></pre>\n    <p>{`systemctl enable etcd kube-apiserver kube-controller-manager kube-scheduler\nsystemctl start etcd kube-apiserver kube-controller-manager kube-scheduler\nsystemctl status etcd kube-apiserver kube-controller-manager kube-scheduler | grep\"(running)\" | wc -l`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Install and Configure the Minions\n\nAt this stage, we should be able to see the master controller from the minions.\n\n__Minion Kube Config__\n`}</code></pre>\n    <p>{`KUBE_MASTER=\"--master=`}<a parentName=\"p\" {...{\n        \"href\": \"http://centos-master:8080\"\n      }}>{`http://centos-master:8080`}</a>{`\"`}</p>\n    <p>{`// add the following\nKUBE_ETCD_SERVERS=\"--etcd-server=`}<a parentName=\"p\" {...{\n        \"href\": \"http://centos-master:2379\"\n      }}>{`http://centos-master:2379`}</a>{`\"`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`__Kublet Config__\n\nEdit the \\`/etc/kubernetes/kublet\\` file.\n`}</code></pre>\n    <p>{`KUBELET_ADDRESS=\"--address=0.0.0.0\"`}</p>\n    <p>{`KUBELET_PORT=\"--port=102050\"`}</p>\n    <p>{`KUBELET_HOSTNAME=\"--hostname-override=centos-minion1\"`}</p>\n    <p>{`KUBELET_API_SERVER=\"--api-servers=`}<a parentName=\"p\" {...{\n        \"href\": \"http://centos-master:8080\"\n      }}>{`http://centos-master:8080`}</a>{`\"`}</p>\n    <p>{`// comment out pod_infra_container`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Afterwards, ensure you run the following:\n`}</code></pre>\n    <p>{`systemctl enable kube-proxy kubelet docker\nsystemctl start kube-proxy kubelet docker\nsystemctl status kube-proxy kubelet docker | grep \"(running)\" | wc-l`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Exploring the Environment\n\nWe will use \\`kubectl\\` from the command line to control the cluster manager.\n\nMain functions:\n`}</code></pre>\n    <p>{`// list of registered nodes for the cluster\nkubectl get nodes`}</p>\n    <p>{`// to get help on it\nman kubectl-get`}</p>\n    <p>{`// how to get the ip addresses/info\nkubetrl describe nodes`}</p>\n    <p>{`// getting the json info\nkubectl get nodes -o jsonpath='{.items`}{`[*]`}{`.status.addresses`}{`[?(@.type==\"ExternalIP\")]`}{`.address}'`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`***\n\n## Pods, Tags and Services\n\n## Create and Deploy Pod Definitions\n\nLet's start running containers in pods in our cluster.\n\nFor configuration, you can use both \\`json\\` or \\`yaml\\` file format. From a definitions standpoint, it may be better for the current input configuration.\n\n\\`Desired State\\` for our system is a key concept. It's the only responsibility of Kubernetes to match the defined \\`desired state\\`.\n\nOn the master node, \\`cd Builds\\` and inside that directory \\`vim nginx.yaml\\`\n`}</code></pre>\n    <p>{`apiVersion: v1\nkind: Pod\nmetadata:\nname: nginx\nspec:\ncontainers: - name: nginx\nimage: nginx:1.7.9 # this is not the latest - used for a reason\nports: - containerPort: 80`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`If we now use \\`kubectl get pods\\`, we should get no pods that are running.\n\nThat will be because there are no containers running on any minions.\n\nRun \\`kubectl create -f ./nginx.yaml\\` and we'll get a notification.\n\n\\`kubectl get pods\\` should now return results and the minion should now have a container running!\n\n__Describing a pod__\n\n\\`kubectl describe pod nginx\\`\n\nThis will tell us a number of things including IDs assigned to the minion, labels if they are assigned, IP etc and info on the containers.\n\nThe events will also describe how the container has gone.\n\n__Accessing the pod from master___\n\nCan we ping that address? No. The reason is that we have no extenal route to that pod. What we can do is run a busy-box image. This will allow us to connect to or test our container.\n`}</code></pre>\n    <p>{`// -t is not --tty for kubectl\nkubectl run busybox --image=busybox --restart=Never --tty -i --generator=run-pod/v1`}</p>\n    <p>{`// this will spin up the pod called busybox\n// we will then be in the command line for that pod\n// If we have this pod running within the minion\n// we will then have access to other pods on the\n// same environment\nwget -q0- `}<a parentName=\"p\" {...{\n        \"href\": \"http://172.1.0.2\"\n      }}>{`http://172.1.0.2`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`To clean up the system, we can use \\`kubectl delete pod podName\\`\n\nFrom the master, we can then see that the pod is no longer running.\n\nWe can also forward temporarily our ports to a remote copy. We can do this with port forward.\n`}</code></pre>\n    <p>{`kubectl get pods\nkubectl create -f nginx.yaml\nkubectl get pods # will show the pods`}</p>\n    <p>{`// to forward ports\n// & means to run in the background\n// this will return a port above 34000 - otherwise we can specify\nkubectl port-forward nginx :80 &\n// from still in the master\nwget -q0- `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:34853\"\n      }}>{`http://localhost:34853`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Tags, Labels and Selectors\n\nCreate \\`nginx-pod-label.yaml\\`\n`}</code></pre>\n    <p>{`apiVersion: v1\nkind: Pod\nmetadata:\nname: nginx\nlabels:\napp: nginx\nspec:\ncontainers: - name: nginx\nimage: nginx:1.7.9 # this is not the latest - used for a reason\nports: - containerPort: 80`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{``}</code></pre>\n    <p>{`kubectl create -f nginx-pod-label.yaml\nkubectl get pods # will be running\nkubectl get -l app=nginx`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`If we copy that .yaml file and rename \\`nginx\\` to \\`nginx2\\`, we can get info just by searching for that name.\n\nIf we also do \\`kubectl decribe pod -l app=nginx2\\`, we'd just get the info for that name.\n\n## Deployment State\n\nCreate \\`nginx-deployment-prod.yaml\\`\n\nThis will make a number of changes. This will go from a simple pod definition to a deployment production set.\n`}</code></pre>\n    <p>{`apiVersion: extensions/v1beta1 # this should now be in v1.3\nkind: Deployment\nmetadata:\nname: nginx-deployment-prod\nspec:\nreplicas: 1\ntemplate: # this will be for the pod replicas\nmetadata:\nlabels:\napp: nginx-deployment-prod\nspec:\ncontainers: - name: nginx\nimage: nginx:1.7.9 # this is not the latest - used for a reason\nports: - containerPort: 80`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{``}</code></pre>\n    <p>{`kubectl create -f -nginx-deployent-prod.yaml\nkubectl get pods\n// this will now return the name + the id concatentated to the end!\nkubectl get deployments\n// this will now give us the nginx-deployment-prod with details`}</p>\n    <p>{`This seems like we're making it more complex than we need to be... but...`}</p>\n    <p>{`Create `}<inlineCode parentName=\"p\">{`nginx-deployment-dev.yaml`}</inlineCode>{` and just change everything to dev.`}</p>\n    <p>{`Again, create the .yaml kubectl. It will now show two deployments.`}</p>\n    <p>{`If we create `}<inlineCode parentName=\"p\">{`nginx-deployment-dev-update.yaml`}</inlineCode>{` and just change a few things. If we run `}<inlineCode parentName=\"p\">{`kubectl apply -f nginx-deployment-dev-update.yaml`}</inlineCode>{` and it will update by apply the contents of that to the name deployment cluster.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`kubectl describe deployments ...`}</inlineCode>{`, we can get the details with things like the `}<inlineCode parentName=\"p\">{`StrategyType`}</inlineCode>{` etc.`}</p>\n    <h2 {...{\n      \"id\": \"multi-pod-container-replication-controller\"\n    }}>{`Multi-Pod (Container) Replication Controller`}</h2>\n    <p>{`Until now, we have been creating one or more pods either directly or using a file. However, there has only been one container in each of the pods that we've been working with.`}</p>\n    <p>{`We can use the replication controller to do more than one container in a pod. It will allow us to deploy 1 to n pods of a particular container.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl get pods # we will initially have nothing\n\nvim nginx-multi-label.yaml\n`}</code></pre>\n    <p><strong parentName=\"p\">{`nginx-multi-label.yaml`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`apiVersion: v1\nkind: ReplicationController\nmetadata:\n    name: nginx-www\nspec:\n    replicas: 3\n    select:\n        app: nginx\n    template:\n        metadata:\n            name: nginx\n            labels:\n                app: nginx\n            spec:\n                containers:\n                    - name: nginx\n                        image: nginx\n                        ports:\n                        - containerPort: 80\n`}</code></pre>\n    <p>{`Ensure that if you're going to do this, start the `}<inlineCode parentName=\"p\">{`kubelet`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`kube-proxy`}</inlineCode>{` on the other nodes.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl get nodes\n# if everything is on, all three minions should report that they are ready\nkubectl create -f nginx-multi-label.yaml\n# replicationcontroller \"nginx-www\" created\nkubectl get pods\n# will show the pods\nkubectrl describe replicationcontroller\n# tells us 3 running and 3 pods\nkubectl describe pods\n# it will show all of our pods being happy!\nkubectl get services\n# gives us just the one service\n`}</code></pre>\n    <p>{`If we delete a pod, we will still end up having a service! When we create a definition, that defines the expected state of the entire environment!`}</p>\n    <p>{`If there is an app error etc. the service will ensure that it gets back to the expected state.`}</p>\n    <h2 {...{\n      \"id\": \"create-and-deploy-service-definitions\"\n    }}>{`Create and Deploy Service Definitions`}</h2>\n    <p>{`Starting to put things together.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl get replicationcontrollers\nkubectl get pods\nkubectl get nodes\n`}</code></pre>\n    <p>{`Time to use the multicontainer configuration.`}</p>\n    <p><strong parentName=\"p\">{`nginx-multi-label.yaml`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`apiVersion: v1\nkind: ReplicationController\nmetadata:\n    name: nginx-www\nspec:\n    replicas: 3\n    select:\n        app: nginx\n    template:\n        metadata:\n            name: nginx\n            labels:\n                app: nginx\n            spec:\n                containers:\n                    - name: nginx\n                        image: nginx\n                        ports:\n                        - containerPort: 80\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`kubectl create -f nginx-multi-label.yaml`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Defining an nginx service`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`apiVersion: v1\nkind: Service\nmetadata:\n    data: nginx-service\nspec:\n    ports:\n        port: 8080\n        targetPort: 80\n        protocol: TCP\n    selector:\n        app: nginx\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`kubectl create -f nginx-service.yaml`}</inlineCode></p>\n    <p>{`Now, if we run `}<inlineCode parentName=\"p\">{`kubectl get services`}</inlineCode>{`, we will now have two services.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`kubectl describe service nginx-service`}</inlineCode>{`, we can see info about and that it is a ClusterIP and that the endpoints are assigned to the minions with Kubernetes managing this.`}</p>\n    <p>{`So how do we connect?`}</p>\n    <p><inlineCode parentName=\"p\">{`kubectl run busybox --generator=run-pod/v1 --image=busybox --restart=Never --tty -i`}</inlineCode></p>\n    <p>{`Once it is running, we should be able to do `}<inlineCode parentName=\"p\">{`wget -q0- http://10.254.197.123:8080`}</inlineCode></p>\n    <p>{`Now this idea is referring to a cluster of this IP. So now we've tied everything together to have a clustered referred to with just one IP address. We no longer even have to know the other IPs.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"logs-scaling-and-recovery\"\n    }}>{`Logs, Scaling and Recovery`}</h2>\n    <h2 {...{\n      \"id\": \"creating-temporary-pods-at-the-command-line\"\n    }}>{`Creating Temporary Pods at the Command Line`}</h2>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}