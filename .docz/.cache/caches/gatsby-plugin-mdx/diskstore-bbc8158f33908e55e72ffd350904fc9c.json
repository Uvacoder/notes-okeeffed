{"expireTime":9007200867335893000,"key":"gatsby-plugin-mdx-entire-payload-501aca1178652e35d57cfb161ea9c285-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"How to make a video game","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":27,"offset":192},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":27,"offset":192},"indent":[]}},{"type":"jsx","value":"<!-- TOC -->","position":{"start":{"line":9,"column":1,"offset":194},"end":{"line":9,"column":13,"offset":206},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#how-to-make-a-video-game","children":[{"type":"text","value":"How to make a video game","position":{"start":{"line":11,"column":6,"offset":213},"end":{"line":11,"column":30,"offset":237},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":212},"end":{"line":11,"column":58,"offset":265},"indent":[]}},{"type":"text","value":" - ","position":{"start":{"line":11,"column":58,"offset":265},"end":{"line":11,"column":61,"offset":268},"indent":[]}},{"type":"link","title":null,"url":"#what-is-a-game-engine","children":[{"type":"text","value":"What is a game engine?","position":{"start":{"line":11,"column":62,"offset":269},"end":{"line":11,"column":84,"offset":291},"indent":[]}}],"position":{"start":{"line":11,"column":61,"offset":268},"end":{"line":11,"column":109,"offset":316},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":212},"end":{"line":11,"column":109,"offset":316},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#part-2","children":[{"type":"text","value":"Part 2","position":{"start":{"line":12,"column":10,"offset":326},"end":{"line":12,"column":16,"offset":332},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":325},"end":{"line":12,"column":26,"offset":342},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":325},"end":{"line":12,"column":26,"offset":342},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#unity-interface","children":[{"type":"text","value":"Unity Interface","position":{"start":{"line":13,"column":14,"offset":356},"end":{"line":13,"column":29,"offset":371},"indent":[]}}],"position":{"start":{"line":13,"column":13,"offset":355},"end":{"line":13,"column":48,"offset":390},"indent":[]}}],"position":{"start":{"line":13,"column":13,"offset":355},"end":{"line":13,"column":48,"offset":390},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#prefabs","children":[{"type":"text","value":"Prefabs","position":{"start":{"line":14,"column":18,"offset":408},"end":{"line":14,"column":25,"offset":415},"indent":[]}}],"position":{"start":{"line":14,"column":17,"offset":407},"end":{"line":14,"column":36,"offset":426},"indent":[]}}],"position":{"start":{"line":14,"column":17,"offset":407},"end":{"line":14,"column":36,"offset":426},"indent":[]}}],"position":{"start":{"line":14,"column":13,"offset":403},"end":{"line":14,"column":36,"offset":426},"indent":[]}}],"position":{"start":{"line":14,"column":13,"offset":403},"end":{"line":14,"column":36,"offset":426},"indent":[]}}],"position":{"start":{"line":13,"column":9,"offset":351},"end":{"line":14,"column":36,"offset":426},"indent":[9]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#setup-the-project","children":[{"type":"text","value":"Setup the project","position":{"start":{"line":15,"column":14,"offset":440},"end":{"line":15,"column":31,"offset":457},"indent":[]}}],"position":{"start":{"line":15,"column":13,"offset":439},"end":{"line":15,"column":52,"offset":478},"indent":[]}}],"position":{"start":{"line":15,"column":13,"offset":439},"end":{"line":15,"column":52,"offset":478},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":435},"end":{"line":15,"column":52,"offset":478},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#navigating-the-scene-view","children":[{"type":"text","value":"Navigating the Scene View","position":{"start":{"line":16,"column":14,"offset":492},"end":{"line":16,"column":39,"offset":517},"indent":[]}}],"position":{"start":{"line":16,"column":13,"offset":491},"end":{"line":16,"column":68,"offset":546},"indent":[]}}],"position":{"start":{"line":16,"column":13,"offset":491},"end":{"line":16,"column":68,"offset":546},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":487},"end":{"line":16,"column":68,"offset":546},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#position-the-camera","children":[{"type":"text","value":"Position the camera","position":{"start":{"line":17,"column":14,"offset":560},"end":{"line":17,"column":33,"offset":579},"indent":[]}}],"position":{"start":{"line":17,"column":13,"offset":559},"end":{"line":17,"column":56,"offset":602},"indent":[]}}],"position":{"start":{"line":17,"column":13,"offset":559},"end":{"line":17,"column":56,"offset":602},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":555},"end":{"line":17,"column":56,"offset":602},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#image-effects-and-asset-stores","children":[{"type":"text","value":"Image effects and asset stores","position":{"start":{"line":18,"column":14,"offset":616},"end":{"line":18,"column":44,"offset":646},"indent":[]}}],"position":{"start":{"line":18,"column":13,"offset":615},"end":{"line":18,"column":78,"offset":680},"indent":[]}}],"position":{"start":{"line":18,"column":13,"offset":615},"end":{"line":18,"column":78,"offset":680},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":611},"end":{"line":18,"column":78,"offset":680},"indent":[]}}],"position":{"start":{"line":13,"column":9,"offset":351},"end":{"line":18,"column":78,"offset":680},"indent":[9,9,9,9,9]}}],"position":{"start":{"line":12,"column":5,"offset":321},"end":{"line":18,"column":78,"offset":680},"indent":[5,5,5,5,5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#programming-games","children":[{"type":"text","value":"Programming Games","position":{"start":{"line":19,"column":10,"offset":690},"end":{"line":19,"column":27,"offset":707},"indent":[]}}],"position":{"start":{"line":19,"column":9,"offset":689},"end":{"line":19,"column":48,"offset":728},"indent":[]}}],"position":{"start":{"line":19,"column":9,"offset":689},"end":{"line":19,"column":48,"offset":728},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#programming-with-c-with-unity","children":[{"type":"text","value":"Programming with C# with Unity","position":{"start":{"line":20,"column":14,"offset":742},"end":{"line":20,"column":44,"offset":772},"indent":[]}}],"position":{"start":{"line":20,"column":13,"offset":741},"end":{"line":20,"column":77,"offset":805},"indent":[]}}],"position":{"start":{"line":20,"column":13,"offset":741},"end":{"line":20,"column":77,"offset":805},"indent":[]}}],"position":{"start":{"line":20,"column":9,"offset":737},"end":{"line":20,"column":77,"offset":805},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#gather-player-input","children":[{"type":"text","value":"Gather Player Input","position":{"start":{"line":21,"column":14,"offset":819},"end":{"line":21,"column":33,"offset":838},"indent":[]}}],"position":{"start":{"line":21,"column":13,"offset":818},"end":{"line":21,"column":56,"offset":861},"indent":[]}}],"position":{"start":{"line":21,"column":13,"offset":818},"end":{"line":21,"column":56,"offset":861},"indent":[]}}],"position":{"start":{"line":21,"column":9,"offset":814},"end":{"line":21,"column":56,"offset":861},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#moving-a-player-with-animation","children":[{"type":"text","value":"Moving a player with animation","position":{"start":{"line":22,"column":14,"offset":875},"end":{"line":22,"column":44,"offset":905},"indent":[]}}],"position":{"start":{"line":22,"column":13,"offset":874},"end":{"line":22,"column":78,"offset":939},"indent":[]}}],"position":{"start":{"line":22,"column":13,"offset":874},"end":{"line":22,"column":78,"offset":939},"indent":[]}}],"position":{"start":{"line":22,"column":9,"offset":870},"end":{"line":22,"column":78,"offset":939},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#quaternions","children":[{"type":"text","value":"Quaternions","position":{"start":{"line":23,"column":14,"offset":953},"end":{"line":23,"column":25,"offset":964},"indent":[]}}],"position":{"start":{"line":23,"column":13,"offset":952},"end":{"line":23,"column":40,"offset":979},"indent":[]}}],"position":{"start":{"line":23,"column":13,"offset":952},"end":{"line":23,"column":40,"offset":979},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#target-rotation","children":[{"type":"text","value":"Target rotation","position":{"start":{"line":24,"column":18,"offset":997},"end":{"line":24,"column":33,"offset":1012},"indent":[]}}],"position":{"start":{"line":24,"column":17,"offset":996},"end":{"line":24,"column":52,"offset":1031},"indent":[]}}],"position":{"start":{"line":24,"column":17,"offset":996},"end":{"line":24,"column":52,"offset":1031},"indent":[]}}],"position":{"start":{"line":24,"column":13,"offset":992},"end":{"line":24,"column":52,"offset":1031},"indent":[]}}],"position":{"start":{"line":24,"column":13,"offset":992},"end":{"line":24,"column":52,"offset":1031},"indent":[]}}],"position":{"start":{"line":23,"column":9,"offset":948},"end":{"line":24,"column":52,"offset":1031},"indent":[9]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#making-a-follow-camera","children":[{"type":"text","value":"Making a follow camera","position":{"start":{"line":25,"column":14,"offset":1045},"end":{"line":25,"column":36,"offset":1067},"indent":[]}}],"position":{"start":{"line":25,"column":13,"offset":1044},"end":{"line":25,"column":62,"offset":1093},"indent":[]}}],"position":{"start":{"line":25,"column":13,"offset":1044},"end":{"line":25,"column":62,"offset":1093},"indent":[]}}],"position":{"start":{"line":25,"column":9,"offset":1040},"end":{"line":25,"column":62,"offset":1093},"indent":[]}}],"position":{"start":{"line":20,"column":9,"offset":737},"end":{"line":25,"column":62,"offset":1093},"indent":[9,9,9,9,9]}}],"position":{"start":{"line":19,"column":5,"offset":685},"end":{"line":25,"column":62,"offset":1093},"indent":[5,5,5,5,5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#section-3","children":[{"type":"text","value":"Section 3","position":{"start":{"line":26,"column":10,"offset":1103},"end":{"line":26,"column":19,"offset":1112},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":1102},"end":{"line":26,"column":32,"offset":1125},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":1102},"end":{"line":26,"column":32,"offset":1125},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#adding-the-flies-to-the-swamp","children":[{"type":"text","value":"Adding the flies to the swamp","position":{"start":{"line":27,"column":14,"offset":1139},"end":{"line":27,"column":43,"offset":1168},"indent":[]}}],"position":{"start":{"line":27,"column":13,"offset":1138},"end":{"line":27,"column":76,"offset":1201},"indent":[]}}],"position":{"start":{"line":27,"column":13,"offset":1138},"end":{"line":27,"column":76,"offset":1201},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":1134},"end":{"line":27,"column":76,"offset":1201},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#adding-the-fly-pickup","children":[{"type":"text","value":"Adding the Fly Pickup","position":{"start":{"line":28,"column":14,"offset":1215},"end":{"line":28,"column":35,"offset":1236},"indent":[]}}],"position":{"start":{"line":28,"column":13,"offset":1214},"end":{"line":28,"column":60,"offset":1261},"indent":[]}}],"position":{"start":{"line":28,"column":13,"offset":1214},"end":{"line":28,"column":60,"offset":1261},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#pickup-particles","children":[{"type":"text","value":"Pickup Particles","position":{"start":{"line":29,"column":18,"offset":1279},"end":{"line":29,"column":34,"offset":1295},"indent":[]}}],"position":{"start":{"line":29,"column":17,"offset":1278},"end":{"line":29,"column":54,"offset":1315},"indent":[]}}],"position":{"start":{"line":29,"column":17,"offset":1278},"end":{"line":29,"column":54,"offset":1315},"indent":[]}}],"position":{"start":{"line":29,"column":13,"offset":1274},"end":{"line":29,"column":54,"offset":1315},"indent":[]}}],"position":{"start":{"line":29,"column":13,"offset":1274},"end":{"line":29,"column":54,"offset":1315},"indent":[]}}],"position":{"start":{"line":28,"column":9,"offset":1210},"end":{"line":29,"column":54,"offset":1315},"indent":[9]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#creating-the-enemy-in-the-game","children":[{"type":"text","value":"Creating the enemy in the game","position":{"start":{"line":30,"column":14,"offset":1329},"end":{"line":30,"column":44,"offset":1359},"indent":[]}}],"position":{"start":{"line":30,"column":13,"offset":1328},"end":{"line":30,"column":78,"offset":1393},"indent":[]}}],"position":{"start":{"line":30,"column":13,"offset":1328},"end":{"line":30,"column":78,"offset":1393},"indent":[]}}],"position":{"start":{"line":30,"column":9,"offset":1324},"end":{"line":30,"column":78,"offset":1393},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#monitor-player-health","children":[{"type":"text","value":"Monitor Player Health","position":{"start":{"line":31,"column":14,"offset":1407},"end":{"line":31,"column":35,"offset":1428},"indent":[]}}],"position":{"start":{"line":31,"column":13,"offset":1406},"end":{"line":31,"column":60,"offset":1453},"indent":[]}}],"position":{"start":{"line":31,"column":13,"offset":1406},"end":{"line":31,"column":60,"offset":1453},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1402},"end":{"line":31,"column":60,"offset":1453},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#managing-the-game-state","children":[{"type":"text","value":"Managing the game state","position":{"start":{"line":32,"column":14,"offset":1467},"end":{"line":32,"column":37,"offset":1490},"indent":[]}}],"position":{"start":{"line":32,"column":13,"offset":1466},"end":{"line":32,"column":64,"offset":1517},"indent":[]}}],"position":{"start":{"line":32,"column":13,"offset":1466},"end":{"line":32,"column":64,"offset":1517},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1462},"end":{"line":32,"column":64,"offset":1517},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":1134},"end":{"line":32,"column":64,"offset":1517},"indent":[9,9,9,9,9]}}],"position":{"start":{"line":26,"column":5,"offset":1098},"end":{"line":32,"column":64,"offset":1517},"indent":[5,5,5,5,5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#adding-audio","children":[{"type":"text","value":"Adding Audio","position":{"start":{"line":33,"column":10,"offset":1527},"end":{"line":33,"column":22,"offset":1539},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1526},"end":{"line":33,"column":38,"offset":1555},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1526},"end":{"line":33,"column":38,"offset":1555},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#game-audio","children":[{"type":"text","value":"Game audio","position":{"start":{"line":34,"column":14,"offset":1569},"end":{"line":34,"column":24,"offset":1579},"indent":[]}}],"position":{"start":{"line":34,"column":13,"offset":1568},"end":{"line":34,"column":38,"offset":1593},"indent":[]}}],"position":{"start":{"line":34,"column":13,"offset":1568},"end":{"line":34,"column":38,"offset":1593},"indent":[]}}],"position":{"start":{"line":34,"column":9,"offset":1564},"end":{"line":34,"column":38,"offset":1593},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#controlling-sounds-on-game-objects","children":[{"type":"text","value":"Controlling sounds on game objects","position":{"start":{"line":35,"column":14,"offset":1607},"end":{"line":35,"column":48,"offset":1641},"indent":[]}}],"position":{"start":{"line":35,"column":13,"offset":1606},"end":{"line":35,"column":86,"offset":1679},"indent":[]}}],"position":{"start":{"line":35,"column":13,"offset":1606},"end":{"line":35,"column":86,"offset":1679},"indent":[]}}],"position":{"start":{"line":35,"column":9,"offset":1602},"end":{"line":35,"column":86,"offset":1679},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#audio-mixing","children":[{"type":"text","value":"Audio mixing","position":{"start":{"line":36,"column":14,"offset":1693},"end":{"line":36,"column":26,"offset":1705},"indent":[]}}],"position":{"start":{"line":36,"column":13,"offset":1692},"end":{"line":36,"column":42,"offset":1721},"indent":[]}}],"position":{"start":{"line":36,"column":13,"offset":1692},"end":{"line":36,"column":42,"offset":1721},"indent":[]}}],"position":{"start":{"line":36,"column":9,"offset":1688},"end":{"line":36,"column":42,"offset":1721},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#exporting-the-game","children":[{"type":"text","value":"Exporting the game","position":{"start":{"line":37,"column":14,"offset":1735},"end":{"line":37,"column":32,"offset":1753},"indent":[]}}],"position":{"start":{"line":37,"column":13,"offset":1734},"end":{"line":37,"column":54,"offset":1775},"indent":[]}}],"position":{"start":{"line":37,"column":13,"offset":1734},"end":{"line":37,"column":54,"offset":1775},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1730},"end":{"line":37,"column":54,"offset":1775},"indent":[]}}],"position":{"start":{"line":34,"column":9,"offset":1564},"end":{"line":37,"column":54,"offset":1775},"indent":[9,9,9]}}],"position":{"start":{"line":33,"column":5,"offset":1522},"end":{"line":37,"column":54,"offset":1775},"indent":[5,5,5,5]}}],"position":{"start":{"line":12,"column":5,"offset":321},"end":{"line":37,"column":54,"offset":1775},"indent":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":11,"column":1,"offset":208},"end":{"line":37,"column":54,"offset":1775},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":11,"column":1,"offset":208},"end":{"line":37,"column":54,"offset":1775},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!-- /TOC -->","position":{"start":{"line":39,"column":1,"offset":1777},"end":{"line":39,"column":14,"offset":1790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How are games made?","position":{"start":{"line":41,"column":1,"offset":1792},"end":{"line":41,"column":20,"offset":1811},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1792},"end":{"line":41,"column":20,"offset":1811},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Game designers","position":{"start":{"line":43,"column":5,"offset":1817},"end":{"line":43,"column":19,"offset":1831},"indent":[]}}],"position":{"start":{"line":43,"column":5,"offset":1817},"end":{"line":43,"column":19,"offset":1831},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1813},"end":{"line":43,"column":19,"offset":1831},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Game artists","position":{"start":{"line":44,"column":5,"offset":1836},"end":{"line":44,"column":17,"offset":1848},"indent":[]}}],"position":{"start":{"line":44,"column":5,"offset":1836},"end":{"line":44,"column":17,"offset":1848},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1832},"end":{"line":44,"column":17,"offset":1848},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Game developers","position":{"start":{"line":45,"column":5,"offset":1853},"end":{"line":45,"column":20,"offset":1868},"indent":[]}}],"position":{"start":{"line":45,"column":5,"offset":1853},"end":{"line":45,"column":20,"offset":1868},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1849},"end":{"line":45,"column":20,"offset":1868},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1813},"end":{"line":45,"column":20,"offset":1868},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These roles can be between one or thousands of people.","position":{"start":{"line":47,"column":1,"offset":1870},"end":{"line":47,"column":55,"offset":1924},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1870},"end":{"line":47,"column":55,"offset":1924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Game artists deal with what you see and hear in the game.","position":{"start":{"line":49,"column":1,"offset":1926},"end":{"line":49,"column":58,"offset":1983},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1926},"end":{"line":49,"column":58,"offset":1983},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"What is a game engine?","position":{"start":{"line":51,"column":5,"offset":1989},"end":{"line":51,"column":27,"offset":2011},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1985},"end":{"line":51,"column":27,"offset":2011},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Game engines help deal with things like the physics and rendering graphics.","position":{"start":{"line":53,"column":1,"offset":2013},"end":{"line":53,"column":76,"offset":2088},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2013},"end":{"line":53,"column":76,"offset":2088},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A game engine is a framework for building games that helps coordinate things like assets and gives you all the tools you need to start coding.","position":{"start":{"line":55,"column":1,"offset":2090},"end":{"line":55,"column":143,"offset":2232},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2090},"end":{"line":55,"column":143,"offset":2232},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A game engine is not a 3D art engine.","position":{"start":{"line":57,"column":1,"offset":2234},"end":{"line":57,"column":38,"offset":2271},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2234},"end":{"line":57,"column":38,"offset":2271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We are Unity as it is easier to learn when you are just getting started.","position":{"start":{"line":59,"column":1,"offset":2273},"end":{"line":59,"column":73,"offset":2345},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2273},"end":{"line":59,"column":73,"offset":2345},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Part 2","position":{"start":{"line":61,"column":4,"offset":2350},"end":{"line":61,"column":10,"offset":2356},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2347},"end":{"line":61,"column":10,"offset":2356},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Unity Interface","position":{"start":{"line":63,"column":5,"offset":2362},"end":{"line":63,"column":20,"offset":2377},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2358},"end":{"line":63,"column":20,"offset":2377},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create a ","position":{"start":{"line":65,"column":1,"offset":2379},"end":{"line":65,"column":10,"offset":2388},"indent":[]}},{"type":"inlineCode","value":"_Scenes","position":{"start":{"line":65,"column":10,"offset":2388},"end":{"line":65,"column":19,"offset":2397},"indent":[]}},{"type":"text","value":" folder.","position":{"start":{"line":65,"column":19,"offset":2397},"end":{"line":65,"column":27,"offset":2405},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2379},"end":{"line":65,"column":27,"offset":2405},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Game assets are ","position":{"start":{"line":67,"column":1,"offset":2407},"end":{"line":67,"column":17,"offset":2423},"indent":[]}},{"type":"inlineCode","value":"a piece of media for the game","position":{"start":{"line":67,"column":17,"offset":2423},"end":{"line":67,"column":48,"offset":2454},"indent":[]}},{"type":"text","value":". This could be sounds, scripts or models etc.","position":{"start":{"line":67,"column":48,"offset":2454},"end":{"line":67,"column":94,"offset":2500},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2407},"end":{"line":67,"column":94,"offset":2500},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Prefabs","position":{"start":{"line":69,"column":6,"offset":2507},"end":{"line":69,"column":13,"offset":2514},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2502},"end":{"line":69,"column":13,"offset":2514},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Stores several objects together. An example ","position":{"start":{"line":71,"column":1,"offset":2516},"end":{"line":71,"column":45,"offset":2560},"indent":[]}},{"type":"inlineCode","value":"prefab","position":{"start":{"line":71,"column":45,"offset":2560},"end":{"line":71,"column":53,"offset":2568},"indent":[]}},{"type":"text","value":" is the frog which contains the 3d model, the texture and the animation together.","position":{"start":{"line":71,"column":53,"offset":2568},"end":{"line":71,"column":134,"offset":2649},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2516},"end":{"line":71,"column":134,"offset":2649},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Setup the project","position":{"start":{"line":73,"column":5,"offset":2655},"end":{"line":73,"column":22,"offset":2672},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2651},"end":{"line":73,"column":22,"offset":2672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Games use ","position":{"start":{"line":75,"column":1,"offset":2674},"end":{"line":75,"column":11,"offset":2684},"indent":[]}},{"type":"inlineCode","value":"real time rendering","position":{"start":{"line":75,"column":11,"offset":2684},"end":{"line":75,"column":32,"offset":2705},"indent":[]}},{"type":"text","value":" where it is drawn at the frame rate. Generally you want to aim for 60fps or higher. This will make is look as smooth as possible.","position":{"start":{"line":75,"column":32,"offset":2705},"end":{"line":75,"column":162,"offset":2835},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2674},"end":{"line":75,"column":162,"offset":2835},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can go to ","position":{"start":{"line":77,"column":1,"offset":2837},"end":{"line":77,"column":14,"offset":2850},"indent":[]}},{"type":"inlineCode","value":"Window > Lighting > Settings","position":{"start":{"line":77,"column":14,"offset":2850},"end":{"line":77,"column":44,"offset":2880},"indent":[]}},{"type":"text","value":" to adjust things about how the scene is lit.","position":{"start":{"line":77,"column":44,"offset":2880},"end":{"line":77,"column":89,"offset":2925},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2837},"end":{"line":77,"column":89,"offset":2925},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To adjust the player settings go to ","position":{"start":{"line":79,"column":1,"offset":2927},"end":{"line":79,"column":37,"offset":2963},"indent":[]}},{"type":"inlineCode","value":"Edit > Project Settings > Player","position":{"start":{"line":79,"column":37,"offset":2963},"end":{"line":79,"column":71,"offset":2997},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":79,"column":71,"offset":2997},"end":{"line":79,"column":72,"offset":2998},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2927},"end":{"line":79,"column":72,"offset":2998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For quality, go to ","position":{"start":{"line":81,"column":1,"offset":3000},"end":{"line":81,"column":20,"offset":3019},"indent":[]}},{"type":"inlineCode","value":"Edit > Project Settings > Quality","position":{"start":{"line":81,"column":20,"offset":3019},"end":{"line":81,"column":55,"offset":3054},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":81,"column":55,"offset":3054},"end":{"line":81,"column":56,"offset":3055},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3000},"end":{"line":81,"column":56,"offset":3055},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Navigating the Scene View","position":{"start":{"line":83,"column":5,"offset":3061},"end":{"line":83,"column":30,"offset":3086},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":3057},"end":{"line":83,"column":30,"offset":3086},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":85,"column":1,"offset":3088},"end":{"line":85,"column":5,"offset":3092},"indent":[]}},{"type":"inlineCode","value":"environment","position":{"start":{"line":85,"column":5,"offset":3092},"end":{"line":85,"column":18,"offset":3105},"indent":[]}},{"type":"text","value":" prefab links a bunch of Maya elements and groups them as a prefab.","position":{"start":{"line":85,"column":18,"offset":3105},"end":{"line":85,"column":85,"offset":3172},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":3088},"end":{"line":85,"column":85,"offset":3172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our environment prefab already has a light associated with it. Ensure after adding that you re-generate the light in the settings.","position":{"start":{"line":87,"column":1,"offset":3174},"end":{"line":87,"column":131,"offset":3304},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":3174},"end":{"line":87,"column":131,"offset":3304},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Anything with a green square is outlining a game object.","position":{"start":{"line":89,"column":1,"offset":3306},"end":{"line":89,"column":57,"offset":3362},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3306},"end":{"line":89,"column":57,"offset":3362},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After selecting an object, you can use the 3d axis to change the transform of the axis.","position":{"start":{"line":91,"column":1,"offset":3364},"end":{"line":91,"column":88,"offset":3451},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3364},"end":{"line":91,"column":88,"offset":3451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On the top left, we can change the tools from position to rotation etc and with similar methods to before, we can rotate the axis.","position":{"start":{"line":93,"column":1,"offset":3453},"end":{"line":93,"column":131,"offset":3583},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3453},"end":{"line":93,"column":131,"offset":3583},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can also just use the ","position":{"start":{"line":95,"column":1,"offset":3585},"end":{"line":95,"column":26,"offset":3610},"indent":[]}},{"type":"inlineCode","value":"qwer","position":{"start":{"line":95,"column":26,"offset":3610},"end":{"line":95,"column":32,"offset":3616},"indent":[]}},{"type":"text","value":" keys to change between tools.","position":{"start":{"line":95,"column":32,"offset":3616},"end":{"line":95,"column":62,"offset":3646},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3585},"end":{"line":95,"column":62,"offset":3646},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can also switch between ","position":{"start":{"line":97,"column":1,"offset":3648},"end":{"line":97,"column":28,"offset":3675},"indent":[]}},{"type":"inlineCode","value":"global","position":{"start":{"line":97,"column":28,"offset":3675},"end":{"line":97,"column":36,"offset":3683},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":97,"column":36,"offset":3683},"end":{"line":97,"column":41,"offset":3688},"indent":[]}},{"type":"inlineCode","value":"local","position":{"start":{"line":97,"column":41,"offset":3688},"end":{"line":97,"column":48,"offset":3695},"indent":[]}},{"type":"text","value":" space to help move things around.","position":{"start":{"line":97,"column":48,"offset":3695},"end":{"line":97,"column":82,"offset":3729},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3648},"end":{"line":97,"column":82,"offset":3729},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Position the camera","position":{"start":{"line":99,"column":5,"offset":3735},"end":{"line":99,"column":24,"offset":3754},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3731},"end":{"line":99,"column":24,"offset":3754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The scenes looks good so far, but it we need to update the camera.","position":{"start":{"line":101,"column":1,"offset":3756},"end":{"line":101,"column":67,"offset":3822},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3756},"end":{"line":101,"column":67,"offset":3822},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the top of the scene window, we have ","position":{"start":{"line":103,"column":1,"offset":3824},"end":{"line":103,"column":41,"offset":3864},"indent":[]}},{"type":"inlineCode","value":"scene","position":{"start":{"line":103,"column":41,"offset":3864},"end":{"line":103,"column":48,"offset":3871},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":103,"column":48,"offset":3871},"end":{"line":103,"column":50,"offset":3873},"indent":[]}},{"type":"inlineCode","value":"game","position":{"start":{"line":103,"column":50,"offset":3873},"end":{"line":103,"column":56,"offset":3879},"indent":[]}},{"type":"text","value":" tabs. If we select ","position":{"start":{"line":103,"column":56,"offset":3879},"end":{"line":103,"column":76,"offset":3899},"indent":[]}},{"type":"inlineCode","value":"game","position":{"start":{"line":103,"column":76,"offset":3899},"end":{"line":103,"column":82,"offset":3905},"indent":[]}},{"type":"text","value":", we get to see how the game will look when we play it. We can either write code to control to camera or change the transform.","position":{"start":{"line":103,"column":82,"offset":3905},"end":{"line":103,"column":208,"offset":4031},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3824},"end":{"line":103,"column":208,"offset":4031},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Image effects and asset stores","position":{"start":{"line":105,"column":5,"offset":4037},"end":{"line":105,"column":35,"offset":4067},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":4033},"end":{"line":105,"column":35,"offset":4067},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An image effect can change things like colours etc.","position":{"start":{"line":107,"column":1,"offset":4069},"end":{"line":107,"column":52,"offset":4120},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4069},"end":{"line":107,"column":52,"offset":4120},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once we click on the asset store, we can build or share models to use.","position":{"start":{"line":109,"column":1,"offset":4122},"end":{"line":109,"column":71,"offset":4192},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4122},"end":{"line":109,"column":71,"offset":4192},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unity is component based so we can add things that way. We can now create a post processing profile to use.","position":{"start":{"line":111,"column":1,"offset":4194},"end":{"line":111,"column":108,"offset":4301},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4194},"end":{"line":111,"column":108,"offset":4301},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Programming Games","position":{"start":{"line":113,"column":4,"offset":4306},"end":{"line":113,"column":21,"offset":4323},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4303},"end":{"line":113,"column":21,"offset":4323},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Programming with C# with Unity","position":{"start":{"line":115,"column":5,"offset":4329},"end":{"line":115,"column":35,"offset":4359},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4325},"end":{"line":115,"column":35,"offset":4359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript is also able to be used, but far less adopted by the Unity commmunity.","position":{"start":{"line":117,"column":1,"offset":4361},"end":{"line":117,"column":82,"offset":4442},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4361},"end":{"line":117,"column":82,"offset":4442},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After creating a file, you will run into the ","position":{"start":{"line":119,"column":1,"offset":4444},"end":{"line":119,"column":46,"offset":4489},"indent":[]}},{"type":"inlineCode","value":"Start","position":{"start":{"line":119,"column":46,"offset":4489},"end":{"line":119,"column":53,"offset":4496},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":119,"column":53,"offset":4496},"end":{"line":119,"column":58,"offset":4501},"indent":[]}},{"type":"inlineCode","value":"Update","position":{"start":{"line":119,"column":58,"offset":4501},"end":{"line":119,"column":66,"offset":4509},"indent":[]}},{"type":"text","value":" methods that are able to run at each frame so that we can edit the code to do specific things.","position":{"start":{"line":119,"column":66,"offset":4509},"end":{"line":119,"column":161,"offset":4604},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4444},"end":{"line":119,"column":161,"offset":4604},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n\tprivate Animator playerAnimator;\n\tprivate float moveHorizontal;\n\tprivate float moveVertical;\n\tprivate Vector3 movement;\n\n\t// Use this for initialization\n\tvoid Start () {\n\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\n\t}\n}","position":{"start":{"line":121,"column":1,"offset":4606},"end":{"line":142,"column":4,"offset":4981},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Public and private are differing ","position":{"start":{"line":144,"column":1,"offset":4983},"end":{"line":144,"column":34,"offset":5016},"indent":[]}},{"type":"inlineCode","value":"accessibility levels","position":{"start":{"line":144,"column":34,"offset":5016},"end":{"line":144,"column":56,"offset":5038},"indent":[]}},{"type":"text","value":". The second keyword in a declaration is the ","position":{"start":{"line":144,"column":56,"offset":5038},"end":{"line":144,"column":101,"offset":5083},"indent":[]}},{"type":"inlineCode","value":"type","position":{"start":{"line":144,"column":101,"offset":5083},"end":{"line":144,"column":107,"offset":5089},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":144,"column":107,"offset":5089},"end":{"line":144,"column":108,"offset":5090},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4983},"end":{"line":144,"column":108,"offset":5090},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Gather Player Input","position":{"start":{"line":146,"column":5,"offset":5096},"end":{"line":146,"column":24,"offset":5115},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5092},"end":{"line":146,"column":24,"offset":5115},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We need to record which button they are pressing in each frame.","position":{"start":{"line":148,"column":1,"offset":5117},"end":{"line":148,"column":64,"offset":5180},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":5117},"end":{"line":148,"column":64,"offset":5180},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n\tprivate Animator playerAnimator;\n\tprivate float moveHorizontal;\n\tprivate float moveVertical;\n\tprivate Vector3 movement;\n\n\t// Use this for initialization\n\tvoid Start () {\n\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\tmoveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n\t\tmoveVertical = Input.GetAxisRaw(\"Vertical\");\n\n\t\tmovement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n\t}\n}","position":{"start":{"line":150,"column":1,"offset":5182},"end":{"line":174,"column":4,"offset":5717},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Moving a player with animation","position":{"start":{"line":176,"column":5,"offset":5723},"end":{"line":176,"column":35,"offset":5753},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5719},"end":{"line":176,"column":35,"offset":5753},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After adding the script to update the script, we need to animate the frog.","position":{"start":{"line":178,"column":1,"offset":5755},"end":{"line":178,"column":75,"offset":5829},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":5755},"end":{"line":178,"column":75,"offset":5829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The animator components with now be on the inspector for the player.","position":{"start":{"line":180,"column":1,"offset":5831},"end":{"line":180,"column":69,"offset":5899},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":5831},"end":{"line":180,"column":69,"offset":5899},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We will use the playerAnimator to access to Animator component.","position":{"start":{"line":182,"column":1,"offset":5901},"end":{"line":182,"column":64,"offset":5964},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":5901},"end":{"line":182,"column":64,"offset":5964},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n\tprivate Animator playerAnimator;\n\tprivate float moveHorizontal;\n\tprivate float moveVertical;\n\tprivate Vector3 movement;\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\t// special method to get the \"Animator\" component\n\t\tplayerAnimator = GetComponent<Animator>();\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\tmoveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n\t\tmoveVertical = Input.GetAxisRaw(\"Vertical\");\n\n\t\tmovement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n\t}\n\n\t// this is code that runs after the `update` method\n\t// this method doesn't run that often without\n\t// significant gameplay slow down\n\tvoid FixedUpdate() {\n\t\tif (movement != Vector3.zero) {\n\t\t\tplayerAnimator.SetFloat(\"Speed\", 3f);\n\t\t} else {\n\t\t\tplayerAnimator.SetFloat(\"Speed\", 0);\n\t\t}\n\t}\n}","position":{"start":{"line":184,"column":1,"offset":5966},"end":{"line":220,"column":4,"offset":6888},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So far we haven't told the frog how to change direction or to have the camera follow the movement.","position":{"start":{"line":222,"column":1,"offset":6890},"end":{"line":222,"column":99,"offset":6988},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":6890},"end":{"line":222,"column":99,"offset":6988},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Quaternions","position":{"start":{"line":224,"column":5,"offset":6994},"end":{"line":224,"column":16,"offset":7005},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":6990},"end":{"line":224,"column":16,"offset":7005},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Behind the scenes, Unity stores the rotational values as ","position":{"start":{"line":226,"column":1,"offset":7007},"end":{"line":226,"column":58,"offset":7064},"indent":[]}},{"type":"inlineCode","value":"Quaternions","position":{"start":{"line":226,"column":58,"offset":7064},"end":{"line":226,"column":71,"offset":7077},"indent":[]}},{"type":"text","value":". Most games ending will use these to solve rotational issues.","position":{"start":{"line":226,"column":71,"offset":7077},"end":{"line":226,"column":133,"offset":7139},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":7007},"end":{"line":226,"column":133,"offset":7139},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Target rotation","position":{"start":{"line":228,"column":6,"offset":7146},"end":{"line":228,"column":21,"offset":7161},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7141},"end":{"line":228,"column":21,"offset":7161},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The rigid body and box collider is how the objects like ","position":{"start":{"line":230,"column":1,"offset":7163},"end":{"line":230,"column":57,"offset":7219},"indent":[]}},{"type":"inlineCode","value":"Player","position":{"start":{"line":230,"column":57,"offset":7219},"end":{"line":230,"column":65,"offset":7227},"indent":[]}},{"type":"text","value":" can interact with the physics and turning.","position":{"start":{"line":230,"column":65,"offset":7227},"end":{"line":230,"column":108,"offset":7270},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7163},"end":{"line":230,"column":108,"offset":7270},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n\tprivate Animator playerAnimator;\n\tprivate float moveHorizontal;\n\tprivate float moveVertical;\n\tprivate Vector3 movement;\n\tprivate float turningSpeed = 20f;\n\tprivate Rigidbody playerRigidBody;\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\t// Gather components from the player object\n\t\t// special method to get the \"Animator\" component\n\t\tplayerAnimator = GetComponent<Animator> ();\n\t\tplayerRigidBody = GetComponent<Rigidbody> ();\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\tmoveHorizontal = Input.GetAxisRaw (\"Horizontal\");\n\t\tmoveVertical = Input.GetAxisRaw (\"Vertical\");\n\n\t\tmovement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n\t}\n\n\t// this is code that runs after the `update` method\n\t// this method doesn't run that often without\n\t// significant gameplay slow down\n\tvoid FixedUpdate() {\n\t\tif (movement != Vector3.zero) {\n\t\t\tplayerAnimator.SetFloat (\"Speed\", 3f);\n\t\t} else {\n\t\t\tplayerAnimator.SetFloat (\"Speed\", 0);\n\t\t}\n\t}\n}","position":{"start":{"line":232,"column":1,"offset":7272},"end":{"line":272,"column":4,"offset":8364},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We need to perform a ","position":{"start":{"line":274,"column":1,"offset":8366},"end":{"line":274,"column":22,"offset":8387},"indent":[]}},{"type":"inlineCode","value":"Lerp","position":{"start":{"line":274,"column":22,"offset":8387},"end":{"line":274,"column":28,"offset":8393},"indent":[]}},{"type":"text","value":" to change the variable from one to another over time.","position":{"start":{"line":274,"column":28,"offset":8393},"end":{"line":274,"column":82,"offset":8447},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":8366},"end":{"line":274,"column":82,"offset":8447},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unity also doesn't save any change settings when you are playing the game.","position":{"start":{"line":276,"column":1,"offset":8449},"end":{"line":276,"column":75,"offset":8523},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":8449},"end":{"line":276,"column":75,"offset":8523},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Making a follow camera","position":{"start":{"line":278,"column":5,"offset":8529},"end":{"line":278,"column":27,"offset":8551},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":8525},"end":{"line":278,"column":27,"offset":8551},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will have the camera to always follow the parent.","position":{"start":{"line":280,"column":1,"offset":8553},"end":{"line":280,"column":55,"offset":8607},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":8553},"end":{"line":280,"column":55,"offset":8607},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use ","position":{"start":{"line":282,"column":1,"offset":8609},"end":{"line":282,"column":12,"offset":8620},"indent":[]}},{"type":"inlineCode","value":"[SerializeField]","position":{"start":{"line":282,"column":12,"offset":8620},"end":{"line":282,"column":30,"offset":8638},"indent":[]}},{"type":"text","value":" to expose fields from the code into the inspector.","position":{"start":{"line":282,"column":30,"offset":8638},"end":{"line":282,"column":81,"offset":8689},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":8609},"end":{"line":282,"column":81,"offset":8689},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FollowCamera : MonoBehaviour {\n\n\t[SerializeField]\n\tprivate Transform player;\n\t[SerializeField]\n\tprivate Vector3 offset;\n\tprivate float cameraFollowSpeed = 5f;\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\tVector3 newPosition = player.position + offset;\n\n\t\t// Smooth transition\n\t\ttransform.position = Vector3.Lerp(transform.position, newPosition, cameraFollowSpeed + Time.deltaTime);\n\t}\n}","position":{"start":{"line":284,"column":1,"offset":8691},"end":{"line":305,"column":4,"offset":9196},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Section 3","position":{"start":{"line":307,"column":4,"offset":9201},"end":{"line":307,"column":13,"offset":9210},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":9198},"end":{"line":307,"column":13,"offset":9210},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Adding the flies to the swamp","position":{"start":{"line":309,"column":5,"offset":9216},"end":{"line":309,"column":34,"offset":9245},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":9212},"end":{"line":309,"column":34,"offset":9245},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's add an objective to the game (pickup).","position":{"start":{"line":311,"column":1,"offset":9247},"end":{"line":311,"column":45,"offset":9291},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":9247},"end":{"line":311,"column":45,"offset":9291},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyMovement : MonoBehaviour {\n\t[SerializeField]\n\tprivate Transform center;\n\tprivate float flySpeed;\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\tflySpeed = Random.Range (300f, 700f);\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\ttransform.RotateAround (center.position, Vector3.up, flySpeed * Time.deltaTime);\n\t}\n}","position":{"start":{"line":313,"column":1,"offset":9293},"end":{"line":333,"column":4,"offset":9735},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Adding the Fly Pickup","position":{"start":{"line":335,"column":5,"offset":9741},"end":{"line":335,"column":26,"offset":9762},"indent":[]}}],"position":{"start":{"line":335,"column":1,"offset":9737},"end":{"line":335,"column":26,"offset":9762},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n\t// Trigger\n\tvoid OnTriggerEnter(Collider other) {\n\t\t// if collider is the player, execute...\n\t\tif (other.CompareTag (\"Player\")) {\n\t\t\tDestroy (gameObject);\n\t\t}\n\t}\n}","position":{"start":{"line":337,"column":1,"offset":9764},"end":{"line":351,"column":4,"offset":10063},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Pickup Particles","position":{"start":{"line":353,"column":6,"offset":10070},"end":{"line":353,"column":22,"offset":10086},"indent":[]}}],"position":{"start":{"line":353,"column":1,"offset":10065},"end":{"line":353,"column":22,"offset":10086},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Particle systems are a game object which generates multiple systems.","position":{"start":{"line":355,"column":1,"offset":10088},"end":{"line":355,"column":69,"offset":10156},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":10088},"end":{"line":355,"column":69,"offset":10156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As for their destruction:","position":{"start":{"line":357,"column":1,"offset":10158},"end":{"line":357,"column":26,"offset":10183},"indent":[]}}],"position":{"start":{"line":357,"column":1,"offset":10158},"end":{"line":357,"column":26,"offset":10183},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PickupParticlesDestruction : MonoBehaviour {\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\tDestroy (gameObject, 5f);\n\t}\n}","position":{"start":{"line":359,"column":1,"offset":10185},"end":{"line":371,"column":4,"offset":10419},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also create scripts that aren't attached to a 3d model in the scene view.","position":{"start":{"line":373,"column":1,"offset":10421},"end":{"line":373,"column":82,"offset":10502},"indent":[]}}],"position":{"start":{"line":373,"column":1,"offset":10421},"end":{"line":373,"column":82,"offset":10502},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can create an empty object from the left hand sidebar. Reset the transform and rename.","position":{"start":{"line":375,"column":1,"offset":10504},"end":{"line":375,"column":91,"offset":10594},"indent":[]}}],"position":{"start":{"line":375,"column":1,"offset":10504},"end":{"line":375,"column":91,"offset":10594},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"// Fly Spawner\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n\t[SerializeField]\n\tprivate GameObject pickupPrefab;\n\n\t// Trigger\n\tvoid OnTriggerEnter(Collider other) {\n\t\t// if collider is the player, execute...\n\t\tif (other.CompareTag (\"Player\")) {\n\t\t\t// add pickup particles\n\t\t\t// Quaternion.identity returns no rotation\n\t\t\tInstantiate (pickupPrefab, transform.position, Quaternion.identity);\n\t\t\t// Decrement total flies\n\t\t\tFlySpawner.totalFlies--;\n\t\t\tDestroy (gameObject);\n\t\t}\n\t}\n}","position":{"start":{"line":377,"column":1,"offset":10596},"end":{"line":400,"column":4,"offset":11164},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"csharp","meta":null,"value":"// Fly Pickup\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n\t[SerializeField]\n\tprivate GameObject pickupPrefab;\n\n\t// Trigger\n\tvoid OnTriggerEnter(Collider other) {\n\t\t// if collider is the player, execute...\n\t\tif (other.CompareTag (\"Player\")) {\n\t\t\t// add pickup particles\n\t\t\t// Quaternion.identity returns no rotation\n\t\t\tInstantiate (pickupPrefab, transform.position, Quaternion.identity);\n\t\t\t// Decrement total flies\n\t\t\tFlySpawner.totalFlies--;\n\t\t\tDestroy (gameObject);\n\t\t}\n\t}\n}","position":{"start":{"line":402,"column":1,"offset":11166},"end":{"line":425,"column":4,"offset":11733},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Creating the enemy in the game","position":{"start":{"line":427,"column":5,"offset":11739},"end":{"line":427,"column":35,"offset":11769},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":11735},"end":{"line":427,"column":35,"offset":11769},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The bird game object needs to know where the player is. It's known as path finding.","position":{"start":{"line":429,"column":1,"offset":11771},"end":{"line":429,"column":84,"offset":11854},"indent":[]}}],"position":{"start":{"line":429,"column":1,"offset":11771},"end":{"line":429,"column":84,"offset":11854},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unity makes path finding very easy.","position":{"start":{"line":431,"column":1,"offset":11856},"end":{"line":431,"column":36,"offset":11891},"indent":[]}}],"position":{"start":{"line":431,"column":1,"offset":11856},"end":{"line":431,"column":36,"offset":11891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the ","position":{"start":{"line":433,"column":1,"offset":11893},"end":{"line":433,"column":10,"offset":11902},"indent":[]}},{"type":"inlineCode","value":"Nav Mesh Agent","position":{"start":{"line":433,"column":10,"offset":11902},"end":{"line":433,"column":26,"offset":11918},"indent":[]}},{"type":"text","value":", you can set the following for the bird:","position":{"start":{"line":433,"column":26,"offset":11918},"end":{"line":433,"column":67,"offset":11959},"indent":[]}}],"position":{"start":{"line":433,"column":1,"offset":11893},"end":{"line":433,"column":67,"offset":11959},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Speed: 5\nAngular Speed: 720\nStopping Distance: 5\nRadius: 1\nHeight: 4","position":{"start":{"line":435,"column":1,"offset":11961},"end":{"line":441,"column":4,"offset":12037},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We now need to create a ","position":{"start":{"line":443,"column":1,"offset":12039},"end":{"line":443,"column":25,"offset":12063},"indent":[]}},{"type":"inlineCode","value":"Nav Mesh","position":{"start":{"line":443,"column":25,"offset":12063},"end":{"line":443,"column":35,"offset":12073},"indent":[]}},{"type":"text","value":". The ","position":{"start":{"line":443,"column":35,"offset":12073},"end":{"line":443,"column":41,"offset":12079},"indent":[]}},{"type":"inlineCode","value":"NavMeshAgent","position":{"start":{"line":443,"column":41,"offset":12079},"end":{"line":443,"column":55,"offset":12093},"indent":[]}},{"type":"text","value":" allows us to set a destination target that the \"enemy\" can follow. It is a component that can be attached to a game object so that it can interact with the ","position":{"start":{"line":443,"column":55,"offset":12093},"end":{"line":443,"column":212,"offset":12250},"indent":[]}},{"type":"inlineCode","value":"NavMesh","position":{"start":{"line":443,"column":212,"offset":12250},"end":{"line":443,"column":221,"offset":12259},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":443,"column":221,"offset":12259},"end":{"line":443,"column":222,"offset":12260},"indent":[]}}],"position":{"start":{"line":443,"column":1,"offset":12039},"end":{"line":443,"column":222,"offset":12260},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"// BirdMovement.cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BirdMovement : MonoBehaviour {\n\n\t[SerializeField]\n\tprivate Transform target;\n\tprivate UnityEngine.AI.NavMeshAgent birdAgent;\n\tprivate Animator birdAnimator;\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\tbirdAgent = GetComponent<UnityEngine.AI.NavMeshAgent> ();\n\t\tbirdAnimator = GetComponent<Animator> ();\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\t// Set the bird's destination\n\t\tbirdAgent.SetDestination (target.position);\n\n\t\t// Measure the magnitude of the NavMeshAgent's velocity\n\t\tfloat speed = birdAgent.velocity.magnitude;\n\n\t\t// Pass the velocity to the animator component\n\t\tbirdAnimator.SetFloat(\"Speed\", speed);\n\t}\n}","position":{"start":{"line":445,"column":1,"offset":12262},"end":{"line":476,"column":4,"offset":13035},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Monitor Player Health","position":{"start":{"line":478,"column":5,"offset":13041},"end":{"line":478,"column":26,"offset":13062},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":13037},"end":{"line":478,"column":26,"offset":13062},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerHealth : MonoBehaviour {\n\tpublic bool alive;\n\t[SerializeField]\n\tprivate GameObject pickupPrefab;\n\t// Use this for initialization\n\tvoid Start () {\n\t\talive = true;\n\t}\n\n\tvoid OnTriggerEnter(Collider other) {\n\t\tif (other.CompareTag (\"Enemy\") && alive == true) {\n\t\t\talive = false;\n\n\t\t\t// Create the pickup particles\n\t\t\tInstantiate(pickupPrefab, transform.position, Quaternion.identity);\n\t\t}\n\t}\n}","position":{"start":{"line":480,"column":1,"offset":13064},"end":{"line":503,"column":4,"offset":13567},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Managing the game state","position":{"start":{"line":505,"column":5,"offset":13573},"end":{"line":505,"column":28,"offset":13596},"indent":[]}}],"position":{"start":{"line":505,"column":1,"offset":13569},"end":{"line":505,"column":28,"offset":13596},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How do we know when the game has started and when we need to restart?","position":{"start":{"line":507,"column":1,"offset":13598},"end":{"line":507,"column":70,"offset":13667},"indent":[]}}],"position":{"start":{"line":507,"column":1,"offset":13598},"end":{"line":507,"column":70,"offset":13667},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class GameState : MonoBehaviour {\n\tprivate bool gameStarted = false;\n\t[SerializeField]\n\tprivate Text gameStateText;\n\t[SerializeField]\n\tprivate GameObject player;\n\t[SerializeField]\n\tprivate BirdMovement birdMovement;\n\t[SerializeField]\n\tprivate FollowCamera followCamera;\n\tprivate float restartDelay = 3f;\n\tprivate float restartTimer;\n\tprivate PlayerMovement playerMovement;\n\tprivate PlayerHealth playerHealth;\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\tCursor.visible = false;\n\n\t\tplayerMovement = player.GetComponent<PlayerMovement> ();\n\t\tplayerHealth = player.GetComponent<PlayerHealth> ();\n\n\t\t// do not allow player to move before the game\n\t\tplayerMovement.enabled = false;\n\t\t// prevent bird\n\t\tbirdMovement.enabled = false;\n\t\t// prevent follow camear\n\t\tfollowCamera.enabled = false;\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\t// If the game is not sarted and the player presses the space bar...\n\t\tif (gameStarted == false && Input.GetKeyUp(KeyCode.Space)) {\n\t\t\t// ... start the game\n\t\t\tStartGame();\n\t\t}\n\n\t\t// If player is no longer alive ...\n\t\tif (playerHealth.alive == false) {\n\t\t\t// ...end the game\n\t\t\tEndGame();\n\n\t\t\t// ... increment timer to count up to restarting...\n\t\t\trestartTimer = restartTimer + Time.deltaTime;\n\n\t\t\t// ...and if it reaches the restart delay...\n\t\t\tif (restartTimer >= restartDelay) {\n\t\t\t\t// reload scene\n\t\t\t\tSceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void StartGame() {\n\t\tgameStarted = true;\n\n\t\t// set main text to see through\n\t\tgameStateText.color = Color.clear;\n\n\t\t// allow player to move\n\t\tplayerMovement.enabled = true;\n\t\tbirdMovement.enabled = true;\n\t\tfollowCamera.enabled = true;\n\t}\n\n\tprivate void EndGame() {\n\t\tgameStarted = false;\n\n\t\tgameStateText.text = \"Game Over\";\n\t\t// set main text to see through\n\t\tgameStateText.color = Color.white;\n\n\t\t// remove player from game\n\t\tplayer.SetActive (false);\n\t}\n}","position":{"start":{"line":509,"column":1,"offset":13669},"end":{"line":593,"column":4,"offset":15732},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding Audio","position":{"start":{"line":595,"column":4,"offset":15737},"end":{"line":595,"column":16,"offset":15749},"indent":[]}}],"position":{"start":{"line":595,"column":1,"offset":15734},"end":{"line":595,"column":16,"offset":15749},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Game audio","position":{"start":{"line":597,"column":5,"offset":15755},"end":{"line":597,"column":15,"offset":15765},"indent":[]}}],"position":{"start":{"line":597,"column":1,"offset":15751},"end":{"line":597,"column":15,"offset":15765},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can add the ","position":{"start":{"line":599,"column":1,"offset":15767},"end":{"line":599,"column":16,"offset":15782},"indent":[]}},{"type":"inlineCode","value":"Audio Source","position":{"start":{"line":599,"column":16,"offset":15782},"end":{"line":599,"column":30,"offset":15796},"indent":[]}},{"type":"text","value":" component and select the sounds.","position":{"start":{"line":599,"column":30,"offset":15796},"end":{"line":599,"column":63,"offset":15829},"indent":[]}}],"position":{"start":{"line":599,"column":1,"offset":15767},"end":{"line":599,"column":63,"offset":15829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can also randomly generate a sound to help add something natural.","position":{"start":{"line":601,"column":1,"offset":15831},"end":{"line":601,"column":69,"offset":15899},"indent":[]}}],"position":{"start":{"line":601,"column":1,"offset":15831},"end":{"line":601,"column":69,"offset":15899},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":"using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class RandomSoundPlayer : MonoBehaviour {\n\tprivate AudioSource audioSource;\n\t[SerializeField]\n\tprivate List<AudioClip> soundClips = new List<AudioClip>();\n\t[SerializeField]\n\tprivate float soundTimerDelay = 3f;\n\tprivate float soundTimer;\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\taudioSource = GetComponent<AudioSource>();\n\t}\n\n\t// Update is called once per frame\n\tvoid Update () {\n\t\t// incredment a timer to count up to restarting\n\t\tsoundTimer = soundTimer + Time.deltaTime;\n\n\t\t// if the timer reaches the delay...\n\t\tif (soundTimer >= soundTimerDelay) {\n\t\t\tsoundTimer = 0f;\n\t\t\t// choose a random sound\n\t\t\tAudioClip randomSound = soundClips[Random.Range(0, soundClips.Count)];\n\t\t\taudioSource.PlayOneShot (randomSound);\n\t\t}\n\t}\n}","position":{"start":{"line":603,"column":1,"offset":15901},"end":{"line":635,"column":4,"offset":16737},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Controlling sounds on game objects","position":{"start":{"line":637,"column":5,"offset":16743},"end":{"line":637,"column":39,"offset":16777},"indent":[]}}],"position":{"start":{"line":637,"column":1,"offset":16739},"end":{"line":637,"column":39,"offset":16777},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add another empty game child and add the audio but select ","position":{"start":{"line":639,"column":1,"offset":16779},"end":{"line":639,"column":59,"offset":16837},"indent":[]}},{"type":"inlineCode","value":"play on awake","position":{"start":{"line":639,"column":59,"offset":16837},"end":{"line":639,"column":74,"offset":16852},"indent":[]}},{"type":"text","value":" off.","position":{"start":{"line":639,"column":74,"offset":16852},"end":{"line":639,"column":79,"offset":16857},"indent":[]}}],"position":{"start":{"line":639,"column":1,"offset":16779},"end":{"line":639,"column":79,"offset":16857},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To make sounds 3d, we need to change the spatial blend. We also need to make sure the game camera and distance are set correctly.","position":{"start":{"line":641,"column":1,"offset":16859},"end":{"line":641,"column":130,"offset":16988},"indent":[]}}],"position":{"start":{"line":641,"column":1,"offset":16859},"end":{"line":641,"column":130,"offset":16988},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We need to update the scripts to ensure that these clips play at the appropriate time.","position":{"start":{"line":643,"column":1,"offset":16990},"end":{"line":643,"column":87,"offset":17076},"indent":[]}}],"position":{"start":{"line":643,"column":1,"offset":16990},"end":{"line":643,"column":87,"offset":17076},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Audio mixing","position":{"start":{"line":645,"column":5,"offset":17082},"end":{"line":645,"column":17,"offset":17094},"indent":[]}}],"position":{"start":{"line":645,"column":1,"offset":17078},"end":{"line":645,"column":17,"offset":17094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the audio mixer, create groups and assign these groups via the ","position":{"start":{"line":647,"column":1,"offset":17096},"end":{"line":647,"column":68,"offset":17163},"indent":[]}},{"type":"inlineCode","value":"AudioComponent","position":{"start":{"line":647,"column":68,"offset":17163},"end":{"line":647,"column":84,"offset":17179},"indent":[]}},{"type":"text","value":" on the hierarchy or prefab.","position":{"start":{"line":647,"column":84,"offset":17179},"end":{"line":647,"column":112,"offset":17207},"indent":[]}}],"position":{"start":{"line":647,"column":1,"offset":17096},"end":{"line":647,"column":112,"offset":17207},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Exporting the game","position":{"start":{"line":649,"column":5,"offset":17213},"end":{"line":649,"column":23,"offset":17231},"indent":[]}}],"position":{"start":{"line":649,"column":1,"offset":17209},"end":{"line":649,"column":23,"offset":17231},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":652,"column":1,"offset":17234},"end":{"line":652,"column":31,"offset":17264},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":652,"column":31,"offset":17264}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"how-to-make-a-video-game\"\n    }}>{`How to make a video game`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#how-to-make-a-video-game\"\n        }}>{`How to make a video game`}</a>{` - `}<a parentName=\"li\" {...{\n          \"href\": \"#what-is-a-game-engine\"\n        }}>{`What is a game engine?`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#part-2\"\n            }}>{`Part 2`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#unity-interface\"\n                }}>{`Unity Interface`}</a><ul parentName=\"li\">\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#prefabs\"\n                    }}>{`Prefabs`}</a></li>\n                </ul></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#setup-the-project\"\n                }}>{`Setup the project`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#navigating-the-scene-view\"\n                }}>{`Navigating the Scene View`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#position-the-camera\"\n                }}>{`Position the camera`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#image-effects-and-asset-stores\"\n                }}>{`Image effects and asset stores`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#programming-games\"\n            }}>{`Programming Games`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#programming-with-c-with-unity\"\n                }}>{`Programming with C# with Unity`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#gather-player-input\"\n                }}>{`Gather Player Input`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#moving-a-player-with-animation\"\n                }}>{`Moving a player with animation`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#quaternions\"\n                }}>{`Quaternions`}</a><ul parentName=\"li\">\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#target-rotation\"\n                    }}>{`Target rotation`}</a></li>\n                </ul></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#making-a-follow-camera\"\n                }}>{`Making a follow camera`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#section-3\"\n            }}>{`Section 3`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#adding-the-flies-to-the-swamp\"\n                }}>{`Adding the flies to the swamp`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#adding-the-fly-pickup\"\n                }}>{`Adding the Fly Pickup`}</a><ul parentName=\"li\">\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#pickup-particles\"\n                    }}>{`Pickup Particles`}</a></li>\n                </ul></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#creating-the-enemy-in-the-game\"\n                }}>{`Creating the enemy in the game`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#monitor-player-health\"\n                }}>{`Monitor Player Health`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#managing-the-game-state\"\n                }}>{`Managing the game state`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#adding-audio\"\n            }}>{`Adding Audio`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#game-audio\"\n                }}>{`Game audio`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#controlling-sounds-on-game-objects\"\n                }}>{`Controlling sounds on game objects`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#audio-mixing\"\n                }}>{`Audio mixing`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#exporting-the-game\"\n                }}>{`Exporting the game`}</a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <p>{`How are games made?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Game designers`}</li>\n      <li parentName=\"ul\">{`Game artists`}</li>\n      <li parentName=\"ul\">{`Game developers`}</li>\n    </ul>\n    <p>{`These roles can be between one or thousands of people.`}</p>\n    <p>{`Game artists deal with what you see and hear in the game.`}</p>\n    <h3 {...{\n      \"id\": \"what-is-a-game-engine\"\n    }}>{`What is a game engine?`}</h3>\n    <p>{`Game engines help deal with things like the physics and rendering graphics.`}</p>\n    <p>{`A game engine is a framework for building games that helps coordinate things like assets and gives you all the tools you need to start coding.`}</p>\n    <p>{`A game engine is not a 3D art engine.`}</p>\n    <p>{`We are Unity as it is easier to learn when you are just getting started.`}</p>\n    <h2 {...{\n      \"id\": \"part-2\"\n    }}>{`Part 2`}</h2>\n    <h3 {...{\n      \"id\": \"unity-interface\"\n    }}>{`Unity Interface`}</h3>\n    <p>{`Create a `}<inlineCode parentName=\"p\">{`_Scenes`}</inlineCode>{` folder.`}</p>\n    <p>{`Game assets are `}<inlineCode parentName=\"p\">{`a piece of media for the game`}</inlineCode>{`. This could be sounds, scripts or models etc.`}</p>\n    <h4 {...{\n      \"id\": \"prefabs\"\n    }}>{`Prefabs`}</h4>\n    <p>{`Stores several objects together. An example `}<inlineCode parentName=\"p\">{`prefab`}</inlineCode>{` is the frog which contains the 3d model, the texture and the animation together.`}</p>\n    <h3 {...{\n      \"id\": \"setup-the-project\"\n    }}>{`Setup the project`}</h3>\n    <p>{`Games use `}<inlineCode parentName=\"p\">{`real time rendering`}</inlineCode>{` where it is drawn at the frame rate. Generally you want to aim for 60fps or higher. This will make is look as smooth as possible.`}</p>\n    <p>{`We can go to `}<inlineCode parentName=\"p\">{`Window > Lighting > Settings`}</inlineCode>{` to adjust things about how the scene is lit.`}</p>\n    <p>{`To adjust the player settings go to `}<inlineCode parentName=\"p\">{`Edit > Project Settings > Player`}</inlineCode>{`.`}</p>\n    <p>{`For quality, go to `}<inlineCode parentName=\"p\">{`Edit > Project Settings > Quality`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"navigating-the-scene-view\"\n    }}>{`Navigating the Scene View`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`environment`}</inlineCode>{` prefab links a bunch of Maya elements and groups them as a prefab.`}</p>\n    <p>{`Our environment prefab already has a light associated with it. Ensure after adding that you re-generate the light in the settings.`}</p>\n    <p>{`Anything with a green square is outlining a game object.`}</p>\n    <p>{`After selecting an object, you can use the 3d axis to change the transform of the axis.`}</p>\n    <p>{`On the top left, we can change the tools from position to rotation etc and with similar methods to before, we can rotate the axis.`}</p>\n    <p>{`We can also just use the `}<inlineCode parentName=\"p\">{`qwer`}</inlineCode>{` keys to change between tools.`}</p>\n    <p>{`We can also switch between `}<inlineCode parentName=\"p\">{`global`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`local`}</inlineCode>{` space to help move things around.`}</p>\n    <h3 {...{\n      \"id\": \"position-the-camera\"\n    }}>{`Position the camera`}</h3>\n    <p>{`The scenes looks good so far, but it we need to update the camera.`}</p>\n    <p>{`At the top of the scene window, we have `}<inlineCode parentName=\"p\">{`scene`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`game`}</inlineCode>{` tabs. If we select `}<inlineCode parentName=\"p\">{`game`}</inlineCode>{`, we get to see how the game will look when we play it. We can either write code to control to camera or change the transform.`}</p>\n    <h3 {...{\n      \"id\": \"image-effects-and-asset-stores\"\n    }}>{`Image effects and asset stores`}</h3>\n    <p>{`An image effect can change things like colours etc.`}</p>\n    <p>{`Once we click on the asset store, we can build or share models to use.`}</p>\n    <p>{`Unity is component based so we can add things that way. We can now create a post processing profile to use.`}</p>\n    <h2 {...{\n      \"id\": \"programming-games\"\n    }}>{`Programming Games`}</h2>\n    <h3 {...{\n      \"id\": \"programming-with-c-with-unity\"\n    }}>{`Programming with C# with Unity`}</h3>\n    <p>{`JavaScript is also able to be used, but far less adopted by the Unity commmunity.`}</p>\n    <p>{`After creating a file, you will run into the `}<inlineCode parentName=\"p\">{`Start`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Update`}</inlineCode>{` methods that are able to run at each frame so that we can edit the code to do specific things.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n\n    }\n\n    // Update is called once per frame\n    void Update () {\n\n    }\n}\n`}</code></pre>\n    <p>{`Public and private are differing `}<inlineCode parentName=\"p\">{`accessibility levels`}</inlineCode>{`. The second keyword in a declaration is the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"gather-player-input\"\n    }}>{`Gather Player Input`}</h3>\n    <p>{`We need to record which button they are pressing in each frame.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        moveVertical = Input.GetAxisRaw(\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"moving-a-player-with-animation\"\n    }}>{`Moving a player with animation`}</h3>\n    <p>{`After adding the script to update the script, we need to animate the frog.`}</p>\n    <p>{`The animator components with now be on the inspector for the player.`}</p>\n    <p>{`We will use the playerAnimator to access to Animator component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n        // special method to get the \"Animator\" component\n        playerAnimator = GetComponent<Animator>();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        moveVertical = Input.GetAxisRaw(\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n\n    // this is code that runs after the \\`update\\` method\n    // this method doesn't run that often without\n    // significant gameplay slow down\n    void FixedUpdate() {\n        if (movement != Vector3.zero) {\n            playerAnimator.SetFloat(\"Speed\", 3f);\n        } else {\n            playerAnimator.SetFloat(\"Speed\", 0);\n        }\n    }\n}\n`}</code></pre>\n    <p>{`So far we haven't told the frog how to change direction or to have the camera follow the movement.`}</p>\n    <h3 {...{\n      \"id\": \"quaternions\"\n    }}>{`Quaternions`}</h3>\n    <p>{`Behind the scenes, Unity stores the rotational values as `}<inlineCode parentName=\"p\">{`Quaternions`}</inlineCode>{`. Most games ending will use these to solve rotational issues.`}</p>\n    <h4 {...{\n      \"id\": \"target-rotation\"\n    }}>{`Target rotation`}</h4>\n    <p>{`The rigid body and box collider is how the objects like `}<inlineCode parentName=\"p\">{`Player`}</inlineCode>{` can interact with the physics and turning.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n    private float turningSpeed = 20f;\n    private Rigidbody playerRigidBody;\n\n    // Use this for initialization\n    void Start () {\n        // Gather components from the player object\n        // special method to get the \"Animator\" component\n        playerAnimator = GetComponent<Animator> ();\n        playerRigidBody = GetComponent<Rigidbody> ();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw (\"Horizontal\");\n        moveVertical = Input.GetAxisRaw (\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n\n    // this is code that runs after the \\`update\\` method\n    // this method doesn't run that often without\n    // significant gameplay slow down\n    void FixedUpdate() {\n        if (movement != Vector3.zero) {\n            playerAnimator.SetFloat (\"Speed\", 3f);\n        } else {\n            playerAnimator.SetFloat (\"Speed\", 0);\n        }\n    }\n}\n`}</code></pre>\n    <p>{`We need to perform a `}<inlineCode parentName=\"p\">{`Lerp`}</inlineCode>{` to change the variable from one to another over time.`}</p>\n    <p>{`Unity also doesn't save any change settings when you are playing the game.`}</p>\n    <h3 {...{\n      \"id\": \"making-a-follow-camera\"\n    }}>{`Making a follow camera`}</h3>\n    <p>{`This will have the camera to always follow the parent.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`[SerializeField]`}</inlineCode>{` to expose fields from the code into the inspector.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FollowCamera : MonoBehaviour {\n\n    [SerializeField]\n    private Transform player;\n    [SerializeField]\n    private Vector3 offset;\n    private float cameraFollowSpeed = 5f;\n\n    // Update is called once per frame\n    void Update () {\n        Vector3 newPosition = player.position + offset;\n\n        // Smooth transition\n        transform.position = Vector3.Lerp(transform.position, newPosition, cameraFollowSpeed + Time.deltaTime);\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"section-3\"\n    }}>{`Section 3`}</h2>\n    <h3 {...{\n      \"id\": \"adding-the-flies-to-the-swamp\"\n    }}>{`Adding the flies to the swamp`}</h3>\n    <p>{`Let's add an objective to the game (pickup).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyMovement : MonoBehaviour {\n    [SerializeField]\n    private Transform center;\n    private float flySpeed;\n\n    // Use this for initialization\n    void Start () {\n        flySpeed = Random.Range (300f, 700f);\n    }\n\n    // Update is called once per frame\n    void Update () {\n        transform.RotateAround (center.position, Vector3.up, flySpeed * Time.deltaTime);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"adding-the-fly-pickup\"\n    }}>{`Adding the Fly Pickup`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            Destroy (gameObject);\n        }\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"pickup-particles\"\n    }}>{`Pickup Particles`}</h4>\n    <p>{`Particle systems are a game object which generates multiple systems.`}</p>\n    <p>{`As for their destruction:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PickupParticlesDestruction : MonoBehaviour {\n\n    // Use this for initialization\n    void Start () {\n        Destroy (gameObject, 5f);\n    }\n}\n`}</code></pre>\n    <p>{`You can also create scripts that aren't attached to a 3d model in the scene view.`}</p>\n    <p>{`You can create an empty object from the left hand sidebar. Reset the transform and rename.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Fly Spawner\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    [SerializeField]\n    private GameObject pickupPrefab;\n\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            // add pickup particles\n            // Quaternion.identity returns no rotation\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\n            // Decrement total flies\n            FlySpawner.totalFlies--;\n            Destroy (gameObject);\n        }\n    }\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Fly Pickup\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    [SerializeField]\n    private GameObject pickupPrefab;\n\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            // add pickup particles\n            // Quaternion.identity returns no rotation\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\n            // Decrement total flies\n            FlySpawner.totalFlies--;\n            Destroy (gameObject);\n        }\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"creating-the-enemy-in-the-game\"\n    }}>{`Creating the enemy in the game`}</h3>\n    <p>{`The bird game object needs to know where the player is. It's known as path finding.`}</p>\n    <p>{`Unity makes path finding very easy.`}</p>\n    <p>{`With the `}<inlineCode parentName=\"p\">{`Nav Mesh Agent`}</inlineCode>{`, you can set the following for the bird:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Speed: 5\nAngular Speed: 720\nStopping Distance: 5\nRadius: 1\nHeight: 4\n`}</code></pre>\n    <p>{`We now need to create a `}<inlineCode parentName=\"p\">{`Nav Mesh`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`NavMeshAgent`}</inlineCode>{` allows us to set a destination target that the \"enemy\" can follow. It is a component that can be attached to a game object so that it can interact with the `}<inlineCode parentName=\"p\">{`NavMesh`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// BirdMovement.cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BirdMovement : MonoBehaviour {\n\n    [SerializeField]\n    private Transform target;\n    private UnityEngine.AI.NavMeshAgent birdAgent;\n    private Animator birdAnimator;\n\n    // Use this for initialization\n    void Start () {\n        birdAgent = GetComponent<UnityEngine.AI.NavMeshAgent> ();\n        birdAnimator = GetComponent<Animator> ();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // Set the bird's destination\n        birdAgent.SetDestination (target.position);\n\n        // Measure the magnitude of the NavMeshAgent's velocity\n        float speed = birdAgent.velocity.magnitude;\n\n        // Pass the velocity to the animator component\n        birdAnimator.SetFloat(\"Speed\", speed);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"monitor-player-health\"\n    }}>{`Monitor Player Health`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerHealth : MonoBehaviour {\n    public bool alive;\n    [SerializeField]\n    private GameObject pickupPrefab;\n    // Use this for initialization\n    void Start () {\n        alive = true;\n    }\n\n    void OnTriggerEnter(Collider other) {\n        if (other.CompareTag (\"Enemy\") && alive == true) {\n            alive = false;\n\n            // Create the pickup particles\n            Instantiate(pickupPrefab, transform.position, Quaternion.identity);\n        }\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"managing-the-game-state\"\n    }}>{`Managing the game state`}</h3>\n    <p>{`How do we know when the game has started and when we need to restart?`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class GameState : MonoBehaviour {\n    private bool gameStarted = false;\n    [SerializeField]\n    private Text gameStateText;\n    [SerializeField]\n    private GameObject player;\n    [SerializeField]\n    private BirdMovement birdMovement;\n    [SerializeField]\n    private FollowCamera followCamera;\n    private float restartDelay = 3f;\n    private float restartTimer;\n    private PlayerMovement playerMovement;\n    private PlayerHealth playerHealth;\n\n    // Use this for initialization\n    void Start () {\n        Cursor.visible = false;\n\n        playerMovement = player.GetComponent<PlayerMovement> ();\n        playerHealth = player.GetComponent<PlayerHealth> ();\n\n        // do not allow player to move before the game\n        playerMovement.enabled = false;\n        // prevent bird\n        birdMovement.enabled = false;\n        // prevent follow camear\n        followCamera.enabled = false;\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // If the game is not sarted and the player presses the space bar...\n        if (gameStarted == false && Input.GetKeyUp(KeyCode.Space)) {\n            // ... start the game\n            StartGame();\n        }\n\n        // If player is no longer alive ...\n        if (playerHealth.alive == false) {\n            // ...end the game\n            EndGame();\n\n            // ... increment timer to count up to restarting...\n            restartTimer = restartTimer + Time.deltaTime;\n\n            // ...and if it reaches the restart delay...\n            if (restartTimer >= restartDelay) {\n                // reload scene\n                SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n            }\n        }\n    }\n\n    private void StartGame() {\n        gameStarted = true;\n\n        // set main text to see through\n        gameStateText.color = Color.clear;\n\n        // allow player to move\n        playerMovement.enabled = true;\n        birdMovement.enabled = true;\n        followCamera.enabled = true;\n    }\n\n    private void EndGame() {\n        gameStarted = false;\n\n        gameStateText.text = \"Game Over\";\n        // set main text to see through\n        gameStateText.color = Color.white;\n\n        // remove player from game\n        player.SetActive (false);\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-audio\"\n    }}>{`Adding Audio`}</h2>\n    <h3 {...{\n      \"id\": \"game-audio\"\n    }}>{`Game audio`}</h3>\n    <p>{`We can add the `}<inlineCode parentName=\"p\">{`Audio Source`}</inlineCode>{` component and select the sounds.`}</p>\n    <p>{`We can also randomly generate a sound to help add something natural.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class RandomSoundPlayer : MonoBehaviour {\n    private AudioSource audioSource;\n    [SerializeField]\n    private List<AudioClip> soundClips = new List<AudioClip>();\n    [SerializeField]\n    private float soundTimerDelay = 3f;\n    private float soundTimer;\n\n    // Use this for initialization\n    void Start () {\n        audioSource = GetComponent<AudioSource>();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // incredment a timer to count up to restarting\n        soundTimer = soundTimer + Time.deltaTime;\n\n        // if the timer reaches the delay...\n        if (soundTimer >= soundTimerDelay) {\n            soundTimer = 0f;\n            // choose a random sound\n            AudioClip randomSound = soundClips[Random.Range(0, soundClips.Count)];\n            audioSource.PlayOneShot (randomSound);\n        }\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"controlling-sounds-on-game-objects\"\n    }}>{`Controlling sounds on game objects`}</h3>\n    <p>{`Add another empty game child and add the audio but select `}<inlineCode parentName=\"p\">{`play on awake`}</inlineCode>{` off.`}</p>\n    <p>{`To make sounds 3d, we need to change the spatial blend. We also need to make sure the game camera and distance are set correctly.`}</p>\n    <p>{`We need to update the scripts to ensure that these clips play at the appropriate time.`}</p>\n    <h3 {...{\n      \"id\": \"audio-mixing\"\n    }}>{`Audio mixing`}</h3>\n    <p>{`Use the audio mixer, create groups and assign these groups via the `}<inlineCode parentName=\"p\">{`AudioComponent`}</inlineCode>{` on the hierarchy or prefab.`}</p>\n    <h3 {...{\n      \"id\": \"exporting-the-game\"\n    }}>{`Exporting the game`}</h3>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}