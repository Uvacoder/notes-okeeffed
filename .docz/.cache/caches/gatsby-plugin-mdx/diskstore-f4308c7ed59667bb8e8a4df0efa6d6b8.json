{"expireTime":9007200848610894000,"key":"gatsby-plugin-mdx-entire-payload-4f951e984d7d45b6ffd3cbe4aad74e16-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"JavaScript Grid Alignment Cheat Sheet","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":40,"offset":205},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":40,"offset":205},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/*\n\tThis example comes from the NPWS grid system\n*/\n\nvar grid = {\n\n\trow: [],\n\tperRow: 0,\n\theight: 0,\n\tsmall: 767,\n\tmedium: 1190,\n\n\t$grid: $('.grid'),\n\t$tile: $('.grid .tile'),\n\n\tinit: function () {\n\t\tgrid.resize();\n\n\t\t$(window).resize(grid.resize);\n\t},\n\n\tresize: function () {\n\t\tif ($(window).outerWidth() < grid.small) {\n\t\t\tgrid.$tile.find('.info').height('auto');\n\t\t} else {\n\t\t\tgrid.$tile.each(function (key) {\n\t\t\t\tif ((key) % grid.elemPerRow + 1 === 1 && (key !== 0)) {\n\t\t\t\t\tgrid.setHeight();\n\t\t\t\t\tgrid.height = 0;\n\t\t\t\t\tgrid.row = [];\n\t\t\t\t}\n\n\t\t\t\tgrid.row.push(this);\n\n\t\t\t\tif ($(this).find('.info').height() > grid.height) {\n\t\t\t\t\tgrid.height = $(this).find('.info').height();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (grid.row.length) {\n\t\t\t\tgrid.setHeight();\n\t\t\t}\n\t\t}\n\t},\n\n\tsetHeight: function () {\n\t\tfor (var i in grid.row) {\n\t\t\t$(grid.row[i]).find('.info').height(grid.height);\n\t\t}\n\t},\n\n\tgetElemPerRow: function () {\n\t\tif ($(window).outerWidth() > grid.medium) {\n\t\t\tgrid.elemPerRow = 3;\n\t\t} else if ($(window).outerWidth() > grid.small) {\n\t\t\tgrid.elemPerRow = 2;\n\t\t} else {\n\t\t\tgrid.elemPerRow = 1;\n\t\t}\n\t},\n};","position":{"start":{"line":9,"column":1,"offset":207},"end":{"line":71,"column":4,"offset":1316},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":74,"column":1,"offset":1319},"end":{"line":74,"column":31,"offset":1349},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":74,"column":31,"offset":1349}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"javascript-grid-alignment-cheat-sheet\"\n    }}>{`JavaScript Grid Alignment Cheat Sheet`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/*\n    This example comes from the NPWS grid system\n*/\n\nvar grid = {\n\n    row: [],\n    perRow: 0,\n    height: 0,\n    small: 767,\n    medium: 1190,\n\n    $grid: $('.grid'),\n    $tile: $('.grid .tile'),\n\n    init: function () {\n        grid.resize();\n\n        $(window).resize(grid.resize);\n    },\n\n    resize: function () {\n        if ($(window).outerWidth() < grid.small) {\n            grid.$tile.find('.info').height('auto');\n        } else {\n            grid.$tile.each(function (key) {\n                if ((key) % grid.elemPerRow + 1 === 1 && (key !== 0)) {\n                    grid.setHeight();\n                    grid.height = 0;\n                    grid.row = [];\n                }\n\n                grid.row.push(this);\n\n                if ($(this).find('.info').height() > grid.height) {\n                    grid.height = $(this).find('.info').height();\n                }\n            });\n\n            if (grid.row.length) {\n                grid.setHeight();\n            }\n        }\n    },\n\n    setHeight: function () {\n        for (var i in grid.row) {\n            $(grid.row[i]).find('.info').height(grid.height);\n        }\n    },\n\n    getElemPerRow: function () {\n        if ($(window).outerWidth() > grid.medium) {\n            grid.elemPerRow = 3;\n        } else if ($(window).outerWidth() > grid.small) {\n            grid.elemPerRow = 2;\n        } else {\n            grid.elemPerRow = 1;\n        }\n    },\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}