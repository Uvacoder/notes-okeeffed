{"expireTime":9007200852878358000,"key":"gatsby-plugin-mdx-entire-payload-6cfe32748967bd7df5d6dd19bf1ef70e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Quickstart with Tailwind + TypeScript + VSCode","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":49,"offset":215},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":49,"offset":215},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":220},"end":{"line":10,"column":13,"offset":229},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":217},"end":{"line":10,"column":13,"offset":229},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss","children":[{"type":"text","value":"VSCode extension","position":{"start":{"line":12,"column":5,"offset":235},"end":{"line":12,"column":21,"offset":251},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":234},"end":{"line":12,"column":101,"offset":331},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":234},"end":{"line":12,"column":101,"offset":331},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":231},"end":{"line":12,"column":101,"offset":331},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://tailwindcss.com/docs/installation","children":[{"type":"text","value":"Tailwind - Installation","position":{"start":{"line":13,"column":5,"offset":336},"end":{"line":13,"column":28,"offset":359},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":335},"end":{"line":13,"column":72,"offset":403},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":335},"end":{"line":13,"column":72,"offset":403},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":332},"end":{"line":13,"column":72,"offset":403},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://tailwindcss.com/docs/flex/#app","children":[{"type":"text","value":"Tailwind - Flex","position":{"start":{"line":14,"column":5,"offset":408},"end":{"line":14,"column":20,"offset":423},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":407},"end":{"line":14,"column":61,"offset":464},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":407},"end":{"line":14,"column":61,"offset":464},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":404},"end":{"line":14,"column":61,"offset":464},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://tailwindcss.com/docs/text-color/#app","children":[{"type":"text","value":"Tailwind - Text Color","position":{"start":{"line":15,"column":5,"offset":469},"end":{"line":15,"column":26,"offset":490},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":468},"end":{"line":15,"column":73,"offset":537},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":468},"end":{"line":15,"column":73,"offset":537},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":465},"end":{"line":15,"column":73,"offset":537},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://tailwindcss.com/docs/background-color/#app","children":[{"type":"text","value":"Tailwind - Background Color","position":{"start":{"line":16,"column":5,"offset":542},"end":{"line":16,"column":32,"offset":569},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":541},"end":{"line":16,"column":85,"offset":622},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":541},"end":{"line":16,"column":85,"offset":622},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":538},"end":{"line":16,"column":85,"offset":622},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://tailwindcss.com/docs/border-radius/#app","children":[{"type":"text","value":"Tailwind - Border Radius","position":{"start":{"line":17,"column":5,"offset":627},"end":{"line":17,"column":29,"offset":651},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":626},"end":{"line":17,"column":79,"offset":701},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":626},"end":{"line":17,"column":79,"offset":701},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":623},"end":{"line":17,"column":79,"offset":701},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://tailwindcss.com/docs/padding/#app","children":[{"type":"text","value":"Tailwind - Padding","position":{"start":{"line":18,"column":5,"offset":706},"end":{"line":18,"column":23,"offset":724},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":705},"end":{"line":18,"column":67,"offset":768},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":705},"end":{"line":18,"column":67,"offset":768},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":702},"end":{"line":18,"column":67,"offset":768},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://daveceddia.com/tailwind-create-react-app/","children":[{"type":"text","value":"Tailwind with CRA - Dave Ceddia","position":{"start":{"line":19,"column":5,"offset":773},"end":{"line":19,"column":36,"offset":804},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":772},"end":{"line":19,"column":88,"offset":856},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":772},"end":{"line":19,"column":88,"offset":856},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":769},"end":{"line":19,"column":88,"offset":856},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/JedWatson/classnames","children":[{"type":"text","value":"Classnames - GitHub","position":{"start":{"line":20,"column":5,"offset":861},"end":{"line":20,"column":24,"offset":880},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":860},"end":{"line":20,"column":66,"offset":922},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":860},"end":{"line":20,"column":66,"offset":922},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":857},"end":{"line":20,"column":66,"offset":922},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":231},"end":{"line":20,"column":66,"offset":922},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":22,"column":4,"offset":927},"end":{"line":22,"column":16,"offset":939},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":924},"end":{"line":22,"column":16,"offset":939},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"npx create-react-app hello-tailwind --template typescript\ncd hello-tailwind\n# Using Yarn\nyarn add tailwindcss","position":{"start":{"line":24,"column":1,"offset":941},"end":{"line":29,"column":4,"offset":1059},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Add CSS imports","position":{"start":{"line":31,"column":4,"offset":1064},"end":{"line":31,"column":19,"offset":1079},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1061},"end":{"line":31,"column":19,"offset":1079},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"At the top of ","position":{"start":{"line":33,"column":1,"offset":1081},"end":{"line":33,"column":15,"offset":1095},"indent":[]}},{"type":"inlineCode","value":"src/index.css","position":{"start":{"line":33,"column":15,"offset":1095},"end":{"line":33,"column":30,"offset":1110},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":33,"column":30,"offset":1110},"end":{"line":33,"column":31,"offset":1111},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1081},"end":{"line":33,"column":31,"offset":1111},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"@import 'tailwindcss/base';\n@import 'tailwindcss/components';\n@import 'tailwindcss/utilities';","position":{"start":{"line":35,"column":1,"offset":1113},"end":{"line":39,"column":4,"offset":1218},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding scripts","position":{"start":{"line":41,"column":4,"offset":1223},"end":{"line":41,"column":18,"offset":1237},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1220},"end":{"line":41,"column":18,"offset":1237},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"scripts\": {\n    \"build:tailwind\": \"tailwindcss build src/tailwind.css -o src/tailwind.output.css\",\n    \"prestart\": \"npm run build:tailwind\",\n    \"prebuild\": \"npm run build:tailwind\"\n  }\n}","position":{"start":{"line":43,"column":1,"offset":1239},"end":{"line":51,"column":4,"offset":1443},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage with classnames","position":{"start":{"line":53,"column":4,"offset":1448},"end":{"line":53,"column":25,"offset":1469},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1445},"end":{"line":53,"column":25,"offset":1469},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"yarn add classnames @types/classnames","position":{"start":{"line":55,"column":1,"offset":1471},"end":{"line":57,"column":4,"offset":1517},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Updating App.tsx to use the correct styles","position":{"start":{"line":59,"column":4,"offset":1522},"end":{"line":59,"column":46,"offset":1564},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1519},"end":{"line":59,"column":46,"offset":1564},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Update ","position":{"start":{"line":61,"column":1,"offset":1566},"end":{"line":61,"column":8,"offset":1573},"indent":[]}},{"type":"inlineCode","value":"index.tsx","position":{"start":{"line":61,"column":8,"offset":1573},"end":{"line":61,"column":19,"offset":1584},"indent":[]}},{"type":"text","value":" with the following:","position":{"start":{"line":61,"column":19,"offset":1584},"end":{"line":61,"column":39,"offset":1604},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1566},"end":{"line":61,"column":39,"offset":1604},"indent":[]}},{"type":"code","lang":"tsx","meta":null,"value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","position":{"start":{"line":63,"column":1,"offset":1606},"end":{"line":81,"column":4,"offset":2130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Update ","position":{"start":{"line":83,"column":1,"offset":2132},"end":{"line":83,"column":8,"offset":2139},"indent":[]}},{"type":"inlineCode","value":"App.jsx","position":{"start":{"line":83,"column":8,"offset":2139},"end":{"line":83,"column":17,"offset":2148},"indent":[]}},{"type":"text","value":" to be the following:","position":{"start":{"line":83,"column":17,"offset":2148},"end":{"line":83,"column":38,"offset":2169},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2132},"end":{"line":83,"column":38,"offset":2169},"indent":[]}},{"type":"code","lang":"tsx","meta":null,"value":"import React from 'react';\nimport cx from 'classnames';\n\nfunction App() {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n\n  return (\n    <div className=\"bg-gray-200 flex items-center justify-center h-screen\">\n      <button\n        className={cx('p-3 rounded-sm', {\n          'bg-blue-500 hover:bg-blue-700': !toggle,\n          'bg-red-500 hover:bg-red-500': toggle,\n        })}\n        onClick={() => setToggle(!toggle)}\n      >\n        Toggle\n      </button>\n    </div>\n  );\n}\n\nexport default App;","position":{"start":{"line":85,"column":1,"offset":2171},"end":{"line":108,"column":4,"offset":2695},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, you could abstract this out:","position":{"start":{"line":110,"column":1,"offset":2697},"end":{"line":110,"column":44,"offset":2740},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2697},"end":{"line":110,"column":44,"offset":2740},"indent":[]}},{"type":"code","lang":"tsx","meta":null,"value":"import React from 'react';\nimport cx from 'classnames';\n\nfunction App() {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n\n  const buttonClasses = cx({\n    'bg-blue-500 hover:bg-blue-700': !toggle,\n    'bg-red-500 hover:bg-red-500': toggle,\n  });\n  return (\n    <div className=\"bg-gray-200 flex items-center justify-center h-screen\">\n      <button\n        className={`p-3 rounded-sm ${buttonClasses}`}\n        onClick={() => setToggle(!toggle)}\n      >\n        Toggle\n      </button>\n    </div>\n  );\n}\n\nexport default App;","position":{"start":{"line":112,"column":1,"offset":2742},"end":{"line":136,"column":4,"offset":3289},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Alternative without classnames","position":{"start":{"line":138,"column":4,"offset":3294},"end":{"line":138,"column":34,"offset":3324},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":3291},"end":{"line":138,"column":34,"offset":3324},"indent":[]}},{"type":"code","lang":"tsx","meta":null,"value":"import React from 'react';\n// import cx from 'classnames';\n\nfunction App() {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n  console.log('toggle', toggle);\n\n  const buttonClasses = toggle\n    ? 'bg-red-500 hover:bg-red-500'\n    : 'bg-blue-500 hover:bg-blue-500';\n  return (\n    <div className=\"bg-gray-200 flex items-center justify-center h-screen\">\n      <button\n        className={`p-3 rounded-sm ${buttonClasses}`}\n        onClick={() => setToggle(!toggle)}\n      >\n        Toggle\n      </button>\n    </div>\n  );\n}\n\nexport default App;","position":{"start":{"line":140,"column":1,"offset":3326},"end":{"line":164,"column":4,"offset":3891},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":167,"column":1,"offset":3894},"end":{"line":167,"column":31,"offset":3924},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":167,"column":31,"offset":3924}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-with-tailwind--typescript--vscode\"\n    }}>{`Quickstart with Tailwind + TypeScript + VSCode`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss\"\n        }}>{`VSCode extension`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://tailwindcss.com/docs/installation\"\n        }}>{`Tailwind - Installation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://tailwindcss.com/docs/flex/#app\"\n        }}>{`Tailwind - Flex`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://tailwindcss.com/docs/text-color/#app\"\n        }}>{`Tailwind - Text Color`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://tailwindcss.com/docs/background-color/#app\"\n        }}>{`Tailwind - Background Color`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://tailwindcss.com/docs/border-radius/#app\"\n        }}>{`Tailwind - Border Radius`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://tailwindcss.com/docs/padding/#app\"\n        }}>{`Tailwind - Padding`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://daveceddia.com/tailwind-create-react-app/\"\n        }}>{`Tailwind with CRA - Dave Ceddia`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/JedWatson/classnames\"\n        }}>{`Classnames - GitHub`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`npx create-react-app hello-tailwind --template typescript\ncd hello-tailwind\n# Using Yarn\nyarn add tailwindcss\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-css-imports\"\n    }}>{`Add CSS imports`}</h2>\n    <p>{`At the top of `}<inlineCode parentName=\"p\">{`src/index.css`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@import 'tailwindcss/base';\n@import 'tailwindcss/components';\n@import 'tailwindcss/utilities';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-scripts\"\n    }}>{`Adding scripts`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"scripts\": {\n    \"build:tailwind\": \"tailwindcss build src/tailwind.css -o src/tailwind.output.css\",\n    \"prestart\": \"npm run build:tailwind\",\n    \"prebuild\": \"npm run build:tailwind\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage-with-classnames\"\n    }}>{`Usage with classnames`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`yarn add classnames @types/classnames\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"updating-apptsx-to-use-the-correct-styles\"\n    }}>{`Updating App.tsx to use the correct styles`}</h2>\n    <p>{`Update `}<inlineCode parentName=\"p\">{`index.tsx`}</inlineCode>{` with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n`}</code></pre>\n    <p>{`Update `}<inlineCode parentName=\"p\">{`App.jsx`}</inlineCode>{` to be the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport cx from 'classnames';\n\nfunction App() {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n\n  return (\n    <div className=\"bg-gray-200 flex items-center justify-center h-screen\">\n      <button\n        className={cx('p-3 rounded-sm', {\n          'bg-blue-500 hover:bg-blue-700': !toggle,\n          'bg-red-500 hover:bg-red-500': toggle,\n        })}\n        onClick={() => setToggle(!toggle)}\n      >\n        Toggle\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n`}</code></pre>\n    <p>{`Alternatively, you could abstract this out:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport cx from 'classnames';\n\nfunction App() {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n\n  const buttonClasses = cx({\n    'bg-blue-500 hover:bg-blue-700': !toggle,\n    'bg-red-500 hover:bg-red-500': toggle,\n  });\n  return (\n    <div className=\"bg-gray-200 flex items-center justify-center h-screen\">\n      <button\n        className={\\`p-3 rounded-sm \\${buttonClasses}\\`}\n        onClick={() => setToggle(!toggle)}\n      >\n        Toggle\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"alternative-without-classnames\"\n    }}>{`Alternative without classnames`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\n// import cx from 'classnames';\n\nfunction App() {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n  console.log('toggle', toggle);\n\n  const buttonClasses = toggle\n    ? 'bg-red-500 hover:bg-red-500'\n    : 'bg-blue-500 hover:bg-blue-500';\n  return (\n    <div className=\"bg-gray-200 flex items-center justify-center h-screen\">\n      <button\n        className={\\`p-3 rounded-sm \\${buttonClasses}\\`}\n        onClick={() => setToggle(!toggle)}\n      >\n        Toggle\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}