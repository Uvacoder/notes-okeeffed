{"expireTime":9007200852878428000,"key":"gatsby-plugin-mdx-entire-payload-7f4ce73c4e335353b1932338b5021ed1-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Getting start with Istio on EKS","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":34,"offset":200},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":34,"offset":200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Reference link ","position":{"start":{"line":10,"column":1,"offset":202},"end":{"line":10,"column":16,"offset":217},"indent":[]}},{"type":"link","title":null,"url":"https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/","children":[{"type":"text","value":"https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/","position":{"start":{"line":10,"column":16,"offset":217},"end":{"line":10,"column":82,"offset":283},"indent":[]}}],"position":{"start":{"line":10,"column":16,"offset":217},"end":{"line":10,"column":82,"offset":283},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":202},"end":{"line":10,"column":82,"offset":283},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Architecture","position":{"start":{"line":12,"column":4,"offset":288},"end":{"line":12,"column":16,"offset":300},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":285},"end":{"line":12,"column":16,"offset":300},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i-h1.pinimg.com/564x/15/d7/9a/15d79a5f70bb45900166d1e3a6a3ea09.jpg","alt":"Small network proxy sidecar alongside each microservice","position":{"start":{"line":14,"column":1,"offset":302},"end":{"line":14,"column":135,"offset":436},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":302},"end":{"line":14,"column":135,"offset":436},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Istio works by having a small network proxy sit alongside each microservice. This so-called “sidecar” intercepts all of the service’s traffic, and handles it more intelligently than a simple layer 3 network can. Istio uses the Envoy proxy as its sidecar. Envoy was originally written at Lyft and is now a CNCF project. The whole set of sidecars, one per microservice, is called the data plane. The work of the sidecars is coordinated by a small number of central components called the control plane. Control and data plane architectures are very common in distributed systems, from network switches to compute farms.","position":{"start":{"line":16,"column":1,"offset":438},"end":{"line":16,"column":617,"offset":1054},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":438},"end":{"line":16,"column":617,"offset":1054},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting up Istio","position":{"start":{"line":18,"column":4,"offset":1059},"end":{"line":18,"column":20,"offset":1075},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1056},"end":{"line":18,"column":20,"offset":1075},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tl;dr is to use ","position":{"start":{"line":20,"column":1,"offset":1077},"end":{"line":20,"column":17,"offset":1093},"indent":[]}},{"type":"inlineCode","value":"eksctl","position":{"start":{"line":20,"column":17,"offset":1093},"end":{"line":20,"column":25,"offset":1101},"indent":[]}},{"type":"text","value":" to create an EKS cluster.","position":{"start":{"line":20,"column":25,"offset":1101},"end":{"line":20,"column":51,"offset":1127},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1077},"end":{"line":20,"column":51,"offset":1127},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"eksctl create cluster \\\n    --region us-west-2 \\\n    --name istio-on-eks \\\n    --nodes 2 \\\n    --ssh-public-key \"~/.ssh/id_rsa.pub\"","position":{"start":{"line":22,"column":1,"offset":1129},"end":{"line":28,"column":4,"offset":1273},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure you download and abstract the latest Istio release.","position":{"start":{"line":30,"column":1,"offset":1275},"end":{"line":30,"column":59,"offset":1333},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1275},"end":{"line":30,"column":59,"offset":1333},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"curl -L https://git.io/getLatestIstio | sh -\ncd istio-1.*","position":{"start":{"line":32,"column":1,"offset":1335},"end":{"line":35,"column":4,"offset":1405},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After changing in, ensure that you are using ","position":{"start":{"line":37,"column":1,"offset":1407},"end":{"line":37,"column":46,"offset":1452},"indent":[]}},{"type":"inlineCode","value":"helm","position":{"start":{"line":37,"column":46,"offset":1452},"end":{"line":37,"column":52,"offset":1458},"indent":[]}},{"type":"text","value":" to set up.","position":{"start":{"line":37,"column":52,"offset":1458},"end":{"line":37,"column":63,"offset":1469},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1407},"end":{"line":37,"column":63,"offset":1469},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl create -f install/kubernetes/helm/helm-service-account.yaml\n# Export isto to bin to enable istioctl\nhelm init --service-account tiller\nhelm install \\\n--wait \\\n--name istio \\\n--namespace istio-system \\\ninstall/kubernetes/helm/istio\n# Check `kubectl -n kube-system get po` to see if tiller pod running\nkubectl label namespace default istio-injection=enabled","position":{"start":{"line":39,"column":1,"offset":1471},"end":{"line":50,"column":4,"offset":1847},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: This is not the best example of security practice. Check Helm docs for RBAC to show you how to set up securely.","position":{"start":{"line":52,"column":1,"offset":1849},"end":{"line":52,"column":118,"offset":1966},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1849},"end":{"line":52,"column":118,"offset":1966},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Running a test application","position":{"start":{"line":54,"column":4,"offset":1971},"end":{"line":54,"column":30,"offset":1997},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1968},"end":{"line":54,"column":30,"offset":1997},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# From the istio folder, apply the book info\nkubectl apply -f \\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\n# Expose the BookInfo with the Gateway resource\nkubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml","position":{"start":{"line":56,"column":1,"offset":1999},"end":{"line":61,"column":4,"offset":2261},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For bookinfo.yaml:","position":{"start":{"line":63,"column":1,"offset":2263},"end":{"line":63,"column":19,"offset":2281},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2263},"end":{"line":63,"column":19,"offset":2281},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"# bookinfo.yaml\n#\n# Copyright 2017 Istio Authors\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n##################################################################################################\n# Details service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  labels:\n    app: details\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: details\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: details-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: details\n        version: v1\n    spec:\n      containers:\n        - name: details\n          image: istio/examples-bookinfo-details-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Ratings service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: ratings\n  labels:\n    app: ratings\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: ratings\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: ratings-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: ratings\n        version: v1\n    spec:\n      containers:\n        - name: ratings\n          image: istio/examples-bookinfo-ratings-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Reviews service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: reviews\n  labels:\n    app: reviews\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: reviews\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v1\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v2\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v2:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v3\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v3\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v3:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Productpage services\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage\n  labels:\n    app: productpage\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: productpage\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: productpage-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: productpage\n        version: v1\n    spec:\n      containers:\n        - name: productpage\n          image: istio/examples-bookinfo-productpage-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n","position":{"start":{"line":65,"column":1,"offset":2283},"end":{"line":261,"column":4,"offset":6766},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The following commands will locate the host and port we ultimately need to hit to access our Bookinfo application from across the internet:","position":{"start":{"line":263,"column":1,"offset":6768},"end":{"line":263,"column":140,"offset":6907},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":6768},"end":{"line":263,"column":140,"offset":6907},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"$ export INGRESS_HOST=$(kubectl -n istio-system \\\nget service istio-ingressgateway \\\n-o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n$ export INGRESS_PORT=$(kubectl -n istio-system \\\nget service istio-ingressgateway \\\n-o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\n$ export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT","position":{"start":{"line":265,"column":1,"offset":6909},"end":{"line":273,"column":4,"offset":7252},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Layer 7 Routing","position":{"start":{"line":275,"column":4,"offset":7257},"end":{"line":275,"column":19,"offset":7272},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":7254},"end":{"line":275,"column":19,"offset":7272},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So, let’s get things under control and pin all calls to reviews v1 for now.","position":{"start":{"line":277,"column":1,"offset":7274},"end":{"line":277,"column":76,"offset":7349},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":7274},"end":{"line":277,"column":76,"offset":7349},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Bookinfo sample has a few pre-made Istio configs we can use, and this is one of them.","position":{"start":{"line":279,"column":1,"offset":7351},"end":{"line":279,"column":90,"offset":7440},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":7351},"end":{"line":279,"column":90,"offset":7440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First we need to tell Istio about the different versions that exist and how to tell them apart (in this case, labels on the Kubernetes Deployment).","position":{"start":{"line":281,"column":1,"offset":7442},"end":{"line":281,"column":148,"offset":7589},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":7442},"end":{"line":281,"column":148,"offset":7589},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml","position":{"start":{"line":283,"column":1,"offset":7591},"end":{"line":285,"column":4,"offset":7674},"indent":[1,1]}},{"type":"code","lang":"yaml","meta":null,"value":"# destination-rule-all.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: productpage\nspec:\n  host: productpage\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v3\n      labels:\n        version: v3\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: ratings\nspec:\n  host: ratings\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v2-mysql\n      labels:\n        version: v2-mysql\n    - name: v2-mysql-vm\n      labels:\n        version: v2-mysql-vm\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: details\nspec:\n  host: details\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n---\n","position":{"start":{"line":287,"column":1,"offset":7676},"end":{"line":352,"column":4,"offset":8748},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i-h1.pinimg.com/564x/e9/a7/81/e9a7819b6ed349f27d4ea0915c0665f5.jpg","alt":"Dest rules","position":{"start":{"line":354,"column":1,"offset":8750},"end":{"line":354,"column":90,"offset":8839},"indent":[]}}],"position":{"start":{"line":354,"column":1,"offset":8750},"end":{"line":354,"column":90,"offset":8839},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With those subsets of the reviews Service defined, we can tell Istio that anyone looking to call reviews should always be directed to v1.","position":{"start":{"line":356,"column":1,"offset":8841},"end":{"line":356,"column":138,"offset":8978},"indent":[]}}],"position":{"start":{"line":356,"column":1,"offset":8841},"end":{"line":356,"column":138,"offset":8978},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml","position":{"start":{"line":358,"column":1,"offset":8980},"end":{"line":360,"column":4,"offset":9065},"indent":[1,1]}},{"type":"code","lang":"yaml","meta":null,"value":"# virtual-service-ruleallv1.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: productpage\nspec:\n  hosts:\n    - productpage\n  http:\n    - route:\n        - destination:\n            host: productpage\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n    - route:\n        - destination:\n            host: reviews\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n    - ratings\n  http:\n    - route:\n        - destination:\n            host: ratings\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: details\nspec:\n  hosts:\n    - details\n  http:\n    - route:\n        - destination:\n            host: details\n            subset: v1\n---\n","position":{"start":{"line":362,"column":1,"offset":9067},"end":{"line":417,"column":4,"offset":9980},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2018/08/22/istio-host-reviews.jpg","alt":"Route changes","position":{"start":{"line":419,"column":1,"offset":9982},"end":{"line":419,"column":131,"offset":10112},"indent":[]}}],"position":{"start":{"line":419,"column":1,"offset":9982},"end":{"line":419,"column":131,"offset":10112},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Teardown","position":{"start":{"line":421,"column":4,"offset":10117},"end":{"line":421,"column":12,"offset":10125},"indent":[]}}],"position":{"start":{"line":421,"column":1,"offset":10114},"end":{"line":421,"column":12,"offset":10125},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Deleting the resources:","position":{"start":{"line":423,"column":1,"offset":10127},"end":{"line":423,"column":24,"offset":10150},"indent":[]}}],"position":{"start":{"line":423,"column":1,"offset":10127},"end":{"line":423,"column":24,"offset":10150},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl delete -f samples/bookinfo/networking/bookinfo-gateway.yaml\nkubectl delete -f \\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\nhelm delete \\\n--wait \\\n--name istio \\\n--namespace istio-system \\\ninstall/kubernetes/helm/istio","position":{"start":{"line":425,"column":1,"offset":10152},"end":{"line":433,"column":4,"offset":10418},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":436,"column":1,"offset":10421},"end":{"line":436,"column":31,"offset":10451},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":436,"column":31,"offset":10451}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-start-with-istio-on-eks\"\n    }}>{`Getting start with Istio on EKS`}</h1>\n    <p>{`Reference link `}<a parentName=\"p\" {...{\n        \"href\": \"https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/\"\n      }}>{`https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/`}</a></p>\n    <h2 {...{\n      \"id\": \"architecture\"\n    }}>{`Architecture`}</h2>\n    <p><img alt=\"Small network proxy sidecar alongside each microservice\" src=\"https://i-h1.pinimg.com/564x/15/d7/9a/15d79a5f70bb45900166d1e3a6a3ea09.jpg\" /></p>\n    <p>{`Istio works by having a small network proxy sit alongside each microservice. This so-called “sidecar” intercepts all of the service’s traffic, and handles it more intelligently than a simple layer 3 network can. Istio uses the Envoy proxy as its sidecar. Envoy was originally written at Lyft and is now a CNCF project. The whole set of sidecars, one per microservice, is called the data plane. The work of the sidecars is coordinated by a small number of central components called the control plane. Control and data plane architectures are very common in distributed systems, from network switches to compute farms.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-istio\"\n    }}>{`Setting up Istio`}</h2>\n    <p>{`tl;dr is to use `}<inlineCode parentName=\"p\">{`eksctl`}</inlineCode>{` to create an EKS cluster.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`eksctl create cluster \\\\\n    --region us-west-2 \\\\\n    --name istio-on-eks \\\\\n    --nodes 2 \\\\\n    --ssh-public-key \"~/.ssh/id_rsa.pub\"\n`}</code></pre>\n    <p>{`Ensure you download and abstract the latest Istio release.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -L https://git.io/getLatestIstio | sh -\ncd istio-1.*\n`}</code></pre>\n    <p>{`After changing in, ensure that you are using `}<inlineCode parentName=\"p\">{`helm`}</inlineCode>{` to set up.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl create -f install/kubernetes/helm/helm-service-account.yaml\n# Export isto to bin to enable istioctl\nhelm init --service-account tiller\nhelm install \\\\\n--wait \\\\\n--name istio \\\\\n--namespace istio-system \\\\\ninstall/kubernetes/helm/istio\n# Check \\`kubectl -n kube-system get po\\` to see if tiller pod running\nkubectl label namespace default istio-injection=enabled\n`}</code></pre>\n    <p>{`Note: This is not the best example of security practice. Check Helm docs for RBAC to show you how to set up securely.`}</p>\n    <h2 {...{\n      \"id\": \"running-a-test-application\"\n    }}>{`Running a test application`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# From the istio folder, apply the book info\nkubectl apply -f \\\\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\n# Expose the BookInfo with the Gateway resource\nkubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml\n`}</code></pre>\n    <p>{`For bookinfo.yaml:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# bookinfo.yaml\n#\n# Copyright 2017 Istio Authors\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n##################################################################################################\n# Details service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  labels:\n    app: details\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: details\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: details-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: details\n        version: v1\n    spec:\n      containers:\n        - name: details\n          image: istio/examples-bookinfo-details-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Ratings service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: ratings\n  labels:\n    app: ratings\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: ratings\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: ratings-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: ratings\n        version: v1\n    spec:\n      containers:\n        - name: ratings\n          image: istio/examples-bookinfo-ratings-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Reviews service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: reviews\n  labels:\n    app: reviews\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: reviews\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v1\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v2\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v2:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v3\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v3\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v3:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Productpage services\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage\n  labels:\n    app: productpage\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: productpage\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: productpage-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: productpage\n        version: v1\n    spec:\n      containers:\n        - name: productpage\n          image: istio/examples-bookinfo-productpage-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n\n`}</code></pre>\n    <p>{`The following commands will locate the host and port we ultimately need to hit to access our Bookinfo application from across the internet:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ export INGRESS_HOST=$(kubectl -n istio-system \\\\\nget service istio-ingressgateway \\\\\n-o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n$ export INGRESS_PORT=$(kubectl -n istio-system \\\\\nget service istio-ingressgateway \\\\\n-o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\n$ export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"layer-7-routing\"\n    }}>{`Layer 7 Routing`}</h2>\n    <p>{`So, let’s get things under control and pin all calls to reviews v1 for now.`}</p>\n    <p>{`The Bookinfo sample has a few pre-made Istio configs we can use, and this is one of them.`}</p>\n    <p>{`First we need to tell Istio about the different versions that exist and how to tell them apart (in this case, labels on the Kubernetes Deployment).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# destination-rule-all.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: productpage\nspec:\n  host: productpage\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v3\n      labels:\n        version: v3\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: ratings\nspec:\n  host: ratings\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v2-mysql\n      labels:\n        version: v2-mysql\n    - name: v2-mysql-vm\n      labels:\n        version: v2-mysql-vm\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: details\nspec:\n  host: details\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n---\n\n`}</code></pre>\n    <p><img alt=\"Dest rules\" src=\"https://i-h1.pinimg.com/564x/e9/a7/81/e9a7819b6ed349f27d4ea0915c0665f5.jpg\" /></p>\n    <p>{`With those subsets of the reviews Service defined, we can tell Istio that anyone looking to call reviews should always be directed to v1.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# virtual-service-ruleallv1.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: productpage\nspec:\n  hosts:\n    - productpage\n  http:\n    - route:\n        - destination:\n            host: productpage\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n    - route:\n        - destination:\n            host: reviews\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n    - ratings\n  http:\n    - route:\n        - destination:\n            host: ratings\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: details\nspec:\n  hosts:\n    - details\n  http:\n    - route:\n        - destination:\n            host: details\n            subset: v1\n---\n\n`}</code></pre>\n    <p><img alt=\"Route changes\" src=\"https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2018/08/22/istio-host-reviews.jpg\" /></p>\n    <h2 {...{\n      \"id\": \"teardown\"\n    }}>{`Teardown`}</h2>\n    <p>{`Deleting the resources:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl delete -f samples/bookinfo/networking/bookinfo-gateway.yaml\nkubectl delete -f \\\\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\nhelm delete \\\\\n--wait \\\\\n--name istio \\\\\n--namespace istio-system \\\\\ninstall/kubernetes/helm/istio\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}