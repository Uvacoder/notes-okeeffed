{"expireTime":9007200852878372000,"key":"gatsby-plugin-mdx-entire-payload-1dfb13ccf280b2f1dcbefccb03af7ef1-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Data Vis For React Devs","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":26,"offset":192},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":26,"offset":192},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":197},"end":{"line":10,"column":13,"offset":206},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":194},"end":{"line":10,"column":13,"offset":206},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://observablehq.com/@d3","children":[{"type":"text","value":"Observable HQ @ d3","position":{"start":{"line":12,"column":5,"offset":212},"end":{"line":12,"column":23,"offset":230},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":211},"end":{"line":12,"column":54,"offset":261},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":211},"end":{"line":12,"column":54,"offset":261},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":208},"end":{"line":12,"column":54,"offset":261},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://frontendmasters.com/courses/d3-js-react/","children":[{"type":"text","value":"FE Masters Course","position":{"start":{"line":13,"column":5,"offset":266},"end":{"line":13,"column":22,"offset":283},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":265},"end":{"line":13,"column":73,"offset":334},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":265},"end":{"line":13,"column":73,"offset":334},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":262},"end":{"line":13,"column":73,"offset":334},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://academy.datawrapper.de/article/134-what-to-consider-when-creating-choropleth-maps","children":[{"type":"text","value":"Data Wrapper Academy - chloropleth maps","position":{"start":{"line":14,"column":5,"offset":339},"end":{"line":14,"column":44,"offset":378},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":338},"end":{"line":14,"column":136,"offset":470},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":338},"end":{"line":14,"column":136,"offset":470},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":335},"end":{"line":14,"column":136,"offset":470},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://slides.com/shirleywu/deck-11","children":[{"type":"text","value":"Course Slides","position":{"start":{"line":15,"column":5,"offset":475},"end":{"line":15,"column":18,"offset":488},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":474},"end":{"line":15,"column":57,"offset":527},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":474},"end":{"line":15,"column":57,"offset":527},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":471},"end":{"line":15,"column":57,"offset":527},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths","children":[{"type":"text","value":"MDN Path documentation","position":{"start":{"line":16,"column":5,"offset":532},"end":{"line":16,"column":27,"offset":554},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":531},"end":{"line":16,"column":93,"offset":620},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":531},"end":{"line":16,"column":93,"offset":620},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":528},"end":{"line":16,"column":93,"offset":620},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://beta.observablehq.com/@sxywu/data-visualization-for-react-developers-starter","children":[{"type":"text","value":"SVG Explorations - Observable","position":{"start":{"line":17,"column":5,"offset":625},"end":{"line":17,"column":34,"offset":654},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":624},"end":{"line":17,"column":121,"offset":741},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":624},"end":{"line":17,"column":121,"offset":741},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":621},"end":{"line":17,"column":121,"offset":741},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":208},"end":{"line":17,"column":121,"offset":741},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Navigating Her 3 Workshops","position":{"start":{"line":19,"column":4,"offset":746},"end":{"line":19,"column":30,"offset":772},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":743},"end":{"line":19,"column":30,"offset":772},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Data Vis for React Devs","position":{"start":{"line":21,"column":4,"offset":777},"end":{"line":21,"column":27,"offset":800},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":777},"end":{"line":21,"column":27,"offset":800},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":774},"end":{"line":21,"column":27,"offset":800},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Intro to D3","position":{"start":{"line":22,"column":4,"offset":804},"end":{"line":22,"column":15,"offset":815},"indent":[]}}],"position":{"start":{"line":22,"column":4,"offset":804},"end":{"line":22,"column":15,"offset":815},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":801},"end":{"line":22,"column":15,"offset":815},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Building Custom Data Visualations","position":{"start":{"line":23,"column":4,"offset":819},"end":{"line":23,"column":37,"offset":852},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":819},"end":{"line":23,"column":37,"offset":852},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":816},"end":{"line":23,"column":37,"offset":852},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":774},"end":{"line":23,"column":37,"offset":852},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"3","label":"3","referenceType":"shortcut","children":[{"type":"text","value":"3","position":{"start":{"line":25,"column":2,"offset":855},"end":{"line":25,"column":3,"offset":856},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":854},"end":{"line":25,"column":4,"offset":857},"indent":[]}},{"type":"text","value":" builds on top of ","position":{"start":{"line":25,"column":4,"offset":857},"end":{"line":25,"column":22,"offset":875},"indent":[]}},{"type":"linkReference","identifier":"2","label":"2","referenceType":"shortcut","children":[{"type":"text","value":"2","position":{"start":{"line":25,"column":23,"offset":876},"end":{"line":25,"column":24,"offset":877},"indent":[]}}],"position":{"start":{"line":25,"column":22,"offset":875},"end":{"line":25,"column":25,"offset":878},"indent":[]}},{"type":"text","value":" and these notes are based on ","position":{"start":{"line":25,"column":25,"offset":878},"end":{"line":25,"column":55,"offset":908},"indent":[]}},{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":25,"column":56,"offset":909},"end":{"line":25,"column":57,"offset":910},"indent":[]}}],"position":{"start":{"line":25,"column":55,"offset":908},"end":{"line":25,"column":58,"offset":911},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":25,"column":58,"offset":911},"end":{"line":25,"column":59,"offset":912},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":854},"end":{"line":25,"column":59,"offset":912},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"3","label":"3","referenceType":"shortcut","children":[{"type":"text","value":"3","position":{"start":{"line":27,"column":2,"offset":915},"end":{"line":27,"column":3,"offset":916},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":914},"end":{"line":27,"column":4,"offset":917},"indent":[]}},{"type":"text","value":" will talk more about the Gestalt laws and how to design the visualisations.","position":{"start":{"line":27,"column":4,"offset":917},"end":{"line":27,"column":80,"offset":993},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":914},"end":{"line":27,"column":80,"offset":993},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Intro To Different Data Types","position":{"start":{"line":29,"column":4,"offset":998},"end":{"line":29,"column":33,"offset":1027},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":995},"end":{"line":29,"column":33,"offset":1027},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are a number of data types:","position":{"start":{"line":31,"column":1,"offset":1029},"end":{"line":31,"column":34,"offset":1062},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1029},"end":{"line":31,"column":34,"offset":1062},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Categorical (genres)","position":{"start":{"line":33,"column":4,"offset":1067},"end":{"line":33,"column":24,"offset":1087},"indent":[]}}],"position":{"start":{"line":33,"column":4,"offset":1067},"end":{"line":33,"column":24,"offset":1087},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1064},"end":{"line":33,"column":24,"offset":1087},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ordinal (t-shirt sizes)","position":{"start":{"line":34,"column":4,"offset":1091},"end":{"line":34,"column":27,"offset":1114},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":1091},"end":{"line":34,"column":27,"offset":1114},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1088},"end":{"line":34,"column":27,"offset":1114},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Quantitative (temperatures)","position":{"start":{"line":35,"column":4,"offset":1118},"end":{"line":35,"column":31,"offset":1145},"indent":[]}}],"position":{"start":{"line":35,"column":4,"offset":1118},"end":{"line":35,"column":31,"offset":1145},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1115},"end":{"line":35,"column":31,"offset":1145},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Temporal (dates)","position":{"start":{"line":36,"column":4,"offset":1149},"end":{"line":36,"column":20,"offset":1165},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":1149},"end":{"line":36,"column":20,"offset":1165},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1146},"end":{"line":36,"column":20,"offset":1165},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Spatial (cities)","position":{"start":{"line":37,"column":4,"offset":1169},"end":{"line":37,"column":20,"offset":1185},"indent":[]}}],"position":{"start":{"line":37,"column":4,"offset":1169},"end":{"line":37,"column":20,"offset":1185},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1166},"end":{"line":37,"column":20,"offset":1185},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1064},"end":{"line":37,"column":20,"offset":1185},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The basic charts and when to use them:","position":{"start":{"line":39,"column":1,"offset":1187},"end":{"line":39,"column":39,"offset":1225},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1187},"end":{"line":39,"column":39,"offset":1225},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Bar chart: for categorial comparisons. The domain is categorial and the range is quantitative.","position":{"start":{"line":41,"column":4,"offset":1230},"end":{"line":41,"column":98,"offset":1324},"indent":[]}}],"position":{"start":{"line":41,"column":4,"offset":1230},"end":{"line":41,"column":98,"offset":1324},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1227},"end":{"line":41,"column":98,"offset":1324},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Histogram: for categorial distributions. Domain is quantitative bins and range is the frequency of quantitative bin. Example: x-axis is movie scores and height is number of movies that fall into that score.","position":{"start":{"line":42,"column":4,"offset":1328},"end":{"line":42,"column":210,"offset":1534},"indent":[]}}],"position":{"start":{"line":42,"column":4,"offset":1328},"end":{"line":42,"column":210,"offset":1534},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1325},"end":{"line":42,"column":210,"offset":1534},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Scatter plots: for correlation. 2 attributes and the relationship between their quantitative values.","position":{"start":{"line":43,"column":4,"offset":1538},"end":{"line":43,"column":104,"offset":1638},"indent":[]}}],"position":{"start":{"line":43,"column":4,"offset":1538},"end":{"line":43,"column":104,"offset":1638},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1535},"end":{"line":43,"column":104,"offset":1638},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Line chart: for temporal trends. Domain is temporal and range is quantitative.","position":{"start":{"line":44,"column":4,"offset":1642},"end":{"line":44,"column":82,"offset":1720},"indent":[]}}],"position":{"start":{"line":44,"column":4,"offset":1642},"end":{"line":44,"column":82,"offset":1720},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1639},"end":{"line":44,"column":82,"offset":1720},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tree: For hierarchy, parent-child relationships, multiple tiers of category. Unidirectional.","position":{"start":{"line":45,"column":4,"offset":1724},"end":{"line":45,"column":96,"offset":1816},"indent":[]}}],"position":{"start":{"line":45,"column":4,"offset":1724},"end":{"line":45,"column":96,"offset":1816},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1721},"end":{"line":45,"column":96,"offset":1816},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Node-link diagram: For connection. Shows the relationship between entities. Cyclical.","position":{"start":{"line":46,"column":4,"offset":1820},"end":{"line":46,"column":89,"offset":1905},"indent":[]}}],"position":{"start":{"line":46,"column":4,"offset":1820},"end":{"line":46,"column":89,"offset":1905},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1817},"end":{"line":46,"column":89,"offset":1905},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Chlorodepth: For spatial trends. Domain: spatial regions. Range: Quantitative. Not good for subtle differences in data.","position":{"start":{"line":47,"column":4,"offset":1909},"end":{"line":47,"column":123,"offset":2028},"indent":[]}}],"position":{"start":{"line":47,"column":4,"offset":1909},"end":{"line":47,"column":123,"offset":2028},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1906},"end":{"line":47,"column":123,"offset":2028},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Pie charts: used sparingly. For hierarchical part-to-whole. Best for: When values are around 25%, 30% or 75% (3 or 4 values). Not good for comparing fine differences and multiple totals.","position":{"start":{"line":48,"column":4,"offset":2032},"end":{"line":48,"column":190,"offset":2218},"indent":[]}}],"position":{"start":{"line":48,"column":4,"offset":2032},"end":{"line":48,"column":190,"offset":2218},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2029},"end":{"line":48,"column":190,"offset":2218},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1227},"end":{"line":48,"column":190,"offset":2218},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Intro to SVG","position":{"start":{"line":50,"column":4,"offset":2223},"end":{"line":50,"column":16,"offset":2235},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2220},"end":{"line":50,"column":16,"offset":2235},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"SVG is really good at drawing shapes onto the sreen. The most used SVG elements are ","position":{"start":{"line":52,"column":1,"offset":2237},"end":{"line":52,"column":85,"offset":2321},"indent":[]}},{"type":"inlineCode","value":"rect","position":{"start":{"line":52,"column":85,"offset":2321},"end":{"line":52,"column":91,"offset":2327},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":52,"column":91,"offset":2327},"end":{"line":52,"column":93,"offset":2329},"indent":[]}},{"type":"inlineCode","value":"circle","position":{"start":{"line":52,"column":93,"offset":2329},"end":{"line":52,"column":101,"offset":2337},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":52,"column":101,"offset":2337},"end":{"line":52,"column":103,"offset":2339},"indent":[]}},{"type":"inlineCode","value":"text","position":{"start":{"line":52,"column":103,"offset":2339},"end":{"line":52,"column":109,"offset":2345},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":52,"column":109,"offset":2345},"end":{"line":52,"column":114,"offset":2350},"indent":[]}},{"type":"inlineCode","value":"path","position":{"start":{"line":52,"column":114,"offset":2350},"end":{"line":52,"column":120,"offset":2356},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":52,"column":120,"offset":2356},"end":{"line":52,"column":121,"offset":2357},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2237},"end":{"line":52,"column":121,"offset":2357},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The SVG co-ordinate starts with (0,0) at the top-left and the numbers in crease for X to the right or down when talking about Y.","position":{"start":{"line":54,"column":1,"offset":2359},"end":{"line":54,"column":129,"offset":2487},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2359},"end":{"line":54,"column":129,"offset":2487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the three charts the course makes (bar chart, line chart, radial chart), Susie explains that the bar chart uses ","position":{"start":{"line":56,"column":1,"offset":2489},"end":{"line":56,"column":116,"offset":2604},"indent":[]}},{"type":"inlineCode","value":"<rect/>","position":{"start":{"line":56,"column":116,"offset":2604},"end":{"line":56,"column":125,"offset":2613},"indent":[]}},{"type":"text","value":" elements, the line chart uses ","position":{"start":{"line":56,"column":125,"offset":2613},"end":{"line":56,"column":156,"offset":2644},"indent":[]}},{"type":"inlineCode","value":"<path/>","position":{"start":{"line":56,"column":156,"offset":2644},"end":{"line":56,"column":165,"offset":2653},"indent":[]}},{"type":"text","value":" elements and the radial chart uses ","position":{"start":{"line":56,"column":165,"offset":2653},"end":{"line":56,"column":201,"offset":2689},"indent":[]}},{"type":"inlineCode","value":"<path/>","position":{"start":{"line":56,"column":201,"offset":2689},"end":{"line":56,"column":210,"offset":2698},"indent":[]}},{"type":"text","value":" elements.","position":{"start":{"line":56,"column":210,"offset":2698},"end":{"line":56,"column":220,"offset":2708},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2489},"end":{"line":56,"column":220,"offset":2708},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data to SVG Shapes","position":{"start":{"line":58,"column":4,"offset":2713},"end":{"line":58,"column":22,"offset":2731},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2710},"end":{"line":58,"column":22,"offset":2731},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The work here is to look at how some elements are made through the ","position":{"start":{"line":60,"column":1,"offset":2733},"end":{"line":60,"column":68,"offset":2800},"indent":[]}},{"type":"link","title":null,"url":"https://beta.observablehq.com/@sxywu/data-visualization-for-react-developers-starter","children":[{"type":"text","value":"Observable notebook","position":{"start":{"line":60,"column":69,"offset":2801},"end":{"line":60,"column":88,"offset":2820},"indent":[]}}],"position":{"start":{"line":60,"column":68,"offset":2800},"end":{"line":60,"column":175,"offset":2907},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":60,"column":175,"offset":2907},"end":{"line":60,"column":176,"offset":2908},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2733},"end":{"line":60,"column":176,"offset":2908},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"D3 is a tool that helps us take data to SVG without the difficulty.","position":{"start":{"line":62,"column":1,"offset":2910},"end":{"line":62,"column":68,"offset":2977},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2910},"end":{"line":62,"column":68,"offset":2977},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"People can be intimidated by the size of the API. There is an API slide you can see ","position":{"start":{"line":64,"column":1,"offset":2979},"end":{"line":64,"column":85,"offset":3063},"indent":[]}},{"type":"link","title":null,"url":"https://slides.com/shirleywu/deck-11#/21/0/0","children":[{"type":"text","value":"here","position":{"start":{"line":64,"column":86,"offset":3064},"end":{"line":64,"column":90,"offset":3068},"indent":[]}}],"position":{"start":{"line":64,"column":85,"offset":3063},"end":{"line":64,"column":137,"offset":3115},"indent":[]}},{"type":"text","value":" that breaks down the API modules.","position":{"start":{"line":64,"column":137,"offset":3115},"end":{"line":64,"column":171,"offset":3149},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2979},"end":{"line":64,"column":171,"offset":3149},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Scales","position":{"start":{"line":66,"column":4,"offset":3154},"end":{"line":66,"column":10,"offset":3160},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":3151},"end":{"line":66,"column":10,"offset":3160},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Mapping from data attributes (domain) to display (range).","position":{"start":{"line":68,"column":3,"offset":3164},"end":{"line":68,"column":60,"offset":3221},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":3164},"end":{"line":68,"column":60,"offset":3221},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3162},"end":{"line":68,"column":60,"offset":3221},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"d3.linearScale()\n  .domain([min, max]) // input\n  .range([min, max]); // output","position":{"start":{"line":70,"column":1,"offset":3223},"end":{"line":74,"column":4,"offset":3320},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"An example of taking the data and scaling by fetching min/max:","position":{"start":{"line":76,"column":1,"offset":3322},"end":{"line":76,"column":63,"offset":3384},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3322},"end":{"line":76,"column":63,"offset":3384},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var width = 800;\nvar height = 600;\nvar data = [\n  { date: new Date('01-01-2015'), temp: 0 },\n  { date: new Date('01-01-2017'), temp: 3 },\n];\n\nvar min = d3.min(data, d => d.date);\nvar max = d3.max(data, d => d.date);\n\n// or use extent, which gives back [min, max]\nconst [min, max] = d3.extent(data, d => d.date);\n\nvar xScale = d3\n  .scaleTime()\n  .domain([min, max])\n  .range([0, width]);\nvar yScale = d3\n  .scaleLinear()\n  .domain([min, max])\n  .range([height, 0]); // to account for 0,0 viewbox","position":{"start":{"line":78,"column":1,"offset":3386},"end":{"line":100,"column":4,"offset":3899},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Which scale to use and when:","position":{"start":{"line":102,"column":1,"offset":3901},"end":{"line":102,"column":29,"offset":3929},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3901},"end":{"line":102,"column":29,"offset":3929},"indent":[]}},{"type":"table","align":[null,null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Type","position":{"start":{"line":104,"column":3,"offset":3933},"end":{"line":104,"column":7,"offset":3937},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":3933},"end":{"line":104,"column":15,"offset":3945},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Domain","position":{"start":{"line":104,"column":18,"offset":3948},"end":{"line":104,"column":24,"offset":3954},"indent":[]}}],"position":{"start":{"line":104,"column":18,"offset":3948},"end":{"line":104,"column":28,"offset":3958},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Range","position":{"start":{"line":104,"column":31,"offset":3961},"end":{"line":104,"column":36,"offset":3966},"indent":[]}}],"position":{"start":{"line":104,"column":31,"offset":3961},"end":{"line":104,"column":41,"offset":3971},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Scale","position":{"start":{"line":104,"column":44,"offset":3974},"end":{"line":104,"column":49,"offset":3979},"indent":[]}}],"position":{"start":{"line":104,"column":44,"offset":3974},"end":{"line":104,"column":57,"offset":3987},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3931},"end":{"line":104,"column":59,"offset":3989},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Quantitative","position":{"start":{"line":106,"column":3,"offset":4051},"end":{"line":106,"column":15,"offset":4063},"indent":[]}}],"position":{"start":{"line":106,"column":3,"offset":4051},"end":{"line":106,"column":15,"offset":4063},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":106,"column":18,"offset":4066},"end":{"line":106,"column":28,"offset":4076},"indent":[]}}],"position":{"start":{"line":106,"column":18,"offset":4066},"end":{"line":106,"column":28,"offset":4076},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":106,"column":31,"offset":4079},"end":{"line":106,"column":41,"offset":4089},"indent":[]}}],"position":{"start":{"line":106,"column":31,"offset":4079},"end":{"line":106,"column":41,"offset":4089},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"scaleLinear","position":{"start":{"line":106,"column":44,"offset":4092},"end":{"line":106,"column":55,"offset":4103},"indent":[]}}],"position":{"start":{"line":106,"column":44,"offset":4092},"end":{"line":106,"column":57,"offset":4105},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":4049},"end":{"line":106,"column":59,"offset":4107},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Quantitative","position":{"start":{"line":107,"column":3,"offset":4110},"end":{"line":107,"column":15,"offset":4122},"indent":[]}}],"position":{"start":{"line":107,"column":3,"offset":4110},"end":{"line":107,"column":15,"offset":4122},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":107,"column":18,"offset":4125},"end":{"line":107,"column":28,"offset":4135},"indent":[]}}],"position":{"start":{"line":107,"column":18,"offset":4125},"end":{"line":107,"column":28,"offset":4135},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":107,"column":31,"offset":4138},"end":{"line":107,"column":41,"offset":4148},"indent":[]}}],"position":{"start":{"line":107,"column":31,"offset":4138},"end":{"line":107,"column":41,"offset":4148},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"scaleLog","position":{"start":{"line":107,"column":44,"offset":4151},"end":{"line":107,"column":52,"offset":4159},"indent":[]}}],"position":{"start":{"line":107,"column":44,"offset":4151},"end":{"line":107,"column":57,"offset":4164},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4108},"end":{"line":107,"column":59,"offset":4166},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Quantitative","position":{"start":{"line":108,"column":3,"offset":4169},"end":{"line":108,"column":15,"offset":4181},"indent":[]}}],"position":{"start":{"line":108,"column":3,"offset":4169},"end":{"line":108,"column":15,"offset":4181},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":108,"column":18,"offset":4184},"end":{"line":108,"column":28,"offset":4194},"indent":[]}}],"position":{"start":{"line":108,"column":18,"offset":4184},"end":{"line":108,"column":28,"offset":4194},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":108,"column":31,"offset":4197},"end":{"line":108,"column":41,"offset":4207},"indent":[]}}],"position":{"start":{"line":108,"column":31,"offset":4197},"end":{"line":108,"column":41,"offset":4207},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"scaleTime","position":{"start":{"line":108,"column":44,"offset":4210},"end":{"line":108,"column":53,"offset":4219},"indent":[]}}],"position":{"start":{"line":108,"column":44,"offset":4210},"end":{"line":108,"column":57,"offset":4223},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4167},"end":{"line":108,"column":59,"offset":4225},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Quantitative","position":{"start":{"line":109,"column":3,"offset":4228},"end":{"line":109,"column":15,"offset":4240},"indent":[]}}],"position":{"start":{"line":109,"column":3,"offset":4228},"end":{"line":109,"column":15,"offset":4240},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":109,"column":18,"offset":4243},"end":{"line":109,"column":28,"offset":4253},"indent":[]}}],"position":{"start":{"line":109,"column":18,"offset":4243},"end":{"line":109,"column":28,"offset":4253},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Discrete","position":{"start":{"line":109,"column":31,"offset":4256},"end":{"line":109,"column":39,"offset":4264},"indent":[]}}],"position":{"start":{"line":109,"column":31,"offset":4256},"end":{"line":109,"column":41,"offset":4266},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"scaleQuantize","position":{"start":{"line":109,"column":44,"offset":4269},"end":{"line":109,"column":57,"offset":4282},"indent":[]}}],"position":{"start":{"line":109,"column":44,"offset":4269},"end":{"line":109,"column":57,"offset":4282},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4226},"end":{"line":109,"column":59,"offset":4284},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Categorial","position":{"start":{"line":110,"column":3,"offset":4287},"end":{"line":110,"column":13,"offset":4297},"indent":[]}}],"position":{"start":{"line":110,"column":3,"offset":4287},"end":{"line":110,"column":15,"offset":4299},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Discrete","position":{"start":{"line":110,"column":18,"offset":4302},"end":{"line":110,"column":26,"offset":4310},"indent":[]}}],"position":{"start":{"line":110,"column":18,"offset":4302},"end":{"line":110,"column":28,"offset":4312},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Discrete","position":{"start":{"line":110,"column":31,"offset":4315},"end":{"line":110,"column":39,"offset":4323},"indent":[]}}],"position":{"start":{"line":110,"column":31,"offset":4315},"end":{"line":110,"column":41,"offset":4325},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"scaleOrdinal","position":{"start":{"line":110,"column":44,"offset":4328},"end":{"line":110,"column":56,"offset":4340},"indent":[]}}],"position":{"start":{"line":110,"column":44,"offset":4328},"end":{"line":110,"column":57,"offset":4341},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4285},"end":{"line":110,"column":59,"offset":4343},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Categorial","position":{"start":{"line":111,"column":3,"offset":4346},"end":{"line":111,"column":13,"offset":4356},"indent":[]}}],"position":{"start":{"line":111,"column":3,"offset":4346},"end":{"line":111,"column":15,"offset":4358},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Discrete","position":{"start":{"line":111,"column":18,"offset":4361},"end":{"line":111,"column":26,"offset":4369},"indent":[]}}],"position":{"start":{"line":111,"column":18,"offset":4361},"end":{"line":111,"column":28,"offset":4371},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Continuous","position":{"start":{"line":111,"column":31,"offset":4374},"end":{"line":111,"column":41,"offset":4384},"indent":[]}}],"position":{"start":{"line":111,"column":31,"offset":4374},"end":{"line":111,"column":41,"offset":4384},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"scaleBand","position":{"start":{"line":111,"column":44,"offset":4387},"end":{"line":111,"column":53,"offset":4396},"indent":[]}}],"position":{"start":{"line":111,"column":44,"offset":4387},"end":{"line":111,"column":57,"offset":4400},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4344},"end":{"line":111,"column":59,"offset":4402},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3931},"end":{"line":111,"column":59,"offset":4402},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating Bar Charts","position":{"start":{"line":113,"column":4,"offset":4407},"end":{"line":113,"column":23,"offset":4426},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4404},"end":{"line":113,"column":23,"offset":4426},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can do the example on ","position":{"start":{"line":115,"column":1,"offset":4428},"end":{"line":115,"column":27,"offset":4454},"indent":[]}},{"type":"link","title":null,"url":"https://observablehq.com/@sxywu/data-visualization-for-react-developers-starter","children":[{"type":"text","value":"2 of this Observable notebook","position":{"start":{"line":115,"column":28,"offset":4455},"end":{"line":115,"column":57,"offset":4484},"indent":[]}}],"position":{"start":{"line":115,"column":27,"offset":4454},"end":{"line":115,"column":139,"offset":4566},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":115,"column":139,"offset":4566},"end":{"line":115,"column":140,"offset":4567},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4428},"end":{"line":115,"column":140,"offset":4567},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const barChartData = () => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  return data.map(d => ({\n    x: xScale(d.date),\n    y: yScale(d.high),\n    height: yScale(d.low) - yScale(d.high),\n  }));\n};","position":{"start":{"line":117,"column":1,"offset":4569},"end":{"line":138,"column":4,"offset":5056},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here we wanted to calculate the x-axis of time and y-axis of height and use these scales to calculate values for ","position":{"start":{"line":140,"column":1,"offset":5058},"end":{"line":140,"column":114,"offset":5171},"indent":[]}},{"type":"inlineCode","value":"x","position":{"start":{"line":140,"column":114,"offset":5171},"end":{"line":140,"column":117,"offset":5174},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":140,"column":117,"offset":5174},"end":{"line":140,"column":119,"offset":5176},"indent":[]}},{"type":"inlineCode","value":"y","position":{"start":{"line":140,"column":119,"offset":5176},"end":{"line":140,"column":122,"offset":5179},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":140,"column":122,"offset":5179},"end":{"line":140,"column":127,"offset":5184},"indent":[]}},{"type":"inlineCode","value":"height","position":{"start":{"line":140,"column":127,"offset":5184},"end":{"line":140,"column":135,"offset":5192},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":140,"column":135,"offset":5192},"end":{"line":140,"column":136,"offset":5193},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5058},"end":{"line":140,"column":136,"offset":5193},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We also used ","position":{"start":{"line":142,"column":1,"offset":5195},"end":{"line":142,"column":14,"offset":5208},"indent":[]}},{"type":"inlineCode","value":"min","position":{"start":{"line":142,"column":14,"offset":5208},"end":{"line":142,"column":19,"offset":5213},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":142,"column":19,"offset":5213},"end":{"line":142,"column":24,"offset":5218},"indent":[]}},{"type":"inlineCode","value":"max","position":{"start":{"line":142,"column":24,"offset":5218},"end":{"line":142,"column":29,"offset":5223},"indent":[]}},{"type":"text","value":" functions for the temp as they were different keys in the data.","position":{"start":{"line":142,"column":29,"offset":5223},"end":{"line":142,"column":93,"offset":5287},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5195},"end":{"line":142,"column":93,"offset":5287},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Adding in a color scale","position":{"start":{"line":144,"column":5,"offset":5293},"end":{"line":144,"column":28,"offset":5316},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5289},"end":{"line":144,"column":28,"offset":5316},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We add this in addition to the work in the section above.","position":{"start":{"line":146,"column":1,"offset":5318},"end":{"line":146,"column":58,"offset":5375},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5318},"end":{"line":146,"column":58,"offset":5375},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const barChartData = () => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // the important part\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  // scaleSequential allows you to use an interpolator to map\n  // to the range.\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map(d => ({\n    x: xScale(d.date),\n    y: yScale(d.high),\n    height: yScale(d.low) - yScale(d.high),\n    fill: colorScale(d.avg),\n  }));\n};","position":{"start":{"line":148,"column":1,"offset":5377},"end":{"line":179,"column":4,"offset":6173},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating Line Charts","position":{"start":{"line":181,"column":4,"offset":6178},"end":{"line":181,"column":24,"offset":6198},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6175},"end":{"line":181,"column":24,"offset":6198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The important part here is again understanding the ","position":{"start":{"line":183,"column":1,"offset":6200},"end":{"line":183,"column":52,"offset":6251},"indent":[]}},{"type":"inlineCode","value":"line","position":{"start":{"line":183,"column":52,"offset":6251},"end":{"line":183,"column":58,"offset":6257},"indent":[]}},{"type":"text","value":" SVG and parts that go into it.","position":{"start":{"line":183,"column":58,"offset":6257},"end":{"line":183,"column":89,"offset":6288},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":6200},"end":{"line":183,"column":89,"offset":6288},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const lineChartData = () => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // you could also create two different lines and pass the .y func\n  const line = d3.line().x(d => xScale(d.date));\n\n  return [\n    { path: line.y(d => yScale(d.high))(data), fill: 'red' },\n    { path: line.y(d => yScale(d.low))(data), fill: 'blue' },\n  ];\n};","position":{"start":{"line":185,"column":1,"offset":6290},"end":{"line":208,"column":4,"offset":6913},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Building a Radial Chart","position":{"start":{"line":210,"column":4,"offset":6918},"end":{"line":210,"column":27,"offset":6941},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":6915},"end":{"line":210,"column":27,"offset":6941},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You use ","position":{"start":{"line":212,"column":1,"offset":6943},"end":{"line":212,"column":9,"offset":6951},"indent":[]}},{"type":"inlineCode","value":"d3.arc","position":{"start":{"line":212,"column":9,"offset":6951},"end":{"line":212,"column":17,"offset":6959},"indent":[]}},{"type":"text","value":" which is similar to ","position":{"start":{"line":212,"column":17,"offset":6959},"end":{"line":212,"column":38,"offset":6980},"indent":[]}},{"type":"inlineCode","value":"d3.line","position":{"start":{"line":212,"column":38,"offset":6980},"end":{"line":212,"column":47,"offset":6989},"indent":[]}},{"type":"text","value":", but we give an object of one data point as opposed to an array.","position":{"start":{"line":212,"column":47,"offset":6989},"end":{"line":212,"column":112,"offset":7054},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":6943},"end":{"line":212,"column":112,"offset":7054},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var pie = {\n  data: 1,\n  value: 1,\n  startAngle: 6.050474740247008,\n  endAngle: 6.166830023713296,\n};\n\nvar arc = d3\n  .arc()\n  .innerRadius(0)\n  .outerRadius(100)\n  .startAngle(d => d.startAngle)\n  .endAngle(d => d.endAngle);\n\narc(pie);\n\n// M-23.061587074244123,-97.30448705798236A100,100,0,0,1,-11.609291412523175,-99.32383577419428L0,0Z","position":{"start":{"line":214,"column":1,"offset":7056},"end":{"line":232,"column":4,"offset":7412},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Commonly used for a pie chart.","position":{"start":{"line":234,"column":3,"offset":7416},"end":{"line":234,"column":33,"offset":7446},"indent":[]}}],"position":{"start":{"line":234,"column":3,"offset":7416},"end":{"line":234,"column":33,"offset":7446},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7414},"end":{"line":234,"column":33,"offset":7446},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Creating the Radial Chart","position":{"start":{"line":236,"column":5,"offset":7452},"end":{"line":236,"column":30,"offset":7477},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":7448},"end":{"line":236,"column":30,"offset":7477},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const radialChartData = () => {\n  const radiusScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\n    .range([0, width / 2]);\n\n  // startAngle = i * perSliceAngle\n  // endAngle = (i+1) * perSliceAngle\n\n  const arcGenerator = d3.arc();\n  // get the angle for each slide\n  // 2PI / 365\n  const perSliceAngle = (2 * Math.PI) / data.length;\n\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map((d, i) => {\n    const path = arcGenerator({\n      startAngle: i * perSliceAngle,\n      endAngle: (i + 1) * perSliceAngle,\n      innerRadius: radiusScale(d.low),\n      outerRadius: radiusScale(d.high),\n    });\n    return {\n      path,\n      fill: colorScale(d.avg),\n    };\n  });\n};","position":{"start":{"line":238,"column":1,"offset":7479},"end":{"line":272,"column":4,"offset":8353},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Breaking Down the D3 API","position":{"start":{"line":274,"column":4,"offset":8358},"end":{"line":274,"column":28,"offset":8382},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":8355},"end":{"line":274,"column":28,"offset":8382},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Out of the sections for D3, there are a two sections that Susan breaks is down into.","position":{"start":{"line":276,"column":1,"offset":8384},"end":{"line":276,"column":85,"offset":8468},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":8384},"end":{"line":276,"column":85,"offset":8468},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Data preparation: Some could be replaced by JS/Lodash etc. Chords, hierarchies and pies here are very useful.","position":{"start":{"line":278,"column":4,"offset":8473},"end":{"line":278,"column":113,"offset":8582},"indent":[]}}],"position":{"start":{"line":278,"column":4,"offset":8473},"end":{"line":278,"column":113,"offset":8582},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":8470},"end":{"line":278,"column":113,"offset":8582},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Layout calculation: Calulations that help for drawing out the SVG objects themselves. This includes things like geo, chord etc.","position":{"start":{"line":279,"column":4,"offset":8586},"end":{"line":279,"column":131,"offset":8713},"indent":[]}}],"position":{"start":{"line":279,"column":4,"offset":8586},"end":{"line":279,"column":131,"offset":8713},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":8583},"end":{"line":279,"column":131,"offset":8713},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"DOM manipulation","position":{"start":{"line":280,"column":4,"offset":8717},"end":{"line":280,"column":20,"offset":8733},"indent":[]}}],"position":{"start":{"line":280,"column":4,"offset":8717},"end":{"line":280,"column":20,"offset":8733},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":8714},"end":{"line":280,"column":20,"offset":8733},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":8470},"end":{"line":280,"column":20,"offset":8733},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"...and...","position":{"start":{"line":282,"column":1,"offset":8735},"end":{"line":282,"column":10,"offset":8744},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":8735},"end":{"line":282,"column":10,"offset":8744},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Finishing touches: anyimations, color shemes, axes etc.","position":{"start":{"line":284,"column":4,"offset":8749},"end":{"line":284,"column":59,"offset":8804},"indent":[]}}],"position":{"start":{"line":284,"column":4,"offset":8749},"end":{"line":284,"column":59,"offset":8804},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":8746},"end":{"line":284,"column":59,"offset":8804},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Interactions: making the charts interactive","position":{"start":{"line":285,"column":4,"offset":8808},"end":{"line":285,"column":47,"offset":8851},"indent":[]}}],"position":{"start":{"line":285,"column":4,"offset":8808},"end":{"line":285,"column":47,"offset":8851},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":8805},"end":{"line":285,"column":47,"offset":8851},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":8746},"end":{"line":285,"column":47,"offset":8851},"indent":[1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Something interesting was replacing ","position":{"start":{"line":287,"column":3,"offset":8855},"end":{"line":287,"column":39,"offset":8891},"indent":[]}},{"type":"inlineCode","value":"blocks.org","position":{"start":{"line":287,"column":39,"offset":8891},"end":{"line":287,"column":51,"offset":8903},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":287,"column":51,"offset":8903},"end":{"line":287,"column":57,"offset":8909},"indent":[]}},{"type":"inlineCode","value":"blockbuilder.org","position":{"start":{"line":287,"column":57,"offset":8909},"end":{"line":287,"column":75,"offset":8927},"indent":[]}},{"type":"text","value":" ie ","position":{"start":{"line":287,"column":75,"offset":8927},"end":{"line":287,"column":79,"offset":8931},"indent":[]}},{"type":"inlineCode","value":"https://blockbuilder.org/mbostock/2e73ec84221cb9773f4c","position":{"start":{"line":287,"column":79,"offset":8931},"end":{"line":287,"column":135,"offset":8987},"indent":[]}},{"type":"text","value":" it will take you to an interactive editor.","position":{"start":{"line":287,"column":135,"offset":8987},"end":{"line":287,"column":178,"offset":9030},"indent":[]}}],"position":{"start":{"line":287,"column":3,"offset":8855},"end":{"line":287,"column":178,"offset":9030},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":8853},"end":{"line":287,"column":178,"offset":9030},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For React, the important sections to probably note are ","position":{"start":{"line":289,"column":1,"offset":9032},"end":{"line":289,"column":56,"offset":9087},"indent":[]}},{"type":"inlineCode","value":"selections","position":{"start":{"line":289,"column":56,"offset":9087},"end":{"line":289,"column":68,"offset":9099},"indent":[]}},{"type":"text","value":" from DOM manipulations (basically the enter, update, exit lifecycle) and Dispatches.","position":{"start":{"line":289,"column":68,"offset":9099},"end":{"line":289,"column":153,"offset":9184},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":9032},"end":{"line":289,"column":153,"offset":9184},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Bar Chart Exercise","position":{"start":{"line":291,"column":5,"offset":9190},"end":{"line":291,"column":23,"offset":9208},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":9186},"end":{"line":291,"column":23,"offset":9208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With React, we don't need to both with the ","position":{"start":{"line":293,"column":1,"offset":9210},"end":{"line":293,"column":44,"offset":9253},"indent":[]}},{"type":"inlineCode","value":"enter, exit, update","position":{"start":{"line":293,"column":44,"offset":9253},"end":{"line":293,"column":65,"offset":9274},"indent":[]}},{"type":"text","value":" lifecycle as React can handle this for us just with state.","position":{"start":{"line":293,"column":65,"offset":9274},"end":{"line":293,"column":124,"offset":9333},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":9210},"end":{"line":293,"column":124,"offset":9333},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// helper func\nconst barChartData = data => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // the important part\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  // scaleSequential allows you to use an interpolator to map\n  // to the range.\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map(d => ({\n    x: xScale(d.date),\n    y: yScale(d.high),\n    height: yScale(d.low) - yScale(d.high),\n    fill: colorScale(d.avg),\n  }));\n};\n\nconst Component = ({ data, width, height }) => {\n  const res = useCallback(() => barChartData(data));\n\n  return (\n    <svg width={width} height={height}>\n      {res.map(d => (\n        // she manually put <rect x={d.x} y={d.y} width={2} height={d.height} fill={d.fill}>\n        <rect {...d} />\n      ))}\n    </svg>\n  );\n};","position":{"start":{"line":295,"column":1,"offset":9335},"end":{"line":340,"column":4,"offset":10471},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arc Exercise","position":{"start":{"line":342,"column":4,"offset":10476},"end":{"line":342,"column":16,"offset":10488},"indent":[]}}],"position":{"start":{"line":342,"column":1,"offset":10473},"end":{"line":342,"column":16,"offset":10488},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this particular exercise, we need to actually shift the center from ","position":{"start":{"line":344,"column":1,"offset":10490},"end":{"line":344,"column":72,"offset":10561},"indent":[]}},{"type":"inlineCode","value":"0,0","position":{"start":{"line":344,"column":72,"offset":10561},"end":{"line":344,"column":77,"offset":10566},"indent":[]}},{"type":"text","value":" using a transformation:","position":{"start":{"line":344,"column":77,"offset":10566},"end":{"line":344,"column":101,"offset":10590},"indent":[]}}],"position":{"start":{"line":344,"column":1,"offset":10490},"end":{"line":344,"column":101,"offset":10590},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const radialChartData = () => {\n  const radiusScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\n    .range([0, width / 2]);\n\n  // startAngle = i * perSliceAngle\n  // endAngle = (i+1) * perSliceAngle\n\n  const arcGenerator = d3.arc();\n  // get the angle for each slide\n  // 2PI / 365\n  const perSliceAngle = (2 * Math.PI) / data.length;\n\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map((d, i) => {\n    const path = arcGenerator({\n      startAngle: i * perSliceAngle,\n      endAngle: (i + 1) * perSliceAngle,\n      innerRadius: radiusScale(d.low),\n      outerRadius: radiusScale(d.high),\n    });\n    return {\n      path,\n      fill: colorScale(d.avg),\n    };\n  });\n};\n\nconst Component = ({ data, width, height }) => {\n  const res = useCallback(() => radialChartData(data));\n\n  // <g /> used to transform the arc to where the center should be\n  return (\n    <svg width={width} height={height}>\n      <g transform={`translate(${width / 2}, ${height / 2})`}>\n        {res.map(d => (\n          // she manually put <path d={d.x=path} fill={d.fill}>\n          <path {...d} />\n        ))}\n      </g>\n    </svg>\n  );\n};","position":{"start":{"line":346,"column":1,"offset":10592},"end":{"line":396,"column":4,"offset":11910},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The Three Exceptions to React","position":{"start":{"line":398,"column":4,"offset":11915},"end":{"line":398,"column":33,"offset":11944},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":11912},"end":{"line":398,"column":33,"offset":11944},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Axis, brush, translations and zoom don't always play well together between React and D3.","position":{"start":{"line":400,"column":1,"offset":11946},"end":{"line":400,"column":89,"offset":12034},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":11946},"end":{"line":400,"column":89,"offset":12034},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Axes, Legends + Annotations","position":{"start":{"line":402,"column":5,"offset":12040},"end":{"line":402,"column":32,"offset":12067},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":12036},"end":{"line":402,"column":32,"offset":12067},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// 1. Create axisLeft or axisBottom at beginning of lifecycle with corresponding scale\nconst yAxis = d3.axisLeft().scale(yScale);\n\n// 2. Create an SVG group element in `render`\n// parents omitted for brevity\nreturn <g ref=\"group\" />;\n\n// 3. Call axis on the group element in componentDidUpdate\nd3.select(this.refs.group).call(yAxis);","position":{"start":{"line":404,"column":1,"offset":12069},"end":{"line":414,"column":4,"offset":12420},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In context:","position":{"start":{"line":416,"column":1,"offset":12422},"end":{"line":416,"column":12,"offset":12433},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":12422},"end":{"line":416,"column":12,"offset":12433},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// helper func\nconst barChartData = data => {\n  const xAxis = d3.axisBottom();\n  const yAxis = d3.axisLeft();\n\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // the important part\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  // scaleSequential allows you to use an interpolator to map\n  // to the range.\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return {\n    data: data.map(d => ({\n      x: xScale(d.date),\n      y: yScale(d.high),\n      height: yScale(d.low) - yScale(d.high),\n      fill: colorScale(d.avg),\n    })),\n    xAxis: xAxis.scale(xScale),\n    yAxis: yAxis.scale(yScale),\n  };\n};\n\nconst BarChart = ({ chartData, width, height }) => {\n  const { data, xAxis, yAxis } = barChartData(chartData, width, height);\n  const xAxisRef = useRef('xAxis');\n  const yAxisRef = useRef('yAxis');\n\n  useEffect(() => {\n    d3.select(xAxisRef).call(xAxis);\n    d3.select(yAxisRef).call(yAxis);\n  }, [data]);\n\n  return (\n    <svg width={width} height={height}>\n      {data.map((d, i) => (\n        // she manually put <rect x={d.x} y={d.y} width={2} height={d.height} fill={d.fill}>\n        <rect key={i} {...d} />\n      ))}\n      <g ref={xAxisRef} transform={`translate(0, ${height})`} />\n      <g ref={yAxisRef} transform={`translate(${leftPadding}, 0)`} />\n    </svg>\n  );\n};","position":{"start":{"line":418,"column":1,"offset":12435},"end":{"line":479,"column":4,"offset":14081},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note: You will want to update the functions to use margins to then add in the axis.","position":{"start":{"line":481,"column":3,"offset":14085},"end":{"line":481,"column":86,"offset":14168},"indent":[]}}],"position":{"start":{"line":481,"column":3,"offset":14085},"end":{"line":481,"column":86,"offset":14168},"indent":[]}}],"position":{"start":{"line":481,"column":1,"offset":14083},"end":{"line":481,"column":86,"offset":14168},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Transitions","position":{"start":{"line":483,"column":4,"offset":14173},"end":{"line":483,"column":15,"offset":14184},"indent":[]}}],"position":{"start":{"line":483,"column":1,"offset":14170},"end":{"line":483,"column":15,"offset":14184},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In general, React recommeneds you ","position":{"start":{"line":485,"column":1,"offset":14186},"end":{"line":485,"column":35,"offset":14220},"indent":[]}},{"type":"inlineCode","value":"setState","position":{"start":{"line":485,"column":35,"offset":14220},"end":{"line":485,"column":45,"offset":14230},"indent":[]}},{"type":"text","value":" for animations. For D3, the approach changes. Susan uses D3 or Greenstock.","position":{"start":{"line":485,"column":45,"offset":14230},"end":{"line":485,"column":120,"offset":14305},"indent":[]}}],"position":{"start":{"line":485,"column":1,"offset":14186},"end":{"line":485,"column":120,"offset":14305},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// in componentDidUpdate (or similar)\nd3.select(this.refs.bars)\n  .selectAll('rect')\n  .data(this.state.bars)\n  .transition()\n  .attr('y', d => d.y)\n  .attr('height', d => d.height)\n  .attr('fill', d => d.fill);\n\nreturn (\n  <g ref=\"bars\">\n    {this.state.bars.map((d, i) => (\n      <rect key={i} x={d.x} width=\"2\" />\n    ))}\n  </g>\n);","position":{"start":{"line":487,"column":1,"offset":14307},"end":{"line":504,"column":4,"offset":14659},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Important: Make sure that the attributes that React does not manage is not placed in the SVG element.","position":{"start":{"line":506,"column":3,"offset":14663},"end":{"line":506,"column":104,"offset":14764},"indent":[]}}],"position":{"start":{"line":506,"column":3,"offset":14663},"end":{"line":506,"column":104,"offset":14764},"indent":[]}}],"position":{"start":{"line":506,"column":1,"offset":14661},"end":{"line":506,"column":104,"offset":14764},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Brush","position":{"start":{"line":508,"column":4,"offset":14769},"end":{"line":508,"column":9,"offset":14774},"indent":[]}}],"position":{"start":{"line":508,"column":1,"offset":14766},"end":{"line":508,"column":9,"offset":14774},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":510,"column":1,"offset":14776},"end":{"line":510,"column":4,"offset":14779},"indent":[]}},{"type":"inlineCode","value":"componentDidMount","position":{"start":{"line":510,"column":4,"offset":14779},"end":{"line":510,"column":23,"offset":14798},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":510,"column":23,"offset":14798},"end":{"line":510,"column":24,"offset":14799},"indent":[]}}],"position":{"start":{"line":510,"column":1,"offset":14776},"end":{"line":510,"column":24,"offset":14799},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create brush instance","position":{"start":{"line":512,"column":4,"offset":14804},"end":{"line":512,"column":25,"offset":14825},"indent":[]}}],"position":{"start":{"line":512,"column":4,"offset":14804},"end":{"line":512,"column":25,"offset":14825},"indent":[]}}],"position":{"start":{"line":512,"column":1,"offset":14801},"end":{"line":512,"column":25,"offset":14825},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define brushable area (extent)","position":{"start":{"line":513,"column":4,"offset":14829},"end":{"line":513,"column":34,"offset":14859},"indent":[]}}],"position":{"start":{"line":513,"column":4,"offset":14829},"end":{"line":513,"column":34,"offset":14859},"indent":[]}}],"position":{"start":{"line":513,"column":1,"offset":14826},"end":{"line":513,"column":34,"offset":14859},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Pass in a function to execute on every brush, or brush end.","position":{"start":{"line":514,"column":4,"offset":14863},"end":{"line":514,"column":63,"offset":14922},"indent":[]}}],"position":{"start":{"line":514,"column":4,"offset":14863},"end":{"line":514,"column":63,"offset":14922},"indent":[]}}],"position":{"start":{"line":514,"column":1,"offset":14860},"end":{"line":514,"column":63,"offset":14922},"indent":[]}}],"position":{"start":{"line":512,"column":1,"offset":14801},"end":{"line":514,"column":63,"offset":14922},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"this.brush = d3.brush().extent([0,0], [width, height]).on('end', () => {\n  // end function\n})\n\nd3.select(this.refs.brush).call(this.brush)\n\n// in render\n<g ref=\"brush\" />","position":{"start":{"line":516,"column":1,"offset":14924},"end":{"line":525,"column":4,"offset":15112},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once the d3 brush is in, you get the interactivity.","position":{"start":{"line":527,"column":1,"offset":15114},"end":{"line":527,"column":52,"offset":15165},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":15114},"end":{"line":527,"column":52,"offset":15165},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":529,"column":3,"offset":15169},"end":{"line":529,"column":7,"offset":15173},"indent":[]}},{"type":"inlineCode","value":"useRef","position":{"start":{"line":529,"column":7,"offset":15173},"end":{"line":529,"column":15,"offset":15181},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":529,"column":15,"offset":15181},"end":{"line":529,"column":20,"offset":15186},"indent":[]}},{"type":"inlineCode","value":"useEffect","position":{"start":{"line":529,"column":20,"offset":15186},"end":{"line":529,"column":31,"offset":15197},"indent":[]}},{"type":"text","value":" for function components.","position":{"start":{"line":529,"column":31,"offset":15197},"end":{"line":529,"column":56,"offset":15222},"indent":[]}}],"position":{"start":{"line":529,"column":3,"offset":15169},"end":{"line":529,"column":56,"offset":15222},"indent":[]}}],"position":{"start":{"line":529,"column":1,"offset":15167},"end":{"line":529,"column":56,"offset":15222},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example handler for the brush:","position":{"start":{"line":531,"column":1,"offset":15224},"end":{"line":531,"column":34,"offset":15257},"indent":[]}}],"position":{"start":{"line":531,"column":1,"offset":15224},"end":{"line":531,"column":34,"offset":15257},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"this.brush = d3\n  .brushX()\n  .extent([0, 0], [width, height])\n  .on('end', () => {\n    // end function\n    console.log(d3.event.selection); // [leftValue, rightValue]\n    const [minX, maxX] = d3.event.selection;\n    const range = [\n      this.state.XScale.invert(minX) // denormalise values\n      this.state.XScale.invert(maxX)\n    ]\n    functionToUpdateRange(range)\n  });\n\n// handling coloring\nconst isColored = !range.length || range[0] < d.date && d.date < range[1]\n\nreturn {\n  //... other properties\n  fill: isColored ? colorScale(d.avg) : '#ccc' // grey\n}","position":{"start":{"line":533,"column":1,"offset":15259},"end":{"line":555,"column":4,"offset":15838},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There is also a ","position":{"start":{"line":557,"column":1,"offset":15840},"end":{"line":557,"column":17,"offset":15856},"indent":[]}},{"type":"inlineCode","value":"brushX","position":{"start":{"line":557,"column":17,"offset":15856},"end":{"line":557,"column":25,"offset":15864},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":557,"column":25,"offset":15864},"end":{"line":557,"column":30,"offset":15869},"indent":[]}},{"type":"inlineCode","value":"brushY","position":{"start":{"line":557,"column":30,"offset":15869},"end":{"line":557,"column":38,"offset":15877},"indent":[]}},{"type":"text","value":" available.","position":{"start":{"line":557,"column":38,"offset":15877},"end":{"line":557,"column":49,"offset":15888},"indent":[]}}],"position":{"start":{"line":557,"column":1,"offset":15840},"end":{"line":557,"column":49,"offset":15888},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Additional Resources","position":{"start":{"line":559,"column":4,"offset":15893},"end":{"line":559,"column":24,"offset":15913},"indent":[]}}],"position":{"start":{"line":559,"column":1,"offset":15890},"end":{"line":559,"column":24,"offset":15913},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"d3-annotation","position":{"start":{"line":561,"column":1,"offset":15915},"end":{"line":561,"column":16,"offset":15930},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":561,"column":16,"offset":15930},"end":{"line":561,"column":21,"offset":15935},"indent":[]}},{"type":"inlineCode","value":"react-annotation","position":{"start":{"line":561,"column":21,"offset":15935},"end":{"line":561,"column":39,"offset":15953},"indent":[]}},{"type":"text","value":" was made by Susie and she has a library for that.","position":{"start":{"line":561,"column":39,"offset":15953},"end":{"line":561,"column":89,"offset":16003},"indent":[]}}],"position":{"start":{"line":561,"column":1,"offset":15915},"end":{"line":561,"column":89,"offset":16003},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://vx-demo.now.sh/","children":[{"type":"text","value":"vx","position":{"start":{"line":563,"column":2,"offset":16006},"end":{"line":563,"column":4,"offset":16008},"indent":[]}}],"position":{"start":{"line":563,"column":1,"offset":16005},"end":{"line":563,"column":30,"offset":16034},"indent":[]}},{"type":"text","value":" is an example and ","position":{"start":{"line":563,"column":30,"offset":16034},"end":{"line":563,"column":49,"offset":16053},"indent":[]}},{"type":"link","title":null,"url":"https://semiotic.nteract.io/","children":[{"type":"text","value":"semiotic","position":{"start":{"line":563,"column":50,"offset":16054},"end":{"line":563,"column":58,"offset":16062},"indent":[]}}],"position":{"start":{"line":563,"column":49,"offset":16053},"end":{"line":563,"column":89,"offset":16093},"indent":[]}},{"type":"text","value":" are resources from others.","position":{"start":{"line":563,"column":89,"offset":16093},"end":{"line":563,"column":116,"offset":16120},"indent":[]}}],"position":{"start":{"line":563,"column":1,"offset":16005},"end":{"line":563,"column":116,"offset":16120},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Canvas","position":{"start":{"line":565,"column":4,"offset":16125},"end":{"line":565,"column":10,"offset":16131},"indent":[]}}],"position":{"start":{"line":565,"column":1,"offset":16122},"end":{"line":565,"column":10,"offset":16131},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to have a few thousand SVG nodes on the screen, consider using Canvas.","position":{"start":{"line":567,"column":1,"offset":16133},"end":{"line":567,"column":83,"offset":16215},"indent":[]}}],"position":{"start":{"line":567,"column":1,"offset":16133},"end":{"line":567,"column":83,"offset":16215},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While interactivity is easier for SVG, ","position":{"start":{"line":569,"column":1,"offset":16217},"end":{"line":569,"column":40,"offset":16256},"indent":[]}},{"type":"inlineCode","value":"canvas","position":{"start":{"line":569,"column":40,"offset":16256},"end":{"line":569,"column":48,"offset":16264},"indent":[]}},{"type":"text","value":" is more like a painting with no as much ability for interactivity.","position":{"start":{"line":569,"column":48,"offset":16264},"end":{"line":569,"column":115,"offset":16331},"indent":[]}}],"position":{"start":{"line":569,"column":1,"offset":16217},"end":{"line":569,"column":115,"offset":16331},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// in render\n<canvas\n  ref=\"canvas\"\n  style={{ width: `${width}px`, height: `${height}px` }}\n  width={2 * width}\n  height={2 * height}\n/>;\n\nctx = this.refs.canvas.getContext('2d');\n\n// some available commands\nctx.fillRect(x, y, width, height);\n\n// circle\nctx.beginPath();\nctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);\nctx.fill();\n\n// line\nctx.beginPath();\n// moveTo, lineTo, bezierCurveTo\nctx.fill();","position":{"start":{"line":571,"column":1,"offset":16333},"end":{"line":594,"column":4,"offset":16765},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":597,"column":1,"offset":16768},"end":{"line":597,"column":31,"offset":16798},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":597,"column":31,"offset":16798}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"data-vis-for-react-devs\"\n    }}>{`Data Vis For React Devs`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://observablehq.com/@d3\"\n        }}>{`Observable HQ @ d3`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://frontendmasters.com/courses/d3-js-react/\"\n        }}>{`FE Masters Course`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://academy.datawrapper.de/article/134-what-to-consider-when-creating-choropleth-maps\"\n        }}>{`Data Wrapper Academy - chloropleth maps`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://slides.com/shirleywu/deck-11\"\n        }}>{`Course Slides`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\"\n        }}>{`MDN Path documentation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://beta.observablehq.com/@sxywu/data-visualization-for-react-developers-starter\"\n        }}>{`SVG Explorations - Observable`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"navigating-her-3-workshops\"\n    }}>{`Navigating Her 3 Workshops`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Data Vis for React Devs`}</li>\n      <li parentName=\"ol\">{`Intro to D3`}</li>\n      <li parentName=\"ol\">{`Building Custom Data Visualations`}</li>\n    </ol>\n    <p>{`[3]`}{` builds on top of `}{`[2]`}{` and these notes are based on `}{`[1]`}{`.`}</p>\n    <p>{`[3]`}{` will talk more about the Gestalt laws and how to design the visualisations.`}</p>\n    <h2 {...{\n      \"id\": \"intro-to-different-data-types\"\n    }}>{`Intro To Different Data Types`}</h2>\n    <p>{`There are a number of data types:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Categorical (genres)`}</li>\n      <li parentName=\"ol\">{`Ordinal (t-shirt sizes)`}</li>\n      <li parentName=\"ol\">{`Quantitative (temperatures)`}</li>\n      <li parentName=\"ol\">{`Temporal (dates)`}</li>\n      <li parentName=\"ol\">{`Spatial (cities)`}</li>\n    </ol>\n    <p>{`The basic charts and when to use them:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Bar chart: for categorial comparisons. The domain is categorial and the range is quantitative.`}</li>\n      <li parentName=\"ol\">{`Histogram: for categorial distributions. Domain is quantitative bins and range is the frequency of quantitative bin. Example: x-axis is movie scores and height is number of movies that fall into that score.`}</li>\n      <li parentName=\"ol\">{`Scatter plots: for correlation. 2 attributes and the relationship between their quantitative values.`}</li>\n      <li parentName=\"ol\">{`Line chart: for temporal trends. Domain is temporal and range is quantitative.`}</li>\n      <li parentName=\"ol\">{`Tree: For hierarchy, parent-child relationships, multiple tiers of category. Unidirectional.`}</li>\n      <li parentName=\"ol\">{`Node-link diagram: For connection. Shows the relationship between entities. Cyclical.`}</li>\n      <li parentName=\"ol\">{`Chlorodepth: For spatial trends. Domain: spatial regions. Range: Quantitative. Not good for subtle differences in data.`}</li>\n      <li parentName=\"ol\">{`Pie charts: used sparingly. For hierarchical part-to-whole. Best for: When values are around 25%, 30% or 75% (3 or 4 values). Not good for comparing fine differences and multiple totals.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"intro-to-svg\"\n    }}>{`Intro to SVG`}</h2>\n    <p>{`SVG is really good at drawing shapes onto the sreen. The most used SVG elements are `}<inlineCode parentName=\"p\">{`rect`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`circle`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{`.`}</p>\n    <p>{`The SVG co-ordinate starts with (0,0) at the top-left and the numbers in crease for X to the right or down when talking about Y.`}</p>\n    <p>{`In the three charts the course makes (bar chart, line chart, radial chart), Susie explains that the bar chart uses `}<inlineCode parentName=\"p\">{`<rect/>`}</inlineCode>{` elements, the line chart uses `}<inlineCode parentName=\"p\">{`<path/>`}</inlineCode>{` elements and the radial chart uses `}<inlineCode parentName=\"p\">{`<path/>`}</inlineCode>{` elements.`}</p>\n    <h2 {...{\n      \"id\": \"data-to-svg-shapes\"\n    }}>{`Data to SVG Shapes`}</h2>\n    <p>{`The work here is to look at how some elements are made through the `}<a parentName=\"p\" {...{\n        \"href\": \"https://beta.observablehq.com/@sxywu/data-visualization-for-react-developers-starter\"\n      }}>{`Observable notebook`}</a>{`.`}</p>\n    <p>{`D3 is a tool that helps us take data to SVG without the difficulty.`}</p>\n    <p>{`People can be intimidated by the size of the API. There is an API slide you can see `}<a parentName=\"p\" {...{\n        \"href\": \"https://slides.com/shirleywu/deck-11#/21/0/0\"\n      }}>{`here`}</a>{` that breaks down the API modules.`}</p>\n    <h2 {...{\n      \"id\": \"scales\"\n    }}>{`Scales`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Mapping from data attributes (domain) to display (range).`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`d3.linearScale()\n  .domain([min, max]) // input\n  .range([min, max]); // output\n`}</code></pre>\n    <p>{`An example of taking the data and scaling by fetching min/max:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var width = 800;\nvar height = 600;\nvar data = [\n  { date: new Date('01-01-2015'), temp: 0 },\n  { date: new Date('01-01-2017'), temp: 3 },\n];\n\nvar min = d3.min(data, d => d.date);\nvar max = d3.max(data, d => d.date);\n\n// or use extent, which gives back [min, max]\nconst [min, max] = d3.extent(data, d => d.date);\n\nvar xScale = d3\n  .scaleTime()\n  .domain([min, max])\n  .range([0, width]);\nvar yScale = d3\n  .scaleLinear()\n  .domain([min, max])\n  .range([height, 0]); // to account for 0,0 viewbox\n`}</code></pre>\n    <p>{`Which scale to use and when:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Domain`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Range`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Scale`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Quantitative`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scaleLinear`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Quantitative`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scaleLog`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Quantitative`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scaleTime`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Quantitative`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Discrete`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scaleQuantize`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Categorial`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Discrete`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Discrete`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scaleOrdinal`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Categorial`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Discrete`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Continuous`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scaleBand`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"creating-bar-charts\"\n    }}>{`Creating Bar Charts`}</h2>\n    <p>{`You can do the example on `}<a parentName=\"p\" {...{\n        \"href\": \"https://observablehq.com/@sxywu/data-visualization-for-react-developers-starter\"\n      }}>{`2 of this Observable notebook`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const barChartData = () => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  return data.map(d => ({\n    x: xScale(d.date),\n    y: yScale(d.high),\n    height: yScale(d.low) - yScale(d.high),\n  }));\n};\n`}</code></pre>\n    <p>{`Here we wanted to calculate the x-axis of time and y-axis of height and use these scales to calculate values for `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{`.`}</p>\n    <p>{`We also used `}<inlineCode parentName=\"p\">{`min`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{` functions for the temp as they were different keys in the data.`}</p>\n    <h3 {...{\n      \"id\": \"adding-in-a-color-scale\"\n    }}>{`Adding in a color scale`}</h3>\n    <p>{`We add this in addition to the work in the section above.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const barChartData = () => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // the important part\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  // scaleSequential allows you to use an interpolator to map\n  // to the range.\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map(d => ({\n    x: xScale(d.date),\n    y: yScale(d.high),\n    height: yScale(d.low) - yScale(d.high),\n    fill: colorScale(d.avg),\n  }));\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"creating-line-charts\"\n    }}>{`Creating Line Charts`}</h2>\n    <p>{`The important part here is again understanding the `}<inlineCode parentName=\"p\">{`line`}</inlineCode>{` SVG and parts that go into it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const lineChartData = () => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // you could also create two different lines and pass the .y func\n  const line = d3.line().x(d => xScale(d.date));\n\n  return [\n    { path: line.y(d => yScale(d.high))(data), fill: 'red' },\n    { path: line.y(d => yScale(d.low))(data), fill: 'blue' },\n  ];\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"building-a-radial-chart\"\n    }}>{`Building a Radial Chart`}</h2>\n    <p>{`You use `}<inlineCode parentName=\"p\">{`d3.arc`}</inlineCode>{` which is similar to `}<inlineCode parentName=\"p\">{`d3.line`}</inlineCode>{`, but we give an object of one data point as opposed to an array.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var pie = {\n  data: 1,\n  value: 1,\n  startAngle: 6.050474740247008,\n  endAngle: 6.166830023713296,\n};\n\nvar arc = d3\n  .arc()\n  .innerRadius(0)\n  .outerRadius(100)\n  .startAngle(d => d.startAngle)\n  .endAngle(d => d.endAngle);\n\narc(pie);\n\n// M-23.061587074244123,-97.30448705798236A100,100,0,0,1,-11.609291412523175,-99.32383577419428L0,0Z\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Commonly used for a pie chart.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"creating-the-radial-chart\"\n    }}>{`Creating the Radial Chart`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const radialChartData = () => {\n  const radiusScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\n    .range([0, width / 2]);\n\n  // startAngle = i * perSliceAngle\n  // endAngle = (i+1) * perSliceAngle\n\n  const arcGenerator = d3.arc();\n  // get the angle for each slide\n  // 2PI / 365\n  const perSliceAngle = (2 * Math.PI) / data.length;\n\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map((d, i) => {\n    const path = arcGenerator({\n      startAngle: i * perSliceAngle,\n      endAngle: (i + 1) * perSliceAngle,\n      innerRadius: radiusScale(d.low),\n      outerRadius: radiusScale(d.high),\n    });\n    return {\n      path,\n      fill: colorScale(d.avg),\n    };\n  });\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"breaking-down-the-d3-api\"\n    }}>{`Breaking Down the D3 API`}</h2>\n    <p>{`Out of the sections for D3, there are a two sections that Susan breaks is down into.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Data preparation: Some could be replaced by JS/Lodash etc. Chords, hierarchies and pies here are very useful.`}</li>\n      <li parentName=\"ol\">{`Layout calculation: Calulations that help for drawing out the SVG objects themselves. This includes things like geo, chord etc.`}</li>\n      <li parentName=\"ol\">{`DOM manipulation`}</li>\n    </ol>\n    <p>{`...and...`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Finishing touches: anyimations, color shemes, axes etc.`}</li>\n      <li parentName=\"ol\">{`Interactions: making the charts interactive`}</li>\n    </ol>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Something interesting was replacing `}<inlineCode parentName=\"p\">{`blocks.org`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`blockbuilder.org`}</inlineCode>{` ie `}<inlineCode parentName=\"p\">{`https://blockbuilder.org/mbostock/2e73ec84221cb9773f4c`}</inlineCode>{` it will take you to an interactive editor.`}</p>\n    </blockquote>\n    <p>{`For React, the important sections to probably note are `}<inlineCode parentName=\"p\">{`selections`}</inlineCode>{` from DOM manipulations (basically the enter, update, exit lifecycle) and Dispatches.`}</p>\n    <h3 {...{\n      \"id\": \"bar-chart-exercise\"\n    }}>{`Bar Chart Exercise`}</h3>\n    <p>{`With React, we don't need to both with the `}<inlineCode parentName=\"p\">{`enter, exit, update`}</inlineCode>{` lifecycle as React can handle this for us just with state.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// helper func\nconst barChartData = data => {\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // the important part\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  // scaleSequential allows you to use an interpolator to map\n  // to the range.\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map(d => ({\n    x: xScale(d.date),\n    y: yScale(d.high),\n    height: yScale(d.low) - yScale(d.high),\n    fill: colorScale(d.avg),\n  }));\n};\n\nconst Component = ({ data, width, height }) => {\n  const res = useCallback(() => barChartData(data));\n\n  return (\n    <svg width={width} height={height}>\n      {res.map(d => (\n        // she manually put <rect x={d.x} y={d.y} width={2} height={d.height} fill={d.fill}>\n        <rect {...d} />\n      ))}\n    </svg>\n  );\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"arc-exercise\"\n    }}>{`Arc Exercise`}</h2>\n    <p>{`In this particular exercise, we need to actually shift the center from `}<inlineCode parentName=\"p\">{`0,0`}</inlineCode>{` using a transformation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const radialChartData = () => {\n  const radiusScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, d => d.low), d3.max(data, d => d.high)])\n    .range([0, width / 2]);\n\n  // startAngle = i * perSliceAngle\n  // endAngle = (i+1) * perSliceAngle\n\n  const arcGenerator = d3.arc();\n  // get the angle for each slide\n  // 2PI / 365\n  const perSliceAngle = (2 * Math.PI) / data.length;\n\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return data.map((d, i) => {\n    const path = arcGenerator({\n      startAngle: i * perSliceAngle,\n      endAngle: (i + 1) * perSliceAngle,\n      innerRadius: radiusScale(d.low),\n      outerRadius: radiusScale(d.high),\n    });\n    return {\n      path,\n      fill: colorScale(d.avg),\n    };\n  });\n};\n\nconst Component = ({ data, width, height }) => {\n  const res = useCallback(() => radialChartData(data));\n\n  // <g /> used to transform the arc to where the center should be\n  return (\n    <svg width={width} height={height}>\n      <g transform={\\`translate(\\${width / 2}, \\${height / 2})\\`}>\n        {res.map(d => (\n          // she manually put <path d={d.x=path} fill={d.fill}>\n          <path {...d} />\n        ))}\n      </g>\n    </svg>\n  );\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-three-exceptions-to-react\"\n    }}>{`The Three Exceptions to React`}</h2>\n    <p>{`Axis, brush, translations and zoom don't always play well together between React and D3.`}</p>\n    <h3 {...{\n      \"id\": \"axes-legends--annotations\"\n    }}>{`Axes, Legends + Annotations`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// 1. Create axisLeft or axisBottom at beginning of lifecycle with corresponding scale\nconst yAxis = d3.axisLeft().scale(yScale);\n\n// 2. Create an SVG group element in \\`render\\`\n// parents omitted for brevity\nreturn <g ref=\"group\" />;\n\n// 3. Call axis on the group element in componentDidUpdate\nd3.select(this.refs.group).call(yAxis);\n`}</code></pre>\n    <p>{`In context:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// helper func\nconst barChartData = data => {\n  const xAxis = d3.axisBottom();\n  const yAxis = d3.axisLeft();\n\n  const extent = d3.extent(data, d => d.date);\n  const xScale = d3\n    .scaleTime()\n    .domain(extent)\n    .range([0, width]);\n\n  const tempMax = d3.max(data, d => d.high);\n  const tempMin = d3.min(data, d => d.low);\n  const yScale = d3\n    .scaleLinear()\n    .domain([tempMin, tempMax])\n    .range([height, 0]);\n\n  // the important part\n  const colorExtent = d3.extent(data, d => d.avg).reverse();\n  // scaleSequential allows you to use an interpolator to map\n  // to the range.\n  const colorScale = d3\n    .scaleSequential()\n    .domain(colorExtent)\n    .interpolator(d3.interpolateRdYlBu);\n\n  return {\n    data: data.map(d => ({\n      x: xScale(d.date),\n      y: yScale(d.high),\n      height: yScale(d.low) - yScale(d.high),\n      fill: colorScale(d.avg),\n    })),\n    xAxis: xAxis.scale(xScale),\n    yAxis: yAxis.scale(yScale),\n  };\n};\n\nconst BarChart = ({ chartData, width, height }) => {\n  const { data, xAxis, yAxis } = barChartData(chartData, width, height);\n  const xAxisRef = useRef('xAxis');\n  const yAxisRef = useRef('yAxis');\n\n  useEffect(() => {\n    d3.select(xAxisRef).call(xAxis);\n    d3.select(yAxisRef).call(yAxis);\n  }, [data]);\n\n  return (\n    <svg width={width} height={height}>\n      {data.map((d, i) => (\n        // she manually put <rect x={d.x} y={d.y} width={2} height={d.height} fill={d.fill}>\n        <rect key={i} {...d} />\n      ))}\n      <g ref={xAxisRef} transform={\\`translate(0, \\${height})\\`} />\n      <g ref={yAxisRef} transform={\\`translate(\\${leftPadding}, 0)\\`} />\n    </svg>\n  );\n};\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: You will want to update the functions to use margins to then add in the axis.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"transitions\"\n    }}>{`Transitions`}</h2>\n    <p>{`In general, React recommeneds you `}<inlineCode parentName=\"p\">{`setState`}</inlineCode>{` for animations. For D3, the approach changes. Susan uses D3 or Greenstock.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// in componentDidUpdate (or similar)\nd3.select(this.refs.bars)\n  .selectAll('rect')\n  .data(this.state.bars)\n  .transition()\n  .attr('y', d => d.y)\n  .attr('height', d => d.height)\n  .attr('fill', d => d.fill);\n\nreturn (\n  <g ref=\"bars\">\n    {this.state.bars.map((d, i) => (\n      <rect key={i} x={d.x} width=\"2\" />\n    ))}\n  </g>\n);\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Important: Make sure that the attributes that React does not manage is not placed in the SVG element.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"brush\"\n    }}>{`Brush`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`componentDidMount`}</inlineCode>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create brush instance`}</li>\n      <li parentName=\"ol\">{`Define brushable area (extent)`}</li>\n      <li parentName=\"ol\">{`Pass in a function to execute on every brush, or brush end.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`this.brush = d3.brush().extent([0,0], [width, height]).on('end', () => {\n  // end function\n})\n\nd3.select(this.refs.brush).call(this.brush)\n\n// in render\n<g ref=\"brush\" />\n`}</code></pre>\n    <p>{`Once the d3 brush is in, you get the interactivity.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Use `}<inlineCode parentName=\"p\">{`useRef`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`useEffect`}</inlineCode>{` for function components.`}</p>\n    </blockquote>\n    <p>{`An example handler for the brush:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`this.brush = d3\n  .brushX()\n  .extent([0, 0], [width, height])\n  .on('end', () => {\n    // end function\n    console.log(d3.event.selection); // [leftValue, rightValue]\n    const [minX, maxX] = d3.event.selection;\n    const range = [\n      this.state.XScale.invert(minX) // denormalise values\n      this.state.XScale.invert(maxX)\n    ]\n    functionToUpdateRange(range)\n  });\n\n// handling coloring\nconst isColored = !range.length || range[0] < d.date && d.date < range[1]\n\nreturn {\n  //... other properties\n  fill: isColored ? colorScale(d.avg) : '#ccc' // grey\n}\n`}</code></pre>\n    <p>{`There is also a `}<inlineCode parentName=\"p\">{`brushX`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`brushY`}</inlineCode>{` available.`}</p>\n    <h2 {...{\n      \"id\": \"additional-resources\"\n    }}>{`Additional Resources`}</h2>\n    <p><inlineCode parentName=\"p\">{`d3-annotation`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`react-annotation`}</inlineCode>{` was made by Susie and she has a library for that.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://vx-demo.now.sh/\"\n      }}>{`vx`}</a>{` is an example and `}<a parentName=\"p\" {...{\n        \"href\": \"https://semiotic.nteract.io/\"\n      }}>{`semiotic`}</a>{` are resources from others.`}</p>\n    <h2 {...{\n      \"id\": \"canvas\"\n    }}>{`Canvas`}</h2>\n    <p>{`If you need to have a few thousand SVG nodes on the screen, consider using Canvas.`}</p>\n    <p>{`While interactivity is easier for SVG, `}<inlineCode parentName=\"p\">{`canvas`}</inlineCode>{` is more like a painting with no as much ability for interactivity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// in render\n<canvas\n  ref=\"canvas\"\n  style={{ width: \\`\\${width}px\\`, height: \\`\\${height}px\\` }}\n  width={2 * width}\n  height={2 * height}\n/>;\n\nctx = this.refs.canvas.getContext('2d');\n\n// some available commands\nctx.fillRect(x, y, width, height);\n\n// circle\nctx.beginPath();\nctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);\nctx.fill();\n\n// line\nctx.beginPath();\n// moveTo, lineTo, bezierCurveTo\nctx.fill();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}