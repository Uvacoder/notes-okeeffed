{"expireTime":9007200867335890000,"key":"gatsby-plugin-mdx-entire-payload-73f10bb8bde1b13530be0b206293b127-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"CloudFormation Master Class","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":30,"offset":196},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":30,"offset":196},"indent":[]}},{"type":"jsx","value":"<!-- TOC -->autoauto- [CloudFormation Master Class](#cloudformation-master-class)auto    - [What is CloudFormation](#what-is-cloudformation)auto    - [Benefits](#benefits)auto    - [CloudFormation vs Ansible / Terraform](#cloudformation-vs-ansible--terraform)auto    - [First template](#first-template)auto    - [YAML Intro](#yaml-intro)auto    - [Creating a S3 Bucket](#creating-a-s3-bucket)auto        - [Types of updates](#types-of-updates)auto        - [Properties](#properties)auto        - [Deleting the stack](#deleting-the-stack)auto    - [CloudFormation template options](#cloudformation-template-options)auto    - [CloudFormation Designer](#cloudformation-designer)auto    - [Building Blocks](#building-blocks)auto    - [Template helpers](#template-helpers)auto    - [CloudFormation Parameters](#cloudformation-parameters)auto        - [Overview](#overview)auto        - [Theory and hands on](#theory-and-hands-on)auto    - [How to reference a parameter](#how-to-reference-a-parameter)auto    - [Resources](#resources)auto        - [Reading the docs for an ES2 Instance](#reading-the-docs-for-an-es2-instance)auto        - [Optional Attributes for Resources](#optional-attributes-for-resources)auto        - [FAQ for resources](#faq-for-resources)auto    - [Mappings](#mappings)auto        - [Fn::FindInMap - Accessing Mapping Values](#fnfindinmap---accessing-mapping-values)auto        - [Mappings in practise](#mappings-in-practise)auto    - [Concept: Pseudo Parameters](#concept-pseudo-parameters)auto    - [CloudFormation Outputs](#cloudformation-outputs)auto        - [Outputs Hands-On](#outputs-hands-on)auto        - [Cross Stack Reference](#cross-stack-reference)auto    - [Conditions](#conditions)auto        - [How to define a condition?](#how-to-define-a-condition)auto    - [Conditional Hands On](#conditional-hands-on)auto    - [Fn::GetAtt](#fngetatt)auto    - [CF Metadata](#cf-metadata)auto        - [AWS::CloudFormation::Designer hands on](#awscloudformationdesigner-hands-on)auto        - [AWS::CloudFormation::Interface hands on](#awscloudformationinterface-hands-on)auto    - [CFN Init and EC2 User Data](#cfn-init-and-ec2-user-data)auto        - [EC2 User Data Overview](#ec2-user-data-overview)auto        - [CloudFormation Init](#cloudformation-init)auto        - [AWS::CloudFormation::Init](#awscloudformationinit)auto        - [Packages](#packages)auto        - [Groups and Users](#groups-and-users)auto        - [Sources](#sources)auto        - [Files](#files)auto        - [Fn::Sub](#fnsub)auto        - [Commands](#commands)auto        - [Services](#services)auto        - [CFN Init and Signal](#cfn-init-and-signal)auto        - [cfn-hup](#cfn-hup)auto        - [CFN Init Hands-On](#cfn-init-hands-on)auto    - [Advanced CF Concepts](#advanced-cf-concepts)auto        - [Using the AWS CLI](#using-the-aws-cli)auto        - [Using Troposphere (Python) to generate CloudFormation templates](#using-troposphere-python-to-generate-cloudformation-templates)auto        - [DeletionPolicy](#deletionpolicy)auto        - [Custom Resources with AWS Lambda](#custom-resources-with-aws-lambda)auto        - [Best practises to organize your CloudFormation templates](#best-practises-to-organize-your-cloudformation-templates)auto        - [Cost estimate for templates](#cost-estimate-for-templates)autoauto<!-- /TOC -->","position":{"start":{"line":10,"column":1,"offset":198},"end":{"line":10,"column":3346,"offset":3543},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What is CloudFormation","position":{"start":{"line":12,"column":4,"offset":3548},"end":{"line":12,"column":26,"offset":3570},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":3545},"end":{"line":12,"column":26,"offset":3570},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having >50 services, CloudFormation was brought in to help develops scaffold out the requires AWS stack.","position":{"start":{"line":14,"column":1,"offset":3572},"end":{"line":14,"column":105,"offset":3676},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":3572},"end":{"line":14,"column":105,"offset":3676},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Eg. I want a security group, two EC2 machines with it, two elastic IPs, an S3 bucket + a load balancer in front.","position":{"start":{"line":16,"column":1,"offset":3678},"end":{"line":16,"column":113,"offset":3790},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":3678},"end":{"line":16,"column":113,"offset":3790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"CloudFormation will create all of this in the right order with the exact config.","position":{"start":{"line":18,"column":1,"offset":3792},"end":{"line":18,"column":81,"offset":3872},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":3792},"end":{"line":18,"column":81,"offset":3872},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Benefits","position":{"start":{"line":20,"column":4,"offset":3877},"end":{"line":20,"column":12,"offset":3885},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":3874},"end":{"line":20,"column":12,"offset":3885},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Infrastructure as code","position":{"start":{"line":22,"column":5,"offset":3891},"end":{"line":22,"column":27,"offset":3913},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":3891},"end":{"line":22,"column":27,"offset":3913},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No manual creation","position":{"start":{"line":23,"column":7,"offset":3920},"end":{"line":23,"column":25,"offset":3938},"indent":[]}}],"position":{"start":{"line":23,"column":7,"offset":3920},"end":{"line":23,"column":25,"offset":3938},"indent":[]}}],"position":{"start":{"line":23,"column":5,"offset":3918},"end":{"line":23,"column":25,"offset":3938},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Can be version controlled","position":{"start":{"line":24,"column":7,"offset":3945},"end":{"line":24,"column":32,"offset":3970},"indent":[]}}],"position":{"start":{"line":24,"column":7,"offset":3945},"end":{"line":24,"column":32,"offset":3970},"indent":[]}}],"position":{"start":{"line":24,"column":5,"offset":3943},"end":{"line":24,"column":32,"offset":3970},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Changes to infrastructure are reviewed through code","position":{"start":{"line":25,"column":7,"offset":3977},"end":{"line":25,"column":58,"offset":4028},"indent":[]}}],"position":{"start":{"line":25,"column":7,"offset":3977},"end":{"line":25,"column":58,"offset":4028},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":3975},"end":{"line":25,"column":58,"offset":4028},"indent":[]}}],"position":{"start":{"line":23,"column":5,"offset":3918},"end":{"line":25,"column":58,"offset":4028},"indent":[5,5]}}],"position":{"start":{"line":22,"column":1,"offset":3887},"end":{"line":25,"column":58,"offset":4028},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cost","position":{"start":{"line":26,"column":5,"offset":4033},"end":{"line":26,"column":9,"offset":4037},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":4033},"end":{"line":26,"column":9,"offset":4037},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each resource will be tagged so you can estimate the costs and figure out which costs what","position":{"start":{"line":27,"column":7,"offset":4044},"end":{"line":27,"column":97,"offset":4134},"indent":[]}}],"position":{"start":{"line":27,"column":7,"offset":4044},"end":{"line":27,"column":97,"offset":4134},"indent":[]}}],"position":{"start":{"line":27,"column":5,"offset":4042},"end":{"line":27,"column":97,"offset":4134},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Great savings strategy","position":{"start":{"line":28,"column":7,"offset":4141},"end":{"line":28,"column":29,"offset":4163},"indent":[]}}],"position":{"start":{"line":28,"column":7,"offset":4141},"end":{"line":28,"column":29,"offset":4163},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":4139},"end":{"line":28,"column":29,"offset":4163},"indent":[]}}],"position":{"start":{"line":27,"column":5,"offset":4042},"end":{"line":28,"column":29,"offset":4163},"indent":[5]}}],"position":{"start":{"line":26,"column":1,"offset":4029},"end":{"line":28,"column":29,"offset":4163},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Productivity","position":{"start":{"line":29,"column":5,"offset":4168},"end":{"line":29,"column":17,"offset":4180},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":4168},"end":{"line":29,"column":17,"offset":4180},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ability to destroy and re-create an infrastructure","position":{"start":{"line":30,"column":7,"offset":4187},"end":{"line":30,"column":57,"offset":4237},"indent":[]}}],"position":{"start":{"line":30,"column":7,"offset":4187},"end":{"line":30,"column":57,"offset":4237},"indent":[]}}],"position":{"start":{"line":30,"column":5,"offset":4185},"end":{"line":30,"column":57,"offset":4237},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Automated generation of Diagram for templates","position":{"start":{"line":31,"column":7,"offset":4244},"end":{"line":31,"column":52,"offset":4289},"indent":[]}}],"position":{"start":{"line":31,"column":7,"offset":4244},"end":{"line":31,"column":52,"offset":4289},"indent":[]}}],"position":{"start":{"line":31,"column":5,"offset":4242},"end":{"line":31,"column":52,"offset":4289},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All declarative","position":{"start":{"line":32,"column":7,"offset":4296},"end":{"line":32,"column":22,"offset":4311},"indent":[]}}],"position":{"start":{"line":32,"column":7,"offset":4296},"end":{"line":32,"column":22,"offset":4311},"indent":[]}}],"position":{"start":{"line":32,"column":5,"offset":4294},"end":{"line":32,"column":22,"offset":4311},"indent":[]}}],"position":{"start":{"line":30,"column":5,"offset":4185},"end":{"line":32,"column":22,"offset":4311},"indent":[5,5]}}],"position":{"start":{"line":29,"column":1,"offset":4164},"end":{"line":32,"column":22,"offset":4311},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Separation of concern","position":{"start":{"line":33,"column":5,"offset":4316},"end":{"line":33,"column":26,"offset":4337},"indent":[]}}],"position":{"start":{"line":33,"column":5,"offset":4316},"end":{"line":33,"column":26,"offset":4337},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Many different stacks for many different layers","position":{"start":{"line":34,"column":7,"offset":4344},"end":{"line":34,"column":54,"offset":4391},"indent":[]}}],"position":{"start":{"line":34,"column":7,"offset":4344},"end":{"line":34,"column":54,"offset":4391},"indent":[]}}],"position":{"start":{"line":34,"column":5,"offset":4342},"end":{"line":34,"column":54,"offset":4391},"indent":[]}}],"position":{"start":{"line":34,"column":5,"offset":4342},"end":{"line":34,"column":54,"offset":4391},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":4312},"end":{"line":34,"column":54,"offset":4391},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Don't re-invent the wheel","position":{"start":{"line":35,"column":5,"offset":4396},"end":{"line":35,"column":30,"offset":4421},"indent":[]}}],"position":{"start":{"line":35,"column":5,"offset":4396},"end":{"line":35,"column":30,"offset":4421},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Already so many templates","position":{"start":{"line":36,"column":7,"offset":4428},"end":{"line":36,"column":32,"offset":4453},"indent":[]}}],"position":{"start":{"line":36,"column":7,"offset":4428},"end":{"line":36,"column":32,"offset":4453},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":4426},"end":{"line":36,"column":32,"offset":4453},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Leverage the docs","position":{"start":{"line":37,"column":7,"offset":4460},"end":{"line":37,"column":24,"offset":4477},"indent":[]}}],"position":{"start":{"line":37,"column":7,"offset":4460},"end":{"line":37,"column":24,"offset":4477},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":4458},"end":{"line":37,"column":24,"offset":4477},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":4426},"end":{"line":37,"column":24,"offset":4477},"indent":[5]}}],"position":{"start":{"line":35,"column":1,"offset":4392},"end":{"line":37,"column":24,"offset":4477},"indent":[1,1]}}],"position":{"start":{"line":22,"column":1,"offset":3887},"end":{"line":37,"column":24,"offset":4477},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CloudFormation vs Ansible / Terraform","position":{"start":{"line":39,"column":4,"offset":4482},"end":{"line":39,"column":41,"offset":4519},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":4479},"end":{"line":39,"column":41,"offset":4519},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CF is native, and also contain the latest","position":{"start":{"line":41,"column":3,"offset":4523},"end":{"line":41,"column":44,"offset":4564},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":4523},"end":{"line":41,"column":44,"offset":4564},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":4521},"end":{"line":41,"column":44,"offset":4564},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CF is state based","position":{"start":{"line":42,"column":3,"offset":4567},"end":{"line":42,"column":20,"offset":4584},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":4567},"end":{"line":42,"column":20,"offset":4584},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":4565},"end":{"line":42,"column":20,"offset":4584},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The others are instruction based - difficult to orchestrate","position":{"start":{"line":43,"column":3,"offset":4587},"end":{"line":43,"column":62,"offset":4646},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":4587},"end":{"line":43,"column":62,"offset":4646},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":4585},"end":{"line":43,"column":62,"offset":4646},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"For new services, Ansible / Terraform can take a long time","position":{"start":{"line":44,"column":3,"offset":4649},"end":{"line":44,"column":61,"offset":4707},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":4649},"end":{"line":44,"column":61,"offset":4707},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":4647},"end":{"line":44,"column":61,"offset":4707},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":4521},"end":{"line":44,"column":61,"offset":4707},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"First template","position":{"start":{"line":46,"column":4,"offset":4712},"end":{"line":46,"column":18,"offset":4726},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":4709},"end":{"line":46,"column":18,"offset":4726},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"---\nResources:\n  MyInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro","position":{"start":{"line":48,"column":1,"offset":4728},"end":{"line":57,"column":4,"offset":4905},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The stack instance can be created, updated or destroyed.","position":{"start":{"line":59,"column":1,"offset":4907},"end":{"line":59,"column":57,"offset":4963},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":4907},"end":{"line":59,"column":57,"offset":4963},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You cannot edit the stack itself later, you need to just re-update the stack by uploading a new file.","position":{"start":{"line":61,"column":1,"offset":4965},"end":{"line":61,"column":102,"offset":5066},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":4965},"end":{"line":61,"column":102,"offset":5066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The stack itself can clean up instances after itself too.","position":{"start":{"line":63,"column":1,"offset":5068},"end":{"line":63,"column":58,"offset":5125},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":5068},"end":{"line":63,"column":58,"offset":5125},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"YAML Intro","position":{"start":{"line":65,"column":4,"offset":5130},"end":{"line":65,"column":14,"offset":5140},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":5127},"end":{"line":65,"column":14,"offset":5140},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can use YAML or JSON for writing it - but JSON is tough for it","position":{"start":{"line":67,"column":1,"offset":5142},"end":{"line":67,"column":67,"offset":5208},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":5142},"end":{"line":67,"column":67,"offset":5208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Array support:","position":{"start":{"line":69,"column":1,"offset":5210},"end":{"line":69,"column":15,"offset":5224},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":5210},"end":{"line":69,"column":15,"offset":5224},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"product:\n    - test  : 1\n      quantity: 2\n    - test  : 2\n      quantity: 4","position":{"start":{"line":71,"column":1,"offset":5226},"end":{"line":77,"column":4,"offset":5310},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Creating a S3 Bucket","position":{"start":{"line":79,"column":4,"offset":5315},"end":{"line":79,"column":24,"offset":5335},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":5312},"end":{"line":79,"column":24,"offset":5335},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Googling for the type, you will get the in depth docs from AWS.","position":{"start":{"line":81,"column":1,"offset":5337},"end":{"line":81,"column":64,"offset":5400},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":5337},"end":{"line":81,"column":64,"offset":5400},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"---\nResources: # always the start\n    MyS3Bucket: # template name\n        Type: \"AWS::S3::Bucket\"\n        Properties:\n            AccessControl: PublicRead\n            BucketName: \"www.site.com\"","position":{"start":{"line":83,"column":1,"offset":5402},"end":{"line":91,"column":4,"offset":5604},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Types of updates","position":{"start":{"line":93,"column":5,"offset":5610},"end":{"line":93,"column":21,"offset":5626},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":5606},"end":{"line":93,"column":21,"offset":5626},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Updates with no interruption","position":{"start":{"line":95,"column":5,"offset":5632},"end":{"line":95,"column":33,"offset":5660},"indent":[]}}],"position":{"start":{"line":95,"column":5,"offset":5632},"end":{"line":95,"column":33,"offset":5660},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":5628},"end":{"line":95,"column":33,"offset":5660},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Replacements are breaking and need to replace the resource","position":{"start":{"line":96,"column":5,"offset":5665},"end":{"line":96,"column":63,"offset":5723},"indent":[]}}],"position":{"start":{"line":96,"column":5,"offset":5665},"end":{"line":96,"column":63,"offset":5723},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":5661},"end":{"line":96,"column":63,"offset":5723},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":5628},"end":{"line":96,"column":63,"offset":5723},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Properties","position":{"start":{"line":98,"column":5,"offset":5729},"end":{"line":98,"column":15,"offset":5739},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":5725},"end":{"line":98,"column":15,"offset":5739},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On the properties under the docs, you can see info about the properties.","position":{"start":{"line":100,"column":1,"offset":5741},"end":{"line":100,"column":73,"offset":5813},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":5741},"end":{"line":100,"column":73,"offset":5813},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deleting the stack","position":{"start":{"line":102,"column":5,"offset":5819},"end":{"line":102,"column":23,"offset":5837},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":5815},"end":{"line":102,"column":23,"offset":5837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just right click on the CloudFormation and delete the resources.","position":{"start":{"line":104,"column":1,"offset":5839},"end":{"line":104,"column":65,"offset":5903},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":5839},"end":{"line":104,"column":65,"offset":5903},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CloudFormation template options","position":{"start":{"line":106,"column":4,"offset":5908},"end":{"line":106,"column":35,"offset":5939},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":5905},"end":{"line":106,"column":35,"offset":5939},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You have a few template options:","position":{"start":{"line":108,"column":1,"offset":5941},"end":{"line":108,"column":33,"offset":5973},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":5941},"end":{"line":108,"column":33,"offset":5973},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tags","position":{"start":{"line":110,"column":5,"offset":5979},"end":{"line":110,"column":9,"offset":5983},"indent":[]}}],"position":{"start":{"line":110,"column":5,"offset":5979},"end":{"line":110,"column":9,"offset":5983},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":5975},"end":{"line":110,"column":9,"offset":5983},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Permissions (IAM role)","position":{"start":{"line":111,"column":5,"offset":5988},"end":{"line":111,"column":27,"offset":6010},"indent":[]}}],"position":{"start":{"line":111,"column":5,"offset":5988},"end":{"line":111,"column":27,"offset":6010},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":5984},"end":{"line":111,"column":27,"offset":6010},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Notifications Options (SNS topic)","position":{"start":{"line":112,"column":5,"offset":6015},"end":{"line":112,"column":38,"offset":6048},"indent":[]}}],"position":{"start":{"line":112,"column":5,"offset":6015},"end":{"line":112,"column":38,"offset":6048},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":6011},"end":{"line":112,"column":38,"offset":6048},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Timeouts (minutes before calling failure)","position":{"start":{"line":113,"column":5,"offset":6053},"end":{"line":113,"column":46,"offset":6094},"indent":[]}}],"position":{"start":{"line":113,"column":5,"offset":6053},"end":{"line":113,"column":46,"offset":6094},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":6049},"end":{"line":113,"column":46,"offset":6094},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Rollback on Failure","position":{"start":{"line":114,"column":5,"offset":6099},"end":{"line":114,"column":24,"offset":6118},"indent":[]}}],"position":{"start":{"line":114,"column":5,"offset":6099},"end":{"line":114,"column":24,"offset":6118},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":6095},"end":{"line":114,"column":24,"offset":6118},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Stack Policy","position":{"start":{"line":115,"column":5,"offset":6123},"end":{"line":115,"column":17,"offset":6135},"indent":[]}}],"position":{"start":{"line":115,"column":5,"offset":6123},"end":{"line":115,"column":17,"offset":6135},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":6119},"end":{"line":115,"column":17,"offset":6135},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":5975},"end":{"line":115,"column":17,"offset":6135},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These (if you manually do it) all show up on the \"create stack\" part of CloudFormation.","position":{"start":{"line":117,"column":1,"offset":6137},"end":{"line":117,"column":88,"offset":6224},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":6137},"end":{"line":117,"column":88,"offset":6224},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The template review also gives you an opportunity to estimate cost.","position":{"start":{"line":119,"column":1,"offset":6226},"end":{"line":119,"column":68,"offset":6293},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":6226},"end":{"line":119,"column":68,"offset":6293},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CloudFormation Designer","position":{"start":{"line":121,"column":4,"offset":6298},"end":{"line":121,"column":27,"offset":6321},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":6295},"end":{"line":121,"column":27,"offset":6321},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A visual aid to help build the CF Stack. Ensure the template is also well written.","position":{"start":{"line":123,"column":1,"offset":6323},"end":{"line":123,"column":83,"offset":6405},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":6323},"end":{"line":123,"column":83,"offset":6405},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can drag and drop basically everything. Dropping it will give you options to selecting documentation etc.","position":{"start":{"line":125,"column":1,"offset":6407},"end":{"line":125,"column":110,"offset":6516},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":6407},"end":{"line":125,"column":110,"offset":6516},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's great for dragging and dropping templates and giving information on that template as well.","position":{"start":{"line":127,"column":1,"offset":6518},"end":{"line":127,"column":96,"offset":6613},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":6518},"end":{"line":127,"column":96,"offset":6613},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Building Blocks","position":{"start":{"line":129,"column":4,"offset":6618},"end":{"line":129,"column":19,"offset":6633},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":6615},"end":{"line":129,"column":19,"offset":6633},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are a number of building blocks for each template:","position":{"start":{"line":131,"column":1,"offset":6635},"end":{"line":131,"column":57,"offset":6691},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":6635},"end":{"line":131,"column":57,"offset":6691},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Resources: your AWS resources declared in the template","position":{"start":{"line":133,"column":5,"offset":6697},"end":{"line":133,"column":59,"offset":6751},"indent":[]}}],"position":{"start":{"line":133,"column":5,"offset":6697},"end":{"line":133,"column":59,"offset":6751},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":6693},"end":{"line":133,"column":59,"offset":6751},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Parameters: the dynamic inputs for your template","position":{"start":{"line":134,"column":5,"offset":6756},"end":{"line":134,"column":53,"offset":6804},"indent":[]}}],"position":{"start":{"line":134,"column":5,"offset":6756},"end":{"line":134,"column":53,"offset":6804},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":6752},"end":{"line":134,"column":53,"offset":6804},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Mappings: the static variables for your template","position":{"start":{"line":135,"column":5,"offset":6809},"end":{"line":135,"column":53,"offset":6857},"indent":[]}}],"position":{"start":{"line":135,"column":5,"offset":6809},"end":{"line":135,"column":53,"offset":6857},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":6805},"end":{"line":135,"column":53,"offset":6857},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Outputs: References to what has been created","position":{"start":{"line":136,"column":5,"offset":6862},"end":{"line":136,"column":49,"offset":6906},"indent":[]}}],"position":{"start":{"line":136,"column":5,"offset":6862},"end":{"line":136,"column":49,"offset":6906},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":6858},"end":{"line":136,"column":49,"offset":6906},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Conditionals: List of conditions to perform resource creation","position":{"start":{"line":137,"column":5,"offset":6911},"end":{"line":137,"column":66,"offset":6972},"indent":[]}}],"position":{"start":{"line":137,"column":5,"offset":6911},"end":{"line":137,"column":66,"offset":6972},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":6907},"end":{"line":137,"column":66,"offset":6972},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Metadata","position":{"start":{"line":138,"column":5,"offset":6977},"end":{"line":138,"column":13,"offset":6985},"indent":[]}}],"position":{"start":{"line":138,"column":5,"offset":6977},"end":{"line":138,"column":13,"offset":6985},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":6973},"end":{"line":138,"column":13,"offset":6985},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":6693},"end":{"line":138,"column":13,"offset":6985},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Template helpers","position":{"start":{"line":140,"column":4,"offset":6990},"end":{"line":140,"column":20,"offset":7006},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":6987},"end":{"line":140,"column":20,"offset":7006},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"References","position":{"start":{"line":142,"column":5,"offset":7012},"end":{"line":142,"column":15,"offset":7022},"indent":[]}}],"position":{"start":{"line":142,"column":5,"offset":7012},"end":{"line":142,"column":15,"offset":7022},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":7008},"end":{"line":142,"column":15,"offset":7022},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Functions","position":{"start":{"line":143,"column":5,"offset":7027},"end":{"line":143,"column":14,"offset":7036},"indent":[]}}],"position":{"start":{"line":143,"column":5,"offset":7027},"end":{"line":143,"column":14,"offset":7036},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":7023},"end":{"line":143,"column":14,"offset":7036},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":7008},"end":{"line":143,"column":14,"offset":7036},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CloudFormation Parameters","position":{"start":{"line":145,"column":4,"offset":7041},"end":{"line":145,"column":29,"offset":7066},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":7038},"end":{"line":145,"column":29,"offset":7066},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Overview","position":{"start":{"line":147,"column":5,"offset":7072},"end":{"line":147,"column":13,"offset":7080},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":7068},"end":{"line":147,"column":13,"offset":7080},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What are they? The way to provide inputs to your AWS CloudFormation template.","position":{"start":{"line":149,"column":1,"offset":7082},"end":{"line":149,"column":78,"offset":7159},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":7082},"end":{"line":149,"column":78,"offset":7159},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"They're important to know about it:","position":{"start":{"line":151,"column":1,"offset":7161},"end":{"line":151,"column":36,"offset":7196},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":7161},"end":{"line":151,"column":36,"offset":7196},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You want to reuse your templates across the company","position":{"start":{"line":153,"column":5,"offset":7202},"end":{"line":153,"column":56,"offset":7253},"indent":[]}}],"position":{"start":{"line":153,"column":5,"offset":7202},"end":{"line":153,"column":56,"offset":7253},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":7198},"end":{"line":153,"column":56,"offset":7253},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Some inputs can not be determined ahead of time","position":{"start":{"line":154,"column":5,"offset":7258},"end":{"line":154,"column":52,"offset":7305},"indent":[]}}],"position":{"start":{"line":154,"column":5,"offset":7258},"end":{"line":154,"column":52,"offset":7305},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":7254},"end":{"line":154,"column":52,"offset":7305},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":7198},"end":{"line":154,"column":52,"offset":7305},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The major benefit: you won't have to re-upload a template to change its content.","position":{"start":{"line":156,"column":1,"offset":7307},"end":{"line":156,"column":81,"offset":7387},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":7307},"end":{"line":156,"column":81,"offset":7387},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Theory and hands on","position":{"start":{"line":158,"column":5,"offset":7393},"end":{"line":158,"column":24,"offset":7412},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":7389},"end":{"line":158,"column":24,"offset":7412},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Parameters can be controlled by all these settings:","position":{"start":{"line":160,"column":1,"offset":7414},"end":{"line":160,"column":52,"offset":7465},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":7414},"end":{"line":160,"column":52,"offset":7465},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Type:","position":{"start":{"line":162,"column":5,"offset":7471},"end":{"line":162,"column":10,"offset":7476},"indent":[]}}],"position":{"start":{"line":162,"column":5,"offset":7471},"end":{"line":162,"column":10,"offset":7476},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":7467},"end":{"line":162,"column":10,"offset":7476},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":7467},"end":{"line":162,"column":10,"offset":7476},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"String","position":{"start":{"line":164,"column":3,"offset":7480},"end":{"line":164,"column":9,"offset":7486},"indent":[]}}],"position":{"start":{"line":164,"column":3,"offset":7480},"end":{"line":164,"column":9,"offset":7486},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":7478},"end":{"line":164,"column":9,"offset":7486},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Number","position":{"start":{"line":165,"column":3,"offset":7489},"end":{"line":165,"column":9,"offset":7495},"indent":[]}}],"position":{"start":{"line":165,"column":3,"offset":7489},"end":{"line":165,"column":9,"offset":7495},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":7487},"end":{"line":165,"column":9,"offset":7495},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CommaDelimitedList","position":{"start":{"line":166,"column":3,"offset":7498},"end":{"line":166,"column":21,"offset":7516},"indent":[]}}],"position":{"start":{"line":166,"column":3,"offset":7498},"end":{"line":166,"column":21,"offset":7516},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":7496},"end":{"line":166,"column":21,"offset":7516},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"List<Type>","position":{"start":{"line":167,"column":3,"offset":7519},"end":{"line":167,"column":15,"offset":7531},"indent":[]}}],"position":{"start":{"line":167,"column":3,"offset":7519},"end":{"line":167,"column":15,"offset":7531},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":7517},"end":{"line":167,"column":15,"offset":7531},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS Parameter (to help catch invalid values - match against existing values in the AWS Account)","position":{"start":{"line":168,"column":3,"offset":7534},"end":{"line":168,"column":98,"offset":7629},"indent":[]}}],"position":{"start":{"line":168,"column":3,"offset":7534},"end":{"line":168,"column":98,"offset":7629},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":7532},"end":{"line":168,"column":98,"offset":7629},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":7478},"end":{"line":168,"column":98,"offset":7629},"indent":[1,1,1,1]}},{"type":"list","ordered":true,"start":2,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Description","position":{"start":{"line":170,"column":5,"offset":7635},"end":{"line":170,"column":16,"offset":7646},"indent":[]}}],"position":{"start":{"line":170,"column":5,"offset":7635},"end":{"line":170,"column":16,"offset":7646},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":7631},"end":{"line":170,"column":16,"offset":7646},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Constraints","position":{"start":{"line":171,"column":5,"offset":7651},"end":{"line":171,"column":16,"offset":7662},"indent":[]}}],"position":{"start":{"line":171,"column":5,"offset":7651},"end":{"line":171,"column":16,"offset":7662},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":7647},"end":{"line":171,"column":16,"offset":7662},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"ConstraintDescription (String)","position":{"start":{"line":172,"column":5,"offset":7667},"end":{"line":172,"column":35,"offset":7697},"indent":[]}}],"position":{"start":{"line":172,"column":5,"offset":7667},"end":{"line":172,"column":35,"offset":7697},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":7663},"end":{"line":172,"column":35,"offset":7697},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Min/MaxLength","position":{"start":{"line":173,"column":5,"offset":7702},"end":{"line":173,"column":18,"offset":7715},"indent":[]}}],"position":{"start":{"line":173,"column":5,"offset":7702},"end":{"line":173,"column":18,"offset":7715},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":7698},"end":{"line":173,"column":18,"offset":7715},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Min/MaxValue","position":{"start":{"line":174,"column":5,"offset":7720},"end":{"line":174,"column":17,"offset":7732},"indent":[]}}],"position":{"start":{"line":174,"column":5,"offset":7720},"end":{"line":174,"column":17,"offset":7732},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":7716},"end":{"line":174,"column":17,"offset":7732},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Defaults","position":{"start":{"line":175,"column":5,"offset":7737},"end":{"line":175,"column":13,"offset":7745},"indent":[]}}],"position":{"start":{"line":175,"column":5,"offset":7737},"end":{"line":175,"column":13,"offset":7745},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":7733},"end":{"line":175,"column":13,"offset":7745},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AllowedValues (array)","position":{"start":{"line":176,"column":5,"offset":7750},"end":{"line":176,"column":26,"offset":7771},"indent":[]}}],"position":{"start":{"line":176,"column":5,"offset":7750},"end":{"line":176,"column":26,"offset":7771},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":7746},"end":{"line":176,"column":26,"offset":7771},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AllowedPattern (regexp)","position":{"start":{"line":177,"column":5,"offset":7776},"end":{"line":177,"column":28,"offset":7799},"indent":[]}}],"position":{"start":{"line":177,"column":5,"offset":7776},"end":{"line":177,"column":28,"offset":7799},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":7772},"end":{"line":177,"column":28,"offset":7799},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"NoEcho (Boolean)","position":{"start":{"line":178,"column":5,"offset":7804},"end":{"line":178,"column":21,"offset":7820},"indent":[]}}],"position":{"start":{"line":178,"column":5,"offset":7804},"end":{"line":178,"column":21,"offset":7820},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":7800},"end":{"line":178,"column":21,"offset":7820},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":7631},"end":{"line":178,"column":21,"offset":7820},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This can be found in the ","position":{"start":{"line":180,"column":1,"offset":7822},"end":{"line":180,"column":26,"offset":7847},"indent":[]}},{"type":"inlineCode","value":"0-parameters-hands-on.yaml","position":{"start":{"line":180,"column":26,"offset":7847},"end":{"line":180,"column":54,"offset":7875},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":180,"column":54,"offset":7875},"end":{"line":180,"column":55,"offset":7876},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":7822},"end":{"line":180,"column":55,"offset":7876},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Again - check the docs.","position":{"start":{"line":182,"column":1,"offset":7878},"end":{"line":182,"column":24,"offset":7901},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":7878},"end":{"line":182,"column":24,"offset":7901},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To reference a parameter, you then go with ","position":{"start":{"line":184,"column":1,"offset":7903},"end":{"line":184,"column":44,"offset":7946},"indent":[]}},{"type":"inlineCode","value":"Key: !Ref Reference","position":{"start":{"line":184,"column":44,"offset":7946},"end":{"line":184,"column":65,"offset":7967},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":184,"column":65,"offset":7967},"end":{"line":184,"column":66,"offset":7968},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":7903},"end":{"line":184,"column":66,"offset":7968},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have ","position":{"start":{"line":186,"column":1,"offset":7970},"end":{"line":186,"column":13,"offset":7982},"indent":[]}},{"type":"inlineCode","value":"!Select","position":{"start":{"line":186,"column":13,"offset":7982},"end":{"line":186,"column":22,"offset":7991},"indent":[]}},{"type":"text","value":" for a CommaDelimitedList, you need to go ","position":{"start":{"line":186,"column":22,"offset":7991},"end":{"line":186,"column":64,"offset":8033},"indent":[]}},{"type":"inlineCode","value":"Key: !Select [ArrayNumber, !Ref Reference]","position":{"start":{"line":186,"column":64,"offset":8033},"end":{"line":186,"column":108,"offset":8077},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":186,"column":108,"offset":8077},"end":{"line":186,"column":109,"offset":8078},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":7970},"end":{"line":186,"column":109,"offset":8078},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to reference a parameter","position":{"start":{"line":188,"column":4,"offset":8083},"end":{"line":188,"column":32,"offset":8111},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":8080},"end":{"line":188,"column":32,"offset":8111},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using the Fn::Ref function.","position":{"start":{"line":190,"column":3,"offset":8115},"end":{"line":190,"column":30,"offset":8142},"indent":[]}}],"position":{"start":{"line":190,"column":3,"offset":8115},"end":{"line":190,"column":30,"offset":8142},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":8113},"end":{"line":190,"column":30,"offset":8142},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Shorthand in YAML is !Ref.","position":{"start":{"line":191,"column":3,"offset":8145},"end":{"line":191,"column":29,"offset":8171},"indent":[]}}],"position":{"start":{"line":191,"column":3,"offset":8145},"end":{"line":191,"column":29,"offset":8171},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":8143},"end":{"line":191,"column":29,"offset":8171},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Can reference block, not just parameter","position":{"start":{"line":192,"column":3,"offset":8174},"end":{"line":192,"column":42,"offset":8213},"indent":[]}}],"position":{"start":{"line":192,"column":3,"offset":8174},"end":{"line":192,"column":42,"offset":8213},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":8172},"end":{"line":192,"column":42,"offset":8213},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":8113},"end":{"line":192,"column":42,"offset":8213},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":194,"column":4,"offset":8218},"end":{"line":194,"column":13,"offset":8227},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":8215},"end":{"line":194,"column":13,"offset":8227},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Resources are the core of your CloudFormation template. They represent the different AWS Components that will be created and configured.","position":{"start":{"line":196,"column":1,"offset":8229},"end":{"line":196,"column":137,"offset":8365},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":8229},"end":{"line":196,"column":137,"offset":8365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"They are declared and can be references by eachother. AWS figures out creation, updates, deletes etc.","position":{"start":{"line":198,"column":1,"offset":8367},"end":{"line":198,"column":102,"offset":8468},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":8367},"end":{"line":198,"column":102,"offset":8468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are over 224 types of resources.","position":{"start":{"line":200,"column":1,"offset":8470},"end":{"line":200,"column":39,"offset":8508},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":8470},"end":{"line":200,"column":39,"offset":8508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"They are identified using the form ","position":{"start":{"line":202,"column":1,"offset":8510},"end":{"line":202,"column":36,"offset":8545},"indent":[]}},{"type":"inlineCode","value":"AWS::aws-product-name::data-type-name","position":{"start":{"line":202,"column":36,"offset":8545},"end":{"line":202,"column":75,"offset":8584},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":202,"column":75,"offset":8584},"end":{"line":202,"column":76,"offset":8585},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":8510},"end":{"line":202,"column":76,"offset":8585},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Reading the docs for an ES2 Instance","position":{"start":{"line":204,"column":5,"offset":8591},"end":{"line":204,"column":41,"offset":8627},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":8587},"end":{"line":204,"column":41,"offset":8627},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you look at the docs, if comes up with both JSON and YAML docs.","position":{"start":{"line":206,"column":1,"offset":8629},"end":{"line":206,"column":67,"offset":8695},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":8629},"end":{"line":206,"column":67,"offset":8695},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Optional Attributes for Resources","position":{"start":{"line":208,"column":5,"offset":8701},"end":{"line":208,"column":38,"offset":8734},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":8697},"end":{"line":208,"column":38,"offset":8734},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"DependsOn: very useful to draw a dependency between two resources. For example, only create an ECS cluster after creating an ASG (auto scaling group).","position":{"start":{"line":210,"column":5,"offset":8740},"end":{"line":210,"column":155,"offset":8890},"indent":[]}}],"position":{"start":{"line":210,"column":5,"offset":8740},"end":{"line":210,"column":155,"offset":8890},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":8736},"end":{"line":210,"column":155,"offset":8890},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"DeletionPolicy: protect resource from being deleted even if cloudformation is deleted.","position":{"start":{"line":211,"column":5,"offset":8895},"end":{"line":211,"column":91,"offset":8981},"indent":[]}}],"position":{"start":{"line":211,"column":5,"offset":8895},"end":{"line":211,"column":91,"offset":8981},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":8891},"end":{"line":211,"column":91,"offset":8981},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CreationPolicy: more info on CFN","position":{"start":{"line":212,"column":5,"offset":8986},"end":{"line":212,"column":37,"offset":9018},"indent":[]}}],"position":{"start":{"line":212,"column":5,"offset":8986},"end":{"line":212,"column":37,"offset":9018},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":8982},"end":{"line":212,"column":37,"offset":9018},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Metadata: anything you want!","position":{"start":{"line":213,"column":5,"offset":9023},"end":{"line":213,"column":33,"offset":9051},"indent":[]}}],"position":{"start":{"line":213,"column":5,"offset":9023},"end":{"line":213,"column":33,"offset":9051},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":9019},"end":{"line":213,"column":33,"offset":9051},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":8736},"end":{"line":213,"column":33,"offset":9051},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"FAQ for resources","position":{"start":{"line":215,"column":5,"offset":9057},"end":{"line":215,"column":22,"offset":9074},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":9053},"end":{"line":215,"column":22,"offset":9074},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Can I create a dynamic a dynamic amount of resources? No you can perform code generation. The work around is the ","position":{"start":{"line":217,"column":5,"offset":9080},"end":{"line":217,"column":118,"offset":9193},"indent":[]}},{"type":"inlineCode","value":"troposphere","position":{"start":{"line":217,"column":118,"offset":9193},"end":{"line":217,"column":131,"offset":9206},"indent":[]}},{"type":"text","value":" Python library.","position":{"start":{"line":217,"column":131,"offset":9206},"end":{"line":217,"column":147,"offset":9222},"indent":[]}}],"position":{"start":{"line":217,"column":5,"offset":9080},"end":{"line":217,"column":147,"offset":9222},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":9076},"end":{"line":217,"column":147,"offset":9222},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Is every AWS Service supported? Almost. Only a select few niches are not there.","position":{"start":{"line":218,"column":5,"offset":9227},"end":{"line":218,"column":84,"offset":9306},"indent":[]}}],"position":{"start":{"line":218,"column":5,"offset":9227},"end":{"line":218,"column":84,"offset":9306},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":9223},"end":{"line":218,"column":84,"offset":9306},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":9076},"end":{"line":218,"column":84,"offset":9306},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Mappings","position":{"start":{"line":220,"column":4,"offset":9311},"end":{"line":220,"column":12,"offset":9319},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":9308},"end":{"line":220,"column":12,"offset":9319},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What are mappings? Fixed ariables within your CF Template. Great for dev vs prod, regions, AMI types etc.","position":{"start":{"line":222,"column":1,"offset":9321},"end":{"line":222,"column":106,"offset":9426},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":9321},"end":{"line":222,"column":106,"offset":9426},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Every mapping has top, middle and bottom.","position":{"start":{"line":224,"column":1,"offset":9428},"end":{"line":224,"column":42,"offset":9469},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":9428},"end":{"line":224,"column":42,"offset":9469},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Great to use when you know in advance:","position":{"start":{"line":226,"column":1,"offset":9471},"end":{"line":226,"column":39,"offset":9509},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":9471},"end":{"line":226,"column":39,"offset":9509},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Region","position":{"start":{"line":228,"column":3,"offset":9513},"end":{"line":228,"column":9,"offset":9519},"indent":[]}}],"position":{"start":{"line":228,"column":3,"offset":9513},"end":{"line":228,"column":9,"offset":9519},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":9511},"end":{"line":228,"column":9,"offset":9519},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AZ","position":{"start":{"line":229,"column":3,"offset":9522},"end":{"line":229,"column":5,"offset":9524},"indent":[]}}],"position":{"start":{"line":229,"column":3,"offset":9522},"end":{"line":229,"column":5,"offset":9524},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":9520},"end":{"line":229,"column":5,"offset":9524},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWSAccount","position":{"start":{"line":230,"column":3,"offset":9527},"end":{"line":230,"column":13,"offset":9537},"indent":[]}}],"position":{"start":{"line":230,"column":3,"offset":9527},"end":{"line":230,"column":13,"offset":9537},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":9525},"end":{"line":230,"column":13,"offset":9537},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Environment (dev vs prod)","position":{"start":{"line":231,"column":3,"offset":9540},"end":{"line":231,"column":28,"offset":9565},"indent":[]}}],"position":{"start":{"line":231,"column":3,"offset":9540},"end":{"line":231,"column":28,"offset":9565},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":9538},"end":{"line":231,"column":28,"offset":9565},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":9511},"end":{"line":231,"column":28,"offset":9565},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"They allow safer control over the template. Use parameters when the values are ","position":{"start":{"line":233,"column":1,"offset":9567},"end":{"line":233,"column":80,"offset":9646},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"really","position":{"start":{"line":233,"column":81,"offset":9647},"end":{"line":233,"column":87,"offset":9653},"indent":[]}}],"position":{"start":{"line":233,"column":80,"offset":9646},"end":{"line":233,"column":88,"offset":9654},"indent":[]}},{"type":"text","value":" user specific.","position":{"start":{"line":233,"column":88,"offset":9654},"end":{"line":233,"column":103,"offset":9669},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":9567},"end":{"line":233,"column":103,"offset":9669},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Fn::FindInMap - Accessing Mapping Values","position":{"start":{"line":235,"column":5,"offset":9675},"end":{"line":235,"column":45,"offset":9715},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":9671},"end":{"line":235,"column":45,"offset":9715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use Fn::FindInMap to return a named value from a specific key.","position":{"start":{"line":237,"column":1,"offset":9717},"end":{"line":237,"column":63,"offset":9779},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":9717},"end":{"line":237,"column":63,"offset":9779},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"!FindInMap ","position":{"start":{"line":239,"column":3,"offset":9783},"end":{"line":239,"column":14,"offset":9794},"indent":[]}},{"type":"linkReference","identifier":" mapname, toplevelkey, secondlevelkey ","label":" MapName, TopLevelKey, SecondLevelKey ","referenceType":"shortcut","children":[{"type":"text","value":" MapName, TopLevelKey, SecondLevelKey ","position":{"start":{"line":239,"column":15,"offset":9795},"end":{"line":239,"column":53,"offset":9833},"indent":[]}}],"position":{"start":{"line":239,"column":14,"offset":9794},"end":{"line":239,"column":54,"offset":9834},"indent":[]}}],"position":{"start":{"line":239,"column":3,"offset":9783},"end":{"line":239,"column":54,"offset":9834},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":9781},"end":{"line":239,"column":54,"offset":9834},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":9781},"end":{"line":239,"column":54,"offset":9834},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":241,"column":1,"offset":9836},"end":{"line":241,"column":9,"offset":9844},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":9836},"end":{"line":241,"column":9,"offset":9844},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWSTemplateFormatVersion: '2010-09-09'\nMappings:\n  RegionMap:\n    us-east-1:\n      '32': 'ami-6411e20d'\n      '64': 'ami-7a11e213'\nResources:\n  myEC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', 32]\n      InstanceType: m1.small","position":{"start":{"line":243,"column":1,"offset":9846},"end":{"line":256,"column":4,"offset":10154},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Mappings in practise","position":{"start":{"line":258,"column":5,"offset":10160},"end":{"line":258,"column":25,"offset":10180},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":10156},"end":{"line":258,"column":25,"offset":10180},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Parameters:\n  EnvironmentName:\n    Description: Environment Name\n    Type: String\n    AllowedValues: [development, production]\n    ConstraintDescription: must be development or production\n\nMappings:\n  AWSRegionArch2AMI:\n    us-east-1:\n      HVM64: ami-6869aa05\n  EnvironmentToInstantType:\n    development:\n      instanceType: t2.micro\n    production:\n      instanceType: t2.small\n\nResources:\n  EC2Instance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType:\n        !FindInMap [\n          EnvironmentToInstanceType,\n          !Ref 'EnvironmentName',\n          instanceType,\n        ]\n      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', HVM64]","position":{"start":{"line":260,"column":1,"offset":10182},"end":{"line":289,"column":4,"offset":10864},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Concept: Pseudo Parameters","position":{"start":{"line":291,"column":4,"offset":10869},"end":{"line":291,"column":30,"offset":10895},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":10866},"end":{"line":291,"column":30,"offset":10895},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS offers us pseudo params in any CF template.","position":{"start":{"line":293,"column":3,"offset":10899},"end":{"line":293,"column":50,"offset":10946},"indent":[]}}],"position":{"start":{"line":293,"column":3,"offset":10899},"end":{"line":293,"column":50,"offset":10946},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":10897},"end":{"line":293,"column":50,"offset":10946},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"These can be used at any time and are enabled by default.","position":{"start":{"line":294,"column":3,"offset":10949},"end":{"line":294,"column":60,"offset":11006},"indent":[]}}],"position":{"start":{"line":294,"column":3,"offset":10949},"end":{"line":294,"column":60,"offset":11006},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":10947},"end":{"line":294,"column":60,"offset":11006},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":10897},"end":{"line":294,"column":60,"offset":11006},"indent":[1]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::AccountId","position":{"start":{"line":296,"column":5,"offset":11012},"end":{"line":296,"column":19,"offset":11026},"indent":[]}}],"position":{"start":{"line":296,"column":5,"offset":11012},"end":{"line":296,"column":19,"offset":11026},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":11008},"end":{"line":296,"column":19,"offset":11026},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::NotificationsARNs","position":{"start":{"line":297,"column":5,"offset":11031},"end":{"line":297,"column":27,"offset":11053},"indent":[]}}],"position":{"start":{"line":297,"column":5,"offset":11031},"end":{"line":297,"column":27,"offset":11053},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":11027},"end":{"line":297,"column":27,"offset":11053},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::NoValue","position":{"start":{"line":298,"column":5,"offset":11058},"end":{"line":298,"column":17,"offset":11070},"indent":[]}}],"position":{"start":{"line":298,"column":5,"offset":11058},"end":{"line":298,"column":17,"offset":11070},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":11054},"end":{"line":298,"column":17,"offset":11070},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::Region","position":{"start":{"line":299,"column":5,"offset":11075},"end":{"line":299,"column":16,"offset":11086},"indent":[]}}],"position":{"start":{"line":299,"column":5,"offset":11075},"end":{"line":299,"column":16,"offset":11086},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":11071},"end":{"line":299,"column":16,"offset":11086},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::StackId","position":{"start":{"line":300,"column":5,"offset":11091},"end":{"line":300,"column":17,"offset":11103},"indent":[]}}],"position":{"start":{"line":300,"column":5,"offset":11091},"end":{"line":300,"column":17,"offset":11103},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":11087},"end":{"line":300,"column":17,"offset":11103},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::StackName","position":{"start":{"line":301,"column":5,"offset":11108},"end":{"line":301,"column":19,"offset":11122},"indent":[]}}],"position":{"start":{"line":301,"column":5,"offset":11108},"end":{"line":301,"column":19,"offset":11122},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":11104},"end":{"line":301,"column":19,"offset":11122},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":11008},"end":{"line":301,"column":19,"offset":11122},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CloudFormation Outputs","position":{"start":{"line":303,"column":4,"offset":11127},"end":{"line":303,"column":26,"offset":11149},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":11124},"end":{"line":303,"column":26,"offset":11149},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What are they? They are ","position":{"start":{"line":305,"column":1,"offset":11151},"end":{"line":305,"column":25,"offset":11175},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"optional","position":{"start":{"line":305,"column":26,"offset":11176},"end":{"line":305,"column":34,"offset":11184},"indent":[]}}],"position":{"start":{"line":305,"column":25,"offset":11175},"end":{"line":305,"column":35,"offset":11185},"indent":[]}},{"type":"text","value":" values that we can import into other stacks.","position":{"start":{"line":305,"column":35,"offset":11185},"end":{"line":305,"column":80,"offset":11230},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":11151},"end":{"line":305,"column":80,"offset":11230},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also view the outputs in the AWS Console or in using the AWS CLI.","position":{"start":{"line":307,"column":1,"offset":11232},"end":{"line":307,"column":74,"offset":11305},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":11232},"end":{"line":307,"column":74,"offset":11305},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"They're very useful for example if you define a network CloudFormation, and output the variables such as VPC ID and your Subnet IDs.","position":{"start":{"line":309,"column":1,"offset":11307},"end":{"line":309,"column":133,"offset":11439},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":11307},"end":{"line":309,"column":133,"offset":11439},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's the best way to perform some collaboration cross stack. Let the expert handle their part and you handle yours.","position":{"start":{"line":311,"column":1,"offset":11441},"end":{"line":311,"column":116,"offset":11556},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":11441},"end":{"line":311,"column":116,"offset":11556},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Outputs Hands-On","position":{"start":{"line":313,"column":5,"offset":11562},"end":{"line":313,"column":21,"offset":11578},"indent":[]}}],"position":{"start":{"line":313,"column":1,"offset":11558},"end":{"line":313,"column":21,"offset":11578},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Creating a SSH Security Group as part of one template. We can create an output that references that security group.","position":{"start":{"line":315,"column":1,"offset":11580},"end":{"line":315,"column":116,"offset":11695},"indent":[]}}],"position":{"start":{"line":315,"column":1,"offset":11580},"end":{"line":315,"column":116,"offset":11695},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Outputs:\n  <Logical ID>:\n    Description: Information about the value\n    Value: Value to return\n    Export:\n      Name: Value to export","position":{"start":{"line":317,"column":1,"offset":11697},"end":{"line":324,"column":4,"offset":11845},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In 0-create-ssh-security-group.yaml","position":{"start":{"line":326,"column":1,"offset":11847},"end":{"line":326,"column":36,"offset":11882},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":11847},"end":{"line":326,"column":36,"offset":11882},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Resources:\n  # here we define a SSH security group that will be used in the entire company\n  MyCompanyWideSSHSecurityGroup:\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Enable SSH access via port 22\n      SecurityGroupIngress:\n        # we have a lot of rules because it's a perfect security group\n        # finance team network\n        - CidrIp: 10.0.48.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n          # marketing team network\n        - CidrIp: 10.0.112.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n          # application team support network\n        - CidrIp: 10.0.176.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n\nOutputs:\n  StackSSHSecurityGroup:\n    Description: The SSH Security Group for our Company\n    Value: !Ref MyCompanyWideSSHSecurityGroup\n    Export:\n      Name: SSHSecurityGroup","position":{"start":{"line":328,"column":1,"offset":11884},"end":{"line":360,"column":4,"offset":12923},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is important to note that for an ","position":{"start":{"line":362,"column":1,"offset":12925},"end":{"line":362,"column":37,"offset":12961},"indent":[]}},{"type":"inlineCode","value":"output","position":{"start":{"line":362,"column":37,"offset":12961},"end":{"line":362,"column":45,"offset":12969},"indent":[]}},{"type":"text","value":" to be used anywhere, you need to define an ","position":{"start":{"line":362,"column":45,"offset":12969},"end":{"line":362,"column":89,"offset":13013},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":362,"column":89,"offset":13013},"end":{"line":362,"column":97,"offset":13021},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":362,"column":97,"offset":13021},"end":{"line":362,"column":104,"offset":13028},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":12925},"end":{"line":362,"column":104,"offset":13028},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Cross Stack Reference","position":{"start":{"line":364,"column":5,"offset":13034},"end":{"line":364,"column":26,"offset":13055},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":13030},"end":{"line":364,"column":26,"offset":13055},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":366,"column":1,"offset":13057},"end":{"line":366,"column":8,"offset":13064},"indent":[]}},{"type":"inlineCode","value":"Fn::ImportValue","position":{"start":{"line":366,"column":8,"offset":13064},"end":{"line":366,"column":25,"offset":13081},"indent":[]}},{"type":"text","value":" in a simple block:","position":{"start":{"line":366,"column":25,"offset":13081},"end":{"line":366,"column":44,"offset":13100},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":13057},"end":{"line":366,"column":44,"offset":13100},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Resources:\n  MySecureInstance:\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\n    Type: AWS::EC2::Instance\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n      SecurityGroups:\n        # we reference the output here, using the Fn::ImportValue function\n        - !ImportValue SSHSecurityGroup","position":{"start":{"line":368,"column":1,"offset":13102},"end":{"line":380,"column":4,"offset":13519},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Conditions","position":{"start":{"line":382,"column":4,"offset":13524},"end":{"line":382,"column":14,"offset":13534},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":13521},"end":{"line":382,"column":14,"offset":13534},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Conditionals are used to control the creation of resources or outputs based on a condition.","position":{"start":{"line":384,"column":1,"offset":13536},"end":{"line":384,"column":92,"offset":13627},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":13536},"end":{"line":384,"column":92,"offset":13627},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Conditions can be whatever you want them to be, but common ones are:","position":{"start":{"line":386,"column":1,"offset":13629},"end":{"line":386,"column":69,"offset":13697},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":13629},"end":{"line":386,"column":69,"offset":13697},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Environment (dev/test/prod)","position":{"start":{"line":388,"column":3,"offset":13701},"end":{"line":388,"column":30,"offset":13728},"indent":[]}}],"position":{"start":{"line":388,"column":3,"offset":13701},"end":{"line":388,"column":30,"offset":13728},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":13699},"end":{"line":388,"column":30,"offset":13728},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS Region","position":{"start":{"line":389,"column":3,"offset":13731},"end":{"line":389,"column":13,"offset":13741},"indent":[]}}],"position":{"start":{"line":389,"column":3,"offset":13731},"end":{"line":389,"column":13,"offset":13741},"indent":[]}}],"position":{"start":{"line":389,"column":1,"offset":13729},"end":{"line":389,"column":13,"offset":13741},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Any parameter value","position":{"start":{"line":390,"column":3,"offset":13744},"end":{"line":390,"column":22,"offset":13763},"indent":[]}}],"position":{"start":{"line":390,"column":3,"offset":13744},"end":{"line":390,"column":22,"offset":13763},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":13742},"end":{"line":390,"column":22,"offset":13763},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":13699},"end":{"line":390,"column":22,"offset":13763},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Each condition can reference another condition, parameter value or mapping.","position":{"start":{"line":392,"column":1,"offset":13765},"end":{"line":392,"column":76,"offset":13840},"indent":[]}}],"position":{"start":{"line":392,"column":1,"offset":13765},"end":{"line":392,"column":76,"offset":13840},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"How to define a condition?","position":{"start":{"line":394,"column":5,"offset":13846},"end":{"line":394,"column":31,"offset":13872},"indent":[]}}],"position":{"start":{"line":394,"column":1,"offset":13842},"end":{"line":394,"column":31,"offset":13872},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Conditions:\n  [Logical ID]: [Intrinsic function]","position":{"start":{"line":396,"column":1,"offset":13874},"end":{"line":399,"column":4,"offset":13934},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Logical ID is for you to choose. It's how you name the condition.","position":{"start":{"line":401,"column":1,"offset":13936},"end":{"line":401,"column":66,"offset":14001},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":13936},"end":{"line":401,"column":66,"offset":14001},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The intrinsic function (logical) can be any of the following: - Fn::And - Fn::Equals - Fn::If - Fn::Not - Fn::Or","position":{"start":{"line":403,"column":1,"offset":14003},"end":{"line":403,"column":113,"offset":14115},"indent":[]}}],"position":{"start":{"line":403,"column":1,"offset":14003},"end":{"line":403,"column":113,"offset":14115},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Conditional Hands On","position":{"start":{"line":405,"column":4,"offset":14120},"end":{"line":405,"column":24,"offset":14140},"indent":[]}}],"position":{"start":{"line":405,"column":1,"offset":14117},"end":{"line":405,"column":24,"offset":14140},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Let's analyze a CF template that optionally creates a volume and mount point only if \"prod\" is specified as a parameter.","position":{"start":{"line":407,"column":3,"offset":14144},"end":{"line":407,"column":123,"offset":14264},"indent":[]}}],"position":{"start":{"line":407,"column":3,"offset":14144},"end":{"line":407,"column":123,"offset":14264},"indent":[]}}],"position":{"start":{"line":407,"column":1,"offset":14142},"end":{"line":407,"column":123,"offset":14264},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It utilizes params, mappings, conditionals, outputs","position":{"start":{"line":408,"column":3,"offset":14267},"end":{"line":408,"column":54,"offset":14318},"indent":[]}}],"position":{"start":{"line":408,"column":3,"offset":14267},"end":{"line":408,"column":54,"offset":14318},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":14265},"end":{"line":408,"column":54,"offset":14318},"indent":[]}}],"position":{"start":{"line":407,"column":1,"offset":14142},"end":{"line":408,"column":54,"offset":14318},"indent":[1]}},{"type":"code","lang":"yaml","meta":null,"value":"AWSTemplateFormatVersion: '2010-09-09'\nMappings:\n  RegionMap:\n    us-east-1:\n      AMI: 'ami-a4c7edb2'\n      TestAz: 'us-east-1a'\n    us-west-1:\n      AMI: 'ami-6df1e514'\n      TestAz: 'us-west-1a'\n    us-west-2:\n      AMI: 'ami-327f5352'\n      TestAz: 'us-west-2a'\n    eu-west-1:\n      AMI: 'ami-d7b9a2b1'\n      TestAz: 'eu-west-1a'\n    sa-east-1:\n      AMI: 'ami-87dab1eb'\n      TestAz: 'sa-east-1a'\n    ap-southeast-1:\n      AMI: 'ami-77af2014'\n      TestAz: 'ap-southeast-1a'\n    ap-southeast-2:\n      AMI: 'ami-10918173'\n      TestAz: 'ap-southeast-2a'\n    ap-northeast-1:\n      AMI: 'ami-e21cc38c'\n      TestAz: 'ap-northeast-1a'\nParameters:\n  EnvType:\n    Description: Environment type.\n    Default: test\n    Type: String\n    AllowedValues:\n      - prod\n      - test\n    ConstraintDescription: must specify prod or test.\n\nConditions:\n  CreateProdResources: !Equals [!Ref EnvType, prod]\n\nResources:\n  EC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]\n      InstanceType: t2.micro\n      AvailabilityZone: !FindInMap [RegionMap, !Ref 'AWS::Region', TestAz]\n\n  MountPoint:\n    Type: 'AWS::EC2::VolumeAttachment'\n    Condition: CreateProdResources\n    Properties:\n      InstanceId: !Ref EC2Instance\n      VolumeId: !Ref NewVolume\n      Device: /dev/sdh\n\n  NewVolume:\n    Type: 'AWS::EC2::Volume'\n    Condition: CreateProdResources\n    Properties:\n      Size: 100\n      AvailabilityZone: !GetAtt EC2Instance.AvailabilityZone\n\nOutputs:\n  VolumeId:\n    Condition: CreateProdResources\n    Value: !Ref NewVolume","position":{"start":{"line":410,"column":1,"offset":14320},"end":{"line":478,"column":4,"offset":15913},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that ","position":{"start":{"line":480,"column":1,"offset":15915},"end":{"line":480,"column":11,"offset":15925},"indent":[]}},{"type":"inlineCode","value":"conditions","position":{"start":{"line":480,"column":11,"offset":15925},"end":{"line":480,"column":23,"offset":15937},"indent":[]}},{"type":"text","value":" can not be applied to ","position":{"start":{"line":480,"column":23,"offset":15937},"end":{"line":480,"column":46,"offset":15960},"indent":[]}},{"type":"inlineCode","value":"parameters","position":{"start":{"line":480,"column":46,"offset":15960},"end":{"line":480,"column":58,"offset":15972},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":480,"column":58,"offset":15972},"end":{"line":480,"column":59,"offset":15973},"indent":[]}}],"position":{"start":{"line":480,"column":1,"offset":15915},"end":{"line":480,"column":59,"offset":15973},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Fn::GetAtt","position":{"start":{"line":482,"column":4,"offset":15978},"end":{"line":482,"column":14,"offset":15988},"indent":[]}}],"position":{"start":{"line":482,"column":1,"offset":15975},"end":{"line":482,"column":14,"offset":15988},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Get an attribute attached to any resource that exists. To know the attributes, check the docs.","position":{"start":{"line":484,"column":1,"offset":15990},"end":{"line":484,"column":95,"offset":16084},"indent":[]}}],"position":{"start":{"line":484,"column":1,"offset":15990},"end":{"line":484,"column":95,"offset":16084},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CF Metadata","position":{"start":{"line":486,"column":4,"offset":16089},"end":{"line":486,"column":15,"offset":16100},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":16086},"end":{"line":486,"column":15,"offset":16100},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is any optional metadata section to include arbitrary YAML that provide details about the template or resource.","position":{"start":{"line":488,"column":1,"offset":16102},"end":{"line":488,"column":117,"offset":16218},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":16102},"end":{"line":488,"column":117,"offset":16218},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are 3 metadata keys that have special meaning:","position":{"start":{"line":490,"column":1,"offset":16220},"end":{"line":490,"column":53,"offset":16272},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":16220},"end":{"line":490,"column":53,"offset":16272},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::CloudFormation::Designer","position":{"start":{"line":492,"column":5,"offset":16278},"end":{"line":492,"column":34,"offset":16307},"indent":[]}}],"position":{"start":{"line":492,"column":5,"offset":16278},"end":{"line":492,"column":34,"offset":16307},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":16274},"end":{"line":492,"column":34,"offset":16307},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":16274},"end":{"line":492,"column":34,"offset":16307},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Describes how the resources are laid out in your template. This is automatically added by the AWS Designer. This helps the UI (x and y)","position":{"start":{"line":494,"column":1,"offset":16309},"end":{"line":494,"column":136,"offset":16444},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":16309},"end":{"line":494,"column":136,"offset":16444},"indent":[]}},{"type":"list","ordered":true,"start":2,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::CloudFormation::Interface","position":{"start":{"line":496,"column":5,"offset":16450},"end":{"line":496,"column":35,"offset":16480},"indent":[]}}],"position":{"start":{"line":496,"column":5,"offset":16450},"end":{"line":496,"column":35,"offset":16480},"indent":[]}}],"position":{"start":{"line":496,"column":1,"offset":16446},"end":{"line":496,"column":35,"offset":16480},"indent":[]}}],"position":{"start":{"line":496,"column":1,"offset":16446},"end":{"line":496,"column":35,"offset":16480},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define grouping and ordering of input parameters when they are displayed in the AWS Console.","position":{"start":{"line":498,"column":1,"offset":16482},"end":{"line":498,"column":93,"offset":16574},"indent":[]}}],"position":{"start":{"line":498,"column":1,"offset":16482},"end":{"line":498,"column":93,"offset":16574},"indent":[]}},{"type":"list","ordered":true,"start":3,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"AWS::CloudFormation::Init","position":{"start":{"line":500,"column":5,"offset":16580},"end":{"line":500,"column":30,"offset":16605},"indent":[]}}],"position":{"start":{"line":500,"column":5,"offset":16580},"end":{"line":500,"column":30,"offset":16605},"indent":[]}}],"position":{"start":{"line":500,"column":1,"offset":16576},"end":{"line":500,"column":30,"offset":16605},"indent":[]}}],"position":{"start":{"line":500,"column":1,"offset":16576},"end":{"line":500,"column":30,"offset":16605},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define configuration tasks for cfn-init. It's the most powerful usage of the metadata. This is very important and a lot to learn about it below.","position":{"start":{"line":502,"column":1,"offset":16607},"end":{"line":502,"column":145,"offset":16751},"indent":[]}}],"position":{"start":{"line":502,"column":1,"offset":16607},"end":{"line":502,"column":145,"offset":16751},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"AWS::CloudFormation::Designer hands on","position":{"start":{"line":504,"column":5,"offset":16757},"end":{"line":504,"column":43,"offset":16795},"indent":[]}}],"position":{"start":{"line":504,"column":1,"offset":16753},"end":{"line":504,"column":43,"offset":16795},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is automatically added for you but worth deleting for online sharing and usage. When dragging and dropping each resource you will see a huge set of metadata left there. The metadata can also be added to each resource.","position":{"start":{"line":506,"column":1,"offset":16797},"end":{"line":506,"column":223,"offset":17019},"indent":[]}}],"position":{"start":{"line":506,"column":1,"offset":16797},"end":{"line":506,"column":223,"offset":17019},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"AWS::CloudFormation::Interface hands on","position":{"start":{"line":508,"column":5,"offset":17025},"end":{"line":508,"column":44,"offset":17064},"indent":[]}}],"position":{"start":{"line":508,"column":1,"offset":17021},"end":{"line":508,"column":44,"offset":17064},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define grouping and ordering of input parameteres when they are displayed in the AWS Console. This is meant when users must input params manually.","position":{"start":{"line":510,"column":1,"offset":17066},"end":{"line":510,"column":147,"offset":17212},"indent":[]}}],"position":{"start":{"line":510,"column":1,"offset":17066},"end":{"line":510,"column":147,"offset":17212},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You provide them with grouping, or sorting, that allow them to input parameters efficiently.","position":{"start":{"line":512,"column":1,"offset":17214},"end":{"line":512,"column":93,"offset":17306},"indent":[]}}],"position":{"start":{"line":512,"column":1,"offset":17214},"end":{"line":512,"column":93,"offset":17306},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example: Group all the EC2 related params together.","position":{"start":{"line":514,"column":1,"offset":17308},"end":{"line":514,"column":52,"offset":17359},"indent":[]}}],"position":{"start":{"line":514,"column":1,"offset":17308},"end":{"line":514,"column":52,"offset":17359},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"---\nParameters:\n  KeyName:\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\n    Type: AWS::EC2::KeyPair::KeyName\n  InstanceType:\n    Description: EC2 instance type.\n    Type: String\n    Default: t2.micro\n    AllowedValues:\n      - t2.micro\n      - t2.small\n      - t2.medium\n      - m3.medium\n      - m3.large\n      - m3.xlarge\n      - m3.2xlarge\n  SSHLocation:\n    Description: The IP address range that can SSH to the EC2 instance.\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\"\n    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.\n  VPCID:\n    Description: VPC to operate in\n    Type: AWS::EC2::VPC::Id\n  SubnetID:\n    Description: Subnet ID\n    Type: AWS::EC2::Subnet::Id\n  SecurityGroupID:\n    Description: Security Group\n    Type: AWS::EC2::SecurityGroup::Id\n\nResources:\n  MyEC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: !Ref InstanceType\n      SecurityGroups:\n        - !Ref SecurityGroupID\n      SubnetID: !Ref SubnetID\n\nMetadata:\n  # This is the important part\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      - Label:\n          default: 'Network Configuration'\n        Parameters:\n          - VPCID\n          - SubnetID\n          - SecurityGroupID\n      - Label:\n          default: 'Amazon EC2 Configuration'\n        Parameters:\n          - InstanceType\n          - KeyName\n    ParameterLabels:\n      VPCID:\n        default: 'Which VPC should this be deployed to?'","position":{"start":{"line":516,"column":1,"offset":17361},"end":{"line":581,"column":4,"offset":19035},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you deploy a new stack using the above, you will see that the ","position":{"start":{"line":583,"column":1,"offset":19037},"end":{"line":583,"column":66,"offset":19102},"indent":[]}},{"type":"inlineCode","value":"Parameters","position":{"start":{"line":583,"column":66,"offset":19102},"end":{"line":583,"column":78,"offset":19114},"indent":[]}},{"type":"text","value":" block will then drop you to questions about what configuration you are looking for.","position":{"start":{"line":583,"column":78,"offset":19114},"end":{"line":583,"column":162,"offset":19198},"indent":[]}}],"position":{"start":{"line":583,"column":1,"offset":19037},"end":{"line":583,"column":162,"offset":19198},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CFN Init and EC2 User Data","position":{"start":{"line":585,"column":4,"offset":19203},"end":{"line":585,"column":30,"offset":19229},"indent":[]}}],"position":{"start":{"line":585,"column":1,"offset":19200},"end":{"line":585,"column":30,"offset":19229},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"EC2 User Data Overview","position":{"start":{"line":587,"column":5,"offset":19235},"end":{"line":587,"column":27,"offset":19257},"indent":[]}}],"position":{"start":{"line":587,"column":1,"offset":19231},"end":{"line":587,"column":27,"offset":19257},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many CF templates will be about provisioning computer resources in your AWS Cloud eg. EC2 instances, autoscaling.","position":{"start":{"line":589,"column":1,"offset":19259},"end":{"line":589,"column":114,"offset":19372},"indent":[]}}],"position":{"start":{"line":589,"column":1,"offset":19259},"end":{"line":589,"column":114,"offset":19372},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Usually, you want to the instances to be self configured so that they can perform the job they are supposed to perform.","position":{"start":{"line":591,"column":1,"offset":19374},"end":{"line":591,"column":120,"offset":19493},"indent":[]}}],"position":{"start":{"line":591,"column":1,"offset":19374},"end":{"line":591,"column":120,"offset":19493},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can fully automate the EC2 fleet with CF init.","position":{"start":{"line":593,"column":1,"offset":19495},"end":{"line":593,"column":51,"offset":19545},"indent":[]}}],"position":{"start":{"line":593,"column":1,"offset":19495},"end":{"line":593,"column":51,"offset":19545},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example: an EC2 instance that has php and mysql installed on it.","position":{"start":{"line":595,"column":1,"offset":19547},"end":{"line":595,"column":65,"offset":19611},"indent":[]}}],"position":{"start":{"line":595,"column":1,"offset":19547},"end":{"line":595,"column":65,"offset":19611},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We want a user-data script to get this up and going. From the EC2 management console, you can basically use the advanced section to add a ","position":{"start":{"line":597,"column":1,"offset":19613},"end":{"line":597,"column":139,"offset":19751},"indent":[]}},{"type":"inlineCode","value":"/bin/bash","position":{"start":{"line":597,"column":139,"offset":19751},"end":{"line":597,"column":150,"offset":19762},"indent":[]}},{"type":"text","value":" section. This is already started to become more tedious than what we want.","position":{"start":{"line":597,"column":150,"offset":19762},"end":{"line":597,"column":225,"offset":19837},"indent":[]}}],"position":{"start":{"line":597,"column":1,"offset":19613},"end":{"line":597,"column":225,"offset":19837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How can we do this in CloufFormation?","position":{"start":{"line":599,"column":1,"offset":19839},"end":{"line":599,"column":38,"offset":19876},"indent":[]}}],"position":{"start":{"line":599,"column":1,"offset":19839},"end":{"line":599,"column":38,"offset":19876},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following script can use ","position":{"start":{"line":601,"column":1,"offset":19878},"end":{"line":601,"column":30,"offset":19907},"indent":[]}},{"type":"inlineCode","value":"UserData","position":{"start":{"line":601,"column":30,"offset":19907},"end":{"line":601,"column":40,"offset":19917},"indent":[]}},{"type":"text","value":" to add the script:","position":{"start":{"line":601,"column":40,"offset":19917},"end":{"line":601,"column":59,"offset":19936},"indent":[]}}],"position":{"start":{"line":601,"column":1,"offset":19878},"end":{"line":601,"column":59,"offset":19936},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Parameters:\n  KeyName:\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\n    Type: AWS::EC2::KeyPair::KeyName\n  SSHLocation:\n    Description: The IP address range that can be used to SSH to the EC2 instances\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\"\n    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.\n\nResources:\n  WebServer:\n    Type: AWS::EC2::Instance\n    Properties:\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n      KeyName: !Ref KeyName\n      SecurityGroups:\n        - !Ref WebServerSecurityGroup\n      UserData:\n        Fn::Base64: | # everything after will be kept as is\n          #!/bin/bash\n          yum update -y\n          yum install -y httpd24 php56 mysql55-server php56-mysqlnd\n          service httpd start\n          chkconfig httpd on\n          groupadd www\n          usermod -a -G www ec2-user\n          chown -R root:www /var/www\n          chmod 2775 /var/www\n          find /var/www -type d -exec chmod 2775 {} +\n          find /var/www -type f -exec chmod 0664 {} +\n          echo \"<?php phpinfo(); ?>\" > /var/www/html/phpinfo.php\n\n  WebServerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: 'Enable HTTP access via port 80 + SSH access'\n      SecurityGroupIngress:\n        - CidrIp: 0.0.0.0/0\n          FromPort: '80'\n          IpProtocol: tcp\n          ToPort: '80'\n        - CidrIp: !Ref SSHLocation\n          FromPort: '22'\n          IpProtocol: tcp\n          ToPort: '22'","position":{"start":{"line":603,"column":1,"offset":19938},"end":{"line":654,"column":4,"offset":21585},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now that we see the power of this, let's have a look at CF Init.","position":{"start":{"line":656,"column":1,"offset":21587},"end":{"line":656,"column":65,"offset":21651},"indent":[]}}],"position":{"start":{"line":656,"column":1,"offset":21587},"end":{"line":656,"column":65,"offset":21651},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"CloudFormation Init","position":{"start":{"line":658,"column":5,"offset":21657},"end":{"line":658,"column":24,"offset":21676},"indent":[]}}],"position":{"start":{"line":658,"column":1,"offset":21653},"end":{"line":658,"column":24,"offset":21676},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What is the problem with EC2 user data? Well, what happens if we have a large configuration? What if we want to evolve the state without terminating it? How do we make it readable? How do we know or signal that our EC2 user-data script actually completed successfully?","position":{"start":{"line":660,"column":1,"offset":21678},"end":{"line":660,"column":269,"offset":21946},"indent":[]}}],"position":{"start":{"line":660,"column":1,"offset":21678},"end":{"line":660,"column":269,"offset":21946},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Amazon creating CF helper scripts.","position":{"start":{"line":662,"column":1,"offset":21948},"end":{"line":662,"column":35,"offset":21982},"indent":[]}}],"position":{"start":{"line":662,"column":1,"offset":21948},"end":{"line":662,"column":35,"offset":21982},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are 4 python scripts that come directly with Amazon Linux AMI or can be installed using ","position":{"start":{"line":664,"column":1,"offset":21984},"end":{"line":664,"column":95,"offset":22078},"indent":[]}},{"type":"inlineCode","value":"yum","position":{"start":{"line":664,"column":95,"offset":22078},"end":{"line":664,"column":100,"offset":22083},"indent":[]}},{"type":"text","value":" on non-Amazon Linux. They are:","position":{"start":{"line":664,"column":100,"offset":22083},"end":{"line":664,"column":131,"offset":22114},"indent":[]}}],"position":{"start":{"line":664,"column":1,"offset":21984},"end":{"line":664,"column":131,"offset":22114},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cfn-init: Used to retrieve and interprety the resouce metadata, installing packages, creating files and starting services.","position":{"start":{"line":666,"column":5,"offset":22120},"end":{"line":666,"column":127,"offset":22242},"indent":[]}}],"position":{"start":{"line":666,"column":5,"offset":22120},"end":{"line":666,"column":127,"offset":22242},"indent":[]}}],"position":{"start":{"line":666,"column":1,"offset":22116},"end":{"line":666,"column":127,"offset":22242},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cfn-signal: A simple wrapper to signal an AWS CloudFormation CreationPolicy or WaitCondition, enabling you to sync other resources in the stack with the application being ready. This can give us the yes/no if succssful.","position":{"start":{"line":667,"column":5,"offset":22247},"end":{"line":667,"column":224,"offset":22466},"indent":[]}}],"position":{"start":{"line":667,"column":5,"offset":22247},"end":{"line":667,"column":224,"offset":22466},"indent":[]}}],"position":{"start":{"line":667,"column":1,"offset":22243},"end":{"line":667,"column":224,"offset":22466},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cfn-get-metadata: A wrapper script making it easy to retrieve either all metadata defined for a resource or path to a specific key or subtree of the resource metadata.","position":{"start":{"line":668,"column":5,"offset":22471},"end":{"line":668,"column":172,"offset":22638},"indent":[]}}],"position":{"start":{"line":668,"column":5,"offset":22471},"end":{"line":668,"column":172,"offset":22638},"indent":[]}}],"position":{"start":{"line":668,"column":1,"offset":22467},"end":{"line":668,"column":172,"offset":22638},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cfn-hup: A daemon to check for updates to metadata and execute custom hooks when the changes are detected.","position":{"start":{"line":669,"column":5,"offset":22643},"end":{"line":669,"column":111,"offset":22749},"indent":[]}}],"position":{"start":{"line":669,"column":5,"offset":22643},"end":{"line":669,"column":111,"offset":22749},"indent":[]}}],"position":{"start":{"line":669,"column":1,"offset":22639},"end":{"line":669,"column":111,"offset":22749},"indent":[]}}],"position":{"start":{"line":666,"column":1,"offset":22116},"end":{"line":669,"column":111,"offset":22749},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The usual flow? cfn-init, then cfn-signal, then optionally cfn-hup.","position":{"start":{"line":671,"column":1,"offset":22751},"end":{"line":671,"column":68,"offset":22818},"indent":[]}}],"position":{"start":{"line":671,"column":1,"offset":22751},"end":{"line":671,"column":68,"offset":22818},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"AWS::CloudFormation::Init","position":{"start":{"line":673,"column":5,"offset":22824},"end":{"line":673,"column":30,"offset":22849},"indent":[]}}],"position":{"start":{"line":673,"column":1,"offset":22820},"end":{"line":673,"column":30,"offset":22849},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A config contains the following and is executed in that order:","position":{"start":{"line":675,"column":1,"offset":22851},"end":{"line":675,"column":63,"offset":22913},"indent":[]}}],"position":{"start":{"line":675,"column":1,"offset":22851},"end":{"line":675,"column":63,"offset":22913},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Packages: install a list of packages on the Linux OS (mysql, wordpress, etc)","position":{"start":{"line":677,"column":5,"offset":22919},"end":{"line":677,"column":81,"offset":22995},"indent":[]}}],"position":{"start":{"line":677,"column":5,"offset":22919},"end":{"line":677,"column":81,"offset":22995},"indent":[]}}],"position":{"start":{"line":677,"column":1,"offset":22915},"end":{"line":677,"column":81,"offset":22995},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Groups: define user groups","position":{"start":{"line":678,"column":5,"offset":23000},"end":{"line":678,"column":31,"offset":23026},"indent":[]}}],"position":{"start":{"line":678,"column":5,"offset":23000},"end":{"line":678,"column":31,"offset":23026},"indent":[]}}],"position":{"start":{"line":678,"column":1,"offset":22996},"end":{"line":678,"column":31,"offset":23026},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Users: define users, and which group they belong to","position":{"start":{"line":679,"column":5,"offset":23031},"end":{"line":679,"column":56,"offset":23082},"indent":[]}}],"position":{"start":{"line":679,"column":5,"offset":23031},"end":{"line":679,"column":56,"offset":23082},"indent":[]}}],"position":{"start":{"line":679,"column":1,"offset":23027},"end":{"line":679,"column":56,"offset":23082},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Sources: download an archive file and place it on the ec2 instance (tar, zip, bz2)","position":{"start":{"line":680,"column":5,"offset":23087},"end":{"line":680,"column":87,"offset":23169},"indent":[]}}],"position":{"start":{"line":680,"column":5,"offset":23087},"end":{"line":680,"column":87,"offset":23169},"indent":[]}}],"position":{"start":{"line":680,"column":1,"offset":23083},"end":{"line":680,"column":87,"offset":23169},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Files: create files on the ec2 instance, using inline or can be pulled from a URL","position":{"start":{"line":681,"column":5,"offset":23174},"end":{"line":681,"column":86,"offset":23255},"indent":[]}}],"position":{"start":{"line":681,"column":5,"offset":23174},"end":{"line":681,"column":86,"offset":23255},"indent":[]}}],"position":{"start":{"line":681,"column":1,"offset":23170},"end":{"line":681,"column":86,"offset":23255},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Commands: run a series of commands","position":{"start":{"line":682,"column":5,"offset":23260},"end":{"line":682,"column":39,"offset":23294},"indent":[]}}],"position":{"start":{"line":682,"column":5,"offset":23260},"end":{"line":682,"column":39,"offset":23294},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":23256},"end":{"line":682,"column":39,"offset":23294},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Services: launch a list of sysvinit","position":{"start":{"line":683,"column":5,"offset":23299},"end":{"line":683,"column":40,"offset":23334},"indent":[]}}],"position":{"start":{"line":683,"column":5,"offset":23299},"end":{"line":683,"column":40,"offset":23334},"indent":[]}}],"position":{"start":{"line":683,"column":1,"offset":23295},"end":{"line":683,"column":40,"offset":23334},"indent":[]}}],"position":{"start":{"line":677,"column":1,"offset":22915},"end":{"line":683,"column":40,"offset":23334},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also have multiple configs and you can run them sequentially etc.","position":{"start":{"line":685,"column":1,"offset":23336},"end":{"line":685,"column":74,"offset":23409},"indent":[]}}],"position":{"start":{"line":685,"column":1,"offset":23336},"end":{"line":685,"column":74,"offset":23409},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Packages","position":{"start":{"line":687,"column":5,"offset":23415},"end":{"line":687,"column":13,"offset":23423},"indent":[]}}],"position":{"start":{"line":687,"column":1,"offset":23411},"end":{"line":687,"column":13,"offset":23423},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can install packages from the following repositories:","position":{"start":{"line":689,"column":1,"offset":23425},"end":{"line":689,"column":58,"offset":23482},"indent":[]}}],"position":{"start":{"line":689,"column":1,"offset":23425},"end":{"line":689,"column":58,"offset":23482},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"apt","position":{"start":{"line":691,"column":3,"offset":23486},"end":{"line":691,"column":6,"offset":23489},"indent":[]}}],"position":{"start":{"line":691,"column":3,"offset":23486},"end":{"line":691,"column":6,"offset":23489},"indent":[]}}],"position":{"start":{"line":691,"column":1,"offset":23484},"end":{"line":691,"column":6,"offset":23489},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"msi","position":{"start":{"line":692,"column":3,"offset":23492},"end":{"line":692,"column":6,"offset":23495},"indent":[]}}],"position":{"start":{"line":692,"column":3,"offset":23492},"end":{"line":692,"column":6,"offset":23495},"indent":[]}}],"position":{"start":{"line":692,"column":1,"offset":23490},"end":{"line":692,"column":6,"offset":23495},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"python","position":{"start":{"line":693,"column":3,"offset":23498},"end":{"line":693,"column":9,"offset":23504},"indent":[]}}],"position":{"start":{"line":693,"column":3,"offset":23498},"end":{"line":693,"column":9,"offset":23504},"indent":[]}}],"position":{"start":{"line":693,"column":1,"offset":23496},"end":{"line":693,"column":9,"offset":23504},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"rpm","position":{"start":{"line":694,"column":3,"offset":23507},"end":{"line":694,"column":6,"offset":23510},"indent":[]}}],"position":{"start":{"line":694,"column":3,"offset":23507},"end":{"line":694,"column":6,"offset":23510},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":23505},"end":{"line":694,"column":6,"offset":23510},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"rubygems","position":{"start":{"line":695,"column":3,"offset":23513},"end":{"line":695,"column":11,"offset":23521},"indent":[]}}],"position":{"start":{"line":695,"column":3,"offset":23513},"end":{"line":695,"column":11,"offset":23521},"indent":[]}}],"position":{"start":{"line":695,"column":1,"offset":23511},"end":{"line":695,"column":11,"offset":23521},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"yum","position":{"start":{"line":696,"column":3,"offset":23524},"end":{"line":696,"column":6,"offset":23527},"indent":[]}}],"position":{"start":{"line":696,"column":3,"offset":23524},"end":{"line":696,"column":6,"offset":23527},"indent":[]}}],"position":{"start":{"line":696,"column":1,"offset":23522},"end":{"line":696,"column":6,"offset":23527},"indent":[]}}],"position":{"start":{"line":691,"column":1,"offset":23484},"end":{"line":696,"column":6,"offset":23527},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Packages are processed in the following order: rpm, yum/apt, and then rubygems and python.","position":{"start":{"line":698,"column":1,"offset":23529},"end":{"line":698,"column":91,"offset":23619},"indent":[]}}],"position":{"start":{"line":698,"column":1,"offset":23529},"end":{"line":698,"column":91,"offset":23619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also specify a version if you want.","position":{"start":{"line":700,"column":1,"offset":23621},"end":{"line":700,"column":44,"offset":23664},"indent":[]}}],"position":{"start":{"line":700,"column":1,"offset":23621},"end":{"line":700,"column":44,"offset":23664},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWS::CloudFormation::Init:\n  config:\n    packages:\n      rpm:\n        epel: 'http://download....'\n      yum:\n        httpd: [] # means latest\n        php: []\n        wordpress: []\n      rubygems:\n        chef:\n          - '0.10.2' # get this version","position":{"start":{"line":702,"column":1,"offset":23666},"end":{"line":715,"column":4,"offset":23927},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Groups and Users","position":{"start":{"line":717,"column":5,"offset":23933},"end":{"line":717,"column":21,"offset":23949},"indent":[]}}],"position":{"start":{"line":717,"column":1,"offset":23929},"end":{"line":717,"column":21,"offset":23949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to have multiple users and groups (with optional gid) in your ec2 instance, you can add groups and users to CF and metadata.","position":{"start":{"line":719,"column":1,"offset":23951},"end":{"line":719,"column":137,"offset":24087},"indent":[]}}],"position":{"start":{"line":719,"column":1,"offset":23951},"end":{"line":719,"column":137,"offset":24087},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWS::CloudFormation::Init:\n  config:\n    groups:\n      groupeOne: {}\n      groupTwo:\n        gid: '45' #gid = group ID\n    users:\n      myUser:\n        groups:\n          - 'groupOne'\n          - 'groupTwo'\n        uid: '50'\n        homeDir: '/tmp'","position":{"start":{"line":721,"column":1,"offset":24089},"end":{"line":735,"column":4,"offset":24348},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the larger example...","position":{"start":{"line":737,"column":1,"offset":24350},"end":{"line":737,"column":25,"offset":24374},"indent":[]}}],"position":{"start":{"line":737,"column":1,"offset":24350},"end":{"line":737,"column":25,"offset":24374},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWS::CloudFormation::Init:\n  config:\n    groups:\n      apache: {} # assign any group ID\n    users:\n      'apache':\n        groups:\n          - 'apache' # user apache belongs to apache","position":{"start":{"line":739,"column":1,"offset":24376},"end":{"line":748,"column":4,"offset":24571},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Sources","position":{"start":{"line":750,"column":5,"offset":24577},"end":{"line":750,"column":12,"offset":24584},"indent":[]}}],"position":{"start":{"line":750,"column":1,"offset":24573},"end":{"line":750,"column":12,"offset":24584},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These are conveninence for a compressed archieve.","position":{"start":{"line":752,"column":1,"offset":24586},"end":{"line":752,"column":50,"offset":24635},"indent":[]}}],"position":{"start":{"line":752,"column":1,"offset":24586},"end":{"line":752,"column":50,"offset":24635},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    sources:\n      '/home/ec2-user/aws-cli': 'https://github.com/aws/aws-cli/tarball/master'","position":{"start":{"line":754,"column":1,"offset":24637},"end":{"line":760,"column":4,"offset":24815},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Files","position":{"start":{"line":762,"column":5,"offset":24821},"end":{"line":762,"column":10,"offset":24826},"indent":[]}}],"position":{"start":{"line":762,"column":1,"offset":24817},"end":{"line":762,"column":10,"offset":24826},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Files can be the most used section. Almost all the full power. It can be a specific URL or written inline for what you are doing.","position":{"start":{"line":764,"column":1,"offset":24828},"end":{"line":764,"column":130,"offset":24957},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":24828},"end":{"line":764,"column":130,"offset":24957},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Base example:","position":{"start":{"line":766,"column":1,"offset":24959},"end":{"line":766,"column":14,"offset":24972},"indent":[]}}],"position":{"start":{"line":766,"column":1,"offset":24959},"end":{"line":766,"column":14,"offset":24972},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    files:\n      /tmp/setup.mysql:\n        content: !Sub |\n          CREATE DATABASE ${DBName};\n          CREATE USER '${DBUsername}'@'localhost' IDENTIFIED BY '${DBPassword}';\n          GRANT ALL ON ${DBName}.* TO '${DBUsername}'@'localhost';\n          FLUSH PRIVILEDGES;\n        mode: '000644'\n        owner: 'root'\n        group: 'root'","position":{"start":{"line":768,"column":1,"offset":24974},"end":{"line":782,"column":4,"offset":25399},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Full example:","position":{"start":{"line":784,"column":1,"offset":25401},"end":{"line":784,"column":14,"offset":25414},"indent":[]}}],"position":{"start":{"line":784,"column":1,"offset":25401},"end":{"line":784,"column":14,"offset":25414},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note: !Sub is a function used for making substitution. ie where you see ","position":{"start":{"line":786,"column":1,"offset":25416},"end":{"line":786,"column":73,"offset":25488},"indent":[]}},{"type":"inlineCode","value":"${AWS::StackName}","position":{"start":{"line":786,"column":73,"offset":25488},"end":{"line":786,"column":92,"offset":25507},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":786,"column":92,"offset":25507},"end":{"line":786,"column":93,"offset":25508},"indent":[]}}],"position":{"start":{"line":786,"column":1,"offset":25416},"end":{"line":786,"column":93,"offset":25508},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    files:\n      '/tmp/cwlogs/apacheaccess.conf':\n        content: !Sub |\n          [general]\n          state_file= /var/awslogs/agent-state\n          [/var/log/httpd/access_log]\n          file = /var/log/httpd/access_log\n          log_group_name = ${AWS::StackName}\n          log_stream_name = {instance_id}/apache.log\n          datetime_format = %d/%b/%Y:%H:%M:%S\n        mode: '000400'\n        owner: apache\n        group: apache\n      '/var/www/html/index.php':\n        content: !Sub |\n          <?php\n          echo '<h1>AWS CloudFormation sample PHP application for ${AWS::StackName}</h1>';\n          ?>\n        mode: '000644'\n        owner: apache\n        group: apache\n      '/etc/cfn/cfn-hup.conf':\n        content: !Sub |\n          [main]\n          stack=${AWS::StackId}\n          region=${AWS::Region}\n        mode: '000400'\n        owner: 'root'\n        group: 'root'\n      '/etc/cfn/hooks.d/cfn-auto-reloader.conf':\n        content: !Sub |\n          [cfn-auto-reloader-hook]\n          triggers=post.update\n          path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\n          action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerHost --region ${AWS::Region}\n        mode: '000400'\n        owner: 'root'\n        group: 'root'","position":{"start":{"line":788,"column":1,"offset":25510},"end":{"line":830,"column":4,"offset":26872},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Fn::Sub","position":{"start":{"line":832,"column":5,"offset":26878},"end":{"line":832,"column":12,"offset":26885},"indent":[]}}],"position":{"start":{"line":832,"column":1,"offset":26874},"end":{"line":832,"column":12,"offset":26885},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(Or as !Sub) is used to substitute variables from a text. It's a very handy function that will allow you to fully customize your templates.","position":{"start":{"line":834,"column":1,"offset":26887},"end":{"line":834,"column":140,"offset":27026},"indent":[]}}],"position":{"start":{"line":834,"column":1,"offset":26887},"end":{"line":834,"column":140,"offset":27026},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, you can combine !Sub with References or AWS Pseudo variables.","position":{"start":{"line":836,"column":1,"offset":27028},"end":{"line":836,"column":75,"offset":27102},"indent":[]}}],"position":{"start":{"line":836,"column":1,"offset":27028},"end":{"line":836,"column":75,"offset":27102},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Must be in the form ","position":{"start":{"line":838,"column":1,"offset":27104},"end":{"line":838,"column":21,"offset":27124},"indent":[]}},{"type":"inlineCode","value":"${VarName}","position":{"start":{"line":838,"column":21,"offset":27124},"end":{"line":838,"column":33,"offset":27136},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":838,"column":33,"offset":27136},"end":{"line":838,"column":34,"offset":27137},"indent":[]}}],"position":{"start":{"line":838,"column":1,"offset":27104},"end":{"line":838,"column":34,"offset":27137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Forms:","position":{"start":{"line":840,"column":1,"offset":27139},"end":{"line":840,"column":7,"offset":27145},"indent":[]}}],"position":{"start":{"line":840,"column":1,"offset":27139},"end":{"line":840,"column":7,"offset":27145},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"# You can do this\n!Sub\n  - String\n  - { Var1Name: Var1Value, Var2Name: Var2Value }\n\n# or (more complicated and rarely seen)\n!Sub String","position":{"start":{"line":842,"column":1,"offset":27147},"end":{"line":850,"column":4,"offset":27294},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Commands","position":{"start":{"line":852,"column":5,"offset":27300},"end":{"line":852,"column":13,"offset":27308},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":27296},"end":{"line":852,"column":13,"offset":27308},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can run commands one at a time in the ","position":{"start":{"line":854,"column":1,"offset":27310},"end":{"line":854,"column":43,"offset":27352},"indent":[]}},{"type":"inlineCode","value":"alphabetical order","position":{"start":{"line":854,"column":43,"offset":27352},"end":{"line":854,"column":63,"offset":27372},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":854,"column":63,"offset":27372},"end":{"line":854,"column":64,"offset":27373},"indent":[]}}],"position":{"start":{"line":854,"column":1,"offset":27310},"end":{"line":854,"column":64,"offset":27373},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can set a directory from which that command is run, environment variables etc.","position":{"start":{"line":856,"column":1,"offset":27375},"end":{"line":856,"column":83,"offset":27457},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":27375},"end":{"line":856,"column":83,"offset":27457},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also provide a test to control whether the command is executed or not.","position":{"start":{"line":858,"column":1,"offset":27459},"end":{"line":858,"column":79,"offset":27537},"indent":[]}}],"position":{"start":{"line":858,"column":1,"offset":27459},"end":{"line":858,"column":79,"offset":27537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This should be a last resort. You can execute any of the scripts from the above files in this section.","position":{"start":{"line":860,"column":1,"offset":27539},"end":{"line":860,"column":103,"offset":27641},"indent":[]}}],"position":{"start":{"line":860,"column":1,"offset":27539},"end":{"line":860,"column":103,"offset":27641},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example: call the echo command only if the file doesn't exist","position":{"start":{"line":862,"column":1,"offset":27643},"end":{"line":862,"column":62,"offset":27704},"indent":[]}}],"position":{"start":{"line":862,"column":1,"offset":27643},"end":{"line":862,"column":62,"offset":27704},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"commands:\n  test:\n    command: 'echo \"$MAGIC\" > test.txt'\n    env:\n      MAGIC: 'I come from the environment!'\n    cwd: '~'\n    test: 'test ! -e ~/test.txt' # check file exists\n    ignoreErrors: 'false' # fail if is doesn't work","position":{"start":{"line":864,"column":1,"offset":27706},"end":{"line":873,"column":4,"offset":27946},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Services","position":{"start":{"line":875,"column":5,"offset":27952},"end":{"line":875,"column":13,"offset":27960},"indent":[]}}],"position":{"start":{"line":875,"column":1,"offset":27948},"end":{"line":875,"column":13,"offset":27960},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"AWS::CloudFormation::Init:\n  config:\n    services:\n      sysvinit:\n        httpd:\n          enabled: 'true'\n          ensureRunning: 'true'\n        sendmail:\n          enabled: 'false'\n          ensureRunning: 'false'","position":{"start":{"line":877,"column":1,"offset":27962},"end":{"line":888,"column":4,"offset":28191},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"CFN Init and Signal","position":{"start":{"line":890,"column":5,"offset":28197},"end":{"line":890,"column":24,"offset":28216},"indent":[]}}],"position":{"start":{"line":890,"column":1,"offset":28193},"end":{"line":890,"column":24,"offset":28216},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, we use ","position":{"start":{"line":892,"column":1,"offset":28218},"end":{"line":892,"column":15,"offset":28232},"indent":[]}},{"type":"inlineCode","value":"cfn-init","position":{"start":{"line":892,"column":15,"offset":28232},"end":{"line":892,"column":25,"offset":28242},"indent":[]}},{"type":"text","value":" to launch the config.","position":{"start":{"line":892,"column":25,"offset":28242},"end":{"line":892,"column":47,"offset":28264},"indent":[]}}],"position":{"start":{"line":892,"column":1,"offset":28218},"end":{"line":892,"column":47,"offset":28264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then we use ","position":{"start":{"line":894,"column":1,"offset":28266},"end":{"line":894,"column":13,"offset":28278},"indent":[]}},{"type":"inlineCode","value":"cfn-signal","position":{"start":{"line":894,"column":13,"offset":28278},"end":{"line":894,"column":25,"offset":28290},"indent":[]}},{"type":"text","value":" to tell when the config is complete, which will let CF know that the resource creation has been successful.","position":{"start":{"line":894,"column":25,"offset":28290},"end":{"line":894,"column":133,"offset":28398},"indent":[]}}],"position":{"start":{"line":894,"column":1,"offset":28266},"end":{"line":894,"column":133,"offset":28398},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This has to be used in conjuction with a ","position":{"start":{"line":896,"column":1,"offset":28400},"end":{"line":896,"column":42,"offset":28441},"indent":[]}},{"type":"inlineCode","value":"CreationPolicy","position":{"start":{"line":896,"column":42,"offset":28441},"end":{"line":896,"column":58,"offset":28457},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":896,"column":58,"offset":28457},"end":{"line":896,"column":59,"offset":28458},"indent":[]}}],"position":{"start":{"line":896,"column":1,"offset":28400},"end":{"line":896,"column":59,"offset":28458},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example means waiting a max of 5 minutes for the instance to come online and be self configured. If we don't hear back by ","position":{"start":{"line":898,"column":1,"offset":28460},"end":{"line":898,"column":128,"offset":28587},"indent":[]}},{"type":"inlineCode","value":"cfn-signal","position":{"start":{"line":898,"column":128,"offset":28587},"end":{"line":898,"column":140,"offset":28599},"indent":[]}},{"type":"text","value":" by the, CF will fail and rollback.","position":{"start":{"line":898,"column":140,"offset":28599},"end":{"line":898,"column":175,"offset":28634},"indent":[]}}],"position":{"start":{"line":898,"column":1,"offset":28460},"end":{"line":898,"column":175,"offset":28634},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"CreationPolicy:\n  ResourceSignal:\n    Timeout: PT5M","position":{"start":{"line":900,"column":1,"offset":28636},"end":{"line":904,"column":4,"offset":28699},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is useful in case of a bad update.","position":{"start":{"line":906,"column":1,"offset":28701},"end":{"line":906,"column":40,"offset":28740},"indent":[]}}],"position":{"start":{"line":906,"column":1,"offset":28701},"end":{"line":906,"column":40,"offset":28740},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"cfn-hup","position":{"start":{"line":908,"column":5,"offset":28746},"end":{"line":908,"column":12,"offset":28753},"indent":[]}}],"position":{"start":{"line":908,"column":1,"offset":28742},"end":{"line":908,"column":12,"offset":28753},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cfn-hup can be used to tell your EC2 instance to look for Metadata changes every 15 minutes and apply the metadata configuration again.","position":{"start":{"line":910,"column":3,"offset":28757},"end":{"line":910,"column":138,"offset":28892},"indent":[]}}],"position":{"start":{"line":910,"column":3,"offset":28757},"end":{"line":910,"column":138,"offset":28892},"indent":[]}}],"position":{"start":{"line":910,"column":1,"offset":28755},"end":{"line":910,"column":138,"offset":28892},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It's very powerful but you really need to try it out to understand how it works.","position":{"start":{"line":911,"column":3,"offset":28895},"end":{"line":911,"column":83,"offset":28975},"indent":[]}}],"position":{"start":{"line":911,"column":3,"offset":28895},"end":{"line":911,"column":83,"offset":28975},"indent":[]}}],"position":{"start":{"line":911,"column":1,"offset":28893},"end":{"line":911,"column":83,"offset":28975},"indent":[]}}],"position":{"start":{"line":910,"column":1,"offset":28755},"end":{"line":911,"column":83,"offset":28975},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Example from the \"files\" declation:","position":{"start":{"line":913,"column":1,"offset":28977},"end":{"line":913,"column":36,"offset":29012},"indent":[]}}],"position":{"start":{"line":913,"column":1,"offset":28977},"end":{"line":913,"column":36,"offset":29012},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"'/etc/cfn/cfn-hup.conf':\n  content: !Sub |\n    [main]\n    stack=${AWS::StackId}\n    region=${AWS::Region}\n  mode: '000400'\n  owner: 'root'\n  group: 'root'\n'/etc/cfn/hooks.d/cfn-auto-reloader.conf':\n  content: !Sub |\n    [cfn-auto-reloader-hook]\n    triggers=post.update\n    path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\n    action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerHost --region ${AWS::Region}\n  mode: '000400'\n  owner: 'root'","position":{"start":{"line":915,"column":1,"offset":29014},"end":{"line":932,"column":4,"offset":29507},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"CFN Init Hands-On","position":{"start":{"line":934,"column":5,"offset":29513},"end":{"line":934,"column":22,"offset":29530},"indent":[]}}],"position":{"start":{"line":934,"column":1,"offset":29509},"end":{"line":934,"column":22,"offset":29530},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After loading the CFN Init yaml file into CF, it will go through a series of different events.","position":{"start":{"line":936,"column":1,"offset":29532},"end":{"line":936,"column":95,"offset":29626},"indent":[]}}],"position":{"start":{"line":936,"column":1,"offset":29532},"end":{"line":936,"column":95,"offset":29626},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can under \"status reason\" if there is a success message sent back.","position":{"start":{"line":938,"column":1,"offset":29628},"end":{"line":938,"column":71,"offset":29698},"indent":[]}}],"position":{"start":{"line":938,"column":1,"offset":29628},"end":{"line":938,"column":71,"offset":29698},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You need to practise your !Init skilles. It will be extremely handy for creating EC2 Instances or AutoScaling groups.","position":{"start":{"line":940,"column":1,"offset":29700},"end":{"line":940,"column":118,"offset":29817},"indent":[]}}],"position":{"start":{"line":940,"column":1,"offset":29700},"end":{"line":940,"column":118,"offset":29817},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remember logs for ec2-user data are in ","position":{"start":{"line":942,"column":1,"offset":29819},"end":{"line":942,"column":40,"offset":29858},"indent":[]}},{"type":"inlineCode","value":"/var/log/cloud-init-output.log","position":{"start":{"line":942,"column":40,"offset":29858},"end":{"line":942,"column":72,"offset":29890},"indent":[]}},{"type":"text","value":" and logs for cfn-init are in ","position":{"start":{"line":942,"column":72,"offset":29890},"end":{"line":942,"column":102,"offset":29920},"indent":[]}},{"type":"inlineCode","value":"/var/log/cfn-init.log","position":{"start":{"line":942,"column":102,"offset":29920},"end":{"line":942,"column":125,"offset":29943},"indent":[]}},{"type":"text","value":", which is really helpful if commands don't complete like you want them to.","position":{"start":{"line":942,"column":125,"offset":29943},"end":{"line":942,"column":200,"offset":30018},"indent":[]}}],"position":{"start":{"line":942,"column":1,"offset":29819},"end":{"line":942,"column":200,"offset":30018},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Advanced CF Concepts","position":{"start":{"line":944,"column":4,"offset":30023},"end":{"line":944,"column":24,"offset":30043},"indent":[]}}],"position":{"start":{"line":944,"column":1,"offset":30020},"end":{"line":944,"column":24,"offset":30043},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Review of current standing:","position":{"start":{"line":946,"column":1,"offset":30045},"end":{"line":946,"column":28,"offset":30072},"indent":[]}}],"position":{"start":{"line":946,"column":1,"offset":30045},"end":{"line":946,"column":28,"offset":30072},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can check AWS labs templates from ","position":{"start":{"line":948,"column":3,"offset":30076},"end":{"line":948,"column":41,"offset":30114},"indent":[]}},{"type":"inlineCode","value":"https://github/com/awslabs/aws-cloudformation-templates","position":{"start":{"line":948,"column":41,"offset":30114},"end":{"line":948,"column":98,"offset":30171},"indent":[]}},{"type":"text","value":" to see what you can understand/see good practise.","position":{"start":{"line":948,"column":98,"offset":30171},"end":{"line":948,"column":148,"offset":30221},"indent":[]}}],"position":{"start":{"line":948,"column":3,"offset":30076},"end":{"line":948,"column":148,"offset":30221},"indent":[]}}],"position":{"start":{"line":948,"column":1,"offset":30074},"end":{"line":948,"column":148,"offset":30221},"indent":[]}}],"position":{"start":{"line":948,"column":1,"offset":30074},"end":{"line":948,"column":148,"offset":30221},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The example with WordPress is what is shown in the course.","position":{"start":{"line":950,"column":1,"offset":30223},"end":{"line":950,"column":59,"offset":30281},"indent":[]}}],"position":{"start":{"line":950,"column":1,"offset":30223},"end":{"line":950,"column":59,"offset":30281},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using the AWS CLI","position":{"start":{"line":952,"column":5,"offset":30287},"end":{"line":952,"column":22,"offset":30304},"indent":[]}}],"position":{"start":{"line":952,"column":1,"offset":30283},"end":{"line":952,"column":22,"offset":30304},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use the AWS CLI to create, update or delete CF templates.","position":{"start":{"line":954,"column":1,"offset":30306},"end":{"line":954,"column":65,"offset":30370},"indent":[]}}],"position":{"start":{"line":954,"column":1,"offset":30306},"end":{"line":954,"column":65,"offset":30370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Super conventient for when you start automating your deployments.","position":{"start":{"line":956,"column":1,"offset":30372},"end":{"line":956,"column":66,"offset":30437},"indent":[]}}],"position":{"start":{"line":956,"column":1,"offset":30372},"end":{"line":956,"column":66,"offset":30437},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once you've downloaded the AWS config, use ","position":{"start":{"line":958,"column":1,"offset":30439},"end":{"line":958,"column":44,"offset":30482},"indent":[]}},{"type":"inlineCode","value":"aws configure --profile <profile_name>","position":{"start":{"line":958,"column":44,"offset":30482},"end":{"line":958,"column":84,"offset":30522},"indent":[]}},{"type":"text","value":" to configure a profile with the ID and Secret Access key.","position":{"start":{"line":958,"column":84,"offset":30522},"end":{"line":958,"column":142,"offset":30580},"indent":[]}}],"position":{"start":{"line":958,"column":1,"offset":30439},"end":{"line":958,"column":142,"offset":30580},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To run a CF command, you can use something like the following ","position":{"start":{"line":960,"column":1,"offset":30582},"end":{"line":960,"column":63,"offset":30644},"indent":[]}},{"type":"inlineCode","value":"aws cloudformation create-stack --stack-name example-cli-stack --template-body file://0-sample-template.yaml --parameters file://0-parameters.json --profile cf-course --region us-east-1","position":{"start":{"line":960,"column":63,"offset":30644},"end":{"line":960,"column":250,"offset":30831},"indent":[]}}],"position":{"start":{"line":960,"column":1,"offset":30582},"end":{"line":960,"column":250,"offset":30831},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use the ","position":{"start":{"line":962,"column":1,"offset":30833},"end":{"line":962,"column":16,"offset":30848},"indent":[]}},{"type":"inlineCode","value":"parameters.json","position":{"start":{"line":962,"column":16,"offset":30848},"end":{"line":962,"column":33,"offset":30865},"indent":[]}},{"type":"text","value":" file to set ParameterKey and ParameterValue for all the keys and values we are looking to share.","position":{"start":{"line":962,"column":33,"offset":30865},"end":{"line":962,"column":130,"offset":30962},"indent":[]}}],"position":{"start":{"line":962,"column":1,"offset":30833},"end":{"line":962,"column":130,"offset":30962},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After running the command, what you get back is the ","position":{"start":{"line":964,"column":1,"offset":30964},"end":{"line":964,"column":53,"offset":31016},"indent":[]}},{"type":"inlineCode","value":"StackId","position":{"start":{"line":964,"column":53,"offset":31016},"end":{"line":964,"column":62,"offset":31025},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":964,"column":62,"offset":31025},"end":{"line":964,"column":63,"offset":31026},"indent":[]}}],"position":{"start":{"line":964,"column":1,"offset":30964},"end":{"line":964,"column":63,"offset":31026},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using Troposphere (Python) to generate CloudFormation templates","position":{"start":{"line":966,"column":5,"offset":31032},"end":{"line":966,"column":68,"offset":31095},"indent":[]}}],"position":{"start":{"line":966,"column":1,"offset":31028},"end":{"line":966,"column":68,"offset":31095},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Troposhere allows you to leverage Python write the templates.","position":{"start":{"line":968,"column":1,"offset":31097},"end":{"line":968,"column":62,"offset":31158},"indent":[]}}],"position":{"start":{"line":968,"column":1,"offset":31097},"end":{"line":968,"column":62,"offset":31158},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This means you can start using types in your templates for safety.","position":{"start":{"line":970,"column":1,"offset":31160},"end":{"line":970,"column":67,"offset":31226},"indent":[]}}],"position":{"start":{"line":970,"column":1,"offset":31160},"end":{"line":970,"column":67,"offset":31226},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You will also have valid CF and can dynamically generate CloudFormation.","position":{"start":{"line":972,"column":1,"offset":31228},"end":{"line":972,"column":73,"offset":31300},"indent":[]}}],"position":{"start":{"line":972,"column":1,"offset":31228},"end":{"line":972,"column":73,"offset":31300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This means you can also have very complex conditions.","position":{"start":{"line":974,"column":1,"offset":31302},"end":{"line":974,"column":54,"offset":31355},"indent":[]}}],"position":{"start":{"line":974,"column":1,"offset":31302},"end":{"line":974,"column":54,"offset":31355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The disadvantage is that the Python needs to generate the JSON for it to be.","position":{"start":{"line":976,"column":1,"offset":31357},"end":{"line":976,"column":77,"offset":31433},"indent":[]}}],"position":{"start":{"line":976,"column":1,"offset":31357},"end":{"line":976,"column":77,"offset":31433},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"DeletionPolicy","position":{"start":{"line":978,"column":5,"offset":31439},"end":{"line":978,"column":19,"offset":31453},"indent":[]}}],"position":{"start":{"line":978,"column":1,"offset":31435},"end":{"line":978,"column":19,"offset":31453},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This policy can prevent resources from being deleted, or in some cases, back them up before the deletion. This will help prevent doing something really, really bad.","position":{"start":{"line":980,"column":1,"offset":31455},"end":{"line":980,"column":165,"offset":31619},"indent":[]}}],"position":{"start":{"line":980,"column":1,"offset":31455},"end":{"line":980,"column":165,"offset":31619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Deletion Policy can take up the following values:","position":{"start":{"line":982,"column":1,"offset":31621},"end":{"line":982,"column":50,"offset":31670},"indent":[]}}],"position":{"start":{"line":982,"column":1,"offset":31621},"end":{"line":982,"column":50,"offset":31670},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Delete: AWS CloudFormation will delete the resource and all its content if applicable during stack deletion (does not apply to S3)","position":{"start":{"line":984,"column":5,"offset":31676},"end":{"line":984,"column":135,"offset":31806},"indent":[]}}],"position":{"start":{"line":984,"column":5,"offset":31676},"end":{"line":984,"column":135,"offset":31806},"indent":[]}}],"position":{"start":{"line":984,"column":1,"offset":31672},"end":{"line":984,"column":135,"offset":31806},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Retain: AWS CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type.","position":{"start":{"line":985,"column":5,"offset":31811},"end":{"line":985,"column":178,"offset":31984},"indent":[]}}],"position":{"start":{"line":985,"column":5,"offset":31811},"end":{"line":985,"column":178,"offset":31984},"indent":[]}}],"position":{"start":{"line":985,"column":1,"offset":31807},"end":{"line":985,"column":178,"offset":31984},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Snapshot: For resources that support snapshots (AWS::EC2::Volume, AWS::ElasticCache::CacheCluster etc)","position":{"start":{"line":986,"column":5,"offset":31989},"end":{"line":986,"column":107,"offset":32091},"indent":[]}}],"position":{"start":{"line":986,"column":5,"offset":31989},"end":{"line":986,"column":107,"offset":32091},"indent":[]}}],"position":{"start":{"line":986,"column":1,"offset":31985},"end":{"line":986,"column":107,"offset":32091},"indent":[]}}],"position":{"start":{"line":984,"column":1,"offset":31672},"end":{"line":986,"column":107,"offset":32091},"indent":[1,1]}},{"type":"code","lang":"yaml","meta":null,"value":"Resources:\n  myS3Bucket:\n    Type: AWS::S3::Bucket\n    DeletionPolicy: Retain","position":{"start":{"line":988,"column":1,"offset":32093},"end":{"line":993,"column":4,"offset":32182},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the above example, it will create the S3 Bucket, you will see the bucket created.","position":{"start":{"line":995,"column":1,"offset":32184},"end":{"line":995,"column":85,"offset":32268},"indent":[]}}],"position":{"start":{"line":995,"column":1,"offset":32184},"end":{"line":995,"column":85,"offset":32268},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now if we delete that stack and the deletion policy is retain, you will still have that bucket there.","position":{"start":{"line":997,"column":1,"offset":32270},"end":{"line":997,"column":102,"offset":32371},"indent":[]}}],"position":{"start":{"line":997,"column":1,"offset":32270},"end":{"line":997,"column":102,"offset":32371},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Custom Resources with AWS Lambda","position":{"start":{"line":999,"column":5,"offset":32377},"end":{"line":999,"column":37,"offset":32409},"indent":[]}}],"position":{"start":{"line":999,"column":1,"offset":32373},"end":{"line":999,"column":37,"offset":32409},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Custom resources enable you to write custom provisioning logic in templates that AWS CloudFormation runs anytime you create, update (if you changed the custom resource) or delete stacks.","position":{"start":{"line":1001,"column":1,"offset":32411},"end":{"line":1001,"column":187,"offset":32597},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":32411},"end":{"line":1001,"column":187,"offset":32597},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, you might want to include resources that aren't available as AWS CloudFormation resource types.","position":{"start":{"line":1003,"column":1,"offset":32599},"end":{"line":1003,"column":109,"offset":32707},"indent":[]}}],"position":{"start":{"line":1003,"column":1,"offset":32599},"end":{"line":1003,"column":109,"offset":32707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Check online for a walkthrough of custom resources.","position":{"start":{"line":1005,"column":1,"offset":32709},"end":{"line":1005,"column":52,"offset":32760},"indent":[]}}],"position":{"start":{"line":1005,"column":1,"offset":32709},"end":{"line":1005,"column":52,"offset":32760},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Best practises to organize your CloudFormation templates","position":{"start":{"line":1007,"column":5,"offset":32766},"end":{"line":1007,"column":61,"offset":32822},"indent":[]}}],"position":{"start":{"line":1007,"column":1,"offset":32762},"end":{"line":1007,"column":61,"offset":32822},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"How to organise templates: you can have a layered architecture (horizontal layers) vs service oriented architecture (vertical layers).","position":{"start":{"line":1009,"column":5,"offset":32828},"end":{"line":1009,"column":139,"offset":32962},"indent":[]}}],"position":{"start":{"line":1009,"column":5,"offset":32828},"end":{"line":1009,"column":139,"offset":32962},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":32824},"end":{"line":1009,"column":139,"offset":32962},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use cross stack references eg. to reference a VPC or subnet.","position":{"start":{"line":1010,"column":5,"offset":32967},"end":{"line":1010,"column":65,"offset":33027},"indent":[]}}],"position":{"start":{"line":1010,"column":5,"offset":32967},"end":{"line":1010,"column":65,"offset":33027},"indent":[]}}],"position":{"start":{"line":1010,"column":1,"offset":32963},"end":{"line":1010,"column":65,"offset":33027},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure the template is environment agnostic to do dev / test / prod and across regions / accounts seemlessly.","position":{"start":{"line":1011,"column":5,"offset":33032},"end":{"line":1011,"column":117,"offset":33144},"indent":[]}}],"position":{"start":{"line":1011,"column":5,"offset":33032},"end":{"line":1011,"column":117,"offset":33144},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":33028},"end":{"line":1011,"column":117,"offset":33144},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Never embed credentials (use parameters with NoEcho or KMS).","position":{"start":{"line":1012,"column":5,"offset":33149},"end":{"line":1012,"column":65,"offset":33209},"indent":[]}}],"position":{"start":{"line":1012,"column":5,"offset":33149},"end":{"line":1012,"column":65,"offset":33209},"indent":[]}}],"position":{"start":{"line":1012,"column":1,"offset":33145},"end":{"line":1012,"column":65,"offset":33209},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use specific parameters types and constraints.","position":{"start":{"line":1013,"column":5,"offset":33214},"end":{"line":1013,"column":51,"offset":33260},"indent":[]}}],"position":{"start":{"line":1013,"column":5,"offset":33214},"end":{"line":1013,"column":51,"offset":33260},"indent":[]}}],"position":{"start":{"line":1013,"column":1,"offset":33210},"end":{"line":1013,"column":51,"offset":33260},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use CFN Init (& latest version of the helper scripts)","position":{"start":{"line":1014,"column":5,"offset":33265},"end":{"line":1014,"column":58,"offset":33318},"indent":[]}}],"position":{"start":{"line":1014,"column":5,"offset":33265},"end":{"line":1014,"column":58,"offset":33318},"indent":[]}}],"position":{"start":{"line":1014,"column":1,"offset":33261},"end":{"line":1014,"column":58,"offset":33318},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Validate templates","position":{"start":{"line":1015,"column":5,"offset":33323},"end":{"line":1015,"column":23,"offset":33341},"indent":[]}}],"position":{"start":{"line":1015,"column":5,"offset":33323},"end":{"line":1015,"column":23,"offset":33341},"indent":[]}}],"position":{"start":{"line":1015,"column":1,"offset":33319},"end":{"line":1015,"column":23,"offset":33341},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Don't do anything manual on the elements of the stack - that can cause a state mismatch.","position":{"start":{"line":1016,"column":5,"offset":33346},"end":{"line":1016,"column":93,"offset":33434},"indent":[]}}],"position":{"start":{"line":1016,"column":5,"offset":33346},"end":{"line":1016,"column":93,"offset":33434},"indent":[]}}],"position":{"start":{"line":1016,"column":1,"offset":33342},"end":{"line":1016,"column":93,"offset":33434},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Verify changes with changesets (and avoid disasters).","position":{"start":{"line":1017,"column":5,"offset":33439},"end":{"line":1017,"column":58,"offset":33492},"indent":[]}}],"position":{"start":{"line":1017,"column":5,"offset":33439},"end":{"line":1017,"column":58,"offset":33492},"indent":[]}}],"position":{"start":{"line":1017,"column":1,"offset":33435},"end":{"line":1017,"column":58,"offset":33492},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use stack policies to prevent critical components from being deleted after create (such as your most valuable RDS database).","position":{"start":{"line":1018,"column":5,"offset":33497},"end":{"line":1018,"column":129,"offset":33621},"indent":[]}}],"position":{"start":{"line":1018,"column":5,"offset":33497},"end":{"line":1018,"column":129,"offset":33621},"indent":[]}}],"position":{"start":{"line":1018,"column":1,"offset":33493},"end":{"line":1018,"column":129,"offset":33621},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":32824},"end":{"line":1018,"column":129,"offset":33621},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Cost estimate for templates","position":{"start":{"line":1020,"column":5,"offset":33627},"end":{"line":1020,"column":32,"offset":33654},"indent":[]}}],"position":{"start":{"line":1020,"column":1,"offset":33623},"end":{"line":1020,"column":32,"offset":33654},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can estimate the cost of a stack very easily.","position":{"start":{"line":1022,"column":1,"offset":33656},"end":{"line":1022,"column":50,"offset":33705},"indent":[]}}],"position":{"start":{"line":1022,"column":1,"offset":33656},"end":{"line":1022,"column":50,"offset":33705},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this, just upload the stack onto the AWS console, enter the params and click \"cost\".","position":{"start":{"line":1024,"column":1,"offset":33707},"end":{"line":1024,"column":89,"offset":33795},"indent":[]}}],"position":{"start":{"line":1024,"column":1,"offset":33707},"end":{"line":1024,"column":89,"offset":33795},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":1027,"column":1,"offset":33798},"end":{"line":1027,"column":31,"offset":33828},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1027,"column":31,"offset":33828}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cloudformation-master-class\"\n    }}>{`CloudFormation Master Class`}</h1>\n    {\n      /* TOC -->autoauto- [CloudFormation Master Class](#cloudformation-master-class)auto    - [What is CloudFormation](#what-is-cloudformation)auto    - [Benefits](#benefits)auto    - [CloudFormation vs Ansible / Terraform](#cloudformation-vs-ansible--terraform)auto    - [First template](#first-template)auto    - [YAML Intro](#yaml-intro)auto    - [Creating a S3 Bucket](#creating-a-s3-bucket)auto        - [Types of updates](#types-of-updates)auto        - [Properties](#properties)auto        - [Deleting the stack](#deleting-the-stack)auto    - [CloudFormation template options](#cloudformation-template-options)auto    - [CloudFormation Designer](#cloudformation-designer)auto    - [Building Blocks](#building-blocks)auto    - [Template helpers](#template-helpers)auto    - [CloudFormation Parameters](#cloudformation-parameters)auto        - [Overview](#overview)auto        - [Theory and hands on](#theory-and-hands-on)auto    - [How to reference a parameter](#how-to-reference-a-parameter)auto    - [Resources](#resources)auto        - [Reading the docs for an ES2 Instance](#reading-the-docs-for-an-es2-instance)auto        - [Optional Attributes for Resources](#optional-attributes-for-resources)auto        - [FAQ for resources](#faq-for-resources)auto    - [Mappings](#mappings)auto        - [Fn::FindInMap - Accessing Mapping Values](#fnfindinmap---accessing-mapping-values)auto        - [Mappings in practise](#mappings-in-practise)auto    - [Concept: Pseudo Parameters](#concept-pseudo-parameters)auto    - [CloudFormation Outputs](#cloudformation-outputs)auto        - [Outputs Hands-On](#outputs-hands-on)auto        - [Cross Stack Reference](#cross-stack-reference)auto    - [Conditions](#conditions)auto        - [How to define a condition?](#how-to-define-a-condition)auto    - [Conditional Hands On](#conditional-hands-on)auto    - [Fn::GetAtt](#fngetatt)auto    - [CF Metadata](#cf-metadata)auto        - [AWS::CloudFormation::Designer hands on](#awscloudformationdesigner-hands-on)auto        - [AWS::CloudFormation::Interface hands on](#awscloudformationinterface-hands-on)auto    - [CFN Init and EC2 User Data](#cfn-init-and-ec2-user-data)auto        - [EC2 User Data Overview](#ec2-user-data-overview)auto        - [CloudFormation Init](#cloudformation-init)auto        - [AWS::CloudFormation::Init](#awscloudformationinit)auto        - [Packages](#packages)auto        - [Groups and Users](#groups-and-users)auto        - [Sources](#sources)auto        - [Files](#files)auto        - [Fn::Sub](#fnsub)auto        - [Commands](#commands)auto        - [Services](#services)auto        - [CFN Init and Signal](#cfn-init-and-signal)auto        - [cfn-hup](#cfn-hup)auto        - [CFN Init Hands-On](#cfn-init-hands-on)auto    - [Advanced CF Concepts](#advanced-cf-concepts)auto        - [Using the AWS CLI](#using-the-aws-cli)auto        - [Using Troposphere (Python) to generate CloudFormation templates](#using-troposphere-python-to-generate-cloudformation-templates)auto        - [DeletionPolicy](#deletionpolicy)auto        - [Custom Resources with AWS Lambda](#custom-resources-with-aws-lambda)auto        - [Best practises to organize your CloudFormation templates](#best-practises-to-organize-your-cloudformation-templates)auto        - [Cost estimate for templates](#cost-estimate-for-templates)autoauto<!-- /TOC */\n    }\n    <h2 {...{\n      \"id\": \"what-is-cloudformation\"\n    }}>{`What is CloudFormation`}</h2>\n    <p>{`Having >50 services, CloudFormation was brought in to help develops scaffold out the requires AWS stack.`}</p>\n    <p>{`Eg. I want a security group, two EC2 machines with it, two elastic IPs, an S3 bucket + a load balancer in front.`}</p>\n    <p>{`CloudFormation will create all of this in the right order with the exact config.`}</p>\n    <h2 {...{\n      \"id\": \"benefits\"\n    }}>{`Benefits`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Infrastructure as code`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`No manual creation`}</li>\n          <li parentName=\"ul\">{`Can be version controlled`}</li>\n          <li parentName=\"ul\">{`Changes to infrastructure are reviewed through code`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Cost`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Each resource will be tagged so you can estimate the costs and figure out which costs what`}</li>\n          <li parentName=\"ul\">{`Great savings strategy`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Productivity`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Ability to destroy and re-create an infrastructure`}</li>\n          <li parentName=\"ul\">{`Automated generation of Diagram for templates`}</li>\n          <li parentName=\"ul\">{`All declarative`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Separation of concern`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Many different stacks for many different layers`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Don't re-invent the wheel`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Already so many templates`}</li>\n          <li parentName=\"ul\">{`Leverage the docs`}</li>\n        </ul></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"cloudformation-vs-ansible--terraform\"\n    }}>{`CloudFormation vs Ansible / Terraform`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`CF is native, and also contain the latest`}</li>\n      <li parentName=\"ul\">{`CF is state based`}</li>\n      <li parentName=\"ul\">{`The others are instruction based - difficult to orchestrate`}</li>\n      <li parentName=\"ul\">{`For new services, Ansible / Terraform can take a long time`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"first-template\"\n    }}>{`First template`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`---\nResources:\n  MyInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n`}</code></pre>\n    <p>{`The stack instance can be created, updated or destroyed.`}</p>\n    <p>{`You cannot edit the stack itself later, you need to just re-update the stack by uploading a new file.`}</p>\n    <p>{`The stack itself can clean up instances after itself too.`}</p>\n    <h2 {...{\n      \"id\": \"yaml-intro\"\n    }}>{`YAML Intro`}</h2>\n    <p>{`You can use YAML or JSON for writing it - but JSON is tough for it`}</p>\n    <p>{`Array support:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`product:\n    - test  : 1\n      quantity: 2\n    - test  : 2\n      quantity: 4\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"creating-a-s3-bucket\"\n    }}>{`Creating a S3 Bucket`}</h2>\n    <p>{`Googling for the type, you will get the in depth docs from AWS.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`---\nResources: # always the start\n    MyS3Bucket: # template name\n        Type: \"AWS::S3::Bucket\"\n        Properties:\n            AccessControl: PublicRead\n            BucketName: \"www.site.com\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"types-of-updates\"\n    }}>{`Types of updates`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Updates with no interruption`}</li>\n      <li parentName=\"ol\">{`Replacements are breaking and need to replace the resource`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h3>\n    <p>{`On the properties under the docs, you can see info about the properties.`}</p>\n    <h3 {...{\n      \"id\": \"deleting-the-stack\"\n    }}>{`Deleting the stack`}</h3>\n    <p>{`Just right click on the CloudFormation and delete the resources.`}</p>\n    <h2 {...{\n      \"id\": \"cloudformation-template-options\"\n    }}>{`CloudFormation template options`}</h2>\n    <p>{`You have a few template options:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Tags`}</li>\n      <li parentName=\"ol\">{`Permissions (IAM role)`}</li>\n      <li parentName=\"ol\">{`Notifications Options (SNS topic)`}</li>\n      <li parentName=\"ol\">{`Timeouts (minutes before calling failure)`}</li>\n      <li parentName=\"ol\">{`Rollback on Failure`}</li>\n      <li parentName=\"ol\">{`Stack Policy`}</li>\n    </ol>\n    <p>{`These (if you manually do it) all show up on the \"create stack\" part of CloudFormation.`}</p>\n    <p>{`The template review also gives you an opportunity to estimate cost.`}</p>\n    <h2 {...{\n      \"id\": \"cloudformation-designer\"\n    }}>{`CloudFormation Designer`}</h2>\n    <p>{`A visual aid to help build the CF Stack. Ensure the template is also well written.`}</p>\n    <p>{`You can drag and drop basically everything. Dropping it will give you options to selecting documentation etc.`}</p>\n    <p>{`It's great for dragging and dropping templates and giving information on that template as well.`}</p>\n    <h2 {...{\n      \"id\": \"building-blocks\"\n    }}>{`Building Blocks`}</h2>\n    <p>{`There are a number of building blocks for each template:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Resources: your AWS resources declared in the template`}</li>\n      <li parentName=\"ol\">{`Parameters: the dynamic inputs for your template`}</li>\n      <li parentName=\"ol\">{`Mappings: the static variables for your template`}</li>\n      <li parentName=\"ol\">{`Outputs: References to what has been created`}</li>\n      <li parentName=\"ol\">{`Conditionals: List of conditions to perform resource creation`}</li>\n      <li parentName=\"ol\">{`Metadata`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"template-helpers\"\n    }}>{`Template helpers`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`References`}</li>\n      <li parentName=\"ol\">{`Functions`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"cloudformation-parameters\"\n    }}>{`CloudFormation Parameters`}</h2>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`What are they? The way to provide inputs to your AWS CloudFormation template.`}</p>\n    <p>{`They're important to know about it:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`You want to reuse your templates across the company`}</li>\n      <li parentName=\"ol\">{`Some inputs can not be determined ahead of time`}</li>\n    </ol>\n    <p>{`The major benefit: you won't have to re-upload a template to change its content.`}</p>\n    <h3 {...{\n      \"id\": \"theory-and-hands-on\"\n    }}>{`Theory and hands on`}</h3>\n    <p>{`Parameters can be controlled by all these settings:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Type:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`String`}</li>\n      <li parentName=\"ul\">{`Number`}</li>\n      <li parentName=\"ul\">{`CommaDelimitedList`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`List<Type>`}</inlineCode></li>\n      <li parentName=\"ul\">{`AWS Parameter (to help catch invalid values - match against existing values in the AWS Account)`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Description`}</li>\n      <li parentName=\"ol\">{`Constraints`}</li>\n      <li parentName=\"ol\">{`ConstraintDescription (String)`}</li>\n      <li parentName=\"ol\">{`Min/MaxLength`}</li>\n      <li parentName=\"ol\">{`Min/MaxValue`}</li>\n      <li parentName=\"ol\">{`Defaults`}</li>\n      <li parentName=\"ol\">{`AllowedValues (array)`}</li>\n      <li parentName=\"ol\">{`AllowedPattern (regexp)`}</li>\n      <li parentName=\"ol\">{`NoEcho (Boolean)`}</li>\n    </ol>\n    <p>{`This can be found in the `}<inlineCode parentName=\"p\">{`0-parameters-hands-on.yaml`}</inlineCode>{`.`}</p>\n    <p>{`Again - check the docs.`}</p>\n    <p>{`To reference a parameter, you then go with `}<inlineCode parentName=\"p\">{`Key: !Ref Reference`}</inlineCode>{`.`}</p>\n    <p>{`If you have `}<inlineCode parentName=\"p\">{`!Select`}</inlineCode>{` for a CommaDelimitedList, you need to go `}<inlineCode parentName=\"p\">{`Key: !Select [ArrayNumber, !Ref Reference]`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"how-to-reference-a-parameter\"\n    }}>{`How to reference a parameter`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Using the Fn::Ref function.`}</li>\n      <li parentName=\"ul\">{`Shorthand in YAML is !Ref.`}</li>\n      <li parentName=\"ul\">{`Can reference block, not just parameter`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <p>{`Resources are the core of your CloudFormation template. They represent the different AWS Components that will be created and configured.`}</p>\n    <p>{`They are declared and can be references by eachother. AWS figures out creation, updates, deletes etc.`}</p>\n    <p>{`There are over 224 types of resources.`}</p>\n    <p>{`They are identified using the form `}<inlineCode parentName=\"p\">{`AWS::aws-product-name::data-type-name`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"reading-the-docs-for-an-es2-instance\"\n    }}>{`Reading the docs for an ES2 Instance`}</h3>\n    <p>{`If you look at the docs, if comes up with both JSON and YAML docs.`}</p>\n    <h3 {...{\n      \"id\": \"optional-attributes-for-resources\"\n    }}>{`Optional Attributes for Resources`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`DependsOn: very useful to draw a dependency between two resources. For example, only create an ECS cluster after creating an ASG (auto scaling group).`}</li>\n      <li parentName=\"ol\">{`DeletionPolicy: protect resource from being deleted even if cloudformation is deleted.`}</li>\n      <li parentName=\"ol\">{`CreationPolicy: more info on CFN`}</li>\n      <li parentName=\"ol\">{`Metadata: anything you want!`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"faq-for-resources\"\n    }}>{`FAQ for resources`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Can I create a dynamic a dynamic amount of resources? No you can perform code generation. The work around is the `}<inlineCode parentName=\"li\">{`troposphere`}</inlineCode>{` Python library.`}</li>\n      <li parentName=\"ol\">{`Is every AWS Service supported? Almost. Only a select few niches are not there.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"mappings\"\n    }}>{`Mappings`}</h2>\n    <p>{`What are mappings? Fixed ariables within your CF Template. Great for dev vs prod, regions, AMI types etc.`}</p>\n    <p>{`Every mapping has top, middle and bottom.`}</p>\n    <p>{`Great to use when you know in advance:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Region`}</li>\n      <li parentName=\"ul\">{`AZ`}</li>\n      <li parentName=\"ul\">{`AWSAccount`}</li>\n      <li parentName=\"ul\">{`Environment (dev vs prod)`}</li>\n    </ul>\n    <p>{`They allow safer control over the template. Use parameters when the values are `}<em parentName=\"p\">{`really`}</em>{` user specific.`}</p>\n    <h3 {...{\n      \"id\": \"fnfindinmap---accessing-mapping-values\"\n    }}>{`Fn::FindInMap - Accessing Mapping Values`}</h3>\n    <p>{`Use Fn::FindInMap to return a named value from a specific key.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`!FindInMap `}{`[ MapName, TopLevelKey, SecondLevelKey ]`}</li>\n    </ul>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWSTemplateFormatVersion: '2010-09-09'\nMappings:\n  RegionMap:\n    us-east-1:\n      '32': 'ami-6411e20d'\n      '64': 'ami-7a11e213'\nResources:\n  myEC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', 32]\n      InstanceType: m1.small\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"mappings-in-practise\"\n    }}>{`Mappings in practise`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Parameters:\n  EnvironmentName:\n    Description: Environment Name\n    Type: String\n    AllowedValues: [development, production]\n    ConstraintDescription: must be development or production\n\nMappings:\n  AWSRegionArch2AMI:\n    us-east-1:\n      HVM64: ami-6869aa05\n  EnvironmentToInstantType:\n    development:\n      instanceType: t2.micro\n    production:\n      instanceType: t2.small\n\nResources:\n  EC2Instance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType:\n        !FindInMap [\n          EnvironmentToInstanceType,\n          !Ref 'EnvironmentName',\n          instanceType,\n        ]\n      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', HVM64]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"concept-pseudo-parameters\"\n    }}>{`Concept: Pseudo Parameters`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`AWS offers us pseudo params in any CF template.`}</li>\n      <li parentName=\"ul\">{`These can be used at any time and are enabled by default.`}</li>\n    </ul>\n    <ol>\n      <li parentName=\"ol\">{`AWS::AccountId`}</li>\n      <li parentName=\"ol\">{`AWS::NotificationsARNs`}</li>\n      <li parentName=\"ol\">{`AWS::NoValue`}</li>\n      <li parentName=\"ol\">{`AWS::Region`}</li>\n      <li parentName=\"ol\">{`AWS::StackId`}</li>\n      <li parentName=\"ol\">{`AWS::StackName`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"cloudformation-outputs\"\n    }}>{`CloudFormation Outputs`}</h2>\n    <p>{`What are they? They are `}<em parentName=\"p\">{`optional`}</em>{` values that we can import into other stacks.`}</p>\n    <p>{`You can also view the outputs in the AWS Console or in using the AWS CLI.`}</p>\n    <p>{`They're very useful for example if you define a network CloudFormation, and output the variables such as VPC ID and your Subnet IDs.`}</p>\n    <p>{`It's the best way to perform some collaboration cross stack. Let the expert handle their part and you handle yours.`}</p>\n    <h3 {...{\n      \"id\": \"outputs-hands-on\"\n    }}>{`Outputs Hands-On`}</h3>\n    <p>{`Creating a SSH Security Group as part of one template. We can create an output that references that security group.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Outputs:\n  <Logical ID>:\n    Description: Information about the value\n    Value: Value to return\n    Export:\n      Name: Value to export\n`}</code></pre>\n    <p>{`In 0-create-ssh-security-group.yaml`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Resources:\n  # here we define a SSH security group that will be used in the entire company\n  MyCompanyWideSSHSecurityGroup:\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Enable SSH access via port 22\n      SecurityGroupIngress:\n        # we have a lot of rules because it's a perfect security group\n        # finance team network\n        - CidrIp: 10.0.48.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n          # marketing team network\n        - CidrIp: 10.0.112.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n          # application team support network\n        - CidrIp: 10.0.176.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n\nOutputs:\n  StackSSHSecurityGroup:\n    Description: The SSH Security Group for our Company\n    Value: !Ref MyCompanyWideSSHSecurityGroup\n    Export:\n      Name: SSHSecurityGroup\n`}</code></pre>\n    <p>{`It is important to note that for an `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` to be used anywhere, you need to define an `}<inlineCode parentName=\"p\">{`export`}</inlineCode>{` value.`}</p>\n    <h3 {...{\n      \"id\": \"cross-stack-reference\"\n    }}>{`Cross Stack Reference`}</h3>\n    <p>{`We use `}<inlineCode parentName=\"p\">{`Fn::ImportValue`}</inlineCode>{` in a simple block:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Resources:\n  MySecureInstance:\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\n    Type: AWS::EC2::Instance\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n      SecurityGroups:\n        # we reference the output here, using the Fn::ImportValue function\n        - !ImportValue SSHSecurityGroup\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"conditions\"\n    }}>{`Conditions`}</h2>\n    <p>{`Conditionals are used to control the creation of resources or outputs based on a condition.`}</p>\n    <p>{`Conditions can be whatever you want them to be, but common ones are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Environment (dev/test/prod)`}</li>\n      <li parentName=\"ul\">{`AWS Region`}</li>\n      <li parentName=\"ul\">{`Any parameter value`}</li>\n    </ul>\n    <p>{`Each condition can reference another condition, parameter value or mapping.`}</p>\n    <h3 {...{\n      \"id\": \"how-to-define-a-condition\"\n    }}>{`How to define a condition?`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Conditions:\n  [Logical ID]: [Intrinsic function]\n`}</code></pre>\n    <p>{`Logical ID is for you to choose. It's how you name the condition.`}</p>\n    <p>{`The intrinsic function (logical) can be any of the following: - Fn::And - Fn::Equals - Fn::If - Fn::Not - Fn::Or`}</p>\n    <h2 {...{\n      \"id\": \"conditional-hands-on\"\n    }}>{`Conditional Hands On`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Let's analyze a CF template that optionally creates a volume and mount point only if \"prod\" is specified as a parameter.`}</li>\n      <li parentName=\"ul\">{`It utilizes params, mappings, conditionals, outputs`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWSTemplateFormatVersion: '2010-09-09'\nMappings:\n  RegionMap:\n    us-east-1:\n      AMI: 'ami-a4c7edb2'\n      TestAz: 'us-east-1a'\n    us-west-1:\n      AMI: 'ami-6df1e514'\n      TestAz: 'us-west-1a'\n    us-west-2:\n      AMI: 'ami-327f5352'\n      TestAz: 'us-west-2a'\n    eu-west-1:\n      AMI: 'ami-d7b9a2b1'\n      TestAz: 'eu-west-1a'\n    sa-east-1:\n      AMI: 'ami-87dab1eb'\n      TestAz: 'sa-east-1a'\n    ap-southeast-1:\n      AMI: 'ami-77af2014'\n      TestAz: 'ap-southeast-1a'\n    ap-southeast-2:\n      AMI: 'ami-10918173'\n      TestAz: 'ap-southeast-2a'\n    ap-northeast-1:\n      AMI: 'ami-e21cc38c'\n      TestAz: 'ap-northeast-1a'\nParameters:\n  EnvType:\n    Description: Environment type.\n    Default: test\n    Type: String\n    AllowedValues:\n      - prod\n      - test\n    ConstraintDescription: must specify prod or test.\n\nConditions:\n  CreateProdResources: !Equals [!Ref EnvType, prod]\n\nResources:\n  EC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]\n      InstanceType: t2.micro\n      AvailabilityZone: !FindInMap [RegionMap, !Ref 'AWS::Region', TestAz]\n\n  MountPoint:\n    Type: 'AWS::EC2::VolumeAttachment'\n    Condition: CreateProdResources\n    Properties:\n      InstanceId: !Ref EC2Instance\n      VolumeId: !Ref NewVolume\n      Device: /dev/sdh\n\n  NewVolume:\n    Type: 'AWS::EC2::Volume'\n    Condition: CreateProdResources\n    Properties:\n      Size: 100\n      AvailabilityZone: !GetAtt EC2Instance.AvailabilityZone\n\nOutputs:\n  VolumeId:\n    Condition: CreateProdResources\n    Value: !Ref NewVolume\n`}</code></pre>\n    <p>{`Note that `}<inlineCode parentName=\"p\">{`conditions`}</inlineCode>{` can not be applied to `}<inlineCode parentName=\"p\">{`parameters`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"fngetatt\"\n    }}>{`Fn::GetAtt`}</h2>\n    <p>{`Get an attribute attached to any resource that exists. To know the attributes, check the docs.`}</p>\n    <h2 {...{\n      \"id\": \"cf-metadata\"\n    }}>{`CF Metadata`}</h2>\n    <p>{`This is any optional metadata section to include arbitrary YAML that provide details about the template or resource.`}</p>\n    <p>{`There are 3 metadata keys that have special meaning:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`AWS::CloudFormation::Designer`}</li>\n    </ol>\n    <p>{`Describes how the resources are laid out in your template. This is automatically added by the AWS Designer. This helps the UI (x and y)`}</p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`AWS::CloudFormation::Interface`}</li>\n    </ol>\n    <p>{`Define grouping and ordering of input parameters when they are displayed in the AWS Console.`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`AWS::CloudFormation::Init`}</li>\n    </ol>\n    <p>{`Define configuration tasks for cfn-init. It's the most powerful usage of the metadata. This is very important and a lot to learn about it below.`}</p>\n    <h3 {...{\n      \"id\": \"awscloudformationdesigner-hands-on\"\n    }}>{`AWS::CloudFormation::Designer hands on`}</h3>\n    <p>{`This is automatically added for you but worth deleting for online sharing and usage. When dragging and dropping each resource you will see a huge set of metadata left there. The metadata can also be added to each resource.`}</p>\n    <h3 {...{\n      \"id\": \"awscloudformationinterface-hands-on\"\n    }}>{`AWS::CloudFormation::Interface hands on`}</h3>\n    <p>{`Define grouping and ordering of input parameteres when they are displayed in the AWS Console. This is meant when users must input params manually.`}</p>\n    <p>{`You provide them with grouping, or sorting, that allow them to input parameters efficiently.`}</p>\n    <p>{`Example: Group all the EC2 related params together.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`---\nParameters:\n  KeyName:\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\n    Type: AWS::EC2::KeyPair::KeyName\n  InstanceType:\n    Description: EC2 instance type.\n    Type: String\n    Default: t2.micro\n    AllowedValues:\n      - t2.micro\n      - t2.small\n      - t2.medium\n      - m3.medium\n      - m3.large\n      - m3.xlarge\n      - m3.2xlarge\n  SSHLocation:\n    Description: The IP address range that can SSH to the EC2 instance.\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: \"(\\\\\\\\d{1,3})\\\\\\\\.(\\\\\\\\d{1,3})\\\\\\\\.(\\\\\\\\d{1,3})\\\\\\\\.(\\\\\\\\d{1,3})/(\\\\\\\\d{1,2})\"\n    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.\n  VPCID:\n    Description: VPC to operate in\n    Type: AWS::EC2::VPC::Id\n  SubnetID:\n    Description: Subnet ID\n    Type: AWS::EC2::Subnet::Id\n  SecurityGroupID:\n    Description: Security Group\n    Type: AWS::EC2::SecurityGroup::Id\n\nResources:\n  MyEC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: !Ref InstanceType\n      SecurityGroups:\n        - !Ref SecurityGroupID\n      SubnetID: !Ref SubnetID\n\nMetadata:\n  # This is the important part\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      - Label:\n          default: 'Network Configuration'\n        Parameters:\n          - VPCID\n          - SubnetID\n          - SecurityGroupID\n      - Label:\n          default: 'Amazon EC2 Configuration'\n        Parameters:\n          - InstanceType\n          - KeyName\n    ParameterLabels:\n      VPCID:\n        default: 'Which VPC should this be deployed to?'\n`}</code></pre>\n    <p>{`If you deploy a new stack using the above, you will see that the `}<inlineCode parentName=\"p\">{`Parameters`}</inlineCode>{` block will then drop you to questions about what configuration you are looking for.`}</p>\n    <h2 {...{\n      \"id\": \"cfn-init-and-ec2-user-data\"\n    }}>{`CFN Init and EC2 User Data`}</h2>\n    <h3 {...{\n      \"id\": \"ec2-user-data-overview\"\n    }}>{`EC2 User Data Overview`}</h3>\n    <p>{`Many CF templates will be about provisioning computer resources in your AWS Cloud eg. EC2 instances, autoscaling.`}</p>\n    <p>{`Usually, you want to the instances to be self configured so that they can perform the job they are supposed to perform.`}</p>\n    <p>{`You can fully automate the EC2 fleet with CF init.`}</p>\n    <p>{`Example: an EC2 instance that has php and mysql installed on it.`}</p>\n    <p>{`We want a user-data script to get this up and going. From the EC2 management console, you can basically use the advanced section to add a `}<inlineCode parentName=\"p\">{`/bin/bash`}</inlineCode>{` section. This is already started to become more tedious than what we want.`}</p>\n    <p>{`How can we do this in CloufFormation?`}</p>\n    <p>{`The following script can use `}<inlineCode parentName=\"p\">{`UserData`}</inlineCode>{` to add the script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Parameters:\n  KeyName:\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\n    Type: AWS::EC2::KeyPair::KeyName\n  SSHLocation:\n    Description: The IP address range that can be used to SSH to the EC2 instances\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: \"(\\\\\\\\d{1,3})\\\\\\\\.(\\\\\\\\d{1,3})\\\\\\\\.(\\\\\\\\d{1,3})\\\\\\\\.(\\\\\\\\d{1,3})/(\\\\\\\\d{1,2})\"\n    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.\n\nResources:\n  WebServer:\n    Type: AWS::EC2::Instance\n    Properties:\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n      KeyName: !Ref KeyName\n      SecurityGroups:\n        - !Ref WebServerSecurityGroup\n      UserData:\n        Fn::Base64: | # everything after will be kept as is\n          #!/bin/bash\n          yum update -y\n          yum install -y httpd24 php56 mysql55-server php56-mysqlnd\n          service httpd start\n          chkconfig httpd on\n          groupadd www\n          usermod -a -G www ec2-user\n          chown -R root:www /var/www\n          chmod 2775 /var/www\n          find /var/www -type d -exec chmod 2775 {} +\n          find /var/www -type f -exec chmod 0664 {} +\n          echo \"<?php phpinfo(); ?>\" > /var/www/html/phpinfo.php\n\n  WebServerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: 'Enable HTTP access via port 80 + SSH access'\n      SecurityGroupIngress:\n        - CidrIp: 0.0.0.0/0\n          FromPort: '80'\n          IpProtocol: tcp\n          ToPort: '80'\n        - CidrIp: !Ref SSHLocation\n          FromPort: '22'\n          IpProtocol: tcp\n          ToPort: '22'\n`}</code></pre>\n    <p>{`Now that we see the power of this, let's have a look at CF Init.`}</p>\n    <h3 {...{\n      \"id\": \"cloudformation-init\"\n    }}>{`CloudFormation Init`}</h3>\n    <p>{`What is the problem with EC2 user data? Well, what happens if we have a large configuration? What if we want to evolve the state without terminating it? How do we make it readable? How do we know or signal that our EC2 user-data script actually completed successfully?`}</p>\n    <p>{`Amazon creating CF helper scripts.`}</p>\n    <p>{`There are 4 python scripts that come directly with Amazon Linux AMI or can be installed using `}<inlineCode parentName=\"p\">{`yum`}</inlineCode>{` on non-Amazon Linux. They are:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`cfn-init: Used to retrieve and interprety the resouce metadata, installing packages, creating files and starting services.`}</li>\n      <li parentName=\"ol\">{`cfn-signal: A simple wrapper to signal an AWS CloudFormation CreationPolicy or WaitCondition, enabling you to sync other resources in the stack with the application being ready. This can give us the yes/no if succssful.`}</li>\n      <li parentName=\"ol\">{`cfn-get-metadata: A wrapper script making it easy to retrieve either all metadata defined for a resource or path to a specific key or subtree of the resource metadata.`}</li>\n      <li parentName=\"ol\">{`cfn-hup: A daemon to check for updates to metadata and execute custom hooks when the changes are detected.`}</li>\n    </ol>\n    <p>{`The usual flow? cfn-init, then cfn-signal, then optionally cfn-hup.`}</p>\n    <h3 {...{\n      \"id\": \"awscloudformationinit\"\n    }}>{`AWS::CloudFormation::Init`}</h3>\n    <p>{`A config contains the following and is executed in that order:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Packages: install a list of packages on the Linux OS (mysql, wordpress, etc)`}</li>\n      <li parentName=\"ol\">{`Groups: define user groups`}</li>\n      <li parentName=\"ol\">{`Users: define users, and which group they belong to`}</li>\n      <li parentName=\"ol\">{`Sources: download an archive file and place it on the ec2 instance (tar, zip, bz2)`}</li>\n      <li parentName=\"ol\">{`Files: create files on the ec2 instance, using inline or can be pulled from a URL`}</li>\n      <li parentName=\"ol\">{`Commands: run a series of commands`}</li>\n      <li parentName=\"ol\">{`Services: launch a list of sysvinit`}</li>\n    </ol>\n    <p>{`You can also have multiple configs and you can run them sequentially etc.`}</p>\n    <h3 {...{\n      \"id\": \"packages\"\n    }}>{`Packages`}</h3>\n    <p>{`You can install packages from the following repositories:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`apt`}</li>\n      <li parentName=\"ul\">{`msi`}</li>\n      <li parentName=\"ul\">{`python`}</li>\n      <li parentName=\"ul\">{`rpm`}</li>\n      <li parentName=\"ul\">{`rubygems`}</li>\n      <li parentName=\"ul\">{`yum`}</li>\n    </ul>\n    <p>{`Packages are processed in the following order: rpm, yum/apt, and then rubygems and python.`}</p>\n    <p>{`You can also specify a version if you want.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWS::CloudFormation::Init:\n  config:\n    packages:\n      rpm:\n        epel: 'http://download....'\n      yum:\n        httpd: [] # means latest\n        php: []\n        wordpress: []\n      rubygems:\n        chef:\n          - '0.10.2' # get this version\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"groups-and-users\"\n    }}>{`Groups and Users`}</h3>\n    <p>{`If you want to have multiple users and groups (with optional gid) in your ec2 instance, you can add groups and users to CF and metadata.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWS::CloudFormation::Init:\n  config:\n    groups:\n      groupeOne: {}\n      groupTwo:\n        gid: '45' #gid = group ID\n    users:\n      myUser:\n        groups:\n          - 'groupOne'\n          - 'groupTwo'\n        uid: '50'\n        homeDir: '/tmp'\n`}</code></pre>\n    <p>{`In the larger example...`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWS::CloudFormation::Init:\n  config:\n    groups:\n      apache: {} # assign any group ID\n    users:\n      'apache':\n        groups:\n          - 'apache' # user apache belongs to apache\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sources\"\n    }}>{`Sources`}</h3>\n    <p>{`These are conveninence for a compressed archieve.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    sources:\n      '/home/ec2-user/aws-cli': 'https://github.com/aws/aws-cli/tarball/master'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"files\"\n    }}>{`Files`}</h3>\n    <p>{`Files can be the most used section. Almost all the full power. It can be a specific URL or written inline for what you are doing.`}</p>\n    <p>{`Base example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    files:\n      /tmp/setup.mysql:\n        content: !Sub |\n          CREATE DATABASE \\${DBName};\n          CREATE USER '\\${DBUsername}'@'localhost' IDENTIFIED BY '\\${DBPassword}';\n          GRANT ALL ON \\${DBName}.* TO '\\${DBUsername}'@'localhost';\n          FLUSH PRIVILEDGES;\n        mode: '000644'\n        owner: 'root'\n        group: 'root'\n`}</code></pre>\n    <p>{`Full example:`}</p>\n    <p>{`Note: !Sub is a function used for making substitution. ie where you see `}<inlineCode parentName=\"p\">{`\\${AWS::StackName}`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    files:\n      '/tmp/cwlogs/apacheaccess.conf':\n        content: !Sub |\n          [general]\n          state_file= /var/awslogs/agent-state\n          [/var/log/httpd/access_log]\n          file = /var/log/httpd/access_log\n          log_group_name = \\${AWS::StackName}\n          log_stream_name = {instance_id}/apache.log\n          datetime_format = %d/%b/%Y:%H:%M:%S\n        mode: '000400'\n        owner: apache\n        group: apache\n      '/var/www/html/index.php':\n        content: !Sub |\n          <?php\n          echo '<h1>AWS CloudFormation sample PHP application for \\${AWS::StackName}</h1>';\n          ?>\n        mode: '000644'\n        owner: apache\n        group: apache\n      '/etc/cfn/cfn-hup.conf':\n        content: !Sub |\n          [main]\n          stack=\\${AWS::StackId}\n          region=\\${AWS::Region}\n        mode: '000400'\n        owner: 'root'\n        group: 'root'\n      '/etc/cfn/hooks.d/cfn-auto-reloader.conf':\n        content: !Sub |\n          [cfn-auto-reloader-hook]\n          triggers=post.update\n          path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\n          action=/opt/aws/bin/cfn-init -v --stack \\${AWS::StackName} --resource WebServerHost --region \\${AWS::Region}\n        mode: '000400'\n        owner: 'root'\n        group: 'root'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"fnsub\"\n    }}>{`Fn::Sub`}</h3>\n    <p>{`(Or as !Sub) is used to substitute variables from a text. It's a very handy function that will allow you to fully customize your templates.`}</p>\n    <p>{`For example, you can combine !Sub with References or AWS Pseudo variables.`}</p>\n    <p>{`Must be in the form `}<inlineCode parentName=\"p\">{`\\${VarName}`}</inlineCode>{`.`}</p>\n    <p>{`Forms:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# You can do this\n!Sub\n  - String\n  - { Var1Name: Var1Value, Var2Name: Var2Value }\n\n# or (more complicated and rarely seen)\n!Sub String\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"commands\"\n    }}>{`Commands`}</h3>\n    <p>{`You can run commands one at a time in the `}<inlineCode parentName=\"p\">{`alphabetical order`}</inlineCode>{`.`}</p>\n    <p>{`You can set a directory from which that command is run, environment variables etc.`}</p>\n    <p>{`You can also provide a test to control whether the command is executed or not.`}</p>\n    <p>{`This should be a last resort. You can execute any of the scripts from the above files in this section.`}</p>\n    <p>{`Example: call the echo command only if the file doesn't exist`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`commands:\n  test:\n    command: 'echo \"$MAGIC\" > test.txt'\n    env:\n      MAGIC: 'I come from the environment!'\n    cwd: '~'\n    test: 'test ! -e ~/test.txt' # check file exists\n    ignoreErrors: 'false' # fail if is doesn't work\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"services\"\n    }}>{`Services`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`AWS::CloudFormation::Init:\n  config:\n    services:\n      sysvinit:\n        httpd:\n          enabled: 'true'\n          ensureRunning: 'true'\n        sendmail:\n          enabled: 'false'\n          ensureRunning: 'false'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"cfn-init-and-signal\"\n    }}>{`CFN Init and Signal`}</h3>\n    <p>{`First, we use `}<inlineCode parentName=\"p\">{`cfn-init`}</inlineCode>{` to launch the config.`}</p>\n    <p>{`Then we use `}<inlineCode parentName=\"p\">{`cfn-signal`}</inlineCode>{` to tell when the config is complete, which will let CF know that the resource creation has been successful.`}</p>\n    <p>{`This has to be used in conjuction with a `}<inlineCode parentName=\"p\">{`CreationPolicy`}</inlineCode>{`.`}</p>\n    <p>{`This example means waiting a max of 5 minutes for the instance to come online and be self configured. If we don't hear back by `}<inlineCode parentName=\"p\">{`cfn-signal`}</inlineCode>{` by the, CF will fail and rollback.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`CreationPolicy:\n  ResourceSignal:\n    Timeout: PT5M\n`}</code></pre>\n    <p>{`This is useful in case of a bad update.`}</p>\n    <h3 {...{\n      \"id\": \"cfn-hup\"\n    }}>{`cfn-hup`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Cfn-hup can be used to tell your EC2 instance to look for Metadata changes every 15 minutes and apply the metadata configuration again.`}</li>\n      <li parentName=\"ul\">{`It's very powerful but you really need to try it out to understand how it works.`}</li>\n    </ul>\n    <p>{`Example from the \"files\" declation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`'/etc/cfn/cfn-hup.conf':\n  content: !Sub |\n    [main]\n    stack=\\${AWS::StackId}\n    region=\\${AWS::Region}\n  mode: '000400'\n  owner: 'root'\n  group: 'root'\n'/etc/cfn/hooks.d/cfn-auto-reloader.conf':\n  content: !Sub |\n    [cfn-auto-reloader-hook]\n    triggers=post.update\n    path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\n    action=/opt/aws/bin/cfn-init -v --stack \\${AWS::StackName} --resource WebServerHost --region \\${AWS::Region}\n  mode: '000400'\n  owner: 'root'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"cfn-init-hands-on\"\n    }}>{`CFN Init Hands-On`}</h3>\n    <p>{`After loading the CFN Init yaml file into CF, it will go through a series of different events.`}</p>\n    <p>{`You can under \"status reason\" if there is a success message sent back.`}</p>\n    <p>{`You need to practise your !Init skilles. It will be extremely handy for creating EC2 Instances or AutoScaling groups.`}</p>\n    <p>{`Remember logs for ec2-user data are in `}<inlineCode parentName=\"p\">{`/var/log/cloud-init-output.log`}</inlineCode>{` and logs for cfn-init are in `}<inlineCode parentName=\"p\">{`/var/log/cfn-init.log`}</inlineCode>{`, which is really helpful if commands don't complete like you want them to.`}</p>\n    <h2 {...{\n      \"id\": \"advanced-cf-concepts\"\n    }}>{`Advanced CF Concepts`}</h2>\n    <p>{`Review of current standing:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You can check AWS labs templates from `}<inlineCode parentName=\"li\">{`https://github/com/awslabs/aws-cloudformation-templates`}</inlineCode>{` to see what you can understand/see good practise.`}</li>\n    </ul>\n    <p>{`The example with WordPress is what is shown in the course.`}</p>\n    <h3 {...{\n      \"id\": \"using-the-aws-cli\"\n    }}>{`Using the AWS CLI`}</h3>\n    <p>{`We can use the AWS CLI to create, update or delete CF templates.`}</p>\n    <p>{`Super conventient for when you start automating your deployments.`}</p>\n    <p>{`Once you've downloaded the AWS config, use `}<inlineCode parentName=\"p\">{`aws configure --profile <profile_name>`}</inlineCode>{` to configure a profile with the ID and Secret Access key.`}</p>\n    <p>{`To run a CF command, you can use something like the following `}<inlineCode parentName=\"p\">{`aws cloudformation create-stack --stack-name example-cli-stack --template-body file://0-sample-template.yaml --parameters file://0-parameters.json --profile cf-course --region us-east-1`}</inlineCode></p>\n    <p>{`We can use the `}<inlineCode parentName=\"p\">{`parameters.json`}</inlineCode>{` file to set ParameterKey and ParameterValue for all the keys and values we are looking to share.`}</p>\n    <p>{`After running the command, what you get back is the `}<inlineCode parentName=\"p\">{`StackId`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"using-troposphere-python-to-generate-cloudformation-templates\"\n    }}>{`Using Troposphere (Python) to generate CloudFormation templates`}</h3>\n    <p>{`Troposhere allows you to leverage Python write the templates.`}</p>\n    <p>{`This means you can start using types in your templates for safety.`}</p>\n    <p>{`You will also have valid CF and can dynamically generate CloudFormation.`}</p>\n    <p>{`This means you can also have very complex conditions.`}</p>\n    <p>{`The disadvantage is that the Python needs to generate the JSON for it to be.`}</p>\n    <h3 {...{\n      \"id\": \"deletionpolicy\"\n    }}>{`DeletionPolicy`}</h3>\n    <p>{`This policy can prevent resources from being deleted, or in some cases, back them up before the deletion. This will help prevent doing something really, really bad.`}</p>\n    <p>{`Deletion Policy can take up the following values:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Delete: AWS CloudFormation will delete the resource and all its content if applicable during stack deletion (does not apply to S3)`}</li>\n      <li parentName=\"ol\">{`Retain: AWS CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type.`}</li>\n      <li parentName=\"ol\">{`Snapshot: For resources that support snapshots (AWS::EC2::Volume, AWS::ElasticCache::CacheCluster etc)`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Resources:\n  myS3Bucket:\n    Type: AWS::S3::Bucket\n    DeletionPolicy: Retain\n`}</code></pre>\n    <p>{`In the above example, it will create the S3 Bucket, you will see the bucket created.`}</p>\n    <p>{`Now if we delete that stack and the deletion policy is retain, you will still have that bucket there.`}</p>\n    <h3 {...{\n      \"id\": \"custom-resources-with-aws-lambda\"\n    }}>{`Custom Resources with AWS Lambda`}</h3>\n    <p>{`Custom resources enable you to write custom provisioning logic in templates that AWS CloudFormation runs anytime you create, update (if you changed the custom resource) or delete stacks.`}</p>\n    <p>{`For example, you might want to include resources that aren't available as AWS CloudFormation resource types.`}</p>\n    <p>{`Check online for a walkthrough of custom resources.`}</p>\n    <h3 {...{\n      \"id\": \"best-practises-to-organize-your-cloudformation-templates\"\n    }}>{`Best practises to organize your CloudFormation templates`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`How to organise templates: you can have a layered architecture (horizontal layers) vs service oriented architecture (vertical layers).`}</li>\n      <li parentName=\"ol\">{`Use cross stack references eg. to reference a VPC or subnet.`}</li>\n      <li parentName=\"ol\">{`Make sure the template is environment agnostic to do dev / test / prod and across regions / accounts seemlessly.`}</li>\n      <li parentName=\"ol\">{`Never embed credentials (use parameters with NoEcho or KMS).`}</li>\n      <li parentName=\"ol\">{`Use specific parameters types and constraints.`}</li>\n      <li parentName=\"ol\">{`Use CFN Init (& latest version of the helper scripts)`}</li>\n      <li parentName=\"ol\">{`Validate templates`}</li>\n      <li parentName=\"ol\">{`Don't do anything manual on the elements of the stack - that can cause a state mismatch.`}</li>\n      <li parentName=\"ol\">{`Verify changes with changesets (and avoid disasters).`}</li>\n      <li parentName=\"ol\">{`Use stack policies to prevent critical components from being deleted after create (such as your most valuable RDS database).`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"cost-estimate-for-templates\"\n    }}>{`Cost estimate for templates`}</h3>\n    <p>{`You can estimate the cost of a stack very easily.`}</p>\n    <p>{`For this, just upload the stack onto the AWS console, enter the params and click \"cost\".`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}