{"expireTime":9007200849425541000,"key":"gatsby-plugin-mdx-entire-payload-6d41c32457f4548ef77cad89a6bae26e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Installing Redis with Helm","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":29,"offset":195},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":29,"offset":195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure that you have configured Helm first and applied the appropriate RBAC (see Helm Intro for more).","position":{"start":{"line":10,"column":1,"offset":197},"end":{"line":10,"column":103,"offset":299},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":197},"end":{"line":10,"column":103,"offset":299},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installing","position":{"start":{"line":12,"column":4,"offset":304},"end":{"line":12,"column":14,"offset":314},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":301},"end":{"line":12,"column":14,"offset":314},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"helm install --name redisha stable/redis-ha","position":{"start":{"line":14,"column":1,"offset":316},"end":{"line":16,"column":4,"offset":372},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"What you should get back should be similar to the following:","position":{"start":{"line":18,"column":1,"offset":374},"end":{"line":18,"column":61,"offset":434},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":374},"end":{"line":18,"column":61,"offset":434},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"NAME:   redisha\nLAST DEPLOYED: Thu Jan 24 18:17:31 2019\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/Pod(related)\nNAME                       READY  STATUS   RESTARTS  AGE\nredisha-redis-ha-server-0  0/2    Pending  0         0s\n\n==> v1/ConfigMap\nNAME                        DATA  AGE\nredisha-redis-ha-configmap  3     0s\nredisha-redis-ha-probes     2     0s\n\n==> v1/Service\nNAME                         TYPE       CLUSTER-IP      EXTERNAL-IP  PORT(S)             AGE\nredisha-redis-ha-announce-0  ClusterIP  10.100.24.94    <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-1  ClusterIP  10.100.142.150  <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-2  ClusterIP  10.100.27.202   <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha             ClusterIP  None            <none>       6379/TCP,26379/TCP  0s\n\n==> v1/StatefulSet\nNAME                     DESIRED  CURRENT  AGE\nredisha-redis-ha-server  3        1        0s\n\n\nNOTES:\nRedis can be accessed via port 6379 and Sentinel can be accessed via port 26379 on the following DNS name from within your cluster:\nredisha-redis-ha.default.svc.cluster.local\n\nTo connect to your Redis server:\n1. Run a Redis pod that you can use as a client:\n\n   kubectl exec -it redisha-redis-ha-server-0 sh -n default\n\n2. Connect using the Redis CLI:\n\n  redis-cli -h redisha-redis-ha.default.svc.cluster.local","position":{"start":{"line":20,"column":1,"offset":436},"end":{"line":60,"column":4,"offset":1825},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure to delete by using ","position":{"start":{"line":62,"column":1,"offset":1827},"end":{"line":62,"column":27,"offset":1853},"indent":[]}},{"type":"inlineCode","value":"helm delete <NAME>","position":{"start":{"line":62,"column":27,"offset":1853},"end":{"line":62,"column":47,"offset":1873},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":62,"column":47,"offset":1873},"end":{"line":62,"column":48,"offset":1874},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1827},"end":{"line":62,"column":48,"offset":1874},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":65,"column":1,"offset":1877},"end":{"line":65,"column":31,"offset":1907},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":31,"offset":1907}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"installing-redis-with-helm\"\n    }}>{`Installing Redis with Helm`}</h1>\n    <p>{`Ensure that you have configured Helm first and applied the appropriate RBAC (see Helm Intro for more).`}</p>\n    <h2 {...{\n      \"id\": \"installing\"\n    }}>{`Installing`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`helm install --name redisha stable/redis-ha\n`}</code></pre>\n    <p>{`What you should get back should be similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`NAME:   redisha\nLAST DEPLOYED: Thu Jan 24 18:17:31 2019\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/Pod(related)\nNAME                       READY  STATUS   RESTARTS  AGE\nredisha-redis-ha-server-0  0/2    Pending  0         0s\n\n==> v1/ConfigMap\nNAME                        DATA  AGE\nredisha-redis-ha-configmap  3     0s\nredisha-redis-ha-probes     2     0s\n\n==> v1/Service\nNAME                         TYPE       CLUSTER-IP      EXTERNAL-IP  PORT(S)             AGE\nredisha-redis-ha-announce-0  ClusterIP  10.100.24.94    <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-1  ClusterIP  10.100.142.150  <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-2  ClusterIP  10.100.27.202   <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha             ClusterIP  None            <none>       6379/TCP,26379/TCP  0s\n\n==> v1/StatefulSet\nNAME                     DESIRED  CURRENT  AGE\nredisha-redis-ha-server  3        1        0s\n\n\nNOTES:\nRedis can be accessed via port 6379 and Sentinel can be accessed via port 26379 on the following DNS name from within your cluster:\nredisha-redis-ha.default.svc.cluster.local\n\nTo connect to your Redis server:\n1. Run a Redis pod that you can use as a client:\n\n   kubectl exec -it redisha-redis-ha-server-0 sh -n default\n\n2. Connect using the Redis CLI:\n\n  redis-cli -h redisha-redis-ha.default.svc.cluster.local\n`}</code></pre>\n    <p>{`Ensure to delete by using `}<inlineCode parentName=\"p\">{`helm delete <NAME>`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}