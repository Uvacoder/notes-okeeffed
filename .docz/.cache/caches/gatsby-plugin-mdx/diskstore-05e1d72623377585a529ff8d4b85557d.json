{"expireTime":9007200848610916000,"key":"gatsby-plugin-mdx-entire-payload-8ff9226dc13c9380e2c80a3ebbe3b9b7-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Elixir Maps & Structs","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":24,"offset":190},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":24,"offset":190},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":10,"column":4,"offset":195},"end":{"line":10,"column":9,"offset":200},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":192},"end":{"line":10,"column":9,"offset":200},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Maps","position":{"start":{"line":12,"column":5,"offset":206},"end":{"line":12,"column":9,"offset":210},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":202},"end":{"line":12,"column":9,"offset":210},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"iex> map = %{a: 1, b: 2}\n%{a: 1, b: 2}\niex> map[:a]\n1\niex> %{map | a: 3}\n%{a: 3, b: 2}","position":{"start":{"line":14,"column":1,"offset":212},"end":{"line":21,"column":4,"offset":311},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Structs","position":{"start":{"line":23,"column":5,"offset":317},"end":{"line":23,"column":12,"offset":324},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":313},"end":{"line":23,"column":12,"offset":324},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Defining it in the Elixir REPL:","position":{"start":{"line":25,"column":1,"offset":326},"end":{"line":25,"column":32,"offset":357},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":326},"end":{"line":25,"column":32,"offset":357},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"iex> defmodule User do\n...>   defstruct name: \"John\", age: 27\n...> end\niex> %User{}\n%User{age: 27, name: \"John\"}\niex> %User{name: \"Jane\"}\n%User{age: 27, name: \"Jane\"}","position":{"start":{"line":27,"column":1,"offset":359},"end":{"line":35,"column":4,"offset":538},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":38,"column":1,"offset":541},"end":{"line":38,"column":31,"offset":571},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":38,"column":31,"offset":571}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"elixir-maps--structs\"\n    }}>{`Elixir Maps & Structs`}</h1>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <h3 {...{\n      \"id\": \"maps\"\n    }}>{`Maps`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> map = %{a: 1, b: 2}\n%{a: 1, b: 2}\niex> map[:a]\n1\niex> %{map | a: 3}\n%{a: 3, b: 2}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"structs\"\n    }}>{`Structs`}</h3>\n    <p>{`Defining it in the Elixir REPL:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> defmodule User do\n...>   defstruct name: \"John\", age: 27\n...> end\niex> %User{}\n%User{age: 27, name: \"John\"}\niex> %User{name: \"Jane\"}\n%User{age: 27, name: \"Jane\"}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}