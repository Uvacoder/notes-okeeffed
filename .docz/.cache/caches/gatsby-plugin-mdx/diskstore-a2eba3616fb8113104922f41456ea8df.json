{"expireTime":9007200852878370000,"key":"gatsby-plugin-mdx-entire-payload-b052ad78889f5fbe34328e2d2c45f72a-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"React Context","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":16,"offset":182},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":16,"offset":182},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Basic Introduction","position":{"start":{"line":10,"column":4,"offset":187},"end":{"line":10,"column":22,"offset":205},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":184},"end":{"line":10,"column":22,"offset":205},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"System","position":{"start":{"line":12,"column":3,"offset":209},"end":{"line":12,"column":9,"offset":215},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":209},"end":{"line":12,"column":10,"offset":216},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":12,"column":13,"offset":219},"end":{"line":12,"column":24,"offset":230},"indent":[]}}],"position":{"start":{"line":12,"column":13,"offset":219},"end":{"line":12,"column":75,"offset":281},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":207},"end":{"line":12,"column":77,"offset":283},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Props","position":{"start":{"line":14,"column":3,"offset":363},"end":{"line":14,"column":8,"offset":368},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":363},"end":{"line":14,"column":10,"offset":370},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Get data from a parent component to a direct child component","position":{"start":{"line":14,"column":13,"offset":373},"end":{"line":14,"column":73,"offset":433},"indent":[]}}],"position":{"start":{"line":14,"column":13,"offset":373},"end":{"line":14,"column":75,"offset":435},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":361},"end":{"line":14,"column":77,"offset":437},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Context","position":{"start":{"line":15,"column":3,"offset":440},"end":{"line":15,"column":10,"offset":447},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":440},"end":{"line":15,"column":10,"offset":447},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Gets data from a parent omponent to any nested child component","position":{"start":{"line":15,"column":13,"offset":450},"end":{"line":15,"column":75,"offset":512},"indent":[]}}],"position":{"start":{"line":15,"column":13,"offset":450},"end":{"line":15,"column":75,"offset":512},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":438},"end":{"line":15,"column":77,"offset":514},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":207},"end":{"line":15,"column":77,"offset":514},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"An App with Context","position":{"start":{"line":17,"column":4,"offset":519},"end":{"line":17,"column":23,"offset":538},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":516},"end":{"line":17,"column":23,"offset":538},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A basic app where we want to pass context of things like language everywhere.","position":{"start":{"line":19,"column":1,"offset":540},"end":{"line":19,"column":78,"offset":617},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":540},"end":{"line":19,"column":78,"offset":617},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"class App extends Component {\n    state = {langauge: 'english'};\n\n    onLanguageChange = language => this.setState({language});\n\n    render() {\n        // return elements with onClick to change state\n    }\n}","position":{"start":{"line":21,"column":1,"offset":619},"end":{"line":31,"column":4,"offset":844},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Getting Data Out of Context","position":{"start":{"line":33,"column":4,"offset":849},"end":{"line":33,"column":31,"offset":876},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":846},"end":{"line":33,"column":31,"offset":876},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create context file","position":{"start":{"line":35,"column":4,"offset":881},"end":{"line":35,"column":23,"offset":900},"indent":[]}}],"position":{"start":{"line":35,"column":4,"offset":881},"end":{"line":35,"column":23,"offset":900},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":878},"end":{"line":35,"column":23,"offset":900},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Set contextType as static property to class","position":{"start":{"line":36,"column":4,"offset":904},"end":{"line":36,"column":47,"offset":947},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":904},"end":{"line":36,"column":47,"offset":947},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":901},"end":{"line":36,"column":47,"offset":947},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Consume from this.context","position":{"start":{"line":37,"column":4,"offset":951},"end":{"line":37,"column":29,"offset":976},"indent":[]}}],"position":{"start":{"line":37,"column":4,"offset":951},"end":{"line":37,"column":29,"offset":976},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":948},"end":{"line":37,"column":29,"offset":976},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Update the context using the ","position":{"start":{"line":38,"column":4,"offset":980},"end":{"line":38,"column":33,"offset":1009},"indent":[]}},{"type":"inlineCode","value":"Provider","position":{"start":{"line":38,"column":33,"offset":1009},"end":{"line":38,"column":43,"offset":1019},"indent":[]}}],"position":{"start":{"line":38,"column":4,"offset":980},"end":{"line":38,"column":43,"offset":1019},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":977},"end":{"line":38,"column":43,"offset":1019},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":878},"end":{"line":38,"column":43,"offset":1019},"indent":[1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    static contextType = LanguageContext;\n\n    render() {\n        const text = this.context === 'english' ? 'Submit' : 'Voorleggen';\n        return <button>{text}</button>\n    }\n}","position":{"start":{"line":40,"column":1,"offset":1021},"end":{"line":57,"column":4,"offset":1490},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To update the context, from a higher provider we could set...","position":{"start":{"line":59,"column":1,"offset":1492},"end":{"line":59,"column":62,"offset":1553},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1492},"end":{"line":59,"column":62,"offset":1553},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"class App extends Component {\n    state = {langauge: 'english'};\n\n    onLanguageChange = language => this.setState({language});\n\n    render() {\n        // return elements with onClick to change state\n        <LanguageContext.Provider value={this.state.language}>\n           <ChildThatContainsButton>\n        </LanguageContext.Provider>\n    }\n}","position":{"start":{"line":61,"column":1,"offset":1555},"end":{"line":74,"column":4,"offset":1916},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Gotchas Around Context","position":{"start":{"line":76,"column":5,"offset":1922},"end":{"line":76,"column":27,"offset":1944},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1918},"end":{"line":76,"column":27,"offset":1944},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The big gotcha with the context is dealing with the value prop given to the provider.","position":{"start":{"line":78,"column":1,"offset":1946},"end":{"line":78,"column":86,"offset":2031},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1946},"end":{"line":78,"column":86,"offset":2031},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Alternative Consumption of Data with Consumers","position":{"start":{"line":80,"column":4,"offset":2036},"end":{"line":80,"column":50,"offset":2082},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2033},"end":{"line":80,"column":50,"offset":2082},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    render() {\n        return <button>\n            <LanguageContext.Consumer>\n              {value => value === 'english' ? 'Submit' : 'Voorleggen'}\n           </LanguageContext.Consumer>\n        </button>\n    }\n}","position":{"start":{"line":82,"column":1,"offset":2084},"end":{"line":100,"column":4,"offset":2587},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using Multiple Consumers","position":{"start":{"line":102,"column":5,"offset":2593},"end":{"line":102,"column":29,"offset":2617},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2589},"end":{"line":102,"column":29,"offset":2617},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    render() {\n        return <button>\n            <ColorContext.Consumer>\n            {color => {\n                <LanguageContext.Consumer>\n                    {value => value === 'english' ? 'Submit' : 'Voorleggen'}\n                </LanguageContext.Consumer>  \n            }}\n           </ColorContext.Consumer>\n        </button>\n    }\n}","position":{"start":{"line":104,"column":1,"offset":2619},"end":{"line":126,"column":4,"offset":3250},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Context vs Redux","position":{"start":{"line":128,"column":4,"offset":3255},"end":{"line":128,"column":20,"offset":3271},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3252},"end":{"line":128,"column":20,"offset":3271},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Redux","position":{"start":{"line":130,"column":3,"offset":3275},"end":{"line":130,"column":8,"offset":3280},"indent":[]}}],"position":{"start":{"line":130,"column":3,"offset":3275},"end":{"line":130,"column":40,"offset":3312},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Context","position":{"start":{"line":130,"column":43,"offset":3315},"end":{"line":130,"column":50,"offset":3322},"indent":[]}}],"position":{"start":{"line":130,"column":43,"offset":3315},"end":{"line":130,"column":104,"offset":3376},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":3273},"end":{"line":130,"column":106,"offset":3378},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Excellent documentation","position":{"start":{"line":132,"column":3,"offset":3487},"end":{"line":132,"column":26,"offset":3510},"indent":[]}}],"position":{"start":{"line":132,"column":3,"offset":3487},"end":{"line":132,"column":40,"offset":3524},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"No need for extra lib","position":{"start":{"line":132,"column":43,"offset":3527},"end":{"line":132,"column":64,"offset":3548},"indent":[]}}],"position":{"start":{"line":132,"column":43,"offset":3527},"end":{"line":132,"column":104,"offset":3588},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":3485},"end":{"line":132,"column":106,"offset":3590},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Well-known for design patterns","position":{"start":{"line":133,"column":3,"offset":3593},"end":{"line":133,"column":33,"offset":3623},"indent":[]}}],"position":{"start":{"line":133,"column":3,"offset":3593},"end":{"line":133,"column":40,"offset":3630},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Hard to build a 'store' component with cross cutting concerns","position":{"start":{"line":133,"column":43,"offset":3633},"end":{"line":133,"column":104,"offset":3694},"indent":[]}}],"position":{"start":{"line":133,"column":43,"offset":3633},"end":{"line":133,"column":104,"offset":3694},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3591},"end":{"line":133,"column":106,"offset":3696},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Tremendous amount of open source libs","position":{"start":{"line":134,"column":3,"offset":3699},"end":{"line":134,"column":40,"offset":3736},"indent":[]}}],"position":{"start":{"line":134,"column":3,"offset":3699},"end":{"line":134,"column":40,"offset":3736},"indent":[]}},{"type":"tableCell","children":[],"position":{"start":{"line":134,"column":105,"offset":3801},"end":{"line":134,"column":105,"offset":3801},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":3697},"end":{"line":134,"column":106,"offset":3802},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":3273},"end":{"line":134,"column":106,"offset":3802},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":138,"column":1,"offset":3806},"end":{"line":138,"column":31,"offset":3836},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":138,"column":31,"offset":3836}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-context\"\n    }}>{`React Context`}</h1>\n    <h2 {...{\n      \"id\": \"basic-introduction\"\n    }}>{`Basic Introduction`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`System`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Props`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get data from a parent component to a direct child component`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Context`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Gets data from a parent omponent to any nested child component`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"an-app-with-context\"\n    }}>{`An App with Context`}</h2>\n    <p>{`A basic app where we want to pass context of things like language everywhere.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class App extends Component {\n    state = {langauge: 'english'};\n\n    onLanguageChange = language => this.setState({language});\n\n    render() {\n        // return elements with onClick to change state\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"getting-data-out-of-context\"\n    }}>{`Getting Data Out of Context`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Create context file`}</li>\n      <li parentName=\"ol\">{`Set contextType as static property to class`}</li>\n      <li parentName=\"ol\">{`Consume from this.context`}</li>\n      <li parentName=\"ol\">{`Update the context using the `}<inlineCode parentName=\"li\">{`Provider`}</inlineCode></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    static contextType = LanguageContext;\n\n    render() {\n        const text = this.context === 'english' ? 'Submit' : 'Voorleggen';\n        return <button>{text}</button>\n    }\n}\n`}</code></pre>\n    <p>{`To update the context, from a higher provider we could set...`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class App extends Component {\n    state = {langauge: 'english'};\n\n    onLanguageChange = language => this.setState({language});\n\n    render() {\n        // return elements with onClick to change state\n        <LanguageContext.Provider value={this.state.language}>\n           <ChildThatContainsButton>\n        </LanguageContext.Provider>\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"gotchas-around-context\"\n    }}>{`Gotchas Around Context`}</h3>\n    <p>{`The big gotcha with the context is dealing with the value prop given to the provider.`}</p>\n    <h2 {...{\n      \"id\": \"alternative-consumption-of-data-with-consumers\"\n    }}>{`Alternative Consumption of Data with Consumers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    render() {\n        return <button>\n            <LanguageContext.Consumer>\n              {value => value === 'english' ? 'Submit' : 'Voorleggen'}\n           </LanguageContext.Consumer>\n        </button>\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-multiple-consumers\"\n    }}>{`Using Multiple Consumers`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    render() {\n        return <button>\n            <ColorContext.Consumer>\n            {color => {\n                <LanguageContext.Consumer>\n                    {value => value === 'english' ? 'Submit' : 'Voorleggen'}\n                </LanguageContext.Consumer>  \n            }}\n           </ColorContext.Consumer>\n        </button>\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"context-vs-redux\"\n    }}>{`Context vs Redux`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Redux`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Context`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Excellent documentation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No need for extra lib`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Well-known for design patterns`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Hard to build a 'store' component with cross cutting concerns`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tremendous amount of open source libs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}