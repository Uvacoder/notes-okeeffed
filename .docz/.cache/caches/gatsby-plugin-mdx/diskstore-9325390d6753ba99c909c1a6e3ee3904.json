{"expireTime":9007200867335911000,"key":"gatsby-plugin-mdx-entire-payload-28c25a007a79e2c8a3b5744a8c3ba036-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"React Native with Redux","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":26,"offset":192},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":26,"offset":192},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#react-native-with-redux","children":[{"type":"text","value":"React Native with Redux","position":{"start":{"line":10,"column":4,"offset":197},"end":{"line":10,"column":27,"offset":220},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":196},"end":{"line":10,"column":54,"offset":247},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":10,"column":54,"offset":247},"end":{"line":11,"column":4,"offset":251},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-1-intro","children":[{"type":"text","value":"RNREDUX-1: Intro","position":{"start":{"line":11,"column":5,"offset":252},"end":{"line":11,"column":21,"offset":268},"indent":[]}}],"position":{"start":{"line":11,"column":4,"offset":251},"end":{"line":11,"column":40,"offset":287},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":11,"column":40,"offset":287},"end":{"line":12,"column":4,"offset":291},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-2-react-native-101","children":[{"type":"text","value":"RNREDUX-2: React Native 101","position":{"start":{"line":12,"column":5,"offset":292},"end":{"line":12,"column":32,"offset":319},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":291},"end":{"line":12,"column":62,"offset":349},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":12,"column":62,"offset":349},"end":{"line":13,"column":4,"offset":353},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-21-project-directoryscreen-content","children":[{"type":"text","value":"RNREDUX-2.1: Project Directory/Screen Content","position":{"start":{"line":13,"column":5,"offset":354},"end":{"line":13,"column":50,"offset":399},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":353},"end":{"line":13,"column":96,"offset":445},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":13,"column":96,"offset":445},"end":{"line":14,"column":4,"offset":449},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-22-react-vs-react-native","children":[{"type":"text","value":"RNREDUX-2.2: React vs React Native","position":{"start":{"line":14,"column":5,"offset":450},"end":{"line":14,"column":39,"offset":484},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":449},"end":{"line":14,"column":75,"offset":520},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":14,"column":75,"offset":520},"end":{"line":15,"column":4,"offset":524},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-4-http-requests-with-react-native","children":[{"type":"text","value":"RNREDUX-4: HTTP Requests with React Native","position":{"start":{"line":15,"column":5,"offset":525},"end":{"line":15,"column":47,"offset":567},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":524},"end":{"line":15,"column":92,"offset":612},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":15,"column":92,"offset":612},"end":{"line":16,"column":4,"offset":616},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-41-sourcing-album-data","children":[{"type":"text","value":"RNREDUX-4.1: Sourcing Album Data","position":{"start":{"line":16,"column":5,"offset":617},"end":{"line":16,"column":37,"offset":649},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":616},"end":{"line":16,"column":71,"offset":683},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":16,"column":71,"offset":683},"end":{"line":17,"column":4,"offset":687},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-42-functional-component-vs-class-component","children":[{"type":"text","value":"RNREDUX-4.2: Functional Component vs Class Component","position":{"start":{"line":17,"column":5,"offset":688},"end":{"line":17,"column":57,"offset":740},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":687},"end":{"line":17,"column":111,"offset":794},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":17,"column":111,"offset":794},"end":{"line":18,"column":4,"offset":798},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-43-fetching-data-with-lifecycle-methods","children":[{"type":"text","value":"RNREDUX-4.3: Fetching Data with Lifecycle Methods","position":{"start":{"line":18,"column":5,"offset":799},"end":{"line":18,"column":54,"offset":848},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":798},"end":{"line":18,"column":105,"offset":899},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":18,"column":105,"offset":899},"end":{"line":19,"column":4,"offset":903},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-44-rendering-a-list-of-components","children":[{"type":"text","value":"RNREDUX-4.4: Rendering a List of Components","position":{"start":{"line":19,"column":5,"offset":904},"end":{"line":19,"column":48,"offset":947},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":903},"end":{"line":19,"column":93,"offset":992},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":19,"column":93,"offset":992},"end":{"line":20,"column":4,"offset":996},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-45-creating-reusable-components","children":[{"type":"text","value":"RNREDUX-4.5: Creating Reusable Components","position":{"start":{"line":20,"column":5,"offset":997},"end":{"line":20,"column":46,"offset":1038},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":996},"end":{"line":20,"column":89,"offset":1081},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":20,"column":89,"offset":1081},"end":{"line":21,"column":4,"offset":1085},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-45-turn-a-component-into-sections","children":[{"type":"text","value":"RNREDUX-4.5: Turn a Component into Sections","position":{"start":{"line":21,"column":5,"offset":1086},"end":{"line":21,"column":48,"offset":1129},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":1085},"end":{"line":21,"column":93,"offset":1174},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":21,"column":93,"offset":1174},"end":{"line":22,"column":4,"offset":1178},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-5-handling-component-layout","children":[{"type":"text","value":"RNREDUX-5: Handling Component Layout","position":{"start":{"line":22,"column":5,"offset":1179},"end":{"line":22,"column":41,"offset":1215},"indent":[]}}],"position":{"start":{"line":22,"column":4,"offset":1178},"end":{"line":22,"column":80,"offset":1254},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":22,"column":80,"offset":1254},"end":{"line":23,"column":4,"offset":1258},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-51-mastering-layout-with-flexbox","children":[{"type":"text","value":"RNREDUX-5.1: Mastering Layout with Flexbox","position":{"start":{"line":23,"column":5,"offset":1259},"end":{"line":23,"column":47,"offset":1301},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":1258},"end":{"line":23,"column":91,"offset":1345},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":23,"column":91,"offset":1345},"end":{"line":24,"column":4,"offset":1349},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-52-making-content-scrollable-and-handling-input","children":[{"type":"text","value":"RNREDUX-5.2: Making Content Scrollable and Handling Input","position":{"start":{"line":24,"column":5,"offset":1350},"end":{"line":24,"column":62,"offset":1407},"indent":[]}}],"position":{"start":{"line":24,"column":4,"offset":1349},"end":{"line":24,"column":121,"offset":1466},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":24,"column":121,"offset":1466},"end":{"line":25,"column":4,"offset":1470},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-53-responding-to-user-input","children":[{"type":"text","value":"RNREDUX-5.3: Responding to User Input","position":{"start":{"line":25,"column":5,"offset":1471},"end":{"line":25,"column":42,"offset":1508},"indent":[]}}],"position":{"start":{"line":25,"column":4,"offset":1470},"end":{"line":25,"column":81,"offset":1547},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":25,"column":81,"offset":1547},"end":{"line":26,"column":4,"offset":1551},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-8-redux-inside-of-react-native","children":[{"type":"text","value":"RNREDUX-8: Redux inside of React Native","position":{"start":{"line":26,"column":5,"offset":1552},"end":{"line":26,"column":44,"offset":1591},"indent":[]}}],"position":{"start":{"line":26,"column":4,"offset":1551},"end":{"line":26,"column":86,"offset":1633},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":26,"column":86,"offset":1633},"end":{"line":27,"column":4,"offset":1637},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-81-redux-boilerplate","children":[{"type":"text","value":"RNREDUX-8.1: Redux Boilerplate","position":{"start":{"line":27,"column":5,"offset":1638},"end":{"line":27,"column":35,"offset":1668},"indent":[]}}],"position":{"start":{"line":27,"column":4,"offset":1637},"end":{"line":27,"column":67,"offset":1700},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":27,"column":67,"offset":1700},"end":{"line":28,"column":4,"offset":1704},"indent":[0]}},{"type":"link","title":null,"url":"#rnredux-82-reducer-and-state-design","children":[{"type":"text","value":"RNREDUX-8.2: Reducer and State Design","position":{"start":{"line":28,"column":5,"offset":1705},"end":{"line":28,"column":42,"offset":1742},"indent":[]}}],"position":{"start":{"line":28,"column":4,"offset":1704},"end":{"line":28,"column":81,"offset":1781},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":28,"column":81,"offset":1781},"end":{"line":29,"column":4,"offset":1785},"indent":[0]}},{"type":"link","title":null,"url":"#redux-thunk","children":[{"type":"text","value":"Redux Thunk","position":{"start":{"line":29,"column":5,"offset":1786},"end":{"line":29,"column":16,"offset":1797},"indent":[]}}],"position":{"start":{"line":29,"column":4,"offset":1785},"end":{"line":29,"column":31,"offset":1812},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":29,"column":31,"offset":1812},"end":{"line":30,"column":4,"offset":1816},"indent":[0]}},{"type":"link","title":null,"url":"#dealing-with-navigation","children":[{"type":"text","value":"Dealing with Navigation","position":{"start":{"line":30,"column":5,"offset":1817},"end":{"line":30,"column":28,"offset":1840},"indent":[]}}],"position":{"start":{"line":30,"column":4,"offset":1816},"end":{"line":30,"column":55,"offset":1867},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":30,"column":55,"offset":1867},"end":{"line":31,"column":4,"offset":1871},"indent":[0]}},{"type":"link","title":null,"url":"#navigation-in-the-router","children":[{"type":"text","value":"Navigation in the Router","position":{"start":{"line":31,"column":5,"offset":1872},"end":{"line":31,"column":29,"offset":1896},"indent":[]}}],"position":{"start":{"line":31,"column":4,"offset":1871},"end":{"line":31,"column":57,"offset":1924},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":31,"column":57,"offset":1924},"end":{"line":32,"column":4,"offset":1928},"indent":[0]}},{"type":"link","title":null,"url":"#navigating-between-routes","children":[{"type":"text","value":"Navigating between routes","position":{"start":{"line":32,"column":5,"offset":1929},"end":{"line":32,"column":30,"offset":1954},"indent":[]}}],"position":{"start":{"line":32,"column":4,"offset":1928},"end":{"line":32,"column":59,"offset":1983},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":32,"column":59,"offset":1983},"end":{"line":33,"column":4,"offset":1987},"indent":[0]}},{"type":"link","title":null,"url":"#grouping-scenes-with-buckets","children":[{"type":"text","value":"Grouping Scenes with 'Buckets'","position":{"start":{"line":33,"column":5,"offset":1988},"end":{"line":33,"column":35,"offset":2018},"indent":[]}}],"position":{"start":{"line":33,"column":4,"offset":1987},"end":{"line":33,"column":67,"offset":2050},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":33,"column":67,"offset":2050},"end":{"line":34,"column":4,"offset":2054},"indent":[0]}},{"type":"link","title":null,"url":"#actions-to-navigate-between-buckets","children":[{"type":"text","value":"Actions to navigate between buckets","position":{"start":{"line":34,"column":5,"offset":2055},"end":{"line":34,"column":40,"offset":2090},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":2054},"end":{"line":34,"column":79,"offset":2129},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":34,"column":79,"offset":2129},"end":{"line":35,"column":4,"offset":2133},"indent":[0]}},{"type":"link","title":null,"url":"#form-updates-at-a-reducer-level--dynamic-property-updates","children":[{"type":"text","value":"Form updates at a reducer level / Dynamic Property updates","position":{"start":{"line":35,"column":5,"offset":2134},"end":{"line":35,"column":63,"offset":2192},"indent":[]}}],"position":{"start":{"line":35,"column":4,"offset":2133},"end":{"line":35,"column":124,"offset":2253},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":196},"end":{"line":35,"column":124,"offset":2253},"indent":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}],"position":{"start":{"line":10,"column":1,"offset":194},"end":{"line":35,"column":124,"offset":2253},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":194},"end":{"line":35,"column":124,"offset":2253},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-1: Intro","position":{"start":{"line":37,"column":4,"offset":2258},"end":{"line":37,"column":20,"offset":2274},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2255},"end":{"line":37,"column":20,"offset":2274},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Roadmap","position":{"start":{"line":39,"column":3,"offset":2278},"end":{"line":39,"column":10,"offset":2285},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2276},"end":{"line":39,"column":12,"offset":2287},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2276},"end":{"line":39,"column":12,"offset":2287},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Setting up RN for iOS and Android.","position":{"start":{"line":41,"column":1,"offset":2289},"end":{"line":41,"column":35,"offset":2323},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2289},"end":{"line":41,"column":35,"offset":2323},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Installing the Dependencies for OSX","position":{"start":{"line":43,"column":3,"offset":2327},"end":{"line":43,"column":38,"offset":2362},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2325},"end":{"line":43,"column":40,"offset":2364},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2325},"end":{"line":43,"column":40,"offset":2364},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-2: React Native 101","position":{"start":{"line":45,"column":4,"offset":2369},"end":{"line":45,"column":31,"offset":2396},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2366},"end":{"line":45,"column":31,"offset":2396},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-2.1: Project Directory/Screen Content","position":{"start":{"line":47,"column":4,"offset":2401},"end":{"line":47,"column":49,"offset":2446},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2398},"end":{"line":47,"column":49,"offset":2446},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"ios and android","position":{"start":{"line":49,"column":3,"offset":2450},"end":{"line":49,"column":18,"offset":2465},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2448},"end":{"line":49,"column":20,"offset":2467},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2448},"end":{"line":49,"column":20,"offset":2467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The project folders rarely need to be adjusted unless we want to work at a low-level.","position":{"start":{"line":51,"column":1,"offset":2469},"end":{"line":51,"column":86,"offset":2554},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2469},"end":{"line":51,"column":86,"offset":2554},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"index.ios.js vs index.android.js","position":{"start":{"line":53,"column":3,"offset":2558},"end":{"line":53,"column":35,"offset":2590},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2556},"end":{"line":53,"column":37,"offset":2592},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2556},"end":{"line":53,"column":37,"offset":2592},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Entry points for our applications. When Android or iOS run, these two files are the first platform entry points respectively.","position":{"start":{"line":55,"column":1,"offset":2594},"end":{"line":55,"column":126,"offset":2719},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2594},"end":{"line":55,"column":126,"offset":2719},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Steps for components","position":{"start":{"line":57,"column":3,"offset":2723},"end":{"line":57,"column":23,"offset":2743},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2721},"end":{"line":57,"column":25,"offset":2745},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2721},"end":{"line":57,"column":25,"offset":2745},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// Import a library to help create a component\n\nimport React from 'react';\n// destructuring\n// import ReactNative from 'react-native';\nimport { Text, AppRegistry } from 'react-native';\n\n// Create a component\n// if we are returning just one statement, we can get rid of the curly braces\n// and the return statement - not an error! ES lint issue.\n\nconst App => () => {\n\treturn (\n\t\t<Text>Some Text</Text>\n\t);\n}\n\n// ^ this will become...\n\nconst App => () => (\n\t<Text>Some Text</Text>\n);\n\n// Render it to the device\n// name 'albums' must correlate to name of the project\n// also destructure ReactNative.AppRegistry.registerComponent('albums', () => App);\nAppRegistry.registerComponent('albums', () => App);","position":{"start":{"line":59,"column":1,"offset":2747},"end":{"line":87,"column":4,"offset":3466},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-2.2: React vs React Native","position":{"start":{"line":89,"column":4,"offset":3471},"end":{"line":89,"column":38,"offset":3505},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3468},"end":{"line":89,"column":38,"offset":3505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Both are distinct libraries. RN is essentially the handle to getting things onto a device!","position":{"start":{"line":91,"column":1,"offset":3507},"end":{"line":91,"column":91,"offset":3597},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3507},"end":{"line":91,"column":91,"offset":3597},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"import","position":{"start":{"line":93,"column":1,"offset":3599},"end":{"line":93,"column":9,"offset":3607},"indent":[]}},{"type":"text","value":" is required to working with ","position":{"start":{"line":93,"column":9,"offset":3607},"end":{"line":93,"column":38,"offset":3636},"indent":[]}},{"type":"inlineCode","value":"outside code","position":{"start":{"line":93,"column":38,"offset":3636},"end":{"line":93,"column":52,"offset":3650},"indent":[]}},{"type":"text","value":" eg. other libraries/modules.","position":{"start":{"line":93,"column":52,"offset":3650},"end":{"line":93,"column":81,"offset":3679},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3599},"end":{"line":93,"column":81,"offset":3679},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"React","position":{"start":{"line":95,"column":3,"offset":3683},"end":{"line":95,"column":8,"offset":3688},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3681},"end":{"line":95,"column":10,"offset":3690},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3681},"end":{"line":95,"column":10,"offset":3690},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Knows how a component should behave","position":{"start":{"line":97,"column":3,"offset":3694},"end":{"line":97,"column":38,"offset":3729},"indent":[]}}],"position":{"start":{"line":97,"column":3,"offset":3694},"end":{"line":97,"column":38,"offset":3729},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3692},"end":{"line":97,"column":38,"offset":3729},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Knows how to take a bunch of components and make them work together","position":{"start":{"line":98,"column":3,"offset":3732},"end":{"line":98,"column":70,"offset":3799},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":3732},"end":{"line":98,"column":70,"offset":3799},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3730},"end":{"line":98,"column":70,"offset":3799},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3692},"end":{"line":98,"column":70,"offset":3799},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"React Native","position":{"start":{"line":100,"column":3,"offset":3803},"end":{"line":100,"column":15,"offset":3815},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3801},"end":{"line":100,"column":17,"offset":3817},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3801},"end":{"line":100,"column":17,"offset":3817},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Knows how to take the output from a component and place it on the screen","position":{"start":{"line":102,"column":3,"offset":3821},"end":{"line":102,"column":75,"offset":3893},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":3821},"end":{"line":102,"column":75,"offset":3893},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3819},"end":{"line":102,"column":75,"offset":3893},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Provides default core components (image, text)","position":{"start":{"line":103,"column":3,"offset":3896},"end":{"line":103,"column":49,"offset":3942},"indent":[]}}],"position":{"start":{"line":103,"column":3,"offset":3896},"end":{"line":103,"column":49,"offset":3942},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3894},"end":{"line":103,"column":49,"offset":3942},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3819},"end":{"line":103,"column":49,"offset":3942},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-4: HTTP Requests with React Native","position":{"start":{"line":105,"column":4,"offset":3947},"end":{"line":105,"column":46,"offset":3989},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3944},"end":{"line":105,"column":46,"offset":3989},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-4.1: Sourcing Album Data","position":{"start":{"line":107,"column":4,"offset":3994},"end":{"line":107,"column":36,"offset":4026},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3991},"end":{"line":107,"column":36,"offset":4026},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For the idea of creating is a label is to create two components.","position":{"start":{"line":109,"column":1,"offset":4028},"end":{"line":109,"column":65,"offset":4092},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4028},"end":{"line":109,"column":65,"offset":4092},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a) The AlbumList\nb) The AlbumDetail","position":{"start":{"line":111,"column":1,"offset":4094},"end":{"line":112,"column":19,"offset":4129},"indent":[1]}}],"position":{"start":{"line":111,"column":1,"offset":4094},"end":{"line":112,"column":19,"offset":4129},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"AlbumList Component","position":{"start":{"line":114,"column":3,"offset":4133},"end":{"line":114,"column":22,"offset":4152},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4131},"end":{"line":114,"column":24,"offset":4154},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4131},"end":{"line":114,"column":24,"offset":4154},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note: If you are embedding more than one component, wrap around in ","position":{"start":{"line":116,"column":1,"offset":4156},"end":{"line":116,"column":68,"offset":4223},"indent":[]}},{"type":"inlineCode","value":"<View>","position":{"start":{"line":116,"column":68,"offset":4223},"end":{"line":116,"column":76,"offset":4231},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":116,"column":76,"offset":4231},"end":{"line":116,"column":77,"offset":4232},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4156},"end":{"line":116,"column":77,"offset":4232},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// after importing from React, ReactNative\n\nconst AlbumView = () => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>Album List!</Text>\n\t\t</View>\n\t);\n};\n\nexport default AlbumList;","position":{"start":{"line":118,"column":1,"offset":4234},"end":{"line":130,"column":4,"offset":4402},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-4.2: Functional Component vs Class Component","position":{"start":{"line":132,"column":4,"offset":4407},"end":{"line":132,"column":56,"offset":4459},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4404},"end":{"line":132,"column":56,"offset":4459},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Functional Component","position":{"start":{"line":134,"column":3,"offset":4463},"end":{"line":134,"column":23,"offset":4483},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4461},"end":{"line":134,"column":25,"offset":4485},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4461},"end":{"line":134,"column":25,"offset":4485},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Used for presenting static data","position":{"start":{"line":136,"column":3,"offset":4489},"end":{"line":136,"column":34,"offset":4520},"indent":[]}}],"position":{"start":{"line":136,"column":3,"offset":4489},"end":{"line":136,"column":34,"offset":4520},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4487},"end":{"line":136,"column":34,"offset":4520},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Can't handle fetching data","position":{"start":{"line":137,"column":3,"offset":4523},"end":{"line":137,"column":29,"offset":4549},"indent":[]}}],"position":{"start":{"line":137,"column":3,"offset":4523},"end":{"line":137,"column":29,"offset":4549},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4521},"end":{"line":137,"column":29,"offset":4549},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Easy to write","position":{"start":{"line":138,"column":3,"offset":4552},"end":{"line":138,"column":16,"offset":4565},"indent":[]}}],"position":{"start":{"line":138,"column":3,"offset":4552},"end":{"line":138,"column":16,"offset":4565},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4550},"end":{"line":138,"column":16,"offset":4565},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4487},"end":{"line":138,"column":16,"offset":4565},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Class Component","position":{"start":{"line":140,"column":3,"offset":4569},"end":{"line":140,"column":18,"offset":4584},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4567},"end":{"line":140,"column":20,"offset":4586},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4567},"end":{"line":140,"column":20,"offset":4586},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Used for dynamic sources of data","position":{"start":{"line":142,"column":3,"offset":4590},"end":{"line":142,"column":35,"offset":4622},"indent":[]}}],"position":{"start":{"line":142,"column":3,"offset":4590},"end":{"line":142,"column":35,"offset":4622},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4588},"end":{"line":142,"column":35,"offset":4622},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Handles any data that might change (fetching data, user events, etc)","position":{"start":{"line":143,"column":3,"offset":4625},"end":{"line":143,"column":71,"offset":4693},"indent":[]}}],"position":{"start":{"line":143,"column":3,"offset":4625},"end":{"line":143,"column":71,"offset":4693},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4623},"end":{"line":143,"column":71,"offset":4693},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Knows when it gets rerendered to the device (useful for data fetching)","position":{"start":{"line":144,"column":3,"offset":4696},"end":{"line":144,"column":73,"offset":4766},"indent":[]}}],"position":{"start":{"line":144,"column":3,"offset":4696},"end":{"line":144,"column":73,"offset":4766},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4694},"end":{"line":144,"column":73,"offset":4766},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"More code to write","position":{"start":{"line":145,"column":3,"offset":4769},"end":{"line":145,"column":21,"offset":4787},"indent":[]}}],"position":{"start":{"line":145,"column":3,"offset":4769},"end":{"line":145,"column":21,"offset":4787},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4767},"end":{"line":145,"column":21,"offset":4787},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4588},"end":{"line":145,"column":21,"offset":4787},"indent":[1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"// functional component\n\nconst Header = () => {\n  return <Text>Hi there!</Text>;\n};\n\n// class component\n\nclass Header extends Component {\n  render() {\n    return <Text>Hi there!</Text>;\n  }\n}","position":{"start":{"line":147,"column":1,"offset":4789},"end":{"line":161,"column":4,"offset":4998},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So recreating our AlbumList...","position":{"start":{"line":163,"column":1,"offset":5000},"end":{"line":163,"column":31,"offset":5030},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5000},"end":{"line":163,"column":31,"offset":5030},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\n\nclass AlbumView extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text>Album List!</Text>\n\t\t\t</View>\n\t\t);\n\t}\n};\n\nexport default AlbumList;","position":{"start":{"line":165,"column":1,"offset":5032},"end":{"line":180,"column":4,"offset":5283},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-4.3: Fetching Data with Lifecycle Methods","position":{"start":{"line":182,"column":4,"offset":5288},"end":{"line":182,"column":53,"offset":5337},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":5285},"end":{"line":182,"column":53,"offset":5337},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class based components themselves KNOW when they're about to rendered.","position":{"start":{"line":184,"column":1,"offset":5339},"end":{"line":184,"column":71,"offset":5409},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":5339},"end":{"line":184,"column":71,"offset":5409},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example Lifecycle Methods include ","position":{"start":{"line":186,"column":1,"offset":5411},"end":{"line":186,"column":35,"offset":5445},"indent":[]}},{"type":"inlineCode","value":"componentWillMount()","position":{"start":{"line":186,"column":35,"offset":5445},"end":{"line":186,"column":57,"offset":5467},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":5411},"end":{"line":186,"column":57,"offset":5467},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Network Requests","position":{"start":{"line":188,"column":3,"offset":5471},"end":{"line":188,"column":19,"offset":5487},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":5469},"end":{"line":188,"column":21,"offset":5489},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":5469},"end":{"line":188,"column":21,"offset":5489},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How do we make the HTTP request? It's quite straight forward.","position":{"start":{"line":190,"column":1,"offset":5491},"end":{"line":190,"column":62,"offset":5552},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":5491},"end":{"line":190,"column":62,"offset":5552},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"npm install --save axios","position":{"start":{"line":192,"column":1,"offset":5554},"end":{"line":192,"column":27,"offset":5580},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":5554},"end":{"line":192,"column":27,"offset":5580},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure you need to have some logic to rerender the components after the AJAX returns and the promise is fulfilled.","position":{"start":{"line":194,"column":1,"offset":5582},"end":{"line":194,"column":115,"offset":5696},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":5582},"end":{"line":194,"column":115,"offset":5696},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Component Level State","position":{"start":{"line":196,"column":3,"offset":5700},"end":{"line":196,"column":24,"offset":5721},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":5698},"end":{"line":196,"column":26,"offset":5723},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":5698},"end":{"line":196,"column":26,"offset":5723},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Components will already be on the screen before we can get our promise back. Our state so far will look like the following...","position":{"start":{"line":198,"column":1,"offset":5725},"end":{"line":198,"column":126,"offset":5850},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":5725},"end":{"line":198,"column":126,"offset":5850},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We need to use component level state for it all to rerender","position":{"start":{"line":200,"column":1,"offset":5852},"end":{"line":200,"column":60,"offset":5911},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":5852},"end":{"line":200,"column":60,"offset":5911},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Set up a default state (class level property)","position":{"start":{"line":202,"column":5,"offset":5917},"end":{"line":202,"column":50,"offset":5962},"indent":[]}}],"position":{"start":{"line":202,"column":5,"offset":5917},"end":{"line":202,"column":50,"offset":5962},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":5913},"end":{"line":202,"column":50,"offset":5962},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Update the state (needs to use ","position":{"start":{"line":203,"column":5,"offset":5967},"end":{"line":203,"column":36,"offset":5998},"indent":[]}},{"type":"inlineCode","value":"this.setState","position":{"start":{"line":203,"column":36,"offset":5998},"end":{"line":203,"column":51,"offset":6013},"indent":[]}},{"type":"text","value":"!)","position":{"start":{"line":203,"column":51,"offset":6013},"end":{"line":203,"column":53,"offset":6015},"indent":[]}}],"position":{"start":{"line":203,"column":5,"offset":5967},"end":{"line":203,"column":53,"offset":6015},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":5963},"end":{"line":203,"column":53,"offset":6015},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":5913},"end":{"line":203,"column":53,"offset":6015},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Rules of State","position":{"start":{"line":205,"column":3,"offset":6019},"end":{"line":205,"column":17,"offset":6033},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":6017},"end":{"line":205,"column":19,"offset":6035},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":6017},"end":{"line":205,"column":19,"offset":6035},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Definition of State: a plain JS object used to record and respond to 'user-triggered events'.","position":{"start":{"line":207,"column":3,"offset":6039},"end":{"line":207,"column":96,"offset":6132},"indent":[]}}],"position":{"start":{"line":207,"column":3,"offset":6039},"end":{"line":207,"column":96,"offset":6132},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":6037},"end":{"line":207,"column":96,"offset":6132},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When we need to update what a component shows, call ","position":{"start":{"line":208,"column":3,"offset":6135},"end":{"line":208,"column":55,"offset":6187},"indent":[]}},{"type":"inlineCode","value":"this.setState","position":{"start":{"line":208,"column":55,"offset":6187},"end":{"line":208,"column":70,"offset":6202},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":208,"column":70,"offset":6202},"end":{"line":208,"column":71,"offset":6203},"indent":[]}}],"position":{"start":{"line":208,"column":3,"offset":6135},"end":{"line":208,"column":71,"offset":6203},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":6133},"end":{"line":208,"column":71,"offset":6203},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only change state with 'setState' not this.state='something'.","position":{"start":{"line":209,"column":3,"offset":6206},"end":{"line":209,"column":64,"offset":6267},"indent":[]}}],"position":{"start":{"line":209,"column":3,"offset":6206},"end":{"line":209,"column":64,"offset":6267},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":6204},"end":{"line":209,"column":64,"offset":6267},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":6037},"end":{"line":209,"column":64,"offset":6267},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"When do we use props?","position":{"start":{"line":211,"column":3,"offset":6271},"end":{"line":211,"column":24,"offset":6292},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":6269},"end":{"line":211,"column":26,"offset":6294},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":6269},"end":{"line":211,"column":26,"offset":6294},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"props is for parent to child communication","position":{"start":{"line":213,"column":3,"offset":6298},"end":{"line":213,"column":45,"offset":6340},"indent":[]}}],"position":{"start":{"line":213,"column":3,"offset":6298},"end":{"line":213,"column":45,"offset":6340},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":6296},"end":{"line":213,"column":45,"offset":6340},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"state is internal record keeping","position":{"start":{"line":214,"column":3,"offset":6343},"end":{"line":214,"column":35,"offset":6375},"indent":[]}}],"position":{"start":{"line":214,"column":3,"offset":6343},"end":{"line":214,"column":35,"offset":6375},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":6341},"end":{"line":214,"column":35,"offset":6375},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":6296},"end":{"line":214,"column":35,"offset":6375},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"// before\nstate = { albums: [] };\n\n// after fetching data\nstate = {\n\talbums: [\n\t\t{name: 'ashio'},\n\t\t{name: 'aheure'}\n\t]\n};","position":{"start":{"line":216,"column":1,"offset":6377},"end":{"line":227,"column":4,"offset":6507},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\nimport axios from 'axios';\n\nclass AlbumView extends Component {\n\tstate = { albums: [] };\n\n\n\tcomponentWillMount() {\n\t\t// console.log('componentWillMount in console');\n\t\t// debugger;\n\t\taxios.get('https://theapilink.com')\n\t\t\t.then(response => this.setState({ albums: response.data }));\n\t}\n\n\trender() {\n\t\t// can use this when the render method continues to re-render\n\t\tconsole.log(this.state);\n\t\tdebugger;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text>Album List!</Text>\n\t\t\t</View>\n\t\t);\n\t}\n};\n\nexport default AlbumList;","position":{"start":{"line":229,"column":1,"offset":6509},"end":{"line":259,"column":4,"offset":7114},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-4.4: Rendering a List of Components","position":{"start":{"line":261,"column":4,"offset":7119},"end":{"line":261,"column":47,"offset":7162},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":7116},"end":{"line":261,"column":47,"offset":7162},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only use state with class level components (not functional components)","position":{"start":{"line":263,"column":1,"offset":7164},"end":{"line":263,"column":71,"offset":7234},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":7164},"end":{"line":263,"column":71,"offset":7234},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For each album now, we want to create one component using ","position":{"start":{"line":265,"column":1,"offset":7236},"end":{"line":265,"column":59,"offset":7294},"indent":[]}},{"type":"inlineCode","value":"map","position":{"start":{"line":265,"column":59,"offset":7294},"end":{"line":265,"column":64,"offset":7299},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":265,"column":64,"offset":7299},"end":{"line":265,"column":65,"offset":7300},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":7236},"end":{"line":265,"column":65,"offset":7300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure that each property has a unique key!","position":{"start":{"line":267,"column":1,"offset":7302},"end":{"line":267,"column":44,"offset":7345},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":7302},"end":{"line":267,"column":44,"offset":7345},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"AlbumList","position":{"start":{"line":269,"column":3,"offset":7349},"end":{"line":269,"column":12,"offset":7358},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":7347},"end":{"line":269,"column":14,"offset":7360},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":7347},"end":{"line":269,"column":14,"offset":7360},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\nimport axios from 'axios';\n\nclass AlbumView extends Component {\n\tstate = { albums: [] };\n\n\n\tcomponentWillMount() {\n\t\t// console.log('componentWillMount in console');\n\t\t// debugger;\n\t\taxios.get('https://theapilink.com')\n\t\t\t.then(response => this.setState({ albums: response.data }));\n\t}\n\n\trenderAlbums() {\n\t\treturn this.state.albums.map(album =>\n\t\t\t// best to use for the key is an id if you have one\n\t\t\t<Text key={album.title}>{album.title}</Text>\n\t\t);\n\t}\n\n\trender() {\n\t\t// can use this when the render method continues to re-render\n\t\tconsole.log(this.state);\n\t\tdebugger;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t{this.renderAlbums()}\n\t\t\t</View>\n\t\t);\n\t}\n};\n\nexport default AlbumList;","position":{"start":{"line":271,"column":1,"offset":7362},"end":{"line":308,"column":4,"offset":8134},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Creating an AlbumDetail","position":{"start":{"line":310,"column":3,"offset":8138},"end":{"line":310,"column":26,"offset":8161},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":8136},"end":{"line":310,"column":28,"offset":8163},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":8136},"end":{"line":310,"column":28,"offset":8163},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Does it need to be a Class or Functional component?","position":{"start":{"line":312,"column":1,"offset":8165},"end":{"line":312,"column":52,"offset":8216},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":8165},"end":{"line":312,"column":52,"offset":8216},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\n\nconst AlbumDetail = (props) => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>{props.album.title}</Text>\n\t\t</View>\n\t);\n};\n\nexport default AlbumDetail;","position":{"start":{"line":314,"column":1,"offset":8218},"end":{"line":327,"column":4,"offset":8456},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Final AlbumList","position":{"start":{"line":329,"column":3,"offset":8460},"end":{"line":329,"column":18,"offset":8475},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":8458},"end":{"line":329,"column":20,"offset":8477},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":8458},"end":{"line":329,"column":20,"offset":8477},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Import AlbumDetail, reset the \"renderAlbums\" function to render the AlbumDetail and then use props to pass down from parent to child.","position":{"start":{"line":331,"column":1,"offset":8479},"end":{"line":331,"column":134,"offset":8612},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":8479},"end":{"line":331,"column":134,"offset":8612},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { View }, from 'react-native';\nimport axios from 'axios';\nimport AlbumDetail from './AlbumDetail'\n\nclass AlbumView extends Component {\n\tstate = { albums: [] };\n\n\n\tcomponentWillMount() {\n\t\t// console.log('componentWillMount in console');\n\t\t// debugger;\n\t\taxios.get('https://theapilink.com')\n\t\t\t.then(response => this.setState({ albums: response.data }));\n\t}\n\n\trenderAlbums() {\n\t\treturn this.state.albums.map(album =>\n\t\t\t// best to use for the key is an id if you have one\n\t\t\t// prop name \"album\" can be named anything\n\t\t\t<AlbumDetail key={album.title} album={album}/>\n\t\t);\n\t}\n\n\trender() {\n\t\t// can use this when the render method continues to re-render\n\t\tconsole.log(this.state);\n\t\tdebugger;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t{this.renderAlbums()}\n\t\t\t</View>\n\t\t);\n\t}\n};\n\nexport default AlbumList;","position":{"start":{"line":333,"column":1,"offset":8614},"end":{"line":372,"column":4,"offset":9468},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-4.5: Creating Reusable Components","position":{"start":{"line":374,"column":4,"offset":9473},"end":{"line":374,"column":45,"offset":9514},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":9470},"end":{"line":374,"column":45,"offset":9514},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For styling, it is sometimes useful to make components within components for layout purposes!","position":{"start":{"line":376,"column":1,"offset":9516},"end":{"line":376,"column":94,"offset":9609},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":9516},"end":{"line":376,"column":94,"offset":9609},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Passing components as props","position":{"start":{"line":378,"column":3,"offset":9613},"end":{"line":378,"column":30,"offset":9640},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":9611},"end":{"line":378,"column":32,"offset":9642},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":9611},"end":{"line":378,"column":32,"offset":9642},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can pass ","position":{"start":{"line":380,"column":1,"offset":9644},"end":{"line":380,"column":13,"offset":9656},"indent":[]}},{"type":"inlineCode","value":"props","position":{"start":{"line":380,"column":13,"offset":9656},"end":{"line":380,"column":20,"offset":9663},"indent":[]}},{"type":"text","value":" as a parameter and then use {props.children} to make a reference to it.","position":{"start":{"line":380,"column":20,"offset":9663},"end":{"line":380,"column":92,"offset":9735},"indent":[]}}],"position":{"start":{"line":380,"column":1,"offset":9644},"end":{"line":380,"column":92,"offset":9735},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Card.js","position":{"start":{"line":382,"column":3,"offset":9739},"end":{"line":382,"column":10,"offset":9746},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":9737},"end":{"line":382,"column":12,"offset":9748},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":9737},"end":{"line":382,"column":12,"offset":9748},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"import React from 'react';\nimport { View } from 'react-native';\n\nconst Card = (props) => {\n\trender (\n\t\t<View style={styles.containerStyle}>\n\t\t\t{props.children}\n\t\t</View>\n\t);\n}\n\nconst styles = {\n\tcontainerStyle: {\n\t\tborderWidth: 1,\n\t\tborderRadius: 2,\n\t\tborderColor: '#ddd',\n\t\tborderBottomWidth: 0,\n\t\tshadowColor: '#000',\n\t\tshadowOffset: { width: 0, height: 2 },\n\t\tshadowOpacity: 0.1,\n\t\tshadowRadius: 2,\n\t\televation: 1,\n\t\tmarginLeft: 5,\n\t\tmarginRight: 5,\n\t\tmarginTop: 10\n\t}\n};\n\nexport default Card;","position":{"start":{"line":384,"column":1,"offset":9750},"end":{"line":414,"column":4,"offset":10254},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"AlbumDetail","position":{"start":{"line":416,"column":3,"offset":10258},"end":{"line":416,"column":14,"offset":10269},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":10256},"end":{"line":416,"column":16,"offset":10271},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":10256},"end":{"line":416,"column":16,"offset":10271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We want to use this to pass down props for ","position":{"start":{"line":418,"column":1,"offset":10273},"end":{"line":418,"column":44,"offset":10316},"indent":[]}},{"type":"inlineCode","value":"Card","position":{"start":{"line":418,"column":44,"offset":10316},"end":{"line":418,"column":50,"offset":10322},"indent":[]}}],"position":{"start":{"line":418,"column":1,"offset":10273},"end":{"line":418,"column":50,"offset":10322},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { Text }, from 'react-native';\nimport Card from './Card';\n\nconst AlbumDetail = (props) => {\n\treturn (\n\t\t<Card>\n\t\t\t<Text>{props.album.title}</Text>\n\t\t</Card>\n\t);\n};\n\nexport default AlbumDetail;","position":{"start":{"line":420,"column":1,"offset":10324},"end":{"line":434,"column":4,"offset":10583},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-4.5: Turn a Component into Sections","position":{"start":{"line":436,"column":4,"offset":10588},"end":{"line":436,"column":47,"offset":10631},"indent":[]}}],"position":{"start":{"line":436,"column":1,"offset":10585},"end":{"line":436,"column":47,"offset":10631},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"CardSection.js","position":{"start":{"line":438,"column":3,"offset":10635},"end":{"line":438,"column":17,"offset":10649},"indent":[]}}],"position":{"start":{"line":438,"column":1,"offset":10633},"end":{"line":438,"column":19,"offset":10651},"indent":[]}}],"position":{"start":{"line":438,"column":1,"offset":10633},"end":{"line":438,"column":19,"offset":10651},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React from 'react';\nimport { View } from 'react-native';\n\nconst CardSection = props => {\n  render(<View style={styles.containerStyle}>{props.children}</View>);\n};\n\nconst styles = {\n  containerStyle: {\n    borderBottomWidth: 1,\n    padding: 5,\n    backgroundColor: '#fff',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    borderColor: '#ddd',\n    position: 'relative',\n  },\n};\n\nexport default CardSection;","position":{"start":{"line":440,"column":1,"offset":10653},"end":{"line":461,"column":4,"offset":11097},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"AlbumDetail","position":{"start":{"line":463,"column":3,"offset":11101},"end":{"line":463,"column":14,"offset":11112},"indent":[]}}],"position":{"start":{"line":463,"column":1,"offset":11099},"end":{"line":463,"column":16,"offset":11114},"indent":[]}}],"position":{"start":{"line":463,"column":1,"offset":11099},"end":{"line":463,"column":16,"offset":11114},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We want to use this to pass down props for ","position":{"start":{"line":465,"column":1,"offset":11116},"end":{"line":465,"column":44,"offset":11159},"indent":[]}},{"type":"inlineCode","value":"Card","position":{"start":{"line":465,"column":44,"offset":11159},"end":{"line":465,"column":50,"offset":11165},"indent":[]}}],"position":{"start":{"line":465,"column":1,"offset":11116},"end":{"line":465,"column":50,"offset":11165},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { Text }, from 'react-native';\nimport Card from './Card';\nimport CardSection from './CardSection';\n\nconst AlbumDetail = (props) => {\n\treturn (\n\t\t<Card>\n\t\t\t<CardSection>\n\t\t\t\t<Text>{props.album.title}</Text>\n\t\t\t</CardSection>\n\t\t</Card>\n\t);\n};\n\nexport default AlbumDetail;","position":{"start":{"line":467,"column":1,"offset":11167},"end":{"line":484,"column":4,"offset":11503},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-5: Handling Component Layout","position":{"start":{"line":486,"column":4,"offset":11508},"end":{"line":486,"column":40,"offset":11544},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11505},"end":{"line":486,"column":40,"offset":11544},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-5.1: Mastering Layout with Flexbox","position":{"start":{"line":488,"column":4,"offset":11549},"end":{"line":488,"column":46,"offset":11591},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":11546},"end":{"line":488,"column":46,"offset":11591},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Designing for web from personal experience is generally easier than React Native.","position":{"start":{"line":490,"column":1,"offset":11593},"end":{"line":490,"column":82,"offset":11674},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":11593},"end":{"line":490,"column":82,"offset":11674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How about layout challenges? Keeping things on the left, and on the right? We use Flexbox to be our friend!","position":{"start":{"line":492,"column":1,"offset":11676},"end":{"line":492,"column":108,"offset":11783},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":11676},"end":{"line":492,"column":108,"offset":11783},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Imaging a layout like the following.","position":{"start":{"line":494,"column":1,"offset":11785},"end":{"line":494,"column":37,"offset":11821},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":11785},"end":{"line":494,"column":37,"offset":11821},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<Card>\n  <CardSection>\n    <Image />\n    <Text />\n    <Text />\n  </CardSection>\n</Card>","position":{"start":{"line":496,"column":1,"offset":11823},"end":{"line":504,"column":4,"offset":11928},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Positioning of elements","position":{"start":{"line":506,"column":3,"offset":11932},"end":{"line":506,"column":26,"offset":11955},"indent":[]}}],"position":{"start":{"line":506,"column":1,"offset":11930},"end":{"line":506,"column":28,"offset":11957},"indent":[]}}],"position":{"start":{"line":506,"column":1,"offset":11930},"end":{"line":506,"column":28,"offset":11957},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How do we want to apply flexbox to our particular layout? What we can do is use ","position":{"start":{"line":508,"column":1,"offset":11959},"end":{"line":508,"column":81,"offset":12039},"indent":[]}},{"type":"inlineCode","value":"<View>","position":{"start":{"line":508,"column":81,"offset":12039},"end":{"line":508,"column":89,"offset":12047},"indent":[]}},{"type":"text","value":" to wrap the images - this is similar to using things like ","position":{"start":{"line":508,"column":89,"offset":12047},"end":{"line":508,"column":148,"offset":12106},"indent":[]}},{"type":"inlineCode","value":"<div>","position":{"start":{"line":508,"column":148,"offset":12106},"end":{"line":508,"column":155,"offset":12113},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":508,"column":155,"offset":12113},"end":{"line":508,"column":156,"offset":12114},"indent":[]}}],"position":{"start":{"line":508,"column":1,"offset":11959},"end":{"line":508,"column":156,"offset":12114},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can then use flex direction to style our views for column and what is within for rows.","position":{"start":{"line":510,"column":1,"offset":12116},"end":{"line":510,"column":90,"offset":12205},"indent":[]}}],"position":{"start":{"line":510,"column":1,"offset":12116},"end":{"line":510,"column":90,"offset":12205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unless we define a height, it will just flex to have just enough height!","position":{"start":{"line":512,"column":1,"offset":12207},"end":{"line":512,"column":73,"offset":12279},"indent":[]}}],"position":{"start":{"line":512,"column":1,"offset":12207},"end":{"line":512,"column":73,"offset":12279},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Images with React Native","position":{"start":{"line":514,"column":3,"offset":12283},"end":{"line":514,"column":27,"offset":12307},"indent":[]}}],"position":{"start":{"line":514,"column":1,"offset":12281},"end":{"line":514,"column":29,"offset":12309},"indent":[]}}],"position":{"start":{"line":514,"column":1,"offset":12281},"end":{"line":514,"column":29,"offset":12309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can import ","position":{"start":{"line":516,"column":1,"offset":12311},"end":{"line":516,"column":15,"offset":12325},"indent":[]}},{"type":"inlineCode","value":"image","position":{"start":{"line":516,"column":15,"offset":12325},"end":{"line":516,"column":22,"offset":12332},"indent":[]}},{"type":"text","value":" primitive from React Native!","position":{"start":{"line":516,"column":22,"offset":12332},"end":{"line":516,"column":51,"offset":12361},"indent":[]}}],"position":{"start":{"line":516,"column":1,"offset":12311},"end":{"line":516,"column":51,"offset":12361},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, images will not expand to fit by default. We need to manually add in a styling rule!","position":{"start":{"line":518,"column":1,"offset":12363},"end":{"line":518,"column":94,"offset":12456},"indent":[]}}],"position":{"start":{"line":518,"column":1,"offset":12363},"end":{"line":518,"column":94,"offset":12456},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Notes","position":{"start":{"line":520,"column":3,"offset":12460},"end":{"line":520,"column":8,"offset":12465},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":12458},"end":{"line":520,"column":10,"offset":12467},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":12458},"end":{"line":520,"column":10,"offset":12467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Destructure album objects if there is more than one.","position":{"start":{"line":522,"column":1,"offset":12469},"end":{"line":522,"column":53,"offset":12521},"indent":[]}}],"position":{"start":{"line":522,"column":1,"offset":12469},"end":{"line":522,"column":53,"offset":12521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you wanted to, you can also dereference styles!","position":{"start":{"line":524,"column":1,"offset":12523},"end":{"line":524,"column":51,"offset":12573},"indent":[]}}],"position":{"start":{"line":524,"column":1,"offset":12523},"end":{"line":524,"column":51,"offset":12573},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const { thumbnailStyle, headerContentStyle } = styles;","position":{"start":{"line":526,"column":1,"offset":12575},"end":{"line":528,"column":4,"offset":12647},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"// the album and const is for destructuring\n\nconst Card = ({ album }) => {\n  const { title, artist, thumbnail_image } = album;\n\n  return (\n    <Card>\n      <CardSection>\n        <View style={styles.thumbnailContainerStyle}>\n          // <Image source={{ uri: props.album.thumbnail_image }} />\n          //destructured\n          <Image\n            style={styles.thumbnailStyle}\n            source={{ uri: thumbnail_image }}\n          />\n        </View>\n        <View style={styles.headerContentStyle}>\n          //<Text>{props.album.title}</Text>\n          //<Text>{props.album.artist}</Text>\n          // Destructured\n          <Text style={styles.headerTextStyle}>{title}</Text>\n          <Text>{artist}</Text>\n        </View>\n      </CardSection>\n      <CardSection>\n        <Image style={style.imageStyle} source={{ uri: image }} />\n      </CardSection>\n    </Card>\n  );\n};\n\nconst styles = {\n  headerContentStyle: {\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  headerTextStyle: {\n    fontSize: 18,\n  },\n  thumbnailStyle: {\n    height: 50,\n    width: 50,\n  },\n  thumbnailContainerStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  imageStyle: {\n    height: 300,\n    flex: 1,\n    width: null,\n  },\n};","position":{"start":{"line":530,"column":1,"offset":12649},"end":{"line":586,"column":4,"offset":13957},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-5.2: Making Content Scrollable and Handling Input","position":{"start":{"line":588,"column":4,"offset":13962},"end":{"line":588,"column":61,"offset":14019},"indent":[]}}],"position":{"start":{"line":588,"column":1,"offset":13959},"end":{"line":588,"column":61,"offset":14019},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"ScrollView","position":{"start":{"line":590,"column":3,"offset":14023},"end":{"line":590,"column":13,"offset":14033},"indent":[]}}],"position":{"start":{"line":590,"column":1,"offset":14021},"end":{"line":590,"column":15,"offset":14035},"indent":[]}}],"position":{"start":{"line":590,"column":1,"offset":14021},"end":{"line":590,"column":15,"offset":14035},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scrolling is definitely one of the differenes between React and React Native. To make them scrollable, we just import ","position":{"start":{"line":592,"column":1,"offset":14037},"end":{"line":592,"column":119,"offset":14155},"indent":[]}},{"type":"inlineCode","value":"ScrollView","position":{"start":{"line":592,"column":119,"offset":14155},"end":{"line":592,"column":131,"offset":14167},"indent":[]}},{"type":"text","value":" and use that on the outside.","position":{"start":{"line":592,"column":131,"offset":14167},"end":{"line":592,"column":160,"offset":14196},"indent":[]}}],"position":{"start":{"line":592,"column":1,"offset":14037},"end":{"line":592,"column":160,"offset":14196},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this case, it is the renderAlbums.","position":{"start":{"line":594,"column":1,"offset":14198},"end":{"line":594,"column":39,"offset":14236},"indent":[]}}],"position":{"start":{"line":594,"column":1,"offset":14198},"end":{"line":594,"column":39,"offset":14236},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can just replace View with ScrollView.","position":{"start":{"line":596,"column":1,"offset":14238},"end":{"line":596,"column":42,"offset":14279},"indent":[]}}],"position":{"start":{"line":596,"column":1,"offset":14238},"end":{"line":596,"column":42,"offset":14279},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You also MUST find the root view and set it to flex: 1.","position":{"start":{"line":598,"column":1,"offset":14281},"end":{"line":598,"column":56,"offset":14336},"indent":[]}}],"position":{"start":{"line":598,"column":1,"offset":14281},"end":{"line":598,"column":56,"offset":14336},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Handling Input","position":{"start":{"line":600,"column":3,"offset":14340},"end":{"line":600,"column":17,"offset":14354},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":14338},"end":{"line":600,"column":19,"offset":14356},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":14338},"end":{"line":600,"column":19,"offset":14356},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Time to make a button.","position":{"start":{"line":602,"column":1,"offset":14358},"end":{"line":602,"column":23,"offset":14380},"indent":[]}}],"position":{"start":{"line":602,"column":1,"offset":14358},"end":{"line":602,"column":23,"offset":14380},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Button.js","position":{"start":{"line":604,"column":3,"offset":14384},"end":{"line":604,"column":12,"offset":14393},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":14382},"end":{"line":604,"column":14,"offset":14395},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":14382},"end":{"line":604,"column":14,"offset":14395},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"import React from 'react';\nimport { Text } from 'react-native';\n\nconst Button = () = => {\n\treturn (\n\t\t<Text>Click me!</Text>\n\t);\n}\n\nexport default Button;","position":{"start":{"line":606,"column":1,"offset":14397},"end":{"line":617,"column":4,"offset":14559},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now when we use this, we can have a section to house a button.","position":{"start":{"line":619,"column":1,"offset":14561},"end":{"line":619,"column":63,"offset":14623},"indent":[]}}],"position":{"start":{"line":619,"column":1,"offset":14561},"end":{"line":619,"column":63,"offset":14623},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We need to wrap the button but using ","position":{"start":{"line":621,"column":1,"offset":14625},"end":{"line":621,"column":38,"offset":14662},"indent":[]}},{"type":"inlineCode","value":"TouchableHighlight","position":{"start":{"line":621,"column":38,"offset":14662},"end":{"line":621,"column":58,"offset":14682},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":621,"column":58,"offset":14682},"end":{"line":621,"column":62,"offset":14686},"indent":[]}},{"type":"inlineCode","value":"TouchableOpacity","position":{"start":{"line":621,"column":62,"offset":14686},"end":{"line":621,"column":80,"offset":14704},"indent":[]}}],"position":{"start":{"line":621,"column":1,"offset":14625},"end":{"line":621,"column":80,"offset":14704},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\n\nconst Button = ({ onPress }) = => {\n\n\tconst { buttonStyle, textStyle } = styles;\n\n\treturn (\n\t\t// from the parent, have the prop of onPress{() => function}\n\t\t<TouchableOpacity style={buttonStyle} onPress={onPress}>\n\t\t\t<Text style={textStyle}>\n\t\t\t\tClick me!\n\t\t\t</Text>\n\t\t</TouchableOpacity>\n\t);\n}\n\nconst styles = {\n\ttextStyle: {\n\t\talignSelf: 'center',\n\t\tcolor: '#007aff',\n\t\tfontSize: 16,\n\t\tfontWeight: '600',\n\t\tpaddingTop: 10,\n\t\tpaddingBottom: 10\n\t},\n\tbuttonStyle: {\n\t\tflex: 1,\n\t\talignSelf: 'stretch',\n\t\tbackgroundColor: '#fff',\n\t\tborderRadius: 5,\n\t\tborderColor: '#007aff',\n\t}\n}\n\nexport default Button;","position":{"start":{"line":623,"column":1,"offset":14706},"end":{"line":660,"column":4,"offset":15397},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-5.3: Responding to User Input","position":{"start":{"line":662,"column":4,"offset":15402},"end":{"line":662,"column":41,"offset":15439},"indent":[]}}],"position":{"start":{"line":662,"column":1,"offset":15399},"end":{"line":662,"column":41,"offset":15439},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Card.js","position":{"start":{"line":664,"column":3,"offset":15443},"end":{"line":664,"column":10,"offset":15450},"indent":[]}}],"position":{"start":{"line":664,"column":1,"offset":15441},"end":{"line":664,"column":12,"offset":15452},"indent":[]}}],"position":{"start":{"line":664,"column":1,"offset":15441},"end":{"line":664,"column":12,"offset":15452},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// have your imports\n// the album and const is for destructuring\n\nconst Card = ({ album }) => {\n  const { title, artist, thumbnail_image, url } = album;\n\n  return (\n    <Card>\n      <CardSection>\n        <View style={styles.thumbnailContainerStyle}>\n          // <Image source={{ uri: props.album.thumbnail_image }} />\n          //destructured\n          <Image\n            style={styles.thumbnailStyle}\n            source={{ uri: thumbnail_image }}\n          />\n        </View>\n        <View style={styles.headerContentStyle}>\n          //<Text>{props.album.title}</Text>\n          //<Text>{props.album.artist}</Text>\n          // Destructured\n          <Text style={styles.headerTextStyle}>{title}</Text>\n          <Text>{artist}</Text>\n        </View>\n      </CardSection>\n      <CardSection>\n        <Image style={style.imageStyle} source={{ uri: image }} />\n      </CardSection>\n      <CardSection>\n        <Button onPress={() => openURL(album.url)}>Buy now</Button>\n      </CardSection>\n    </Card>\n  );\n};\n\nconst styles = {\n  headerContentStyle: {\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  headerTextStyle: {\n    fontSize: 18,\n  },\n  thumbnailStyle: {\n    height: 50,\n    width: 50,\n  },\n  thumbnailContainerStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  imageStyle: {\n    height: 300,\n    flex: 1,\n    width: null,\n  },\n};","position":{"start":{"line":666,"column":1,"offset":15454},"end":{"line":726,"column":4,"offset":16897},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Button.js","position":{"start":{"line":728,"column":3,"offset":16901},"end":{"line":728,"column":12,"offset":16910},"indent":[]}}],"position":{"start":{"line":728,"column":1,"offset":16899},"end":{"line":728,"column":14,"offset":16912},"indent":[]}}],"position":{"start":{"line":728,"column":1,"offset":16899},"end":{"line":728,"column":14,"offset":16912},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\n\nconst Button = ({ onPress, children }) = => {\n\n\tconst { buttonStyle, textStyle } = styles;\n\n\treturn (\n\t\t// from the parent, have the prop of onPress{() => function}\n\t\t<TouchableOpacity style={buttonStyle} onPress={onPress}>\n\t\t\t<Text style={textStyle}>\n\t\t\t\t{ children }\n\t\t\t</Text>\n\t\t</TouchableOpacity>\n\t);\n}\n\nconst styles = {\n\ttextStyle: {\n\t\talignSelf: 'center',\n\t\tcolor: '#007aff',\n\t\tfontSize: 16,\n\t\tfontWeight: '600',\n\t\tpaddingTop: 10,\n\t\tpaddingBottom: 10\n\t},\n\tbuttonStyle: {\n\t\tflex: 1,\n\t\talignSelf: 'stretch',\n\t\tbackgroundColor: '#fff',\n\t\tborderRadius: 5,\n\t\tborderColor: '#007aff',\n\t}\n}\n\nexport default Button;","position":{"start":{"line":730,"column":1,"offset":16914},"end":{"line":767,"column":4,"offset":17628},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-8: Redux inside of React Native","position":{"start":{"line":769,"column":4,"offset":17633},"end":{"line":769,"column":43,"offset":17672},"indent":[]}}],"position":{"start":{"line":769,"column":1,"offset":17630},"end":{"line":769,"column":43,"offset":17672},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-8.1: Redux Boilerplate","position":{"start":{"line":771,"column":4,"offset":17677},"end":{"line":771,"column":34,"offset":17707},"indent":[]}}],"position":{"start":{"line":771,"column":1,"offset":17674},"end":{"line":771,"column":34,"offset":17707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":773,"column":1,"offset":17709},"end":{"line":773,"column":5,"offset":17713},"indent":[]}},{"type":"inlineCode","value":"<Provider>","position":{"start":{"line":773,"column":5,"offset":17713},"end":{"line":773,"column":17,"offset":17725},"indent":[]}},{"type":"text","value":" tag works together with the Store. The Store is what holds the Application State.","position":{"start":{"line":773,"column":17,"offset":17725},"end":{"line":773,"column":99,"offset":17807},"indent":[]}}],"position":{"start":{"line":773,"column":1,"offset":17709},"end":{"line":773,"column":99,"offset":17807},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Provider is the communication with React. ","position":{"start":{"line":775,"column":1,"offset":17809},"end":{"line":775,"column":47,"offset":17855},"indent":[]}},{"type":"inlineCode","value":"react-redux","position":{"start":{"line":775,"column":47,"offset":17855},"end":{"line":775,"column":60,"offset":17868},"indent":[]}},{"type":"text","value":" is the glue for React and Redux.","position":{"start":{"line":775,"column":60,"offset":17868},"end":{"line":775,"column":93,"offset":17901},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":17809},"end":{"line":775,"column":93,"offset":17901},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Steps","position":{"start":{"line":777,"column":3,"offset":17905},"end":{"line":777,"column":8,"offset":17910},"indent":[]}}],"position":{"start":{"line":777,"column":1,"offset":17903},"end":{"line":777,"column":10,"offset":17912},"indent":[]}}],"position":{"start":{"line":777,"column":1,"offset":17903},"end":{"line":777,"column":10,"offset":17912},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"import { Provider } from 'react-redux'","position":{"start":{"line":779,"column":5,"offset":17918},"end":{"line":779,"column":45,"offset":17958},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":779,"column":45,"offset":17958},"end":{"line":779,"column":48,"offset":17961},"indent":[]}},{"type":"inlineCode","value":"import { createStore } from 'redux'","position":{"start":{"line":779,"column":48,"offset":17961},"end":{"line":779,"column":85,"offset":17998},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":779,"column":85,"offset":17998},"end":{"line":779,"column":86,"offset":17999},"indent":[]}}],"position":{"start":{"line":779,"column":5,"offset":17918},"end":{"line":779,"column":86,"offset":17999},"indent":[]}}],"position":{"start":{"line":779,"column":1,"offset":17914},"end":{"line":779,"column":86,"offset":17999},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Wrap app view in ","position":{"start":{"line":780,"column":5,"offset":18004},"end":{"line":780,"column":22,"offset":18021},"indent":[]}},{"type":"inlineCode","value":"<Provider store={createStore(reducers)} />","position":{"start":{"line":780,"column":22,"offset":18021},"end":{"line":780,"column":66,"offset":18065},"indent":[]}}],"position":{"start":{"line":780,"column":5,"offset":18004},"end":{"line":780,"column":66,"offset":18065},"indent":[]}}],"position":{"start":{"line":780,"column":1,"offset":18000},"end":{"line":780,"column":66,"offset":18065},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create reducers/index.js","position":{"start":{"line":781,"column":5,"offset":18070},"end":{"line":781,"column":29,"offset":18094},"indent":[]}}],"position":{"start":{"line":781,"column":5,"offset":18070},"end":{"line":781,"column":29,"offset":18094},"indent":[]}}],"position":{"start":{"line":781,"column":1,"offset":18066},"end":{"line":781,"column":29,"offset":18094},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Import {combineReducers } from 'redux' in this new file and export default combineReducers with the reducers inside.","position":{"start":{"line":782,"column":5,"offset":18099},"end":{"line":782,"column":121,"offset":18215},"indent":[]}}],"position":{"start":{"line":782,"column":5,"offset":18099},"end":{"line":782,"column":121,"offset":18215},"indent":[]}}],"position":{"start":{"line":782,"column":1,"offset":18095},"end":{"line":782,"column":121,"offset":18215},"indent":[]}}],"position":{"start":{"line":779,"column":1,"offset":17914},"end":{"line":782,"column":121,"offset":18215},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"app.js for React-Native Redux","position":{"start":{"line":784,"column":3,"offset":18219},"end":{"line":784,"column":32,"offset":18248},"indent":[]}}],"position":{"start":{"line":784,"column":1,"offset":18217},"end":{"line":784,"column":34,"offset":18250},"indent":[]}}],"position":{"start":{"line":784,"column":1,"offset":18217},"end":{"line":784,"column":34,"offset":18250},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React from 'react';\nimport { View } from 'react-native';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst App = () => {\n  return (\n    <Provider store={createStore(reducers)}>\n      <View />\n    </Provider>\n  );\n};\n\nexport default App;","position":{"start":{"line":786,"column":1,"offset":18252},"end":{"line":802,"column":4,"offset":18582},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"reducers/index.js","position":{"start":{"line":804,"column":3,"offset":18586},"end":{"line":804,"column":20,"offset":18603},"indent":[]}}],"position":{"start":{"line":804,"column":1,"offset":18584},"end":{"line":804,"column":22,"offset":18605},"indent":[]}}],"position":{"start":{"line":804,"column":1,"offset":18584},"end":{"line":804,"column":22,"offset":18605},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create ","position":{"start":{"line":806,"column":1,"offset":18607},"end":{"line":806,"column":8,"offset":18614},"indent":[]}},{"type":"inlineCode","value":"libraries","position":{"start":{"line":806,"column":8,"offset":18614},"end":{"line":806,"column":19,"offset":18625},"indent":[]}},{"type":"text","value":" as basis to always return an array.","position":{"start":{"line":806,"column":19,"offset":18625},"end":{"line":806,"column":55,"offset":18661},"indent":[]}}],"position":{"start":{"line":806,"column":1,"offset":18607},"end":{"line":806,"column":55,"offset":18661},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"import {combineReducers } from 'redux';\n\nexport default combineReducers({\n\tlibraries: () => []\n});","position":{"start":{"line":808,"column":1,"offset":18663},"end":{"line":814,"column":4,"offset":18769},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RNREDUX-8.2: Reducer and State Design","position":{"start":{"line":816,"column":4,"offset":18774},"end":{"line":816,"column":41,"offset":18811},"indent":[]}}],"position":{"start":{"line":816,"column":1,"offset":18771},"end":{"line":816,"column":41,"offset":18811},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How can we tap on something and move to show more detail?","position":{"start":{"line":818,"column":1,"offset":18813},"end":{"line":818,"column":58,"offset":18870},"indent":[]}}],"position":{"start":{"line":818,"column":1,"offset":18813},"end":{"line":818,"column":58,"offset":18870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's create a file to specifically show library details. Making a data model. You need to be thinking about Reducers here. Reducers contains the App Data.","position":{"start":{"line":820,"column":1,"offset":18872},"end":{"line":820,"column":156,"offset":19027},"indent":[]}}],"position":{"start":{"line":820,"column":1,"offset":18872},"end":{"line":820,"column":156,"offset":19027},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This builds on the ","position":{"start":{"line":822,"column":1,"offset":19029},"end":{"line":822,"column":20,"offset":19048},"indent":[]}},{"type":"inlineCode","value":"combineReducers","position":{"start":{"line":822,"column":20,"offset":19048},"end":{"line":822,"column":37,"offset":19065},"indent":[]}},{"type":"text","value":" function we have above.","position":{"start":{"line":822,"column":37,"offset":19065},"end":{"line":822,"column":61,"offset":19089},"indent":[]}}],"position":{"start":{"line":822,"column":1,"offset":19029},"end":{"line":822,"column":61,"offset":19089},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's have two separate pieces of state.","position":{"start":{"line":824,"column":1,"offset":19091},"end":{"line":824,"column":41,"offset":19131},"indent":[]}}],"position":{"start":{"line":824,"column":1,"offset":19091},"end":{"line":824,"column":41,"offset":19131},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a) a list of libraries\nb) currently selected library","position":{"start":{"line":826,"column":1,"offset":19133},"end":{"line":827,"column":30,"offset":19185},"indent":[1]}}],"position":{"start":{"line":826,"column":1,"offset":19133},"end":{"line":827,"column":30,"offset":19185},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"// Examples of what our reducers\n// could look like\n\n// Library Reducer\n\n[{ id: 1, name: 'React' }, { id: 2, name: 'Redux' }];\n\n// Selection Reducer\n\n1;","position":{"start":{"line":829,"column":1,"offset":19187},"end":{"line":840,"column":4,"offset":19357},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":842,"column":1,"offset":19359},"end":{"line":842,"column":4,"offset":19362},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Library list of data","position":{"start":{"line":844,"column":3,"offset":19366},"end":{"line":844,"column":23,"offset":19386},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":19364},"end":{"line":844,"column":25,"offset":19388},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":19364},"end":{"line":844,"column":25,"offset":19388},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Connect","position":{"start":{"line":846,"column":1,"offset":19390},"end":{"line":846,"column":10,"offset":19399},"indent":[]}},{"type":"text","value":" function: Used to connect up the reducers and state.","position":{"start":{"line":846,"column":10,"offset":19399},"end":{"line":846,"column":63,"offset":19452},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":19390},"end":{"line":846,"column":63,"offset":19452},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"LibraryReducer.js","position":{"start":{"line":848,"column":2,"offset":19455},"end":{"line":848,"column":19,"offset":19472},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":19454},"end":{"line":848,"column":20,"offset":19473},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":19454},"end":{"line":848,"column":20,"offset":19473},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"import data from './LibraryList.json';\n\nexport default () => data;","position":{"start":{"line":850,"column":1,"offset":19475},"end":{"line":854,"column":4,"offset":19549},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"LibraryReducer.json","position":{"start":{"line":856,"column":2,"offset":19552},"end":{"line":856,"column":21,"offset":19571},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":19551},"end":{"line":856,"column":22,"offset":19572},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":19551},"end":{"line":856,"column":22,"offset":19572},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This provides the data for above.","position":{"start":{"line":858,"column":1,"offset":19574},"end":{"line":858,"column":34,"offset":19607},"indent":[]}}],"position":{"start":{"line":858,"column":1,"offset":19574},"end":{"line":858,"column":34,"offset":19607},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"[\n\t{\n\t\t'id': 0,\n\t\t'title': 'ahid',\n\t\t'description': 'iOhoieshoit'\n\t},\n\t...\n]","position":{"start":{"line":860,"column":1,"offset":19609},"end":{"line":869,"column":4,"offset":19703},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"reducers.js","position":{"start":{"line":871,"column":2,"offset":19706},"end":{"line":871,"column":13,"offset":19717},"indent":[]}}],"position":{"start":{"line":871,"column":1,"offset":19705},"end":{"line":871,"column":14,"offset":19718},"indent":[]}}],"position":{"start":{"line":871,"column":1,"offset":19705},"end":{"line":871,"column":14,"offset":19718},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import { CombineReducers } from 'redux';\nimport LibraryReducer from './LibraryReducer';\n\nexport default combineReducers({\n  libraries: LibraryReducer,\n});","position":{"start":{"line":873,"column":1,"offset":19720},"end":{"line":880,"column":4,"offset":19892},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"LibraryList.js","position":{"start":{"line":882,"column":2,"offset":19895},"end":{"line":882,"column":16,"offset":19909},"indent":[]}}],"position":{"start":{"line":882,"column":1,"offset":19894},"end":{"line":882,"column":17,"offset":19910},"indent":[]}}],"position":{"start":{"line":882,"column":1,"offset":19894},"end":{"line":882,"column":17,"offset":19910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Rendering the list to the user. mapStateToProps will grab the state from the connect function that is exported in ","position":{"start":{"line":884,"column":1,"offset":19912},"end":{"line":884,"column":115,"offset":20026},"indent":[]}},{"type":"inlineCode","value":"combineReducers","position":{"start":{"line":884,"column":115,"offset":20026},"end":{"line":884,"column":132,"offset":20043},"indent":[]}},{"type":"text","value":" and any object returned from this ","position":{"start":{"line":884,"column":132,"offset":20043},"end":{"line":884,"column":167,"offset":20078},"indent":[]}},{"type":"inlineCode","value":"mapStateToProps","position":{"start":{"line":884,"column":167,"offset":20078},"end":{"line":884,"column":184,"offset":20095},"indent":[]}},{"type":"text","value":" function will become available to our props.","position":{"start":{"line":884,"column":184,"offset":20095},"end":{"line":884,"column":229,"offset":20140},"indent":[]}}],"position":{"start":{"line":884,"column":1,"offset":19912},"end":{"line":884,"column":229,"offset":20140},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LibraryList extends Component {\n\trender() {\n\t\t// this will show what is available from\n\t\t// the mapStateToProps func\n\t\t// console.log(this.props)\n\t\treturn;\n\t}\n}\n\nconst mapStateToProps = state => {\n\t// console.log(state); // use to see current state\n\treturn {\n\t\t// this will give a prop to our LibraryList\n\t\tlibraries: state.libraries;\n\t}\n};\n\nexport default connect(mapStateToProps)(LibraryList);","position":{"start":{"line":886,"column":1,"offset":20142},"end":{"line":908,"column":4,"offset":20643},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":910,"column":1,"offset":20645},"end":{"line":910,"column":4,"offset":20648},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Redux Thunk","position":{"start":{"line":912,"column":4,"offset":20653},"end":{"line":912,"column":15,"offset":20664},"indent":[]}}],"position":{"start":{"line":912,"column":1,"offset":20650},"end":{"line":912,"column":15,"offset":20664},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\n\n...","position":{"start":{"line":914,"column":1,"offset":20666},"end":{"line":919,"column":4,"offset":20770},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, inside fo the createStore, we adjust it to be like so...","position":{"start":{"line":921,"column":1,"offset":20772},"end":{"line":921,"column":62,"offset":20833},"indent":[]}}],"position":{"start":{"line":921,"column":1,"offset":20772},"end":{"line":921,"column":62,"offset":20833},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// the second arg is for initial states\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n<Provider store={store}>\n\t<View style={{ flex: 1 }}>\n\t\t<Header headerText={'Example'} />\n\t\t<Table />\n\t</View>\n</Provider>","position":{"start":{"line":923,"column":1,"offset":20835},"end":{"line":933,"column":4,"offset":21075},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now that ReduxThunk is set up, we can use it inside an action creator.","position":{"start":{"line":935,"column":1,"offset":21077},"end":{"line":935,"column":71,"offset":21147},"indent":[]}}],"position":{"start":{"line":935,"column":1,"offset":21077},"end":{"line":935,"column":71,"offset":21147},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Action Creators\nexport const selectAction = ({ email, password }) => {\n\treturn (dispatch) -> {\n\t\tfirebase.auth().signInWithEmailAndPassword(email, password)\n\t\t\t.then(user => console.log(user))\n\t};\n};","position":{"start":{"line":937,"column":1,"offset":21149},"end":{"line":945,"column":4,"offset":21359},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So, what is ReduxThunk doing for us?","position":{"start":{"line":947,"column":1,"offset":21361},"end":{"line":947,"column":37,"offset":21397},"indent":[]}}],"position":{"start":{"line":947,"column":1,"offset":21361},"end":{"line":947,"column":37,"offset":21397},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now that we have ReduxThunk, it will change how we call the action creator.","position":{"start":{"line":949,"column":1,"offset":21399},"end":{"line":949,"column":76,"offset":21474},"indent":[]}}],"position":{"start":{"line":949,"column":1,"offset":21399},"end":{"line":949,"column":76,"offset":21474},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Action Creator ","position":{"start":{"line":951,"column":1,"offset":21476},"end":{"line":951,"column":20,"offset":21495},"indent":[]}},{"type":"inlineCode","value":"WILL NOW RETURN A FUNCTION","position":{"start":{"line":951,"column":20,"offset":21495},"end":{"line":951,"column":48,"offset":21523},"indent":[]}},{"type":"text","value":". If ReduxThunk sees a function returned, it will send off an action with a dispatcher and immediately call that function.","position":{"start":{"line":951,"column":48,"offset":21523},"end":{"line":951,"column":170,"offset":21645},"indent":[]}}],"position":{"start":{"line":951,"column":1,"offset":21476},"end":{"line":951,"column":170,"offset":21645},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will then start our login request. The app will wait and the .then will automatically run and we will then dispatch our action.","position":{"start":{"line":953,"column":1,"offset":21647},"end":{"line":953,"column":133,"offset":21779},"indent":[]}}],"position":{"start":{"line":953,"column":1,"offset":21647},"end":{"line":953,"column":133,"offset":21779},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Action Creators\nexport const selectAction = ({ email, password }) => {\n\treturn (dispatch) -> {\n\t\tfirebase.auth().signInWithEmailAndPassword(email, password)\n\t\t\t.then(user => {\n\t\t\t\tdispatch({ type: 'LOGIN_USER_SUCCESS', payload: user });\n\t\t\t});\n\t};\n};","position":{"start":{"line":955,"column":1,"offset":21781},"end":{"line":965,"column":4,"offset":22042},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":967,"column":1,"offset":22044},"end":{"line":967,"column":4,"offset":22047},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dealing with Navigation","position":{"start":{"line":969,"column":4,"offset":22052},"end":{"line":969,"column":27,"offset":22075},"indent":[]}}],"position":{"start":{"line":969,"column":1,"offset":22049},"end":{"line":969,"column":27,"offset":22075},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As opposed to React with ","position":{"start":{"line":971,"column":1,"offset":22077},"end":{"line":971,"column":26,"offset":22102},"indent":[]}},{"type":"inlineCode","value":"React-Router","position":{"start":{"line":971,"column":26,"offset":22102},"end":{"line":971,"column":40,"offset":22116},"indent":[]}},{"type":"text","value":", React Native doesn't necessarily have one.","position":{"start":{"line":971,"column":40,"offset":22116},"end":{"line":971,"column":84,"offset":22160},"indent":[]}}],"position":{"start":{"line":971,"column":1,"offset":22077},"end":{"line":971,"column":84,"offset":22160},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this case, we'll be using the solution called ","position":{"start":{"line":973,"column":1,"offset":22162},"end":{"line":973,"column":50,"offset":22211},"indent":[]}},{"type":"inlineCode","value":"React-Native-Router-Flux","position":{"start":{"line":973,"column":50,"offset":22211},"end":{"line":973,"column":76,"offset":22237},"indent":[]}},{"type":"text","value":" to help with navigation.","position":{"start":{"line":973,"column":76,"offset":22237},"end":{"line":973,"column":101,"offset":22262},"indent":[]}}],"position":{"start":{"line":973,"column":1,"offset":22162},"end":{"line":973,"column":101,"offset":22262},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How does it work?","position":{"start":{"line":975,"column":1,"offset":22264},"end":{"line":975,"column":18,"offset":22281},"indent":[]}}],"position":{"start":{"line":975,"column":1,"offset":22264},"end":{"line":975,"column":18,"offset":22281},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Imagine an app that requires authentication. We could then have another scene where the is a Master-Detail relationship.","position":{"start":{"line":977,"column":1,"offset":22283},"end":{"line":977,"column":121,"offset":22403},"indent":[]}}],"position":{"start":{"line":977,"column":1,"offset":22283},"end":{"line":977,"column":121,"offset":22403},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We essentially define a ","position":{"start":{"line":979,"column":1,"offset":22405},"end":{"line":979,"column":25,"offset":22429},"indent":[]}},{"type":"inlineCode","value":"Scene","position":{"start":{"line":979,"column":25,"offset":22429},"end":{"line":979,"column":32,"offset":22436},"indent":[]}},{"type":"text","value":" for each distinct screens. For example.","position":{"start":{"line":979,"column":32,"offset":22436},"end":{"line":979,"column":72,"offset":22476},"indent":[]}}],"position":{"start":{"line":979,"column":1,"offset":22405},"end":{"line":979,"column":72,"offset":22476},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<Scene key=\"login\" component={LoginForm} />\n<Scene key=\"employeeList\" component={EmployeeList} />\n<Scene key=\"employeeDetail\" component={EmployeeDetail} />\n\n// All the props you can pass to the scene\n\n<Scene\n\tkey=\"login\" \t\t\t\t// call Actions.login() to show this screen\n\tcomponent={LoginForm} \t\t// component to show\n\ttitle=\"Login\"\t\t\t\t// make nav bar and give it a title - this is built in\n\tinitial \t\t\t\t\t// define the first screen to show\n/>","position":{"start":{"line":981,"column":1,"offset":22478},"end":{"line":994,"column":4,"offset":22925},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Navigation in the Router","position":{"start":{"line":996,"column":4,"offset":22930},"end":{"line":996,"column":28,"offset":22954},"indent":[]}}],"position":{"start":{"line":996,"column":1,"offset":22927},"end":{"line":996,"column":28,"offset":22954},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Create a router.js\n\nimport React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\n\n// scene-target\nimport ExampleComponent from './components/examplecomponent/ExampleComponent';\nimport Table from './components/table/Table';\n\nconst RouterComponent = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n\t\t\t<Scene key=\"table\" component={Table} title=\"Table\" initial />\n\t\t</Router>\n\t);\n};\n\nexport default RouterComponent;\n\n// in app.js\n\n...\nimport Router from './router';\n\nconst App = () => {\n\n\tconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Router />\n\t\t</Provider>\n\t);\n}\n\nexport default App;","position":{"start":{"line":998,"column":1,"offset":22956},"end":{"line":1036,"column":4,"offset":23688},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So how do we move between these scenes?","position":{"start":{"line":1038,"column":1,"offset":23690},"end":{"line":1038,"column":40,"offset":23729},"indent":[]}}],"position":{"start":{"line":1038,"column":1,"offset":23690},"end":{"line":1038,"column":40,"offset":23729},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Navigating between routes","position":{"start":{"line":1040,"column":4,"offset":23734},"end":{"line":1040,"column":29,"offset":23759},"indent":[]}}],"position":{"start":{"line":1040,"column":1,"offset":23731},"end":{"line":1040,"column":29,"offset":23759},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Navigation will happen from an action.","position":{"start":{"line":1042,"column":1,"offset":23761},"end":{"line":1042,"column":39,"offset":23799},"indent":[]}}],"position":{"start":{"line":1042,"column":1,"offset":23761},"end":{"line":1042,"column":39,"offset":23799},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// import actions\nimport { Actions } from 'react-native-router-flux';\n\n// Action Creators\nexport const loginUserSuccess = (dispatch, user) => {\n\tdispatch({\n\t\ttype: LOGIN_USER_SUCCESS,\n\t\tpayload: user\n\t});\n\n\tActions.employeeList(); // this method comes from the key property\n};","position":{"start":{"line":1044,"column":1,"offset":23801},"end":{"line":1057,"column":4,"offset":24085},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Grouping Scenes with 'Buckets'","position":{"start":{"line":1059,"column":4,"offset":24090},"end":{"line":1059,"column":34,"offset":24120},"indent":[]}}],"position":{"start":{"line":1059,"column":1,"offset":24087},"end":{"line":1059,"column":34,"offset":24120},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Making decisions on how the header should render.","position":{"start":{"line":1061,"column":1,"offset":24122},"end":{"line":1061,"column":50,"offset":24171},"indent":[]}}],"position":{"start":{"line":1061,"column":1,"offset":24122},"end":{"line":1061,"column":50,"offset":24171},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can do ","position":{"start":{"line":1063,"column":1,"offset":24173},"end":{"line":1063,"column":11,"offset":24183},"indent":[]}},{"type":"inlineCode","value":"scene nesting","position":{"start":{"line":1063,"column":11,"offset":24183},"end":{"line":1063,"column":26,"offset":24198},"indent":[]}},{"type":"text","value":" to group these screens. There is one 'gotcha' though. Now for the actions, we need to actually use Actions.main().","position":{"start":{"line":1063,"column":26,"offset":24198},"end":{"line":1063,"column":141,"offset":24313},"indent":[]}}],"position":{"start":{"line":1063,"column":1,"offset":24173},"end":{"line":1063,"column":141,"offset":24313},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// router.js\n\nconst RouterComponent = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Scene key=\"auth\">\n\t\t\t\t<Scene key=\"login\" component={Login} title=\"Login\" />\n\t\t\t</Scene>\n\t\t\t<Scene key=\"flow\">\n\t\t\t\t<Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n\t\t\t\t<Scene\n\t\t\t\t\t// for action, you normally call Actions.key()\n\t\t\t\t\tonRight={() => console.log('right!!!')}\n\t\t\t\t\trightTitle=\"Add\"\n\t\t\t\t\tkey=\"table\"\n\t\t\t\t\tcomponent={Table}\n\t\t\t\t\ttitle=\"Table\"\n\t\t\t\t\tinitial\n\t\t\t\t/>\n\t\t\t</Scene>\n\t\t</Router>\n\t);\n};","position":{"start":{"line":1065,"column":1,"offset":24315},"end":{"line":1089,"column":4,"offset":24812},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can use the ","position":{"start":{"line":1091,"column":1,"offset":24814},"end":{"line":1091,"column":16,"offset":24829},"indent":[]}},{"type":"inlineCode","value":"initial","position":{"start":{"line":1091,"column":16,"offset":24829},"end":{"line":1091,"column":25,"offset":24838},"indent":[]}},{"type":"text","value":" prop within these ","position":{"start":{"line":1091,"column":25,"offset":24838},"end":{"line":1091,"column":44,"offset":24857},"indent":[]}},{"type":"inlineCode","value":"buckets","position":{"start":{"line":1091,"column":44,"offset":24857},"end":{"line":1091,"column":53,"offset":24866},"indent":[]}},{"type":"text","value":" to let which component within a bucket to have an initial prop","position":{"start":{"line":1091,"column":53,"offset":24866},"end":{"line":1091,"column":116,"offset":24929},"indent":[]}}],"position":{"start":{"line":1091,"column":1,"offset":24814},"end":{"line":1091,"column":116,"offset":24929},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Actions to navigate between buckets","position":{"start":{"line":1093,"column":4,"offset":24934},"end":{"line":1093,"column":39,"offset":24969},"indent":[]}}],"position":{"start":{"line":1093,"column":1,"offset":24931},"end":{"line":1093,"column":39,"offset":24969},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These actions can be added using","position":{"start":{"line":1095,"column":1,"offset":24971},"end":{"line":1095,"column":33,"offset":25003},"indent":[]}}],"position":{"start":{"line":1095,"column":1,"offset":24971},"end":{"line":1095,"column":33,"offset":25003},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"import { Actions } from 'react-native-router-flux';\n\n// Action Creators - exammple thunk action creator\nconst loginUserSuccess = (dispatch, user) => {\n\tdispatch({\n\t\ttype: LOGIN_USER_SUCCESS,\n\t\tpayload: user\n\t});\n\n\tActions.employeeList();\n}","position":{"start":{"line":1097,"column":1,"offset":25005},"end":{"line":1109,"column":4,"offset":25252},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Form updates at a reducer level / Dynamic Property updates","position":{"start":{"line":1111,"column":4,"offset":25257},"end":{"line":1111,"column":62,"offset":25315},"indent":[]}}],"position":{"start":{"line":1111,"column":1,"offset":25254},"end":{"line":1111,"column":62,"offset":25315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example reducer function with ES6 dynamic change.","position":{"start":{"line":1113,"column":1,"offset":25317},"end":{"line":1113,"column":50,"offset":25366},"indent":[]}}],"position":{"start":{"line":1113,"column":1,"offset":25317},"end":{"line":1113,"column":50,"offset":25366},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"export default (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase EMPLOYEE_UPDATE:\n\t\t\treturn {...state, [action.payload.prop]: action.payload.value};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","position":{"start":{"line":1115,"column":1,"offset":25368},"end":{"line":1124,"column":4,"offset":25575},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":1127,"column":1,"offset":25578},"end":{"line":1127,"column":31,"offset":25608},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1127,"column":31,"offset":25608}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-native-with-redux\"\n    }}>{`React Native with Redux`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#react-native-with-redux\"\n        }}>{`React Native with Redux`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-1-intro\"\n        }}>{`RNREDUX-1: Intro`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-2-react-native-101\"\n        }}>{`RNREDUX-2: React Native 101`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-21-project-directoryscreen-content\"\n        }}>{`RNREDUX-2.1: Project Directory/Screen Content`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-22-react-vs-react-native\"\n        }}>{`RNREDUX-2.2: React vs React Native`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-4-http-requests-with-react-native\"\n        }}>{`RNREDUX-4: HTTP Requests with React Native`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-41-sourcing-album-data\"\n        }}>{`RNREDUX-4.1: Sourcing Album Data`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-42-functional-component-vs-class-component\"\n        }}>{`RNREDUX-4.2: Functional Component vs Class Component`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-43-fetching-data-with-lifecycle-methods\"\n        }}>{`RNREDUX-4.3: Fetching Data with Lifecycle Methods`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-44-rendering-a-list-of-components\"\n        }}>{`RNREDUX-4.4: Rendering a List of Components`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-45-creating-reusable-components\"\n        }}>{`RNREDUX-4.5: Creating Reusable Components`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-45-turn-a-component-into-sections\"\n        }}>{`RNREDUX-4.5: Turn a Component into Sections`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-5-handling-component-layout\"\n        }}>{`RNREDUX-5: Handling Component Layout`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-51-mastering-layout-with-flexbox\"\n        }}>{`RNREDUX-5.1: Mastering Layout with Flexbox`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-52-making-content-scrollable-and-handling-input\"\n        }}>{`RNREDUX-5.2: Making Content Scrollable and Handling Input`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-53-responding-to-user-input\"\n        }}>{`RNREDUX-5.3: Responding to User Input`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-8-redux-inside-of-react-native\"\n        }}>{`RNREDUX-8: Redux inside of React Native`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-81-redux-boilerplate\"\n        }}>{`RNREDUX-8.1: Redux Boilerplate`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#rnredux-82-reducer-and-state-design\"\n        }}>{`RNREDUX-8.2: Reducer and State Design`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#redux-thunk\"\n        }}>{`Redux Thunk`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#dealing-with-navigation\"\n        }}>{`Dealing with Navigation`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#navigation-in-the-router\"\n        }}>{`Navigation in the Router`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#navigating-between-routes\"\n        }}>{`Navigating between routes`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#grouping-scenes-with-buckets\"\n        }}>{`Grouping Scenes with 'Buckets'`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#actions-to-navigate-between-buckets\"\n        }}>{`Actions to navigate between buckets`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#form-updates-at-a-reducer-level--dynamic-property-updates\"\n        }}>{`Form updates at a reducer level / Dynamic Property updates`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"rnredux-1-intro\"\n    }}>{`RNREDUX-1: Intro`}</h2>\n    <p><strong parentName=\"p\">{`Roadmap`}</strong></p>\n    <p>{`Setting up RN for iOS and Android.`}</p>\n    <p><strong parentName=\"p\">{`Installing the Dependencies for OSX`}</strong></p>\n    <h2 {...{\n      \"id\": \"rnredux-2-react-native-101\"\n    }}>{`RNREDUX-2: React Native 101`}</h2>\n    <h2 {...{\n      \"id\": \"rnredux-21-project-directoryscreen-content\"\n    }}>{`RNREDUX-2.1: Project Directory/Screen Content`}</h2>\n    <p><strong parentName=\"p\">{`ios and android`}</strong></p>\n    <p>{`The project folders rarely need to be adjusted unless we want to work at a low-level.`}</p>\n    <p><strong parentName=\"p\">{`index.ios.js vs index.android.js`}</strong></p>\n    <p>{`Entry points for our applications. When Android or iOS run, these two files are the first platform entry points respectively.`}</p>\n    <p><strong parentName=\"p\">{`Steps for components`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Import a library to help create a component\n\nimport React from 'react';\n// destructuring\n// import ReactNative from 'react-native';\nimport { Text, AppRegistry } from 'react-native';\n\n// Create a component\n// if we are returning just one statement, we can get rid of the curly braces\n// and the return statement - not an error! ES lint issue.\n\nconst App => () => {\n    return (\n        <Text>Some Text</Text>\n    );\n}\n\n// ^ this will become...\n\nconst App => () => (\n    <Text>Some Text</Text>\n);\n\n// Render it to the device\n// name 'albums' must correlate to name of the project\n// also destructure ReactNative.AppRegistry.registerComponent('albums', () => App);\nAppRegistry.registerComponent('albums', () => App);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-22-react-vs-react-native\"\n    }}>{`RNREDUX-2.2: React vs React Native`}</h2>\n    <p>{`Both are distinct libraries. RN is essentially the handle to getting things onto a device!`}</p>\n    <p><inlineCode parentName=\"p\">{`import`}</inlineCode>{` is required to working with `}<inlineCode parentName=\"p\">{`outside code`}</inlineCode>{` eg. other libraries/modules.`}</p>\n    <p><strong parentName=\"p\">{`React`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Knows how a component should behave`}</li>\n      <li parentName=\"ul\">{`Knows how to take a bunch of components and make them work together`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`React Native`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Knows how to take the output from a component and place it on the screen`}</li>\n      <li parentName=\"ul\">{`Provides default core components (image, text)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"rnredux-4-http-requests-with-react-native\"\n    }}>{`RNREDUX-4: HTTP Requests with React Native`}</h2>\n    <h2 {...{\n      \"id\": \"rnredux-41-sourcing-album-data\"\n    }}>{`RNREDUX-4.1: Sourcing Album Data`}</h2>\n    <p>{`For the idea of creating is a label is to create two components.`}</p>\n    <p>{`a) The AlbumList\nb) The AlbumDetail`}</p>\n    <p><strong parentName=\"p\">{`AlbumList Component`}</strong></p>\n    <p>{`Note: If you are embedding more than one component, wrap around in `}<inlineCode parentName=\"p\">{`<View>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// after importing from React, ReactNative\n\nconst AlbumView = () => {\n    return (\n        <View>\n            <Text>Album List!</Text>\n        </View>\n    );\n};\n\nexport default AlbumList;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-42-functional-component-vs-class-component\"\n    }}>{`RNREDUX-4.2: Functional Component vs Class Component`}</h2>\n    <p><strong parentName=\"p\">{`Functional Component`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Used for presenting static data`}</li>\n      <li parentName=\"ul\">{`Can't handle fetching data`}</li>\n      <li parentName=\"ul\">{`Easy to write`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Class Component`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Used for dynamic sources of data`}</li>\n      <li parentName=\"ul\">{`Handles any data that might change (fetching data, user events, etc)`}</li>\n      <li parentName=\"ul\">{`Knows when it gets rerendered to the device (useful for data fetching)`}</li>\n      <li parentName=\"ul\">{`More code to write`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// functional component\n\nconst Header = () => {\n  return <Text>Hi there!</Text>;\n};\n\n// class component\n\nclass Header extends Component {\n  render() {\n    return <Text>Hi there!</Text>;\n  }\n}\n`}</code></pre>\n    <p>{`So recreating our AlbumList...`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\n\nclass AlbumView extends Component {\n    render() {\n        return (\n            <View>\n                <Text>Album List!</Text>\n            </View>\n        );\n    }\n};\n\nexport default AlbumList;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-43-fetching-data-with-lifecycle-methods\"\n    }}>{`RNREDUX-4.3: Fetching Data with Lifecycle Methods`}</h2>\n    <p>{`Class based components themselves KNOW when they're about to rendered.`}</p>\n    <p>{`Example Lifecycle Methods include `}<inlineCode parentName=\"p\">{`componentWillMount()`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Network Requests`}</strong></p>\n    <p>{`How do we make the HTTP request? It's quite straight forward.`}</p>\n    <p><inlineCode parentName=\"p\">{`npm install --save axios`}</inlineCode></p>\n    <p>{`Ensure you need to have some logic to rerender the components after the AJAX returns and the promise is fulfilled.`}</p>\n    <p><strong parentName=\"p\">{`Component Level State`}</strong></p>\n    <p>{`Components will already be on the screen before we can get our promise back. Our state so far will look like the following...`}</p>\n    <p>{`We need to use component level state for it all to rerender`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Set up a default state (class level property)`}</li>\n      <li parentName=\"ol\">{`Update the state (needs to use `}<inlineCode parentName=\"li\">{`this.setState`}</inlineCode>{`!)`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Rules of State`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Definition of State: a plain JS object used to record and respond to 'user-triggered events'.`}</li>\n      <li parentName=\"ul\">{`When we need to update what a component shows, call `}<inlineCode parentName=\"li\">{`this.setState`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Only change state with 'setState' not this.state='something'.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`When do we use props?`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`props is for parent to child communication`}</li>\n      <li parentName=\"ul\">{`state is internal record keeping`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`// before\nstate = { albums: [] };\n\n// after fetching data\nstate = {\n    albums: [\n        {name: 'ashio'},\n        {name: 'aheure'}\n    ]\n};\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\nimport axios from 'axios';\n\nclass AlbumView extends Component {\n    state = { albums: [] };\n\n\n    componentWillMount() {\n        // console.log('componentWillMount in console');\n        // debugger;\n        axios.get('https://theapilink.com')\n            .then(response => this.setState({ albums: response.data }));\n    }\n\n    render() {\n        // can use this when the render method continues to re-render\n        console.log(this.state);\n        debugger;\n\n        return (\n            <View>\n                <Text>Album List!</Text>\n            </View>\n        );\n    }\n};\n\nexport default AlbumList;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-44-rendering-a-list-of-components\"\n    }}>{`RNREDUX-4.4: Rendering a List of Components`}</h2>\n    <p>{`Only use state with class level components (not functional components)`}</p>\n    <p>{`For each album now, we want to create one component using `}<inlineCode parentName=\"p\">{`map`}</inlineCode>{`.`}</p>\n    <p>{`Ensure that each property has a unique key!`}</p>\n    <p><strong parentName=\"p\">{`AlbumList`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\nimport axios from 'axios';\n\nclass AlbumView extends Component {\n    state = { albums: [] };\n\n\n    componentWillMount() {\n        // console.log('componentWillMount in console');\n        // debugger;\n        axios.get('https://theapilink.com')\n            .then(response => this.setState({ albums: response.data }));\n    }\n\n    renderAlbums() {\n        return this.state.albums.map(album =>\n            // best to use for the key is an id if you have one\n            <Text key={album.title}>{album.title}</Text>\n        );\n    }\n\n    render() {\n        // can use this when the render method continues to re-render\n        console.log(this.state);\n        debugger;\n\n        return (\n            <View>\n                {this.renderAlbums()}\n            </View>\n        );\n    }\n};\n\nexport default AlbumList;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Creating an AlbumDetail`}</strong></p>\n    <p>{`Does it need to be a Class or Functional component?`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { View, Text }, from 'react-native';\n\nconst AlbumDetail = (props) => {\n    return (\n        <View>\n            <Text>{props.album.title}</Text>\n        </View>\n    );\n};\n\nexport default AlbumDetail;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Final AlbumList`}</strong></p>\n    <p>{`Import AlbumDetail, reset the \"renderAlbums\" function to render the AlbumDetail and then use props to pass down from parent to child.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { View }, from 'react-native';\nimport axios from 'axios';\nimport AlbumDetail from './AlbumDetail'\n\nclass AlbumView extends Component {\n    state = { albums: [] };\n\n\n    componentWillMount() {\n        // console.log('componentWillMount in console');\n        // debugger;\n        axios.get('https://theapilink.com')\n            .then(response => this.setState({ albums: response.data }));\n    }\n\n    renderAlbums() {\n        return this.state.albums.map(album =>\n            // best to use for the key is an id if you have one\n            // prop name \"album\" can be named anything\n            <AlbumDetail key={album.title} album={album}/>\n        );\n    }\n\n    render() {\n        // can use this when the render method continues to re-render\n        console.log(this.state);\n        debugger;\n\n        return (\n            <View>\n                {this.renderAlbums()}\n            </View>\n        );\n    }\n};\n\nexport default AlbumList;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-45-creating-reusable-components\"\n    }}>{`RNREDUX-4.5: Creating Reusable Components`}</h2>\n    <p>{`For styling, it is sometimes useful to make components within components for layout purposes!`}</p>\n    <p><strong parentName=\"p\">{`Passing components as props`}</strong></p>\n    <p>{`We can pass `}<inlineCode parentName=\"p\">{`props`}</inlineCode>{` as a parameter and then use {props.children} to make a reference to it.`}</p>\n    <p><strong parentName=\"p\">{`Card.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React from 'react';\nimport { View } from 'react-native';\n\nconst Card = (props) => {\n    render (\n        <View style={styles.containerStyle}>\n            {props.children}\n        </View>\n    );\n}\n\nconst styles = {\n    containerStyle: {\n        borderWidth: 1,\n        borderRadius: 2,\n        borderColor: '#ddd',\n        borderBottomWidth: 0,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 2,\n        elevation: 1,\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 10\n    }\n};\n\nexport default Card;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`AlbumDetail`}</strong></p>\n    <p>{`We want to use this to pass down props for `}<inlineCode parentName=\"p\">{`Card`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { Text }, from 'react-native';\nimport Card from './Card';\n\nconst AlbumDetail = (props) => {\n    return (\n        <Card>\n            <Text>{props.album.title}</Text>\n        </Card>\n    );\n};\n\nexport default AlbumDetail;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-45-turn-a-component-into-sections\"\n    }}>{`RNREDUX-4.5: Turn a Component into Sections`}</h2>\n    <p><strong parentName=\"p\">{`CardSection.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport { View } from 'react-native';\n\nconst CardSection = props => {\n  render(<View style={styles.containerStyle}>{props.children}</View>);\n};\n\nconst styles = {\n  containerStyle: {\n    borderBottomWidth: 1,\n    padding: 5,\n    backgroundColor: '#fff',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    borderColor: '#ddd',\n    position: 'relative',\n  },\n};\n\nexport default CardSection;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`AlbumDetail`}</strong></p>\n    <p>{`We want to use this to pass down props for `}<inlineCode parentName=\"p\">{`Card`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { Text }, from 'react-native';\nimport Card from './Card';\nimport CardSection from './CardSection';\n\nconst AlbumDetail = (props) => {\n    return (\n        <Card>\n            <CardSection>\n                <Text>{props.album.title}</Text>\n            </CardSection>\n        </Card>\n    );\n};\n\nexport default AlbumDetail;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-5-handling-component-layout\"\n    }}>{`RNREDUX-5: Handling Component Layout`}</h2>\n    <h2 {...{\n      \"id\": \"rnredux-51-mastering-layout-with-flexbox\"\n    }}>{`RNREDUX-5.1: Mastering Layout with Flexbox`}</h2>\n    <p>{`Designing for web from personal experience is generally easier than React Native.`}</p>\n    <p>{`How about layout challenges? Keeping things on the left, and on the right? We use Flexbox to be our friend!`}</p>\n    <p>{`Imaging a layout like the following.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Card>\n  <CardSection>\n    <Image />\n    <Text />\n    <Text />\n  </CardSection>\n</Card>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Positioning of elements`}</strong></p>\n    <p>{`How do we want to apply flexbox to our particular layout? What we can do is use `}<inlineCode parentName=\"p\">{`<View>`}</inlineCode>{` to wrap the images - this is similar to using things like `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{`.`}</p>\n    <p>{`We can then use flex direction to style our views for column and what is within for rows.`}</p>\n    <p>{`Unless we define a height, it will just flex to have just enough height!`}</p>\n    <p><strong parentName=\"p\">{`Images with React Native`}</strong></p>\n    <p>{`We can import `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` primitive from React Native!`}</p>\n    <p>{`However, images will not expand to fit by default. We need to manually add in a styling rule!`}</p>\n    <p><strong parentName=\"p\">{`Notes`}</strong></p>\n    <p>{`Destructure album objects if there is more than one.`}</p>\n    <p>{`If you wanted to, you can also dereference styles!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const { thumbnailStyle, headerContentStyle } = styles;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// the album and const is for destructuring\n\nconst Card = ({ album }) => {\n  const { title, artist, thumbnail_image } = album;\n\n  return (\n    <Card>\n      <CardSection>\n        <View style={styles.thumbnailContainerStyle}>\n          // <Image source={{ uri: props.album.thumbnail_image }} />\n          //destructured\n          <Image\n            style={styles.thumbnailStyle}\n            source={{ uri: thumbnail_image }}\n          />\n        </View>\n        <View style={styles.headerContentStyle}>\n          //<Text>{props.album.title}</Text>\n          //<Text>{props.album.artist}</Text>\n          // Destructured\n          <Text style={styles.headerTextStyle}>{title}</Text>\n          <Text>{artist}</Text>\n        </View>\n      </CardSection>\n      <CardSection>\n        <Image style={style.imageStyle} source={{ uri: image }} />\n      </CardSection>\n    </Card>\n  );\n};\n\nconst styles = {\n  headerContentStyle: {\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  headerTextStyle: {\n    fontSize: 18,\n  },\n  thumbnailStyle: {\n    height: 50,\n    width: 50,\n  },\n  thumbnailContainerStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  imageStyle: {\n    height: 300,\n    flex: 1,\n    width: null,\n  },\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-52-making-content-scrollable-and-handling-input\"\n    }}>{`RNREDUX-5.2: Making Content Scrollable and Handling Input`}</h2>\n    <p><strong parentName=\"p\">{`ScrollView`}</strong></p>\n    <p>{`Scrolling is definitely one of the differenes between React and React Native. To make them scrollable, we just import `}<inlineCode parentName=\"p\">{`ScrollView`}</inlineCode>{` and use that on the outside.`}</p>\n    <p>{`For this case, it is the renderAlbums.`}</p>\n    <p>{`We can just replace View with ScrollView.`}</p>\n    <p>{`You also MUST find the root view and set it to flex: 1.`}</p>\n    <p><strong parentName=\"p\">{`Handling Input`}</strong></p>\n    <p>{`Time to make a button.`}</p>\n    <p><strong parentName=\"p\">{`Button.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React from 'react';\nimport { Text } from 'react-native';\n\nconst Button = () = => {\n    return (\n        <Text>Click me!</Text>\n    );\n}\n\nexport default Button;\n`}</code></pre>\n    <p>{`Now when we use this, we can have a section to house a button.`}</p>\n    <p>{`We need to wrap the button but using `}<inlineCode parentName=\"p\">{`TouchableHighlight`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`TouchableOpacity`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\n\nconst Button = ({ onPress }) = => {\n\n    const { buttonStyle, textStyle } = styles;\n\n    return (\n        // from the parent, have the prop of onPress{() => function}\n        <TouchableOpacity style={buttonStyle} onPress={onPress}>\n            <Text style={textStyle}>\n                Click me!\n            </Text>\n        </TouchableOpacity>\n    );\n}\n\nconst styles = {\n    textStyle: {\n        alignSelf: 'center',\n        color: '#007aff',\n        fontSize: 16,\n        fontWeight: '600',\n        paddingTop: 10,\n        paddingBottom: 10\n    },\n    buttonStyle: {\n        flex: 1,\n        alignSelf: 'stretch',\n        backgroundColor: '#fff',\n        borderRadius: 5,\n        borderColor: '#007aff',\n    }\n}\n\nexport default Button;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-53-responding-to-user-input\"\n    }}>{`RNREDUX-5.3: Responding to User Input`}</h2>\n    <p><strong parentName=\"p\">{`Card.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// have your imports\n// the album and const is for destructuring\n\nconst Card = ({ album }) => {\n  const { title, artist, thumbnail_image, url } = album;\n\n  return (\n    <Card>\n      <CardSection>\n        <View style={styles.thumbnailContainerStyle}>\n          // <Image source={{ uri: props.album.thumbnail_image }} />\n          //destructured\n          <Image\n            style={styles.thumbnailStyle}\n            source={{ uri: thumbnail_image }}\n          />\n        </View>\n        <View style={styles.headerContentStyle}>\n          //<Text>{props.album.title}</Text>\n          //<Text>{props.album.artist}</Text>\n          // Destructured\n          <Text style={styles.headerTextStyle}>{title}</Text>\n          <Text>{artist}</Text>\n        </View>\n      </CardSection>\n      <CardSection>\n        <Image style={style.imageStyle} source={{ uri: image }} />\n      </CardSection>\n      <CardSection>\n        <Button onPress={() => openURL(album.url)}>Buy now</Button>\n      </CardSection>\n    </Card>\n  );\n};\n\nconst styles = {\n  headerContentStyle: {\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  headerTextStyle: {\n    fontSize: 18,\n  },\n  thumbnailStyle: {\n    height: 50,\n    width: 50,\n  },\n  thumbnailContainerStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  imageStyle: {\n    height: 300,\n    flex: 1,\n    width: null,\n  },\n};\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Button.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\n\nconst Button = ({ onPress, children }) = => {\n\n    const { buttonStyle, textStyle } = styles;\n\n    return (\n        // from the parent, have the prop of onPress{() => function}\n        <TouchableOpacity style={buttonStyle} onPress={onPress}>\n            <Text style={textStyle}>\n                { children }\n            </Text>\n        </TouchableOpacity>\n    );\n}\n\nconst styles = {\n    textStyle: {\n        alignSelf: 'center',\n        color: '#007aff',\n        fontSize: 16,\n        fontWeight: '600',\n        paddingTop: 10,\n        paddingBottom: 10\n    },\n    buttonStyle: {\n        flex: 1,\n        alignSelf: 'stretch',\n        backgroundColor: '#fff',\n        borderRadius: 5,\n        borderColor: '#007aff',\n    }\n}\n\nexport default Button;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-8-redux-inside-of-react-native\"\n    }}>{`RNREDUX-8: Redux inside of React Native`}</h2>\n    <h2 {...{\n      \"id\": \"rnredux-81-redux-boilerplate\"\n    }}>{`RNREDUX-8.1: Redux Boilerplate`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Provider>`}</inlineCode>{` tag works together with the Store. The Store is what holds the Application State.`}</p>\n    <p>{`The Provider is the communication with React. `}<inlineCode parentName=\"p\">{`react-redux`}</inlineCode>{` is the glue for React and Redux.`}</p>\n    <p><strong parentName=\"p\">{`Steps`}</strong></p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`import { Provider } from 'react-redux'`}</inlineCode>{` + `}<inlineCode parentName=\"li\">{`import { createStore } from 'redux'`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Wrap app view in `}<inlineCode parentName=\"li\">{`<Provider store={createStore(reducers)} />`}</inlineCode></li>\n      <li parentName=\"ol\">{`Create reducers/index.js`}</li>\n      <li parentName=\"ol\">{`Import {combineReducers } from 'redux' in this new file and export default combineReducers with the reducers inside.`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`app.js for React-Native Redux`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport { View } from 'react-native';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst App = () => {\n  return (\n    <Provider store={createStore(reducers)}>\n      <View />\n    </Provider>\n  );\n};\n\nexport default App;\n`}</code></pre>\n    <p><strong parentName=\"p\">{`reducers/index.js`}</strong></p>\n    <p>{`Create `}<inlineCode parentName=\"p\">{`libraries`}</inlineCode>{` as basis to always return an array.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import {combineReducers } from 'redux';\n\nexport default combineReducers({\n    libraries: () => []\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rnredux-82-reducer-and-state-design\"\n    }}>{`RNREDUX-8.2: Reducer and State Design`}</h2>\n    <p>{`How can we tap on something and move to show more detail?`}</p>\n    <p>{`Let's create a file to specifically show library details. Making a data model. You need to be thinking about Reducers here. Reducers contains the App Data.`}</p>\n    <p>{`This builds on the `}<inlineCode parentName=\"p\">{`combineReducers`}</inlineCode>{` function we have above.`}</p>\n    <p>{`Let's have two separate pieces of state.`}</p>\n    <p>{`a) a list of libraries\nb) currently selected library`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Examples of what our reducers\n// could look like\n\n// Library Reducer\n\n[{ id: 1, name: 'React' }, { id: 2, name: 'Redux' }];\n\n// Selection Reducer\n\n1;\n`}</code></pre>\n    <hr></hr>\n    <p><strong parentName=\"p\">{`Library list of data`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`Connect`}</inlineCode>{` function: Used to connect up the reducers and state.`}</p>\n    <p><em parentName=\"p\">{`LibraryReducer.js`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`import data from './LibraryList.json';\n\nexport default () => data;\n`}</code></pre>\n    <p><em parentName=\"p\">{`LibraryReducer.json`}</em></p>\n    <p>{`This provides the data for above.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`[\n    {\n        'id': 0,\n        'title': 'ahid',\n        'description': 'iOhoieshoit'\n    },\n    ...\n]\n`}</code></pre>\n    <p><em parentName=\"p\">{`reducers.js`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { CombineReducers } from 'redux';\nimport LibraryReducer from './LibraryReducer';\n\nexport default combineReducers({\n  libraries: LibraryReducer,\n});\n`}</code></pre>\n    <p><em parentName=\"p\">{`LibraryList.js`}</em></p>\n    <p>{`Rendering the list to the user. mapStateToProps will grab the state from the connect function that is exported in `}<inlineCode parentName=\"p\">{`combineReducers`}</inlineCode>{` and any object returned from this `}<inlineCode parentName=\"p\">{`mapStateToProps`}</inlineCode>{` function will become available to our props.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LibraryList extends Component {\n    render() {\n        // this will show what is available from\n        // the mapStateToProps func\n        // console.log(this.props)\n        return;\n    }\n}\n\nconst mapStateToProps = state => {\n    // console.log(state); // use to see current state\n    return {\n        // this will give a prop to our LibraryList\n        libraries: state.libraries;\n    }\n};\n\nexport default connect(mapStateToProps)(LibraryList);\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"redux-thunk\"\n    }}>{`Redux Thunk`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\n\n...\n`}</code></pre>\n    <p>{`Now, inside fo the createStore, we adjust it to be like so...`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// the second arg is for initial states\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n<Provider store={store}>\n    <View style={{ flex: 1 }}>\n        <Header headerText={'Example'} />\n        <Table />\n    </View>\n</Provider>\n`}</code></pre>\n    <p>{`Now that ReduxThunk is set up, we can use it inside an action creator.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => console.log(user))\n    };\n};\n`}</code></pre>\n    <p>{`So, what is ReduxThunk doing for us?`}</p>\n    <p>{`Now that we have ReduxThunk, it will change how we call the action creator.`}</p>\n    <p>{`The Action Creator `}<inlineCode parentName=\"p\">{`WILL NOW RETURN A FUNCTION`}</inlineCode>{`. If ReduxThunk sees a function returned, it will send off an action with a dispatcher and immediately call that function.`}</p>\n    <p>{`This will then start our login request. The app will wait and the .then will automatically run and we will then dispatch our action.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                dispatch({ type: 'LOGIN_USER_SUCCESS', payload: user });\n            });\n    };\n};\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"dealing-with-navigation\"\n    }}>{`Dealing with Navigation`}</h2>\n    <p>{`As opposed to React with `}<inlineCode parentName=\"p\">{`React-Router`}</inlineCode>{`, React Native doesn't necessarily have one.`}</p>\n    <p>{`In this case, we'll be using the solution called `}<inlineCode parentName=\"p\">{`React-Native-Router-Flux`}</inlineCode>{` to help with navigation.`}</p>\n    <p>{`How does it work?`}</p>\n    <p>{`Imagine an app that requires authentication. We could then have another scene where the is a Master-Detail relationship.`}</p>\n    <p>{`We essentially define a `}<inlineCode parentName=\"p\">{`Scene`}</inlineCode>{` for each distinct screens. For example.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<Scene key=\"login\" component={LoginForm} />\n<Scene key=\"employeeList\" component={EmployeeList} />\n<Scene key=\"employeeDetail\" component={EmployeeDetail} />\n\n// All the props you can pass to the scene\n\n<Scene\n    key=\"login\"                 // call Actions.login() to show this screen\n    component={LoginForm}       // component to show\n    title=\"Login\"               // make nav bar and give it a title - this is built in\n    initial                     // define the first screen to show\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"navigation-in-the-router\"\n    }}>{`Navigation in the Router`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`// Create a router.js\n\nimport React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\n\n// scene-target\nimport ExampleComponent from './components/examplecomponent/ExampleComponent';\nimport Table from './components/table/Table';\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n            <Scene key=\"table\" component={Table} title=\"Table\" initial />\n        </Router>\n    );\n};\n\nexport default RouterComponent;\n\n// in app.js\n\n...\nimport Router from './router';\n\nconst App = () => {\n\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n    return (\n        <Provider store={store}>\n            <Router />\n        </Provider>\n    );\n}\n\nexport default App;\n`}</code></pre>\n    <p>{`So how do we move between these scenes?`}</p>\n    <h2 {...{\n      \"id\": \"navigating-between-routes\"\n    }}>{`Navigating between routes`}</h2>\n    <p>{`Navigation will happen from an action.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// import actions\nimport { Actions } from 'react-native-router-flux';\n\n// Action Creators\nexport const loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList(); // this method comes from the key property\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"grouping-scenes-with-buckets\"\n    }}>{`Grouping Scenes with 'Buckets'`}</h2>\n    <p>{`Making decisions on how the header should render.`}</p>\n    <p>{`We can do `}<inlineCode parentName=\"p\">{`scene nesting`}</inlineCode>{` to group these screens. There is one 'gotcha' though. Now for the actions, we need to actually use Actions.main().`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// router.js\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"auth\">\n                <Scene key=\"login\" component={Login} title=\"Login\" />\n            </Scene>\n            <Scene key=\"flow\">\n                <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n                <Scene\n                    // for action, you normally call Actions.key()\n                    onRight={() => console.log('right!!!')}\n                    rightTitle=\"Add\"\n                    key=\"table\"\n                    component={Table}\n                    title=\"Table\"\n                    initial\n                />\n            </Scene>\n        </Router>\n    );\n};\n`}</code></pre>\n    <p>{`We can use the `}<inlineCode parentName=\"p\">{`initial`}</inlineCode>{` prop within these `}<inlineCode parentName=\"p\">{`buckets`}</inlineCode>{` to let which component within a bucket to have an initial prop`}</p>\n    <h2 {...{\n      \"id\": \"actions-to-navigate-between-buckets\"\n    }}>{`Actions to navigate between buckets`}</h2>\n    <p>{`These actions can be added using`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Actions } from 'react-native-router-flux';\n\n// Action Creators - exammple thunk action creator\nconst loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList();\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"form-updates-at-a-reducer-level--dynamic-property-updates\"\n    }}>{`Form updates at a reducer level / Dynamic Property updates`}</h2>\n    <p>{`Example reducer function with ES6 dynamic change.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case EMPLOYEE_UPDATE:\n            return {...state, [action.payload.prop]: action.payload.value};\n        default:\n            return state;\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}