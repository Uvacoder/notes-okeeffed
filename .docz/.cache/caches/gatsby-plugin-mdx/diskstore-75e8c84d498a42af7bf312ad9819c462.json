{"expireTime":9007200852878380000,"key":"gatsby-plugin-mdx-entire-payload-734e93b92b296eefa8965848c3a55a4f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Microservices with NodeJS","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":28,"offset":194},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":28,"offset":194},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":199},"end":{"line":10,"column":13,"offset":208},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":196},"end":{"line":10,"column":13,"offset":208},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://express-validator.github.io/docs/","children":[{"type":"text","value":"Express validator","position":{"start":{"line":12,"column":5,"offset":214},"end":{"line":12,"column":22,"offset":231},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":213},"end":{"line":12,"column":66,"offset":275},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":213},"end":{"line":12,"column":66,"offset":275},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":210},"end":{"line":12,"column":66,"offset":275},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://udemy.com/course/microservices-with-node-js-and-react/","children":[{"type":"text","value":"Udemy Course","position":{"start":{"line":13,"column":5,"offset":280},"end":{"line":13,"column":17,"offset":292},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":279},"end":{"line":13,"column":82,"offset":357},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":279},"end":{"line":13,"column":82,"offset":357},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":276},"end":{"line":13,"column":82,"offset":357},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/expressjs/cookie-session","children":[{"type":"text","value":"Cookie Session","position":{"start":{"line":14,"column":5,"offset":362},"end":{"line":14,"column":19,"offset":376},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":361},"end":{"line":14,"column":65,"offset":422},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":361},"end":{"line":14,"column":65,"offset":422},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":358},"end":{"line":14,"column":65,"offset":422},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/auth0/node-jsonwebtoken","children":[{"type":"text","value":"JSON Web Token","position":{"start":{"line":15,"column":5,"offset":427},"end":{"line":15,"column":19,"offset":441},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":426},"end":{"line":15,"column":64,"offset":486},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":426},"end":{"line":15,"column":64,"offset":486},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":423},"end":{"line":15,"column":64,"offset":486},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":210},"end":{"line":15,"column":64,"offset":486},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Fundamental Auth Strategies","position":{"start":{"line":17,"column":4,"offset":491},"end":{"line":17,"column":31,"offset":518},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":488},"end":{"line":17,"column":31,"offset":518},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"User auth in microservices is an unsolved problem.","position":{"start":{"line":19,"column":3,"offset":522},"end":{"line":19,"column":53,"offset":572},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":522},"end":{"line":19,"column":53,"offset":572},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":520},"end":{"line":19,"column":53,"offset":572},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"There are many ways to do it.","position":{"start":{"line":20,"column":3,"offset":575},"end":{"line":20,"column":32,"offset":604},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":575},"end":{"line":20,"column":32,"offset":604},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":573},"end":{"line":20,"column":32,"offset":604},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Outline a few approaches, but use one that works but has downsides.","position":{"start":{"line":21,"column":3,"offset":607},"end":{"line":21,"column":70,"offset":674},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":607},"end":{"line":21,"column":70,"offset":674},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":605},"end":{"line":21,"column":70,"offset":674},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":520},"end":{"line":21,"column":70,"offset":674},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the body of a request, a user needs to prove their auth with a JWT, Cookie or something similar.","position":{"start":{"line":23,"column":1,"offset":676},"end":{"line":23,"column":100,"offset":775},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":676},"end":{"line":23,"column":100,"offset":775},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Approaches to Auth - Strategy One","position":{"start":{"line":25,"column":5,"offset":781},"end":{"line":25,"column":38,"offset":814},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":777},"end":{"line":25,"column":38,"offset":814},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Individual services rely on a central auth service.","position":{"start":{"line":27,"column":1,"offset":816},"end":{"line":27,"column":52,"offset":867},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":816},"end":{"line":27,"column":52,"offset":867},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A microservice after receiving a request will need to check with an authentication service.","position":{"start":{"line":29,"column":1,"offset":869},"end":{"line":29,"column":92,"offset":960},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":869},"end":{"line":29,"column":92,"offset":960},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Sync Request in microservices is a request directly to a auth service.","position":{"start":{"line":31,"column":3,"offset":964},"end":{"line":31,"column":73,"offset":1034},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":964},"end":{"line":31,"column":73,"offset":1034},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":962},"end":{"line":31,"column":73,"offset":1034},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Approaches to Auth - Strategy Two","position":{"start":{"line":33,"column":5,"offset":1040},"end":{"line":33,"column":38,"offset":1073},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1036},"end":{"line":33,"column":38,"offset":1073},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Similar to the first, however the authentication service comes through a central gateway.","position":{"start":{"line":35,"column":1,"offset":1075},"end":{"line":35,"column":90,"offset":1164},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1075},"end":{"line":35,"column":90,"offset":1164},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Approaches to Auth - Strategy Three","position":{"start":{"line":37,"column":5,"offset":1170},"end":{"line":37,"column":40,"offset":1205},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1166},"end":{"line":37,"column":40,"offset":1205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You teach each service how to decide whether a user is authenticated.","position":{"start":{"line":39,"column":1,"offset":1207},"end":{"line":39,"column":70,"offset":1276},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1207},"end":{"line":39,"column":70,"offset":1276},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You teach the service how to inspect the JWT/Cookie and decide if the user is authenticated.","position":{"start":{"line":41,"column":1,"offset":1278},"end":{"line":41,"column":93,"offset":1370},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1278},"end":{"line":41,"column":93,"offset":1370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The downside to this method is that authentication method is that communicating between microservices becomes difficult.","position":{"start":{"line":43,"column":1,"offset":1372},"end":{"line":43,"column":121,"offset":1492},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1372},"end":{"line":43,"column":121,"offset":1492},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The issue would be how to let individual services that handle their own auth known when auth tokens (JWTs, Cookies, etc.) are no longer valid.","position":{"start":{"line":45,"column":1,"offset":1494},"end":{"line":45,"column":143,"offset":1636},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1494},"end":{"line":45,"column":143,"offset":1636},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can get around this by only ensure that a JWT is only good for however minutes. You can use an event bus to head around to all of services to ensure their access is short-lived.","position":{"start":{"line":47,"column":1,"offset":1638},"end":{"line":47,"column":182,"offset":1819},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1638},"end":{"line":47,"column":182,"offset":1819},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Cookies vs JWTs","position":{"start":{"line":49,"column":4,"offset":1824},"end":{"line":49,"column":19,"offset":1839},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1821},"end":{"line":49,"column":19,"offset":1839},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Cookies","position":{"start":{"line":51,"column":5,"offset":1845},"end":{"line":51,"column":12,"offset":1852},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1841},"end":{"line":51,"column":12,"offset":1852},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"They are a transport mechanism.","position":{"start":{"line":53,"column":1,"offset":1854},"end":{"line":53,"column":32,"offset":1885},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1854},"end":{"line":53,"column":32,"offset":1885},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The flow goes:","position":{"start":{"line":55,"column":1,"offset":1887},"end":{"line":55,"column":15,"offset":1901},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1887},"end":{"line":55,"column":15,"offset":1901},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Request to server","position":{"start":{"line":57,"column":4,"offset":1906},"end":{"line":57,"column":21,"offset":1923},"indent":[]}}],"position":{"start":{"line":57,"column":4,"offset":1906},"end":{"line":57,"column":21,"offset":1923},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1903},"end":{"line":57,"column":21,"offset":1923},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Response has ","position":{"start":{"line":58,"column":4,"offset":1927},"end":{"line":58,"column":17,"offset":1940},"indent":[]}},{"type":"inlineCode","value":"Set-Cookie","position":{"start":{"line":58,"column":17,"offset":1940},"end":{"line":58,"column":29,"offset":1952},"indent":[]}},{"type":"text","value":" header with a particular value.","position":{"start":{"line":58,"column":29,"offset":1952},"end":{"line":58,"column":61,"offset":1984},"indent":[]}}],"position":{"start":{"line":58,"column":4,"offset":1927},"end":{"line":58,"column":61,"offset":1984},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1924},"end":{"line":58,"column":61,"offset":1984},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The browser will make sure it always appends following requests with this cookie. It is an arbitrary piece of information.","position":{"start":{"line":59,"column":4,"offset":1988},"end":{"line":59,"column":126,"offset":2110},"indent":[]}}],"position":{"start":{"line":59,"column":4,"offset":1988},"end":{"line":59,"column":126,"offset":2110},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1985},"end":{"line":59,"column":126,"offset":2110},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1903},"end":{"line":59,"column":126,"offset":2110},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"JWTs","position":{"start":{"line":61,"column":5,"offset":2116},"end":{"line":61,"column":9,"offset":2120},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2112},"end":{"line":61,"column":9,"offset":2120},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An authentication/authorization mechanism.","position":{"start":{"line":63,"column":1,"offset":2122},"end":{"line":63,"column":43,"offset":2164},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2122},"end":{"line":63,"column":43,"offset":2164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We take an arbitrary piece of information (payload) and apply it through a JWT creation algorithm.","position":{"start":{"line":65,"column":1,"offset":2166},"end":{"line":65,"column":99,"offset":2264},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2166},"end":{"line":65,"column":99,"offset":2264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This can be both encoded and decoded.","position":{"start":{"line":67,"column":1,"offset":2266},"end":{"line":67,"column":38,"offset":2303},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2266},"end":{"line":67,"column":38,"offset":2303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This JWT can now have that JWT through a few methods: as a Authorization header, a token in the body, or still set it as a Cookie.","position":{"start":{"line":69,"column":1,"offset":2305},"end":{"line":69,"column":131,"offset":2435},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2305},"end":{"line":69,"column":131,"offset":2435},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JWTs don't require some kind of backing store.","position":{"start":{"line":71,"column":1,"offset":2437},"end":{"line":71,"column":47,"offset":2483},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2437},"end":{"line":71,"column":47,"offset":2483},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are some issues that pop up with JWTs and SSR.","position":{"start":{"line":73,"column":1,"offset":2485},"end":{"line":73,"column":53,"offset":2537},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2485},"end":{"line":73,"column":53,"offset":2537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When you are doing SSR, you must use a Cookie to communicate during the initial page load. You can work around this with service workers.","position":{"start":{"line":75,"column":1,"offset":2539},"end":{"line":75,"column":138,"offset":2676},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2539},"end":{"line":75,"column":138,"offset":2676},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Stores","position":{"start":{"line":77,"column":4,"offset":2681},"end":{"line":77,"column":10,"offset":2687},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2678},"end":{"line":77,"column":10,"offset":2687},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Cookie Session","position":{"start":{"line":79,"column":5,"offset":2693},"end":{"line":79,"column":19,"offset":2707},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2689},"end":{"line":79,"column":19,"offset":2707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We are using ","position":{"start":{"line":81,"column":1,"offset":2709},"end":{"line":81,"column":14,"offset":2722},"indent":[]}},{"type":"inlineCode","value":"cookie-session","position":{"start":{"line":81,"column":14,"offset":2722},"end":{"line":81,"column":30,"offset":2738},"indent":[]}},{"type":"text","value":" in this example, but you nees to be careful about whether or not this encrpytion method is understood across different languages.","position":{"start":{"line":81,"column":30,"offset":2738},"end":{"line":81,"column":160,"offset":2868},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2709},"end":{"line":81,"column":160,"offset":2868},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You need to check the encryption method.","position":{"start":{"line":83,"column":1,"offset":2870},"end":{"line":83,"column":41,"offset":2910},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2870},"end":{"line":83,"column":41,"offset":2910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JWTs are tamper resistent so are not encrypted in this example.","position":{"start":{"line":85,"column":1,"offset":2912},"end":{"line":85,"column":64,"offset":2975},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2912},"end":{"line":85,"column":64,"offset":2975},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Generating a JWT","position":{"start":{"line":87,"column":5,"offset":2981},"end":{"line":87,"column":21,"offset":2997},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2977},"end":{"line":87,"column":21,"offset":2997},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// generating a JWT\nconst payload = { key: 'somethingAboutUser', id: 123, email: 'user@email.com' };\nconst userJwt = jwt.sign(payload, 'secret');\n\n// storing on session\nreq.session = {\n  jwt: userJwt,\n};","position":{"start":{"line":89,"column":1,"offset":2999},"end":{"line":98,"column":4,"offset":3212},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you head to JWT.io, you can see with a token that the information passed can be decoded. However, if you do not pass the signing key, it will not be a valid token.","position":{"start":{"line":100,"column":1,"offset":3214},"end":{"line":100,"column":167,"offset":3380},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3214},"end":{"line":100,"column":167,"offset":3380},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Verifying the token","position":{"start":{"line":102,"column":4,"offset":3385},"end":{"line":102,"column":23,"offset":3404},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3382},"end":{"line":102,"column":23,"offset":3404},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// middleware for the user\nimport jwt from 'jsonwebtoken';\n\nexport const currentUser = (req, res, next) => {\n  if (!req.session?.jwt) {\n    return next();\n  }\n\n  try {\n    const payload = jwt.verify(req.session.jwt, process.env.JWT_KEY!)\n    req.currentUser = payload;\n  } catch (e) {\n  }\n  next();\n};","position":{"start":{"line":104,"column":1,"offset":3406},"end":{"line":120,"column":4,"offset":3717},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Storing Secrets","position":{"start":{"line":122,"column":4,"offset":3722},"end":{"line":122,"column":19,"offset":3737},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3719},"end":{"line":122,"column":19,"offset":3737},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You never want to hardcode the secret. Based on what you are running (Kubernetes, Lambda, etc.) you will want to keep the secret stored as a secret based on your approach.","position":{"start":{"line":124,"column":1,"offset":3739},"end":{"line":124,"column":172,"offset":3910},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3739},"end":{"line":124,"column":172,"offset":3910},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Typing aside","position":{"start":{"line":126,"column":4,"offset":3915},"end":{"line":126,"column":16,"offset":3927},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3912},"end":{"line":126,"column":16,"offset":3927},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Extending types:","position":{"start":{"line":128,"column":1,"offset":3929},"end":{"line":128,"column":17,"offset":3945},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3929},"end":{"line":128,"column":17,"offset":3945},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"interface UserPayload {\n  id: string;\n  email: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: UserPayload;\n    }\n  }\n}","position":{"start":{"line":130,"column":1,"offset":3947},"end":{"line":143,"column":4,"offset":4122},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":146,"column":1,"offset":4125},"end":{"line":146,"column":31,"offset":4155},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":146,"column":31,"offset":4155}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"microservices-with-nodejs\"\n    }}>{`Microservices with NodeJS`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://express-validator.github.io/docs/\"\n        }}>{`Express validator`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://udemy.com/course/microservices-with-node-js-and-react/\"\n        }}>{`Udemy Course`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/expressjs/cookie-session\"\n        }}>{`Cookie Session`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/auth0/node-jsonwebtoken\"\n        }}>{`JSON Web Token`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"fundamental-auth-strategies\"\n    }}>{`Fundamental Auth Strategies`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`User auth in microservices is an unsolved problem.`}</li>\n      <li parentName=\"ul\">{`There are many ways to do it.`}</li>\n      <li parentName=\"ul\">{`Outline a few approaches, but use one that works but has downsides.`}</li>\n    </ul>\n    <p>{`In the body of a request, a user needs to prove their auth with a JWT, Cookie or something similar.`}</p>\n    <h3 {...{\n      \"id\": \"approaches-to-auth---strategy-one\"\n    }}>{`Approaches to Auth - Strategy One`}</h3>\n    <p>{`Individual services rely on a central auth service.`}</p>\n    <p>{`A microservice after receiving a request will need to check with an authentication service.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Sync Request in microservices is a request directly to a auth service.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"approaches-to-auth---strategy-two\"\n    }}>{`Approaches to Auth - Strategy Two`}</h3>\n    <p>{`Similar to the first, however the authentication service comes through a central gateway.`}</p>\n    <h3 {...{\n      \"id\": \"approaches-to-auth---strategy-three\"\n    }}>{`Approaches to Auth - Strategy Three`}</h3>\n    <p>{`You teach each service how to decide whether a user is authenticated.`}</p>\n    <p>{`You teach the service how to inspect the JWT/Cookie and decide if the user is authenticated.`}</p>\n    <p>{`The downside to this method is that authentication method is that communicating between microservices becomes difficult.`}</p>\n    <p>{`The issue would be how to let individual services that handle their own auth known when auth tokens (JWTs, Cookies, etc.) are no longer valid.`}</p>\n    <p>{`You can get around this by only ensure that a JWT is only good for however minutes. You can use an event bus to head around to all of services to ensure their access is short-lived.`}</p>\n    <h2 {...{\n      \"id\": \"cookies-vs-jwts\"\n    }}>{`Cookies vs JWTs`}</h2>\n    <h3 {...{\n      \"id\": \"cookies\"\n    }}>{`Cookies`}</h3>\n    <p>{`They are a transport mechanism.`}</p>\n    <p>{`The flow goes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Request to server`}</li>\n      <li parentName=\"ol\">{`Response has `}<inlineCode parentName=\"li\">{`Set-Cookie`}</inlineCode>{` header with a particular value.`}</li>\n      <li parentName=\"ol\">{`The browser will make sure it always appends following requests with this cookie. It is an arbitrary piece of information.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"jwts\"\n    }}>{`JWTs`}</h3>\n    <p>{`An authentication/authorization mechanism.`}</p>\n    <p>{`We take an arbitrary piece of information (payload) and apply it through a JWT creation algorithm.`}</p>\n    <p>{`This can be both encoded and decoded.`}</p>\n    <p>{`This JWT can now have that JWT through a few methods: as a Authorization header, a token in the body, or still set it as a Cookie.`}</p>\n    <p>{`JWTs don't require some kind of backing store.`}</p>\n    <p>{`There are some issues that pop up with JWTs and SSR.`}</p>\n    <p>{`When you are doing SSR, you must use a Cookie to communicate during the initial page load. You can work around this with service workers.`}</p>\n    <h2 {...{\n      \"id\": \"stores\"\n    }}>{`Stores`}</h2>\n    <h3 {...{\n      \"id\": \"cookie-session\"\n    }}>{`Cookie Session`}</h3>\n    <p>{`We are using `}<inlineCode parentName=\"p\">{`cookie-session`}</inlineCode>{` in this example, but you nees to be careful about whether or not this encrpytion method is understood across different languages.`}</p>\n    <p>{`You need to check the encryption method.`}</p>\n    <p>{`JWTs are tamper resistent so are not encrypted in this example.`}</p>\n    <h3 {...{\n      \"id\": \"generating-a-jwt\"\n    }}>{`Generating a JWT`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// generating a JWT\nconst payload = { key: 'somethingAboutUser', id: 123, email: 'user@email.com' };\nconst userJwt = jwt.sign(payload, 'secret');\n\n// storing on session\nreq.session = {\n  jwt: userJwt,\n};\n`}</code></pre>\n    <p>{`If you head to JWT.io, you can see with a token that the information passed can be decoded. However, if you do not pass the signing key, it will not be a valid token.`}</p>\n    <h2 {...{\n      \"id\": \"verifying-the-token\"\n    }}>{`Verifying the token`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// middleware for the user\nimport jwt from 'jsonwebtoken';\n\nexport const currentUser = (req, res, next) => {\n  if (!req.session?.jwt) {\n    return next();\n  }\n\n  try {\n    const payload = jwt.verify(req.session.jwt, process.env.JWT_KEY!)\n    req.currentUser = payload;\n  } catch (e) {\n  }\n  next();\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"storing-secrets\"\n    }}>{`Storing Secrets`}</h2>\n    <p>{`You never want to hardcode the secret. Based on what you are running (Kubernetes, Lambda, etc.) you will want to keep the secret stored as a secret based on your approach.`}</p>\n    <h2 {...{\n      \"id\": \"typing-aside\"\n    }}>{`Typing aside`}</h2>\n    <p>{`Extending types:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`interface UserPayload {\n  id: string;\n  email: string;\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: UserPayload;\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}