{"expireTime":9007200849425596000,"key":"gatsby-plugin-mdx-entire-payload-1ef143776cb25426b481b379cdab4b96-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"String Scramble","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":18,"offset":184},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":18,"offset":184},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":189},"end":{"line":10,"column":13,"offset":198},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":186},"end":{"line":10,"column":13,"offset":198},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.coderbyte.com/editor/String%20Scramble:JavaScript","children":[{"type":"text","value":"CoderByte","position":{"start":{"line":12,"column":5,"offset":204},"end":{"line":12,"column":14,"offset":213},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":203},"end":{"line":12,"column":78,"offset":277},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":203},"end":{"line":12,"column":78,"offset":277},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":200},"end":{"line":12,"column":78,"offset":277},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":200},"end":{"line":12,"column":78,"offset":277},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Question","position":{"start":{"line":14,"column":4,"offset":282},"end":{"line":14,"column":12,"offset":290},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":279},"end":{"line":14,"column":12,"offset":290},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Have the function StringScramble(str1,str2) take both parameters being passed and return the string true if a portion of str1 characters can be rearranged to match str2, otherwise return the string false. For example: if str1 is \"rkqodlw\" and str2 is \"world\" the output should return true. Punctuation and symbols will not be entered with the parameters.","position":{"start":{"line":16,"column":1,"offset":292},"end":{"line":16,"column":355,"offset":646},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":292},"end":{"line":16,"column":355,"offset":646},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":18,"column":4,"offset":651},"end":{"line":18,"column":12,"offset":659},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":648},"end":{"line":18,"column":12,"offset":659},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"Input: \"cdore\" & str2= \"coder\"\nOutput: true","position":{"start":{"line":20,"column":1,"offset":661},"end":{"line":23,"column":4,"offset":717},"indent":[1,1,1]}},{"type":"code","lang":"shell","meta":null,"value":"Input: \"h3llko\" & str2 = \"hello\"\nOutput: false","position":{"start":{"line":25,"column":1,"offset":719},"end":{"line":28,"column":4,"offset":778},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Answer","position":{"start":{"line":30,"column":4,"offset":783},"end":{"line":30,"column":10,"offset":789},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":780},"end":{"line":30,"column":10,"offset":789},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function StringScramble(str1, str2) {\n  // for each element of str2, remove the punctuation and symbols\n  // this is more for robustness\n  let filteredStr1 = str1.replace(/[^0-9a-zA-Z]/gi, '');\n  let filteredStr2 = str2.replace(/[^0-9a-zA-Z]/gi, '');\n\n  for (let i = 0; i < filteredStr2.length; i++) {\n    // replace element if it exists in filteredStr1\n    if (filteredStr1.indexOf(filteredStr2[i]) === -1) {\n      return false;\n    }\n\n    filteredStr1 = filteredStr1.replace(filteredStr2[i], '');\n  }\n\n  return true;\n}","position":{"start":{"line":32,"column":1,"offset":791},"end":{"line":50,"column":4,"offset":1329},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":53,"column":1,"offset":1332},"end":{"line":53,"column":31,"offset":1362},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":53,"column":31,"offset":1362}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"string-scramble\"\n    }}>{`String Scramble`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.coderbyte.com/editor/String%20Scramble:JavaScript\"\n        }}>{`CoderByte`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"question\"\n    }}>{`Question`}</h2>\n    <p>{`Have the function StringScramble(str1,str2) take both parameters being passed and return the string true if a portion of str1 characters can be rearranged to match str2, otherwise return the string false. For example: if str1 is \"rkqodlw\" and str2 is \"world\" the output should return true. Punctuation and symbols will not be entered with the parameters.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"cdore\" & str2= \"coder\"\nOutput: true\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"h3llko\" & str2 = \"hello\"\nOutput: false\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function StringScramble(str1, str2) {\n  // for each element of str2, remove the punctuation and symbols\n  // this is more for robustness\n  let filteredStr1 = str1.replace(/[^0-9a-zA-Z]/gi, '');\n  let filteredStr2 = str2.replace(/[^0-9a-zA-Z]/gi, '');\n\n  for (let i = 0; i < filteredStr2.length; i++) {\n    // replace element if it exists in filteredStr1\n    if (filteredStr1.indexOf(filteredStr2[i]) === -1) {\n      return false;\n    }\n\n    filteredStr1 = filteredStr1.replace(filteredStr2[i], '');\n  }\n\n  return true;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}