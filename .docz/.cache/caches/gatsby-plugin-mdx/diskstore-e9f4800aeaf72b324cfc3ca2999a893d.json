{"expireTime":9007200852878424000,"key":"gatsby-plugin-mdx-entire-payload-89383f57b0c74a1899c5cb104e62c6dd-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Fizz Buzz in Java","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":20,"offset":186},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":20,"offset":186},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gradle setup","position":{"start":{"line":10,"column":4,"offset":191},"end":{"line":10,"column":16,"offset":203},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":16,"offset":203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For our ","position":{"start":{"line":12,"column":1,"offset":205},"end":{"line":12,"column":9,"offset":213},"indent":[]}},{"type":"inlineCode","value":"build.gradle","position":{"start":{"line":12,"column":9,"offset":213},"end":{"line":12,"column":23,"offset":227},"indent":[]}},{"type":"text","value":" file:","position":{"start":{"line":12,"column":23,"offset":227},"end":{"line":12,"column":29,"offset":233},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":205},"end":{"line":12,"column":29,"offset":233},"indent":[]}},{"type":"code","lang":"gradle","meta":null,"value":"apply plugin: \"java\"\napply plugin: \"eclipse\"\napply plugin: \"idea\"\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile \"junit:junit:4.12\"\n}\ntest {\n    testLogging {\n        exceptionFormat = 'full'\n        events = [\"passed\", \"failed\", \"skipped\"]\n    }\n}","position":{"start":{"line":14,"column":1,"offset":235},"end":{"line":32,"column":4,"offset":519},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting up the Tests","position":{"start":{"line":34,"column":4,"offset":524},"end":{"line":34,"column":24,"offset":544},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":521},"end":{"line":34,"column":24,"offset":544},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create file ","position":{"start":{"line":36,"column":1,"offset":546},"end":{"line":36,"column":13,"offset":558},"indent":[]}},{"type":"inlineCode","value":"src/test/java/FizzBuzzTest.java","position":{"start":{"line":36,"column":13,"offset":558},"end":{"line":36,"column":46,"offset":591},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":36,"column":46,"offset":591},"end":{"line":36,"column":47,"offset":592},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":546},"end":{"line":36,"column":47,"offset":592},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"import org.junit.Ignore;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class FizzBuzzTest {\n    @Test\n    public void testReturnsIntAsString() {\n        assertEquals(\"2\", new FizzBuzz().run(2));\n    }\n\n    // @Ignore(\"Remove to run test\")\n    @Test\n    public void testReturnsFizz() {\n        assertEquals(\"Fizz\", new FizzBuzz().run(3));\n    }\n\n    @Test\n    public void testReturnsBuzz() {\n        assertEquals(\"Buzz\", new FizzBuzz().run(5));\n    }\n\n    @Test\n    public void testReturnsFizzBuzz() {\n        assertEquals(\"FizzBuzz\", new FizzBuzz().run(15));\n    }\n}","position":{"start":{"line":38,"column":1,"offset":594},"end":{"line":66,"column":4,"offset":1203},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"src/main/java/FizzBuzz.java","position":{"start":{"line":68,"column":4,"offset":1208},"end":{"line":68,"column":31,"offset":1235},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1205},"end":{"line":68,"column":31,"offset":1235},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For our main Java file running FizzBuzz:","position":{"start":{"line":70,"column":1,"offset":1237},"end":{"line":70,"column":41,"offset":1277},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1237},"end":{"line":70,"column":41,"offset":1277},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"class FizzBuzz {\n    String run(Integer input) {\n        if (input % 15 == 0) {\n            return \"FizzBuzz\";\n        } else if (input % 3 == 0) {\n            return \"Fizz\";\n        } else if (input % 5 == 0) {\n            return \"Buzz\";\n        } else {\n            return Integer.toString(input);\n        }\n    }\n}","position":{"start":{"line":72,"column":1,"offset":1279},"end":{"line":86,"column":4,"offset":1608},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Running tests","position":{"start":{"line":88,"column":4,"offset":1613},"end":{"line":88,"column":17,"offset":1626},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":1610},"end":{"line":88,"column":17,"offset":1626},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run ","position":{"start":{"line":90,"column":1,"offset":1628},"end":{"line":90,"column":5,"offset":1632},"indent":[]}},{"type":"inlineCode","value":"gradle test","position":{"start":{"line":90,"column":5,"offset":1632},"end":{"line":90,"column":18,"offset":1645},"indent":[]}},{"type":"text","value":" to compile and test our FizzBuzz class.","position":{"start":{"line":90,"column":18,"offset":1645},"end":{"line":90,"column":58,"offset":1685},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":1628},"end":{"line":90,"column":58,"offset":1685},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":93,"column":1,"offset":1688},"end":{"line":93,"column":31,"offset":1718},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":93,"column":31,"offset":1718}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"fizz-buzz-in-java\"\n    }}>{`Fizz Buzz in Java`}</h1>\n    <h2 {...{\n      \"id\": \"gradle-setup\"\n    }}>{`Gradle setup`}</h2>\n    <p>{`For our `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`apply plugin: \"java\"\napply plugin: \"eclipse\"\napply plugin: \"idea\"\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile \"junit:junit:4.12\"\n}\ntest {\n    testLogging {\n        exceptionFormat = 'full'\n        events = [\"passed\", \"failed\", \"skipped\"]\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-tests\"\n    }}>{`Setting up the Tests`}</h2>\n    <p>{`Create file `}<inlineCode parentName=\"p\">{`src/test/java/FizzBuzzTest.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import org.junit.Ignore;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class FizzBuzzTest {\n    @Test\n    public void testReturnsIntAsString() {\n        assertEquals(\"2\", new FizzBuzz().run(2));\n    }\n\n    // @Ignore(\"Remove to run test\")\n    @Test\n    public void testReturnsFizz() {\n        assertEquals(\"Fizz\", new FizzBuzz().run(3));\n    }\n\n    @Test\n    public void testReturnsBuzz() {\n        assertEquals(\"Buzz\", new FizzBuzz().run(5));\n    }\n\n    @Test\n    public void testReturnsFizzBuzz() {\n        assertEquals(\"FizzBuzz\", new FizzBuzz().run(15));\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"srcmainjavafizzbuzzjava\"\n    }}>{`src/main/java/FizzBuzz.java`}</h2>\n    <p>{`For our main Java file running FizzBuzz:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`class FizzBuzz {\n    String run(Integer input) {\n        if (input % 15 == 0) {\n            return \"FizzBuzz\";\n        } else if (input % 3 == 0) {\n            return \"Fizz\";\n        } else if (input % 5 == 0) {\n            return \"Buzz\";\n        } else {\n            return Integer.toString(input);\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-tests\"\n    }}>{`Running tests`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`gradle test`}</inlineCode>{` to compile and test our FizzBuzz class.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}