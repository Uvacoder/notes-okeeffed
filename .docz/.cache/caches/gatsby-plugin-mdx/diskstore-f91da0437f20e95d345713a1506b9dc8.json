{"expireTime":9007200848610851000,"key":"gatsby-plugin-mdx-entire-payload-2c9d9a0aaa9f59113251734b667ce6fd-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Awesome Tooling CLI","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":22,"offset":188},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":22,"offset":188},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":193},"end":{"line":10,"column":13,"offset":202},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":190},"end":{"line":10,"column":13,"offset":202},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/cespare/reflex","children":[{"type":"text","value":"Reflex","position":{"start":{"line":12,"column":5,"offset":208},"end":{"line":12,"column":11,"offset":214},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":207},"end":{"line":12,"column":47,"offset":250},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":207},"end":{"line":12,"column":47,"offset":250},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":204},"end":{"line":12,"column":47,"offset":250},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":204},"end":{"line":12,"column":47,"offset":250},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Reflex","position":{"start":{"line":14,"column":4,"offset":255},"end":{"line":14,"column":10,"offset":261},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":252},"end":{"line":14,"column":10,"offset":261},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Reflex is a small tool to watch a directory and rerun a command when certain files change. It's great for automatically running compile/lint/test tasks and for reloading your application when the code changes.","position":{"start":{"line":16,"column":3,"offset":265},"end":{"line":16,"column":212,"offset":474},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":265},"end":{"line":16,"column":212,"offset":474},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":263},"end":{"line":16,"column":212,"offset":474},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# Rerun make whenever a .c file changes\nreflex -r '\\.c$' make\n\n# Compile and rerun hello.jar whenever a kotlin file changes\nreflex -r '\\.kt$' kotlinc hello.kt -include-runtime -d hello.jar && java -jar hello.jar","position":{"start":{"line":18,"column":1,"offset":476},"end":{"line":24,"column":4,"offset":700},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":27,"column":1,"offset":703},"end":{"line":27,"column":31,"offset":733},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":27,"column":31,"offset":733}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"awesome-tooling-cli\"\n    }}>{`Awesome Tooling CLI`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/cespare/reflex\"\n        }}>{`Reflex`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"reflex\"\n    }}>{`Reflex`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Reflex is a small tool to watch a directory and rerun a command when certain files change. It's great for automatically running compile/lint/test tasks and for reloading your application when the code changes.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Rerun make whenever a .c file changes\nreflex -r '\\\\.c$' make\n\n# Compile and rerun hello.jar whenever a kotlin file changes\nreflex -r '\\\\.kt$' kotlinc hello.kt -include-runtime -d hello.jar && java -jar hello.jar\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}