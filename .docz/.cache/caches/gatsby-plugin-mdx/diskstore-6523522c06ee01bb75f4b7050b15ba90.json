{"expireTime":9007200848610914000,"key":"gatsby-plugin-mdx-entire-payload-ed3fbd27149058068394093c8b0ed913-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Rate Limiting","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":16,"offset":182},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":16,"offset":182},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":187},"end":{"line":10,"column":13,"offset":196},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":184},"end":{"line":10,"column":13,"offset":196},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/nfriedly/express-rate-limit","children":[{"type":"text","value":"Express Rate Limit","position":{"start":{"line":12,"column":5,"offset":202},"end":{"line":12,"column":23,"offset":220},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":201},"end":{"line":12,"column":72,"offset":269},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":201},"end":{"line":12,"column":72,"offset":269},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":198},"end":{"line":12,"column":72,"offset":269},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.npmjs.com/package/rate-limit-redis","children":[{"type":"text","value":"Rate limit Redis","position":{"start":{"line":13,"column":5,"offset":274},"end":{"line":13,"column":21,"offset":290},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":273},"end":{"line":13,"column":70,"offset":339},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":273},"end":{"line":13,"column":70,"offset":339},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":270},"end":{"line":13,"column":70,"offset":339},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/NodeRedis/node-redis","children":[{"type":"text","value":"Node Redis docs","position":{"start":{"line":14,"column":5,"offset":344},"end":{"line":14,"column":20,"offset":359},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":343},"end":{"line":14,"column":62,"offset":401},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":343},"end":{"line":14,"column":62,"offset":401},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":340},"end":{"line":14,"column":62,"offset":401},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":198},"end":{"line":14,"column":62,"offset":401},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":16,"column":4,"offset":406},"end":{"line":16,"column":9,"offset":411},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":403},"end":{"line":16,"column":9,"offset":411},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":18,"column":1,"offset":413},"end":{"line":18,"column":5,"offset":417},"indent":[]}},{"type":"inlineCode","value":"index.js","position":{"start":{"line":18,"column":5,"offset":417},"end":{"line":18,"column":15,"offset":427},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":18,"column":15,"offset":427},"end":{"line":18,"column":16,"offset":428},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":413},"end":{"line":18,"column":16,"offset":428},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const express = require('express');\nconst rateLimit = require('express-rate-limit');\nconst app = express();\nconst port = 8080;\n\nconst limiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n});\napp.use(limiter);\n\napp.get('/', (_, res) => res.send('RESPONSE_SUCCESS'));\n\napp.listen(port, () => console.log('Server started'));","position":{"start":{"line":20,"column":1,"offset":430},"end":{"line":35,"column":4,"offset":838},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":37,"column":1,"offset":840},"end":{"line":37,"column":5,"offset":844},"indent":[]}},{"type":"inlineCode","value":"index.test.js","position":{"start":{"line":37,"column":5,"offset":844},"end":{"line":37,"column":20,"offset":859},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":37,"column":20,"offset":859},"end":{"line":37,"column":21,"offset":860},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":840},"end":{"line":37,"column":21,"offset":860},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const execa = require('execa');\n\ndescribe('rate limiter server', () => {\n  test('expects GET / to return \"Success\"', async () => {\n    const { stdout } = await execa('ab', [\n      '-n',\n      '200',\n      '-v',\n      '3',\n      'http://localhost:8080/',\n    ]);\n    const matches = stdout.match(/RESPONSE_SUCCESS/g);\n    expect(matches.length).toEqual(100);\n  });\n});","position":{"start":{"line":39,"column":1,"offset":862},"end":{"line":55,"column":4,"offset":1247},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":58,"column":1,"offset":1250},"end":{"line":58,"column":31,"offset":1280},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":58,"column":31,"offset":1280}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rate-limiting\"\n    }}>{`Rate Limiting`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/nfriedly/express-rate-limit\"\n        }}>{`Express Rate Limit`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/package/rate-limit-redis\"\n        }}>{`Rate limit Redis`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/NodeRedis/node-redis\"\n        }}>{`Node Redis docs`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <p>{`For `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const express = require('express');\nconst rateLimit = require('express-rate-limit');\nconst app = express();\nconst port = 8080;\n\nconst limiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n});\napp.use(limiter);\n\napp.get('/', (_, res) => res.send('RESPONSE_SUCCESS'));\n\napp.listen(port, () => console.log('Server started'));\n`}</code></pre>\n    <p>{`For `}<inlineCode parentName=\"p\">{`index.test.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const execa = require('execa');\n\ndescribe('rate limiter server', () => {\n  test('expects GET / to return \"Success\"', async () => {\n    const { stdout } = await execa('ab', [\n      '-n',\n      '200',\n      '-v',\n      '3',\n      'http://localhost:8080/',\n    ]);\n    const matches = stdout.match(/RESPONSE_SUCCESS/g);\n    expect(matches.length).toEqual(100);\n  });\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}