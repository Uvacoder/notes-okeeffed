{"expireTime":9007200849425512000,"key":"gatsby-plugin-mdx-entire-payload-024d61a0ba31cffbc618a346cc644e85-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Animations in React","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":22,"offset":188},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":22,"offset":188},"indent":[]}},{"type":"jsx","value":"<!-- TOC -->autoauto- [Animations in React](#animations-in-react)auto- [REACTAN-1: Installation](#reactan-1-installation)auto- [REACTAN-2: Using CSS to now run the Transitions and Transforms](#reactan-2-using-css-to-now-run-the-transitions-and-transforms)autoauto<!-- /TOC -->","position":{"start":{"line":10,"column":1,"offset":190},"end":{"line":10,"column":277,"offset":466},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"REACTAN-1: Installation","position":{"start":{"line":12,"column":3,"offset":470},"end":{"line":12,"column":26,"offset":493},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":468},"end":{"line":12,"column":26,"offset":493},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"React Transistions can be done use the ","position":{"start":{"line":14,"column":1,"offset":495},"end":{"line":14,"column":40,"offset":534},"indent":[]}},{"type":"inlineCode","value":"ReactCSSTransitionGroup","position":{"start":{"line":14,"column":40,"offset":534},"end":{"line":14,"column":65,"offset":559},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":65,"offset":559},"end":{"line":14,"column":66,"offset":560},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":495},"end":{"line":14,"column":66,"offset":560},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Since React uses the virtual DOM, we don't get a chance to directly apply a CSS transition like you normally would with jQuery or JS.","position":{"start":{"line":16,"column":1,"offset":562},"end":{"line":16,"column":134,"offset":695},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":562},"end":{"line":16,"column":134,"offset":695},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To install: ","position":{"start":{"line":18,"column":1,"offset":697},"end":{"line":18,"column":13,"offset":709},"indent":[]}},{"type":"inlineCode","value":"yarn add react-addons-css-transition-group","position":{"start":{"line":18,"column":13,"offset":709},"end":{"line":18,"column":57,"offset":753},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":697},"end":{"line":18,"column":57,"offset":753},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the JS file:","position":{"start":{"line":20,"column":1,"offset":755},"end":{"line":20,"column":16,"offset":770},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":755},"end":{"line":20,"column":16,"offset":770},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nexport default class Transition extends Component {\n\trender() {\n\t\treturn {\n\t\t\t<ReactCSSTransitionGroup>\n\t\t\t\t{ list }\n\t\t\t</ReactCSSTransitionGroup>\n\t\t}\n\t}\n}","position":{"start":{"line":22,"column":1,"offset":772},"end":{"line":34,"column":4,"offset":1019},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"By default, ","position":{"start":{"line":36,"column":1,"offset":1021},"end":{"line":36,"column":13,"offset":1033},"indent":[]}},{"type":"inlineCode","value":"<ReactCSSTransitionGroup>","position":{"start":{"line":36,"column":13,"offset":1033},"end":{"line":36,"column":40,"offset":1060},"indent":[]}},{"type":"text","value":" renders as a ","position":{"start":{"line":36,"column":40,"offset":1060},"end":{"line":36,"column":54,"offset":1074},"indent":[]}},{"type":"inlineCode","value":"span","position":{"start":{"line":36,"column":54,"offset":1074},"end":{"line":36,"column":60,"offset":1080},"indent":[]}},{"type":"text","value":", but we can give it a ","position":{"start":{"line":36,"column":60,"offset":1080},"end":{"line":36,"column":83,"offset":1103},"indent":[]}},{"type":"inlineCode","value":"component","position":{"start":{"line":36,"column":83,"offset":1103},"end":{"line":36,"column":94,"offset":1114},"indent":[]}},{"type":"text","value":" property to change it! E.g. ","position":{"start":{"line":36,"column":94,"offset":1114},"end":{"line":36,"column":123,"offset":1143},"indent":[]}},{"type":"inlineCode","value":"<ReactCSSTransitionGroup component=\"ul\">","position":{"start":{"line":36,"column":123,"offset":1143},"end":{"line":36,"column":165,"offset":1185},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1021},"end":{"line":36,"column":165,"offset":1185},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To access the property for animations, we need to set a property of ","position":{"start":{"line":38,"column":1,"offset":1187},"end":{"line":38,"column":69,"offset":1255},"indent":[]}},{"type":"inlineCode","value":"transitionName","position":{"start":{"line":38,"column":69,"offset":1255},"end":{"line":38,"column":85,"offset":1271},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":38,"column":85,"offset":1271},"end":{"line":38,"column":86,"offset":1272},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1187},"end":{"line":38,"column":86,"offset":1272},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"E.g. ","position":{"start":{"line":40,"column":1,"offset":1274},"end":{"line":40,"column":6,"offset":1279},"indent":[]}},{"type":"inlineCode","value":"<ReactCSSTransitionGroup component=\"ul\" transitionName=\"slide\">","position":{"start":{"line":40,"column":6,"offset":1279},"end":{"line":40,"column":71,"offset":1344},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1274},"end":{"line":40,"column":71,"offset":1344},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are a couple of other noteworthy properties:","position":{"start":{"line":42,"column":1,"offset":1346},"end":{"line":42,"column":51,"offset":1396},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1346},"end":{"line":42,"column":51,"offset":1396},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"<ReactCSSTransitionGroup\n  component=\"ul\"\n  transitionName=\"slide\"\n  transitionEnterTimeout={500} // this is for the duration of the transition in ms\n  transitionLeaveTimeout={500} // transition for leaving the DOM\n  transitionAppear={true} // transition for the ReactCSSTransitionGroup component\n  transitionAppearTimeout={500} // time for is\n>\n  {list}\n</ReactCSSTransitionGroup>","position":{"start":{"line":44,"column":1,"offset":1398},"end":{"line":55,"column":4,"offset":1797},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"REACTAN-2: Using CSS to now run the Transitions and Transforms","position":{"start":{"line":57,"column":3,"offset":1801},"end":{"line":57,"column":65,"offset":1863},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1799},"end":{"line":57,"column":65,"offset":1863},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// in the css file\n\n/* start enter state */\n.slide-enter {\n\ttransform: translateX(-100%);\n}\n\n/* end enter state */\n.slide-enter.slide-enter-active {\n\ttransform: translateX(0);\n\ttransition: transform 0.5s ease-out;\n}\n\n/* start leave state */\n.slide-leave {\n\ttransform: translateX(0);\n}\n\n/* end leave state */\n.slide-leave.slide-leave-active {\n\ttransform: translateX(-100%);\n\topacity: 0;\n\ttransition: 0.5s ease-in;\n}\n\n/* initial mounting */\n.slide-appear {\n\topacity: 0;\n}\n\n.slide-appear.slide-appear-active {\n\topacity: 1;\n\ttransition: opacity 0.5s ease-in;\n}","position":{"start":{"line":59,"column":1,"offset":1865},"end":{"line":94,"column":4,"offset":2429},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":97,"column":1,"offset":2432},"end":{"line":97,"column":31,"offset":2462},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":97,"column":31,"offset":2462}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"animations-in-react\"\n    }}>{`Animations in React`}</h1>\n    {\n      /* TOC -->autoauto- [Animations in React](#animations-in-react)auto- [REACTAN-1: Installation](#reactan-1-installation)auto- [REACTAN-2: Using CSS to now run the Transitions and Transforms](#reactan-2-using-css-to-now-run-the-transitions-and-transforms)autoauto<!-- /TOC */\n    }\n    <h1 {...{\n      \"id\": \"reactan-1-installation\"\n    }}>{`REACTAN-1: Installation`}</h1>\n    <p>{`React Transistions can be done use the `}<inlineCode parentName=\"p\">{`ReactCSSTransitionGroup`}</inlineCode>{`.`}</p>\n    <p>{`Since React uses the virtual DOM, we don't get a chance to directly apply a CSS transition like you normally would with jQuery or JS.`}</p>\n    <p>{`To install: `}<inlineCode parentName=\"p\">{`yarn add react-addons-css-transition-group`}</inlineCode></p>\n    <p>{`In the JS file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nexport default class Transition extends Component {\n    render() {\n        return {\n            <ReactCSSTransitionGroup>\n                { list }\n            </ReactCSSTransitionGroup>\n        }\n    }\n}\n`}</code></pre>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`<ReactCSSTransitionGroup>`}</inlineCode>{` renders as a `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{`, but we can give it a `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` property to change it! E.g. `}<inlineCode parentName=\"p\">{`<ReactCSSTransitionGroup component=\"ul\">`}</inlineCode></p>\n    <p>{`To access the property for animations, we need to set a property of `}<inlineCode parentName=\"p\">{`transitionName`}</inlineCode>{`.`}</p>\n    <p>{`E.g. `}<inlineCode parentName=\"p\">{`<ReactCSSTransitionGroup component=\"ul\" transitionName=\"slide\">`}</inlineCode></p>\n    <p>{`There are a couple of other noteworthy properties:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ReactCSSTransitionGroup\n  component=\"ul\"\n  transitionName=\"slide\"\n  transitionEnterTimeout={500} // this is for the duration of the transition in ms\n  transitionLeaveTimeout={500} // transition for leaving the DOM\n  transitionAppear={true} // transition for the ReactCSSTransitionGroup component\n  transitionAppearTimeout={500} // time for is\n>\n  {list}\n</ReactCSSTransitionGroup>\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"reactan-2-using-css-to-now-run-the-transitions-and-transforms\"\n    }}>{`REACTAN-2: Using CSS to now run the Transitions and Transforms`}</h1>\n    <pre><code parentName=\"pre\" {...{}}>{`// in the css file\n\n/* start enter state */\n.slide-enter {\n    transform: translateX(-100%);\n}\n\n/* end enter state */\n.slide-enter.slide-enter-active {\n    transform: translateX(0);\n    transition: transform 0.5s ease-out;\n}\n\n/* start leave state */\n.slide-leave {\n    transform: translateX(0);\n}\n\n/* end leave state */\n.slide-leave.slide-leave-active {\n    transform: translateX(-100%);\n    opacity: 0;\n    transition: 0.5s ease-in;\n}\n\n/* initial mounting */\n.slide-appear {\n    opacity: 0;\n}\n\n.slide-appear.slide-appear-active {\n    opacity: 1;\n    transition: opacity 0.5s ease-in;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}