{"expireTime":9007200849425590000,"key":"gatsby-plugin-mdx-entire-payload-059ead7700c3fe060c7674fd2822fb5b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"CSS Style Guide","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":18,"offset":183},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":18,"offset":183},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Table of Contents","position":{"start":{"line":9,"column":4,"offset":188},"end":{"line":9,"column":21,"offset":205},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":185},"end":{"line":9,"column":21,"offset":205},"indent":[]}},{"type":"jsx","value":"<a href=\"#ordering\">Ordering</a>\n<a href=\"#structure\">Structure</a>","position":{"start":{"line":11,"column":1,"offset":207},"end":{"line":12,"column":35,"offset":274},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":17,"column":1,"offset":279},"end":{"line":17,"column":4,"offset":282},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CSS Ordering","position":{"start":{"line":19,"column":4,"offset":287},"end":{"line":19,"column":16,"offset":299},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":284},"end":{"line":19,"column":16,"offset":299},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":".selector {\n  /* Positioning */\n  position: absolute;\n  z-index: 10;\n  top: 0;\n  right: 0;\n\n  /* Display & Box Model */\n  display: inline-block;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border: 10px solid #333;\n  margin: 10px;\n\n  /* Color */\n  background: #000;\n  color: #fff\n  \n  /* Text */\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.4;\n  text-align: right;\n\n  /* Other */\n  cursor: pointer;\n}","position":{"start":{"line":21,"column":1,"offset":301},"end":{"line":52,"column":4,"offset":783},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":56,"column":1,"offset":787},"end":{"line":56,"column":4,"offset":790},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CSS Structure","position":{"start":{"line":58,"column":4,"offset":795},"end":{"line":58,"column":17,"offset":808},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":792},"end":{"line":58,"column":18,"offset":809},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"One Component per file","position":{"start":{"line":62,"column":4,"offset":816},"end":{"line":62,"column":26,"offset":838},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":813},"end":{"line":62,"column":26,"offset":838},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For each component, place them in their own file.","position":{"start":{"line":64,"column":1,"offset":840},"end":{"line":64,"column":50,"offset":889},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":840},"end":{"line":64,"column":50,"offset":889},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"/* css/components/search-form.scss */\n.search-form {\n  > .button { /* ... */ }\n  > .field { /* ... */ }\n  > .label { /* ... */ }\n\n  // variants\n  &.-small { /* ... */ }\n  &.-wide { /* ... */ }\n}","position":{"start":{"line":66,"column":1,"offset":891},"end":{"line":77,"column":4,"offset":1096},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Nesting","position":{"start":{"line":81,"column":4,"offset":1103},"end":{"line":81,"column":11,"offset":1110},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1100},"end":{"line":81,"column":11,"offset":1110},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use no more than 1 level of nesting. It's easy to get lost with too much nesting.","position":{"start":{"line":83,"column":1,"offset":1112},"end":{"line":83,"column":82,"offset":1193},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1112},"end":{"line":83,"column":82,"offset":1193},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"/* ✗ Avoid: 3 levels of nesting */\n.image-frame {\n  > .description {\n    /* ... */\n\n    > .icon {\n      /* ... */\n    }\n  }\n}\n\n/* ✓ Better: 2 levels */\n.image-frame {\n  > .description { /* ... */ }\n  > .description > .icon { /* ... */ }\n}","position":{"start":{"line":85,"column":1,"offset":1195},"end":{"line":102,"column":4,"offset":1441},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":104,"column":1,"offset":1443},"end":{"line":104,"column":31,"offset":1473},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":104,"column":31,"offset":1473}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"css-style-guide\"\n    }}>{`CSS Style Guide`}</h1>\n    <h2 {...{\n      \"id\": \"table-of-contents\"\n    }}>{`Table of Contents`}</h2>\n    <a href=\"#ordering\">Ordering</a>\n    <a href=\"#structure\">Structure</a>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"css-ordering\"\n    }}>{`CSS Ordering`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.selector {\n  /* Positioning */\n  position: absolute;\n  z-index: 10;\n  top: 0;\n  right: 0;\n\n  /* Display & Box Model */\n  display: inline-block;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border: 10px solid #333;\n  margin: 10px;\n\n  /* Color */\n  background: #000;\n  color: #fff\n  \n  /* Text */\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.4;\n  text-align: right;\n\n  /* Other */\n  cursor: pointer;\n}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"css-structure\"\n    }}>{`CSS Structure`}</h2>\n    <h2 {...{\n      \"id\": \"one-component-per-file\"\n    }}>{`One Component per file`}</h2>\n    <p>{`For each component, place them in their own file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* css/components/search-form.scss */\n.search-form {\n  > .button { /* ... */ }\n  > .field { /* ... */ }\n  > .label { /* ... */ }\n\n  // variants\n  &.-small { /* ... */ }\n  &.-wide { /* ... */ }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"nesting\"\n    }}>{`Nesting`}</h2>\n    <p>{`Use no more than 1 level of nesting. It's easy to get lost with too much nesting.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`/* ✗ Avoid: 3 levels of nesting */\n.image-frame {\n  > .description {\n    /* ... */\n\n    > .icon {\n      /* ... */\n    }\n  }\n}\n\n/* ✓ Better: 2 levels */\n.image-frame {\n  > .description { /* ... */ }\n  > .description > .icon { /* ... */ }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}