{"expireTime":9007200849425507000,"key":"gatsby-plugin-mdx-entire-payload-ed7e356e44637ad7709fce81a0feeb16-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"SQL-Window-Functions","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":23,"offset":188},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":23,"offset":188},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It allows you to compare values as they come through.","position":{"start":{"line":9,"column":1,"offset":190},"end":{"line":9,"column":54,"offset":243},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":190},"end":{"line":9,"column":54,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will use Postgres SQL.","position":{"start":{"line":11,"column":1,"offset":245},"end":{"line":11,"column":28,"offset":272},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":245},"end":{"line":11,"column":28,"offset":272},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are a number of SQL variations that can use window functions.","position":{"start":{"line":13,"column":1,"offset":274},"end":{"line":13,"column":68,"offset":341},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":274},"end":{"line":13,"column":68,"offset":341},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":15,"column":1,"offset":343},"end":{"line":15,"column":31,"offset":373},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":15,"column":31,"offset":373}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sql-window-functions\"\n    }}>{`SQL-Window-Functions`}</h1>\n    <p>{`It allows you to compare values as they come through.`}</p>\n    <p>{`This will use Postgres SQL.`}</p>\n    <p>{`There are a number of SQL variations that can use window functions.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}