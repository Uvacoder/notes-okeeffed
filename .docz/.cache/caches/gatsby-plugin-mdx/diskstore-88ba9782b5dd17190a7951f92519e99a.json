{"expireTime":9007200867335921000,"key":"gatsby-plugin-mdx-entire-payload-6419550db71feda74ca57c24d93e4fed-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Socket.io","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":12,"offset":178},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":12,"offset":178},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Getting Started","position":{"start":{"line":10,"column":4,"offset":183},"end":{"line":10,"column":19,"offset":198},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":180},"end":{"line":10,"column":19,"offset":198},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"yarn add socket.io","position":{"start":{"line":12,"column":1,"offset":200},"end":{"line":14,"column":4,"offset":226},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Server code","position":{"start":{"line":16,"column":4,"offset":231},"end":{"line":16,"column":15,"offset":242},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":228},"end":{"line":16,"column":15,"offset":242},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var app = require('express')();\nvar http = require('http').Server(app);\nvar io = require('socket.io')(http);\n\napp.get('/', function(req, res) {\n  res.sendFile(__dirname + '/index.html');\n});\n\nio.on('connection', function(socket) {\n  console.log('a user connected');\n});\n\nhttp.listen(3000, function() {\n  console.log('listening on *:3000');\n});","position":{"start":{"line":18,"column":1,"offset":244},"end":{"line":34,"column":4,"offset":605},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Client server","position":{"start":{"line":36,"column":4,"offset":610},"end":{"line":36,"column":17,"offset":623},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":607},"end":{"line":36,"column":17,"offset":623},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var app = require('express')();\nvar http = require('http').Server(app);\nvar io = require('socket.io-client');\nvar socket = io.connect(\n  '<address>',\n  {\n    reconnection: true\n  }\n);\n\nsocket.on('connect', function() {\n  console.log('connected to localhost:3000');\n  socket.on('clientEvent', function(data) {\n    console.log('message from the server:', data);\n    socket.emit('serverEvent', \"thanks server! for sending '\" + data + \"'\");\n  });\n});","position":{"start":{"line":38,"column":1,"offset":625},"end":{"line":56,"column":4,"offset":1089},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":59,"column":1,"offset":1092},"end":{"line":59,"column":31,"offset":1122},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":31,"offset":1122}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"socketio\"\n    }}>{`Socket.io`}</h1>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn add socket.io\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"server-code\"\n    }}>{`Server code`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var app = require('express')();\nvar http = require('http').Server(app);\nvar io = require('socket.io')(http);\n\napp.get('/', function(req, res) {\n  res.sendFile(__dirname + '/index.html');\n});\n\nio.on('connection', function(socket) {\n  console.log('a user connected');\n});\n\nhttp.listen(3000, function() {\n  console.log('listening on *:3000');\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"client-server\"\n    }}>{`Client server`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var app = require('express')();\nvar http = require('http').Server(app);\nvar io = require('socket.io-client');\nvar socket = io.connect(\n  '<address>',\n  {\n    reconnection: true\n  }\n);\n\nsocket.on('connect', function() {\n  console.log('connected to localhost:3000');\n  socket.on('clientEvent', function(data) {\n    console.log('message from the server:', data);\n    socket.emit('serverEvent', \"thanks server! for sending '\" + data + \"'\");\n  });\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}