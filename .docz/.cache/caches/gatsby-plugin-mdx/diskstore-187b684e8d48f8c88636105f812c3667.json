{"expireTime":9007200849425516000,"key":"gatsby-plugin-mdx-entire-payload-b84b2860c6b391f6b1f4126329077aa1-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Testing React Applications","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":29,"offset":195},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":29,"offset":195},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":200},"end":{"line":10,"column":13,"offset":209},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":197},"end":{"line":10,"column":13,"offset":209},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://frontendmasters.com/courses/testing-react/","children":[{"type":"text","value":"Frontend Masters course","position":{"start":{"line":12,"column":5,"offset":215},"end":{"line":12,"column":28,"offset":238},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":214},"end":{"line":12,"column":81,"offset":291},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":214},"end":{"line":12,"column":81,"offset":291},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":211},"end":{"line":12,"column":81,"offset":291},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":211},"end":{"line":12,"column":81,"offset":291},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Introduction","position":{"start":{"line":14,"column":4,"offset":296},"end":{"line":14,"column":16,"offset":308},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":293},"end":{"line":14,"column":16,"offset":308},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The introduction takes us through testing without the help of extenal libraries using ","position":{"start":{"line":16,"column":1,"offset":310},"end":{"line":16,"column":87,"offset":396},"indent":[]}},{"type":"inlineCode","value":"React","position":{"start":{"line":16,"column":87,"offset":396},"end":{"line":16,"column":94,"offset":403},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":16,"column":94,"offset":403},"end":{"line":16,"column":99,"offset":408},"indent":[]}},{"type":"inlineCode","value":"ReactDOM","position":{"start":{"line":16,"column":99,"offset":408},"end":{"line":16,"column":109,"offset":418},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":16,"column":109,"offset":418},"end":{"line":16,"column":110,"offset":419},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":310},"end":{"line":16,"column":110,"offset":419},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Component from '../Component';\n\ntest('renders \"no items\" when no items are given', () => {\n  const container = document.createElement('div');\n  ReactDOM.render(<Component />, container);\n\n  expect(container.textContent).toMatch('no items');\n});","position":{"start":{"line":18,"column":1,"offset":421},"end":{"line":29,"column":4,"offset":751},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In tests, we actually look to lose fidelity in exchange for a better experience of checking the user experience.","position":{"start":{"line":31,"column":1,"offset":753},"end":{"line":31,"column":113,"offset":865},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":753},"end":{"line":31,"column":113,"offset":865},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Jest JSDOM","position":{"start":{"line":33,"column":4,"offset":870},"end":{"line":33,"column":14,"offset":880},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":867},"end":{"line":33,"column":14,"offset":880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By default, Jest loads JSDOM. If we don't want to run JSDOM, we can add package.json config for Jest:","position":{"start":{"line":35,"column":1,"offset":882},"end":{"line":35,"column":102,"offset":983},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":882},"end":{"line":35,"column":102,"offset":983},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"jest\": {\n  \"testEnvironment\": \"node\" // doesn't use JSDOM\n}","position":{"start":{"line":37,"column":1,"offset":985},"end":{"line":41,"column":4,"offset":1057},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CSS Imports","position":{"start":{"line":43,"column":4,"offset":1062},"end":{"line":43,"column":15,"offset":1073},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1059},"end":{"line":43,"column":15,"offset":1073},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Node cannot import CSS, so we need to add more Jest configuration. Let's change our package.json config and abstract that to ","position":{"start":{"line":45,"column":1,"offset":1075},"end":{"line":45,"column":126,"offset":1200},"indent":[]}},{"type":"inlineCode","value":"jest.config.js","position":{"start":{"line":45,"column":126,"offset":1200},"end":{"line":45,"column":142,"offset":1216},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":45,"column":142,"offset":1216},"end":{"line":45,"column":143,"offset":1217},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1075},"end":{"line":45,"column":143,"offset":1217},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"module.exports = {\n  moduleNameMapper: {\n    // make a file to map it to module.exports = {}\n    '\\\\.css$': require.resolve('./test/style-mock'),\n  },\n};","position":{"start":{"line":47,"column":1,"offset":1219},"end":{"line":54,"column":4,"offset":1390},"indent":[1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Note: JavaScript string regex ","position":{"start":{"line":56,"column":3,"offset":1394},"end":{"line":56,"column":33,"offset":1424},"indent":[]}},{"type":"inlineCode","value":"\\\\.css$","position":{"start":{"line":56,"column":33,"offset":1424},"end":{"line":56,"column":42,"offset":1433},"indent":[]}},{"type":"text","value":" === ","position":{"start":{"line":56,"column":42,"offset":1433},"end":{"line":56,"column":47,"offset":1438},"indent":[]}},{"type":"inlineCode","value":"/\\.css$","position":{"start":{"line":56,"column":47,"offset":1438},"end":{"line":56,"column":56,"offset":1447},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":1394},"end":{"line":56,"column":56,"offset":1447},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1392},"end":{"line":56,"column":56,"offset":1447},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use ","position":{"start":{"line":58,"column":1,"offset":1449},"end":{"line":58,"column":12,"offset":1460},"indent":[]}},{"type":"inlineCode","value":"identity-module-proxy","position":{"start":{"line":58,"column":12,"offset":1460},"end":{"line":58,"column":35,"offset":1483},"indent":[]}},{"type":"text","value":" with CSS to help with our mocked object. ","position":{"start":{"line":58,"column":35,"offset":1483},"end":{"line":58,"column":77,"offset":1525},"indent":[]}},{"type":"inlineCode","value":"yarn add identity-obj-proxy","position":{"start":{"line":58,"column":77,"offset":1525},"end":{"line":58,"column":106,"offset":1554},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":58,"column":106,"offset":1554},"end":{"line":58,"column":107,"offset":1555},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1449},"end":{"line":58,"column":107,"offset":1555},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"module.exports = {\n  moduleNameMapper: {\n    '\\\\.module\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\.css$': require.resolve('./test/style-mock'),\n  },\n};","position":{"start":{"line":60,"column":1,"offset":1557},"end":{"line":68,"column":4,"offset":1774},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The module name mappers are useful for so much more too (GraphQL etc).","position":{"start":{"line":70,"column":1,"offset":1776},"end":{"line":70,"column":71,"offset":1846},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1776},"end":{"line":70,"column":71,"offset":1846},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Handling Dynamic Imports","position":{"start":{"line":72,"column":4,"offset":1851},"end":{"line":72,"column":28,"offset":1875},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1848},"end":{"line":72,"column":28,"offset":1875},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure you have the correct babel plugin added. Kent adds in a file that simulates the ","position":{"start":{"line":74,"column":1,"offset":1877},"end":{"line":74,"column":88,"offset":1964},"indent":[]}},{"type":"inlineCode","value":"localStorage","position":{"start":{"line":74,"column":88,"offset":1964},"end":{"line":74,"column":102,"offset":1978},"indent":[]}},{"type":"text","value":" getItem/setItem etc.","position":{"start":{"line":74,"column":102,"offset":1978},"end":{"line":74,"column":123,"offset":1999},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1877},"end":{"line":74,"column":123,"offset":1999},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"module.exports = {\n  moduleNameMapper: {\n    '\\\\.module\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\.css$': require.resolve('./test/style-mock'),\n  },\n  setupTestFrameworkScriptFile: require.resolve('./test/setup-test-framework'),\n};","position":{"start":{"line":76,"column":1,"offset":2001},"end":{"line":85,"column":4,"offset":2298},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding Coverage Reports","position":{"start":{"line":87,"column":4,"offset":2303},"end":{"line":87,"column":27,"offset":2326},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2300},"end":{"line":87,"column":27,"offset":2326},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"jest --coverage","position":{"start":{"line":89,"column":1,"offset":2328},"end":{"line":89,"column":18,"offset":2345},"indent":[]}},{"type":"text","value":" will give you a neat report on coverage.","position":{"start":{"line":89,"column":18,"offset":2345},"end":{"line":89,"column":59,"offset":2386},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2328},"end":{"line":89,"column":59,"offset":2386},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To ensure that our coverage doesn't include supporting test files:","position":{"start":{"line":91,"column":1,"offset":2388},"end":{"line":91,"column":67,"offset":2454},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2388},"end":{"line":91,"column":67,"offset":2454},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"module.exports = {\n  moduleNameMapper: {\n    '\\\\.module\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\.css$': require.resolve('./test/style-mock'),\n  },\n  setupTestFrameworkScriptFile: require.resolve('./test/setup-test-framework'),\n  // takes glob\n  collectCoverageFrom: ['**/src/**.js'],\n  // enforces code coverage\n  coverageThreshold: {\n    global: {\n      // based on lcov\n      statements: 18,\n      branches: 10,\n      functions: 19\n      lines: 18\n    }\n  }\n};","position":{"start":{"line":93,"column":1,"offset":2456},"end":{"line":114,"column":4,"offset":2986},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Projects Key","position":{"start":{"line":116,"column":4,"offset":2991},"end":{"line":116,"column":16,"offset":3003},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":2988},"end":{"line":116,"column":16,"offset":3003},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can run multiple projects in parallel with the ","position":{"start":{"line":118,"column":1,"offset":3005},"end":{"line":118,"column":52,"offset":3056},"indent":[]}},{"type":"inlineCode","value":"projects","position":{"start":{"line":118,"column":52,"offset":3056},"end":{"line":118,"column":62,"offset":3066},"indent":[]}},{"type":"text","value":" key:","position":{"start":{"line":118,"column":62,"offset":3066},"end":{"line":118,"column":67,"offset":3071},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3005},"end":{"line":118,"column":67,"offset":3071},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"module.exports = {\n  moduleNameMapper: {\n    '\\\\.module\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\.css$': require.resolve('./test/style-mock'),\n  },\n  setupTestFrameworkScriptFile: require.resolve('./test/setup-test-framework'),\n  // takes glob\n  collectCoverageFrom: ['**/src/**.js'],\n  // enforces code coverage\n  coverageThreshold: {\n    global: {\n      // based on lcov\n      statements: 18,\n      branches: 10,\n      functions: 19\n      lines: 18\n    }\n  },\n  projects: ['./client', './server']\n};","position":{"start":{"line":120,"column":1,"offset":3073},"end":{"line":142,"column":4,"offset":3641},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"React Testing Library","position":{"start":{"line":144,"column":4,"offset":3646},"end":{"line":144,"column":25,"offset":3667},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":3643},"end":{"line":144,"column":25,"offset":3667},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Interesting tips:","position":{"start":{"line":146,"column":1,"offset":3669},"end":{"line":146,"column":18,"offset":3686},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":3669},"end":{"line":146,"column":18,"offset":3686},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"await wait(() => getByTestId('greeting-text'));\n// snapshotting\nexpect(container.firstChild).toMatchSnapshot();\n// great for a11y\ngetByLabelText('a11y title');","position":{"start":{"line":148,"column":1,"offset":3688},"end":{"line":154,"column":4,"offset":3865},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If it isn't reasonable to use specific queries, you should use ","position":{"start":{"line":156,"column":1,"offset":3867},"end":{"line":156,"column":64,"offset":3930},"indent":[]}},{"type":"inlineCode","value":"getByTestId","position":{"start":{"line":156,"column":64,"offset":3930},"end":{"line":156,"column":77,"offset":3943},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":156,"column":77,"offset":3943},"end":{"line":156,"column":78,"offset":3944},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":3867},"end":{"line":156,"column":78,"offset":3944},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When it comes to data attributes, should we sanitised? To be honest, it will not be the bottleneck. There is also a Babel plugin ","position":{"start":{"line":158,"column":1,"offset":3946},"end":{"line":158,"column":130,"offset":4075},"indent":[]}},{"type":"inlineCode","value":"babel-plugin-react-remove-properties","position":{"start":{"line":158,"column":130,"offset":4075},"end":{"line":158,"column":168,"offset":4113},"indent":[]}},{"type":"text","value":" where you could remove these properties from production.","position":{"start":{"line":158,"column":168,"offset":4113},"end":{"line":158,"column":225,"offset":4170},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":3946},"end":{"line":158,"column":225,"offset":4170},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Component Testing Q&A","position":{"start":{"line":160,"column":4,"offset":4175},"end":{"line":160,"column":25,"offset":4196},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":4172},"end":{"line":160,"column":25,"offset":4196},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A nice tidbit here was using ","position":{"start":{"line":162,"column":1,"offset":4198},"end":{"line":162,"column":30,"offset":4227},"indent":[]}},{"type":"inlineCode","value":"jest.useFakeTimers()","position":{"start":{"line":162,"column":30,"offset":4227},"end":{"line":162,"column":52,"offset":4249},"indent":[]}},{"type":"text","value":" to ensure all timers runout. In the test, ","position":{"start":{"line":162,"column":52,"offset":4249},"end":{"line":162,"column":95,"offset":4292},"indent":[]}},{"type":"inlineCode","value":"jest.runAllTimers()","position":{"start":{"line":162,"column":95,"offset":4292},"end":{"line":162,"column":116,"offset":4313},"indent":[]}},{"type":"text","value":" is used to do just this.","position":{"start":{"line":162,"column":116,"offset":4313},"end":{"line":162,"column":141,"offset":4338},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4198},"end":{"line":162,"column":141,"offset":4338},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Jest Snapshots","position":{"start":{"line":164,"column":4,"offset":4343},"end":{"line":164,"column":18,"offset":4357},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4340},"end":{"line":164,"column":18,"offset":4357},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Take a snapshot of an object at a particular time. Worth noting that ","position":{"start":{"line":166,"column":1,"offset":4359},"end":{"line":166,"column":70,"offset":4428},"indent":[]}},{"type":"inlineCode","value":".toMatchSnapshot","position":{"start":{"line":166,"column":70,"offset":4428},"end":{"line":166,"column":88,"offset":4446},"indent":[]}},{"type":"text","value":" does have to be used on components themselves - it is very handy for specific values etc too.","position":{"start":{"line":166,"column":88,"offset":4446},"end":{"line":166,"column":182,"offset":4540},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":4359},"end":{"line":166,"column":182,"offset":4540},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also use Jest's custom snapshot serializer to customise what you can do. In the config, this comes up ","position":{"start":{"line":168,"column":1,"offset":4542},"end":{"line":168,"column":111,"offset":4652},"indent":[]}},{"type":"inlineCode","value":"snapshotSerializers","position":{"start":{"line":168,"column":111,"offset":4652},"end":{"line":168,"column":132,"offset":4673},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":168,"column":132,"offset":4673},"end":{"line":168,"column":133,"offset":4674},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":4542},"end":{"line":168,"column":133,"offset":4674},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Cypress Setup","position":{"start":{"line":170,"column":4,"offset":4679},"end":{"line":170,"column":17,"offset":4692},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":4676},"end":{"line":170,"column":17,"offset":4692},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To use, ","position":{"start":{"line":172,"column":1,"offset":4694},"end":{"line":172,"column":9,"offset":4702},"indent":[]}},{"type":"inlineCode","value":"yarn add --dev cypress","position":{"start":{"line":172,"column":9,"offset":4702},"end":{"line":172,"column":33,"offset":4726},"indent":[]}},{"type":"text","value":". It installs an app and pops it in the node modules.","position":{"start":{"line":172,"column":33,"offset":4726},"end":{"line":172,"column":86,"offset":4779},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":4694},"end":{"line":172,"column":86,"offset":4779},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then we can run ","position":{"start":{"line":174,"column":1,"offset":4781},"end":{"line":174,"column":17,"offset":4797},"indent":[]}},{"type":"inlineCode","value":"npx cypress open","position":{"start":{"line":174,"column":17,"offset":4797},"end":{"line":174,"column":35,"offset":4815},"indent":[]}},{"type":"text","value":" and it will open up the chrome browsers and start running the tests.","position":{"start":{"line":174,"column":35,"offset":4815},"end":{"line":174,"column":104,"offset":4884},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":4781},"end":{"line":174,"column":104,"offset":4884},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Cypress Configuration","position":{"start":{"line":176,"column":4,"offset":4889},"end":{"line":176,"column":25,"offset":4910},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":4886},"end":{"line":176,"column":25,"offset":4910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":178,"column":1,"offset":4912},"end":{"line":178,"column":4,"offset":4915},"indent":[]}},{"type":"inlineCode","value":"cypress.json","position":{"start":{"line":178,"column":4,"offset":4915},"end":{"line":178,"column":18,"offset":4929},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":178,"column":18,"offset":4929},"end":{"line":178,"column":19,"offset":4930},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":4912},"end":{"line":178,"column":19,"offset":4930},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"{\n  \"baseUrl\": \"http://localhost:8080/\"\n  \"integrationFolder\": \"cypress/e2e\"\n}","position":{"start":{"line":180,"column":1,"offset":4932},"end":{"line":185,"column":4,"offset":5028},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example then of a Cypress test:","position":{"start":{"line":187,"column":1,"offset":5030},"end":{"line":187,"column":32,"offset":5061},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":5030},"end":{"line":187,"column":32,"offset":5061},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// e2e/calculator.js\ndescribe('calculator', () => {\n  it('can visit the app', () => {\n    cy.visit('/')\n      .getByText(/^1$/)\n      .click()\n      .getByText(/^\\+$/)\n      .click()\n      .getByText(/^2$/)\n      .click()\n      .getByText(/^=$/)\n      .click()\n      .getByTestId('display');\n  });\n});","position":{"start":{"line":189,"column":1,"offset":5063},"end":{"line":205,"column":4,"offset":5382},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To use the ","position":{"start":{"line":207,"column":1,"offset":5384},"end":{"line":207,"column":12,"offset":5395},"indent":[]}},{"type":"inlineCode","value":"getByText","position":{"start":{"line":207,"column":12,"offset":5395},"end":{"line":207,"column":23,"offset":5406},"indent":[]}},{"type":"text","value":" etc we need to install ","position":{"start":{"line":207,"column":23,"offset":5406},"end":{"line":207,"column":47,"offset":5430},"indent":[]}},{"type":"inlineCode","value":"cypress-testing-library","position":{"start":{"line":207,"column":47,"offset":5430},"end":{"line":207,"column":72,"offset":5455},"indent":[]}},{"type":"text","value":". Then we can add this inside of the ","position":{"start":{"line":207,"column":72,"offset":5455},"end":{"line":207,"column":109,"offset":5492},"indent":[]}},{"type":"inlineCode","value":"support","position":{"start":{"line":207,"column":109,"offset":5492},"end":{"line":207,"column":118,"offset":5501},"indent":[]}},{"type":"text","value":" folder.","position":{"start":{"line":207,"column":118,"offset":5501},"end":{"line":207,"column":126,"offset":5509},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":5384},"end":{"line":207,"column":126,"offset":5509},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Setting it up with scripts to run in our ","position":{"start":{"line":209,"column":1,"offset":5511},"end":{"line":209,"column":42,"offset":5552},"indent":[]}},{"type":"inlineCode","value":"package.json","position":{"start":{"line":209,"column":42,"offset":5552},"end":{"line":209,"column":56,"offset":5566},"indent":[]}},{"type":"text","value":" file:","position":{"start":{"line":209,"column":56,"offset":5566},"end":{"line":209,"column":62,"offset":5572},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":5511},"end":{"line":209,"column":62,"offset":5572},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"test:e2e:dev\": \"npm-run-all --parallel dev cy:open\",\n\"cy:open\": \"cypress open\",\n\"test:e2e\": \"npm-run-all --parallel --race start cy:run\",\n\"cy:open\": \"cypress run\"","position":{"start":{"line":211,"column":1,"offset":5574},"end":{"line":216,"column":4,"offset":5749},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Testing Trophy","position":{"start":{"line":218,"column":4,"offset":5754},"end":{"line":218,"column":18,"offset":5768},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":5751},"end":{"line":218,"column":18,"offset":5768},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Bottom should include ","position":{"start":{"line":220,"column":1,"offset":5770},"end":{"line":220,"column":23,"offset":5792},"indent":[]}},{"type":"inlineCode","value":"static","position":{"start":{"line":220,"column":23,"offset":5792},"end":{"line":220,"column":31,"offset":5800},"indent":[]}},{"type":"text","value":" through typing etc, then unit and e2e should make a small part but integration should be the major part.","position":{"start":{"line":220,"column":31,"offset":5800},"end":{"line":220,"column":136,"offset":5905},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":5770},"end":{"line":220,"column":136,"offset":5905},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":223,"column":1,"offset":5908},"end":{"line":223,"column":31,"offset":5938},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":223,"column":31,"offset":5938}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"testing-react-applications\"\n    }}>{`Testing React Applications`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://frontendmasters.com/courses/testing-react/\"\n        }}>{`Frontend Masters course`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`The introduction takes us through testing without the help of extenal libraries using `}<inlineCode parentName=\"p\">{`React`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ReactDOM`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Component from '../Component';\n\ntest('renders \"no items\" when no items are given', () => {\n  const container = document.createElement('div');\n  ReactDOM.render(<Component />, container);\n\n  expect(container.textContent).toMatch('no items');\n});\n`}</code></pre>\n    <p>{`In tests, we actually look to lose fidelity in exchange for a better experience of checking the user experience.`}</p>\n    <h2 {...{\n      \"id\": \"jest-jsdom\"\n    }}>{`Jest JSDOM`}</h2>\n    <p>{`By default, Jest loads JSDOM. If we don't want to run JSDOM, we can add package.json config for Jest:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"jest\": {\n  \"testEnvironment\": \"node\" // doesn't use JSDOM\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"css-imports\"\n    }}>{`CSS Imports`}</h2>\n    <p>{`Node cannot import CSS, so we need to add more Jest configuration. Let's change our package.json config and abstract that to `}<inlineCode parentName=\"p\">{`jest.config.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = {\n  moduleNameMapper: {\n    // make a file to map it to module.exports = {}\n    '\\\\\\\\.css$': require.resolve('./test/style-mock'),\n  },\n};\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: JavaScript string regex `}<inlineCode parentName=\"p\">{`\\\\\\\\.css$`}</inlineCode>{` === `}<inlineCode parentName=\"p\">{`/\\\\.css$`}</inlineCode></p>\n    </blockquote>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`identity-module-proxy`}</inlineCode>{` with CSS to help with our mocked object. `}<inlineCode parentName=\"p\">{`yarn add identity-obj-proxy`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = {\n  moduleNameMapper: {\n    '\\\\\\\\.module\\\\\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\\\\\.css$': require.resolve('./test/style-mock'),\n  },\n};\n`}</code></pre>\n    <p>{`The module name mappers are useful for so much more too (GraphQL etc).`}</p>\n    <h2 {...{\n      \"id\": \"handling-dynamic-imports\"\n    }}>{`Handling Dynamic Imports`}</h2>\n    <p>{`Ensure you have the correct babel plugin added. Kent adds in a file that simulates the `}<inlineCode parentName=\"p\">{`localStorage`}</inlineCode>{` getItem/setItem etc.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = {\n  moduleNameMapper: {\n    '\\\\\\\\.module\\\\\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\\\\\.css$': require.resolve('./test/style-mock'),\n  },\n  setupTestFrameworkScriptFile: require.resolve('./test/setup-test-framework'),\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-coverage-reports\"\n    }}>{`Adding Coverage Reports`}</h2>\n    <p><inlineCode parentName=\"p\">{`jest --coverage`}</inlineCode>{` will give you a neat report on coverage.`}</p>\n    <p>{`To ensure that our coverage doesn't include supporting test files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = {\n  moduleNameMapper: {\n    '\\\\\\\\.module\\\\\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\\\\\.css$': require.resolve('./test/style-mock'),\n  },\n  setupTestFrameworkScriptFile: require.resolve('./test/setup-test-framework'),\n  // takes glob\n  collectCoverageFrom: ['**/src/**.js'],\n  // enforces code coverage\n  coverageThreshold: {\n    global: {\n      // based on lcov\n      statements: 18,\n      branches: 10,\n      functions: 19\n      lines: 18\n    }\n  }\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"projects-key\"\n    }}>{`Projects Key`}</h2>\n    <p>{`You can run multiple projects in parallel with the `}<inlineCode parentName=\"p\">{`projects`}</inlineCode>{` key:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = {\n  moduleNameMapper: {\n    '\\\\\\\\.module\\\\\\\\.css$': 'identity-obj-proxy',\n    // make a file to map it to module.exports = {}\n    '\\\\\\\\.css$': require.resolve('./test/style-mock'),\n  },\n  setupTestFrameworkScriptFile: require.resolve('./test/setup-test-framework'),\n  // takes glob\n  collectCoverageFrom: ['**/src/**.js'],\n  // enforces code coverage\n  coverageThreshold: {\n    global: {\n      // based on lcov\n      statements: 18,\n      branches: 10,\n      functions: 19\n      lines: 18\n    }\n  },\n  projects: ['./client', './server']\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"react-testing-library\"\n    }}>{`React Testing Library`}</h2>\n    <p>{`Interesting tips:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`await wait(() => getByTestId('greeting-text'));\n// snapshotting\nexpect(container.firstChild).toMatchSnapshot();\n// great for a11y\ngetByLabelText('a11y title');\n`}</code></pre>\n    <p>{`If it isn't reasonable to use specific queries, you should use `}<inlineCode parentName=\"p\">{`getByTestId`}</inlineCode>{`.`}</p>\n    <p>{`When it comes to data attributes, should we sanitised? To be honest, it will not be the bottleneck. There is also a Babel plugin `}<inlineCode parentName=\"p\">{`babel-plugin-react-remove-properties`}</inlineCode>{` where you could remove these properties from production.`}</p>\n    <h2 {...{\n      \"id\": \"component-testing-qa\"\n    }}>{`Component Testing Q&A`}</h2>\n    <p>{`A nice tidbit here was using `}<inlineCode parentName=\"p\">{`jest.useFakeTimers()`}</inlineCode>{` to ensure all timers runout. In the test, `}<inlineCode parentName=\"p\">{`jest.runAllTimers()`}</inlineCode>{` is used to do just this.`}</p>\n    <h2 {...{\n      \"id\": \"jest-snapshots\"\n    }}>{`Jest Snapshots`}</h2>\n    <p>{`Take a snapshot of an object at a particular time. Worth noting that `}<inlineCode parentName=\"p\">{`.toMatchSnapshot`}</inlineCode>{` does have to be used on components themselves - it is very handy for specific values etc too.`}</p>\n    <p>{`You can also use Jest's custom snapshot serializer to customise what you can do. In the config, this comes up `}<inlineCode parentName=\"p\">{`snapshotSerializers`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"cypress-setup\"\n    }}>{`Cypress Setup`}</h2>\n    <p>{`To use, `}<inlineCode parentName=\"p\">{`yarn add --dev cypress`}</inlineCode>{`. It installs an app and pops it in the node modules.`}</p>\n    <p>{`Then we can run `}<inlineCode parentName=\"p\">{`npx cypress open`}</inlineCode>{` and it will open up the chrome browsers and start running the tests.`}</p>\n    <h2 {...{\n      \"id\": \"cypress-configuration\"\n    }}>{`Cypress Configuration`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`cypress.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"baseUrl\": \"http://localhost:8080/\"\n  \"integrationFolder\": \"cypress/e2e\"\n}\n`}</code></pre>\n    <p>{`Example then of a Cypress test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// e2e/calculator.js\ndescribe('calculator', () => {\n  it('can visit the app', () => {\n    cy.visit('/')\n      .getByText(/^1$/)\n      .click()\n      .getByText(/^\\\\+$/)\n      .click()\n      .getByText(/^2$/)\n      .click()\n      .getByText(/^=$/)\n      .click()\n      .getByTestId('display');\n  });\n});\n`}</code></pre>\n    <p>{`To use the `}<inlineCode parentName=\"p\">{`getByText`}</inlineCode>{` etc we need to install `}<inlineCode parentName=\"p\">{`cypress-testing-library`}</inlineCode>{`. Then we can add this inside of the `}<inlineCode parentName=\"p\">{`support`}</inlineCode>{` folder.`}</p>\n    <p>{`Setting it up with scripts to run in our `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"test:e2e:dev\": \"npm-run-all --parallel dev cy:open\",\n\"cy:open\": \"cypress open\",\n\"test:e2e\": \"npm-run-all --parallel --race start cy:run\",\n\"cy:open\": \"cypress run\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"testing-trophy\"\n    }}>{`Testing Trophy`}</h2>\n    <p>{`Bottom should include `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` through typing etc, then unit and e2e should make a small part but integration should be the major part.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}