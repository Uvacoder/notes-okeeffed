{"expireTime":9007200848610912000,"key":"gatsby-plugin-mdx-entire-payload-1a16ce5a7f5c3478a5eeadcf2de45139-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Using Octokit","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":16,"offset":182},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":16,"offset":182},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resource","position":{"start":{"line":10,"column":4,"offset":187},"end":{"line":10,"column":12,"offset":195},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":184},"end":{"line":10,"column":12,"offset":195},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/octokit/rest.js/","children":[{"type":"text","value":"Octokit - GitHub","position":{"start":{"line":12,"column":5,"offset":201},"end":{"line":12,"column":21,"offset":217},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":200},"end":{"line":12,"column":59,"offset":255},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":200},"end":{"line":12,"column":59,"offset":255},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":12,"column":59,"offset":255},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://octokit.github.io/rest.js/","children":[{"type":"text","value":"Octokit - Documentation","position":{"start":{"line":13,"column":5,"offset":260},"end":{"line":13,"column":28,"offset":283},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":259},"end":{"line":13,"column":65,"offset":320},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":259},"end":{"line":13,"column":65,"offset":320},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":256},"end":{"line":13,"column":65,"offset":320},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line","children":[{"type":"text","value":"Creating a Personal Access Token","position":{"start":{"line":14,"column":5,"offset":325},"end":{"line":14,"column":37,"offset":357},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":324},"end":{"line":14,"column":152,"offset":472},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":324},"end":{"line":14,"column":152,"offset":472},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":321},"end":{"line":14,"column":152,"offset":472},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":14,"column":152,"offset":472},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding a file to a repo","position":{"start":{"line":16,"column":4,"offset":477},"end":{"line":16,"column":27,"offset":500},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":474},"end":{"line":16,"column":27,"offset":500},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"npm install @octokit/rest","position":{"start":{"line":18,"column":1,"offset":502},"end":{"line":20,"column":4,"offset":539},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":22,"column":4,"offset":544},"end":{"line":22,"column":9,"offset":549},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":541},"end":{"line":22,"column":9,"offset":549},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const { Octokit } = require('@octokit/rest');\nconst octokit = new Octokit();\n\n// Compare: https://developer.github.com/v3/repos/#list-organization-repositories\noctokit.repos\n  .listForOrg({\n    org: 'octokit',\n    type: 'public',\n  })\n  .then(({ data }) => {\n    // handle data\n  });","position":{"start":{"line":24,"column":1,"offset":551},"end":{"line":37,"column":4,"offset":852},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding a file to a repo using Octokit","position":{"start":{"line":39,"column":4,"offset":857},"end":{"line":39,"column":41,"offset":894},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":854},"end":{"line":39,"column":41,"offset":894},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const { Octokit } = require('@octokit/rest');\nconst { Base64 } = require('js-base64');\nconst fs = require('fs');\n\nif (process.env.MODE !== 'production') {\n  require('dotenv').config();\n}\n\nconst octokit = new Octokit({\n  auth: process.env.GITHUB_ACCESS_TOKEN,\n});\n\nconst content = fs.readFileSync('file/to/path', 'utf-8');\nconst fileOutput = Base64.encode(content);\n\nconst { data } = await octokit.repos.createOrUpdateFileContents({\n  owner: 'okeeffed',\n  repo: 'octokit-create-file-example',\n  path: 'OUTPUT.md',\n  message: 'feat: Added OUTPUT.md programatically',\n  content: contentEncoded,\n  committer: {\n    name: `Octokit Bot`,\n    email: 'hello@dennisokeeffe.com',\n  },\n  author: {\n    name: 'Octokit Bot',\n    email: 'hello@dennisokeeffe.com',\n  },\n});","position":{"start":{"line":41,"column":1,"offset":896},"end":{"line":72,"column":4,"offset":1672},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":75,"column":1,"offset":1675},"end":{"line":75,"column":31,"offset":1705},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":75,"column":31,"offset":1705}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-octokit\"\n    }}>{`Using Octokit`}</h1>\n    <h2 {...{\n      \"id\": \"resource\"\n    }}>{`Resource`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/octokit/rest.js/\"\n        }}>{`Octokit - GitHub`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://octokit.github.io/rest.js/\"\n        }}>{`Octokit - Documentation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line\"\n        }}>{`Creating a Personal Access Token`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"adding-a-file-to-a-repo\"\n    }}>{`Adding a file to a repo`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @octokit/rest\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const { Octokit } = require('@octokit/rest');\nconst octokit = new Octokit();\n\n// Compare: https://developer.github.com/v3/repos/#list-organization-repositories\noctokit.repos\n  .listForOrg({\n    org: 'octokit',\n    type: 'public',\n  })\n  .then(({ data }) => {\n    // handle data\n  });\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-a-file-to-a-repo-using-octokit\"\n    }}>{`Adding a file to a repo using Octokit`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const { Octokit } = require('@octokit/rest');\nconst { Base64 } = require('js-base64');\nconst fs = require('fs');\n\nif (process.env.MODE !== 'production') {\n  require('dotenv').config();\n}\n\nconst octokit = new Octokit({\n  auth: process.env.GITHUB_ACCESS_TOKEN,\n});\n\nconst content = fs.readFileSync('file/to/path', 'utf-8');\nconst fileOutput = Base64.encode(content);\n\nconst { data } = await octokit.repos.createOrUpdateFileContents({\n  owner: 'okeeffed',\n  repo: 'octokit-create-file-example',\n  path: 'OUTPUT.md',\n  message: 'feat: Added OUTPUT.md programatically',\n  content: contentEncoded,\n  committer: {\n    name: \\`Octokit Bot\\`,\n    email: 'hello@dennisokeeffe.com',\n  },\n  author: {\n    name: 'Octokit Bot',\n    email: 'hello@dennisokeeffe.com',\n  },\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}