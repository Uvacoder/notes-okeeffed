{"expireTime":9007200848610937000,"key":"gatsby-plugin-mdx-entire-payload-5fc6066b19c17759acc74cf425665a24-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Causar Cipher","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":16,"offset":182},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":16,"offset":182},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Answer","position":{"start":{"line":10,"column":4,"offset":187},"end":{"line":10,"column":10,"offset":193},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":184},"end":{"line":10,"column":10,"offset":193},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function CaesarCipher(str, num) {\n  // handle base case\n  if (num === 0) {\n    return str;\n  }\n\n  let finalStr = '';\n  for (let i = 0; i < str.length; i++) {\n    if (/[^a-zA-Z]/gi.test(str[i])) {\n      finalStr += str[i];\n      continue;\n    }\n\n    // 1. handle char code conversion\n    let charCode = str.charCodeAt(i) + num;\n    // 2. handle char code > a/A + 26\n    if (charCode > 90 && /[A-Z]/.test(str[i])) {\n      charCode = charCode - 26;\n    } else if (charCode > 122 && /[a-z]/.test(str[i])) {\n      charCode = charCode - 26;\n    }\n\n    // 3. handle str conversion from char code\n    finalStr += String.fromCharCode(charCode);\n  }\n\n  return finalStr;\n}","position":{"start":{"line":12,"column":1,"offset":195},"end":{"line":41,"column":4,"offset":874},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":44,"column":1,"offset":877},"end":{"line":44,"column":31,"offset":907},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":31,"offset":907}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"causar-cipher\"\n    }}>{`Causar Cipher`}</h1>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function CaesarCipher(str, num) {\n  // handle base case\n  if (num === 0) {\n    return str;\n  }\n\n  let finalStr = '';\n  for (let i = 0; i < str.length; i++) {\n    if (/[^a-zA-Z]/gi.test(str[i])) {\n      finalStr += str[i];\n      continue;\n    }\n\n    // 1. handle char code conversion\n    let charCode = str.charCodeAt(i) + num;\n    // 2. handle char code > a/A + 26\n    if (charCode > 90 && /[A-Z]/.test(str[i])) {\n      charCode = charCode - 26;\n    } else if (charCode > 122 && /[a-z]/.test(str[i])) {\n      charCode = charCode - 26;\n    }\n\n    // 3. handle str conversion from char code\n    finalStr += String.fromCharCode(charCode);\n  }\n\n  return finalStr;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}