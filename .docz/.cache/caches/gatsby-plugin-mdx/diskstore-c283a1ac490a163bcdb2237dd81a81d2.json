{"expireTime":9007200867335890000,"key":"gatsby-plugin-mdx-entire-payload-45d689cb1aef184e5ccbe282b65d41e5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"PassKit","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":10,"offset":176},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":10,"offset":176},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#passkit","children":[{"type":"text","value":"PassKit","position":{"start":{"line":10,"column":4,"offset":181},"end":{"line":10,"column":11,"offset":188},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":180},"end":{"line":10,"column":22,"offset":199},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":10,"column":22,"offset":199},"end":{"line":11,"column":4,"offset":203},"indent":[0]}},{"type":"link","title":null,"url":"#adding-the-certificate","children":[{"type":"text","value":"Adding the certificate","position":{"start":{"line":11,"column":5,"offset":204},"end":{"line":11,"column":27,"offset":226},"indent":[]}}],"position":{"start":{"line":11,"column":4,"offset":203},"end":{"line":11,"column":53,"offset":252},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":11,"column":53,"offset":252},"end":{"line":12,"column":4,"offset":256},"indent":[0]}},{"type":"link","title":null,"url":"#php-server","children":[{"type":"text","value":"PHP Server","position":{"start":{"line":12,"column":5,"offset":257},"end":{"line":12,"column":15,"offset":267},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":256},"end":{"line":12,"column":29,"offset":281},"indent":[]}},{"type":"text","value":"\n\t\t\t- ","position":{"start":{"line":12,"column":29,"offset":281},"end":{"line":13,"column":5,"offset":286},"indent":[0]}},{"type":"link","title":null,"url":"#plan-ticket-example","children":[{"type":"text","value":"Plan ticket example","position":{"start":{"line":13,"column":6,"offset":287},"end":{"line":13,"column":25,"offset":306},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":286},"end":{"line":13,"column":48,"offset":329},"indent":[]}},{"type":"text","value":"\n\t\t\t- ","position":{"start":{"line":13,"column":48,"offset":329},"end":{"line":14,"column":5,"offset":334},"indent":[0]}},{"type":"link","title":null,"url":"#store-card-example","children":[{"type":"text","value":"Store card example","position":{"start":{"line":14,"column":6,"offset":335},"end":{"line":14,"column":24,"offset":353},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":334},"end":{"line":14,"column":46,"offset":375},"indent":[]}},{"type":"text","value":"\n\t\t- ","position":{"start":{"line":14,"column":46,"offset":375},"end":{"line":15,"column":4,"offset":379},"indent":[0]}},{"type":"link","title":null,"url":"#more-info","children":[{"type":"text","value":"More info","position":{"start":{"line":15,"column":5,"offset":380},"end":{"line":15,"column":14,"offset":389},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":379},"end":{"line":15,"column":27,"offset":402},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":180},"end":{"line":15,"column":27,"offset":402},"indent":[0,0,0,0,0]}}],"position":{"start":{"line":10,"column":1,"offset":178},"end":{"line":15,"column":27,"offset":402},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":178},"end":{"line":15,"column":27,"offset":402},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Adding the certificate","position":{"start":{"line":17,"column":4,"offset":407},"end":{"line":17,"column":26,"offset":429},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":404},"end":{"line":17,"column":26,"offset":429},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Head to the iOS dev portal and add the appropriate certificate.","position":{"start":{"line":19,"column":1,"offset":431},"end":{"line":19,"column":64,"offset":494},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":431},"end":{"line":19,"column":64,"offset":494},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You may need to open Keychain access to generate a new key using ","position":{"start":{"line":21,"column":1,"offset":496},"end":{"line":21,"column":66,"offset":561},"indent":[]}},{"type":"inlineCode","value":"Keychain Access > Certificate Assistant > Req Cert from Cert Auth","position":{"start":{"line":21,"column":66,"offset":561},"end":{"line":21,"column":133,"offset":628},"indent":[]}},{"type":"text","value":" and generate a new cert. This cert will be used to generate what you need to import into Keychain Access from the dev portal.","position":{"start":{"line":21,"column":133,"offset":628},"end":{"line":21,"column":259,"offset":754},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":496},"end":{"line":21,"column":259,"offset":754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once created, export it to a folder for the server.","position":{"start":{"line":23,"column":1,"offset":756},"end":{"line":23,"column":52,"offset":807},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":756},"end":{"line":23,"column":52,"offset":807},"indent":[]}},{"type":"jsx","value":"<!-- Once created, download the certificate and export it as .p12 to the server which hosts `node-passbook`. You may need to global install as well `npm install -g passbook` to then use `node-passbook prepare-keys -p keys` to convert .p12 to .pem. Make sure you set the PEM passphrase too - it will be needed. -->","position":{"start":{"line":25,"column":1,"offset":809},"end":{"line":25,"column":314,"offset":1122},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"PHP Server","position":{"start":{"line":27,"column":4,"offset":1127},"end":{"line":27,"column":14,"offset":1137},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1124},"end":{"line":27,"column":14,"offset":1137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":29,"column":1,"offset":1139},"end":{"line":29,"column":7,"offset":1145},"indent":[]}},{"type":"inlineCode","value":"composer","position":{"start":{"line":29,"column":7,"offset":1145},"end":{"line":29,"column":17,"offset":1155},"indent":[]}},{"type":"text","value":", you can build out a scaffold using the Slim Framework:","position":{"start":{"line":29,"column":17,"offset":1155},"end":{"line":29,"column":73,"offset":1211},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1139},"end":{"line":29,"column":73,"offset":1211},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"composer create-project slim/slim-skeleton [project-name]","position":{"start":{"line":31,"column":1,"offset":1213},"end":{"line":31,"column":60,"offset":1272},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":31,"column":60,"offset":1272},"end":{"line":31,"column":61,"offset":1273},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1213},"end":{"line":31,"column":61,"offset":1273},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To install the PHP PassKit helper, run ","position":{"start":{"line":33,"column":1,"offset":1275},"end":{"line":33,"column":40,"offset":1314},"indent":[]}},{"type":"inlineCode","value":"composer require pkpass/pkpass","position":{"start":{"line":33,"column":40,"offset":1314},"end":{"line":33,"column":72,"offset":1346},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":33,"column":72,"offset":1346},"end":{"line":33,"column":73,"offset":1347},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1275},"end":{"line":33,"column":73,"offset":1347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once built, you can then hit the routes and just require the pkpass and the routes file may end up looking like this:","position":{"start":{"line":35,"column":1,"offset":1349},"end":{"line":35,"column":118,"offset":1466},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1349},"end":{"line":35,"column":118,"offset":1466},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Plan ticket example","position":{"start":{"line":37,"column":5,"offset":1472},"end":{"line":37,"column":24,"offset":1491},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1468},"end":{"line":37,"column":24,"offset":1491},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n// Routes\nuse PKPass\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<name>.p12', '<insert-password>');\n\n\t// Pass content\n\t$data = [\n\t    'description' => 'Demo pass',\n\t    'formatVersion' => 1,\n\t    'organizationName' => 'Flight Express',\n\t    'passTypeIdentifier' => 'pass.com.<teamname>.<passname>', // Change this!\n\t    'serialNumber' => '12345678',\n\t    'teamIdentifier' => '<insert-team-id>', // Change this! Found on Apple Dev Portal\n\t    'boardingPass' => [\n\t        'primaryFields' => [\n\t            [\n\t                'key' => 'origin',\n\t                'label' => 'San Francisco',\n\t                'value' => 'SFO',\n\t            ],\n\t            [\n\t                'key' => 'destination',\n\t                'label' => 'London',\n\t                'value' => 'LHR',\n\t            ],\n\t        ],\n\t        'secondaryFields' => [\n\t            [\n\t                'key' => 'gate',\n\t                'label' => 'Gate',\n\t                'value' => 'F12',\n\t            ],\n\t            [\n\t                'key' => 'date',\n\t                'label' => 'Departure date',\n\t                'value' => '07/11/2012 10:22',\n\t            ],\n\t        ],\n\t        'backFields' => [\n\t            [\n\t                'key' => 'passenger-name',\n\t                'label' => 'Passenger',\n\t                'value' => 'John Appleseed',\n\t            ],\n\t        ],\n\t        'transitType' => 'PKTransitTypeAir',\n\t    ],\n\t    'barcode' => [\n\t        'format' => 'PKBarcodeFormatQR',\n\t        'message' => 'Flight-GateF12-ID6643679AH7B',\n\t        'messageEncoding' => 'iso-8859-1',\n\t    ],\n\t    'backgroundColor' => 'rgb(32,110,247)',\n\t    'logoText' => 'Flight info',\n\t    'relevantDate' => date('Y-m-d\\TH:i:sP')\n\t];\n\n\t$pass->setWWDRcertPath('<path to wwdr.pem>');\n\t$pass->setData($data);\n\n\t// Add files to the pass package\n\t$pass->addFile('public/icon.png');\n\t$pass->addFile('public/icon@2x.png');\n\t$pass->addFile('public/logo.png');\n\n\tif($pass->checkError($error) == true) {\n\t\t// echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n\t$result = $pass->create(true);\n\tif($result == false) {\n\t    echo $pass->getError();\n\t}\n    // Render index view\n    return $result;\n});","position":{"start":{"line":39,"column":1,"offset":1493},"end":{"line":132,"column":4,"offset":4051},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Store card example","position":{"start":{"line":134,"column":5,"offset":4057},"end":{"line":134,"column":23,"offset":4075},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4053},"end":{"line":134,"column":23,"offset":4075},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\n// Routes\nuse PKPass\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<key-path>', 'password');\n\n\t// Pass content\n\t$data = [\n\t    'formatVersion' => 1,\n\t    'organizationName' => 'Testing',\n\t    'passTypeIdentifier' => 'pass.com.<id>.<app>', // Change this!\n\t    'serialNumber' => '12345678',\n\t    'teamIdentifier' => '<team-id>', // Change this!\n\t    'logoText' => 'Loyalty',\n\t\t'description' => 'Rewards card',\n\t    'storeCard' => [\n\t        'secondaryFields' => [\n\t            [\n\t                'key' => 'balance',\n\t                'label' => 'BALANCE',\n\t                'value' => '$250.00'\n\t            ],\n\t            [\n\t                'key' => 'name',\n\t                'label' => 'NICKNAME',\n\t                'value' => 'Denno'\n\t            ],\n\t        ],\n\t        'backFields' => [\n\t            [\n\t                'key' => 'owner-name',\n\t                'label' => 'Rewards Card',\n\t                'value' => 'John Appleseed'\n\t            ],\n\t        ]\n\t    ],\n\t    'barcode' => [\n\t        'format' => 'PKBarcodeFormatPDF417',\n\t        'message' => 'ID6643679AH7B',\n\t        'messageEncoding' => 'iso-8859-1',\n\t        'altText' => 'ID6643679AH7B'\n\t    ],\n\t    'backgroundColor' => 'rgb(32,110,247)',\n\t    'logoText' => 'Dummy card info'\n\t];\n\n\t$pass->setWWDRcertPath('<wwdr-key>');\n\t$pass->setData($data);\n\n\t// Add files to the pass package\n\t$pass->addFile('public/icon.png');\n\t$pass->addFile('public/icon@2x.png');\n\t$pass->addFile('public/logo.png');\n\n\tif($pass->checkError($error) == true) {\n\t\t// echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n\t$result = $pass->create(true);\n\tif($result == false) {\n\t    echo $pass->getError();\n\t}\n    // Render index view\n    return $result;\n});\n\n?>","position":{"start":{"line":136,"column":1,"offset":4077},"end":{"line":219,"column":4,"offset":6191},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"More info","position":{"start":{"line":221,"column":4,"offset":6196},"end":{"line":221,"column":13,"offset":6205},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":6193},"end":{"line":221,"column":13,"offset":6205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to generate a wwdr cert, you can globally install ","position":{"start":{"line":223,"column":1,"offset":6207},"end":{"line":223,"column":63,"offset":6269},"indent":[]}},{"type":"inlineCode","value":"passbook","position":{"start":{"line":223,"column":63,"offset":6269},"end":{"line":223,"column":73,"offset":6279},"indent":[]}},{"type":"text","value":" eg. ","position":{"start":{"line":223,"column":73,"offset":6279},"end":{"line":223,"column":78,"offset":6284},"indent":[]}},{"type":"inlineCode","value":"node install -g passbook","position":{"start":{"line":223,"column":78,"offset":6284},"end":{"line":223,"column":104,"offset":6310},"indent":[]}},{"type":"text","value":" and run a command like ","position":{"start":{"line":223,"column":104,"offset":6310},"end":{"line":223,"column":128,"offset":6334},"indent":[]}},{"type":"inlineCode","value":"node-passbook prepare-keys -p <folder-hosting-exported-keys>","position":{"start":{"line":223,"column":128,"offset":6334},"end":{"line":223,"column":190,"offset":6396},"indent":[]}},{"type":"text","value":" and it can do the conversion for you. Make sure you don't forget the password, though.","position":{"start":{"line":223,"column":190,"offset":6396},"end":{"line":223,"column":277,"offset":6483},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":6207},"end":{"line":223,"column":277,"offset":6483},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Some changes you may need to make are passing ","position":{"start":{"line":225,"column":1,"offset":6485},"end":{"line":225,"column":47,"offset":6531},"indent":[]}},{"type":"inlineCode","value":"POST","position":{"start":{"line":225,"column":47,"offset":6531},"end":{"line":225,"column":53,"offset":6537},"indent":[]}},{"type":"text","value":" variables to change it for each user.","position":{"start":{"line":225,"column":53,"offset":6537},"end":{"line":225,"column":91,"offset":6575},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":6485},"end":{"line":225,"column":91,"offset":6575},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to change the JSON structure above, refer to ","position":{"start":{"line":227,"column":1,"offset":6577},"end":{"line":227,"column":58,"offset":6634},"indent":[]}},{"type":"link","title":null,"url":"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html","children":[{"type":"text","value":"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html","position":{"start":{"line":227,"column":58,"offset":6634},"end":{"line":227,"column":182,"offset":6758},"indent":[]}}],"position":{"start":{"line":227,"column":58,"offset":6634},"end":{"line":227,"column":182,"offset":6758},"indent":[]}},{"type":"text","value":" for more info.","position":{"start":{"line":227,"column":182,"offset":6758},"end":{"line":227,"column":197,"offset":6773},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":6577},"end":{"line":227,"column":197,"offset":6773},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":230,"column":1,"offset":6776},"end":{"line":230,"column":31,"offset":6806},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":230,"column":31,"offset":6806}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"passkit\"\n    }}>{`PassKit`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#passkit\"\n        }}>{`PassKit`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#adding-the-certificate\"\n        }}>{`Adding the certificate`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#php-server\"\n        }}>{`PHP Server`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#plan-ticket-example\"\n        }}>{`Plan ticket example`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#store-card-example\"\n        }}>{`Store card example`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#more-info\"\n        }}>{`More info`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"adding-the-certificate\"\n    }}>{`Adding the certificate`}</h2>\n    <p>{`Head to the iOS dev portal and add the appropriate certificate.`}</p>\n    <p>{`You may need to open Keychain access to generate a new key using `}<inlineCode parentName=\"p\">{`Keychain Access > Certificate Assistant > Req Cert from Cert Auth`}</inlineCode>{` and generate a new cert. This cert will be used to generate what you need to import into Keychain Access from the dev portal.`}</p>\n    <p>{`Once created, export it to a folder for the server.`}</p>\n    {\n      /* Once created, download the certificate and export it as .p12 to the server which hosts `node-passbook`. You may need to global install as well `npm install -g passbook` to then use `node-passbook prepare-keys -p keys` to convert .p12 to .pem. Make sure you set the PEM passphrase too - it will be needed. */\n    }\n    <h2 {...{\n      \"id\": \"php-server\"\n    }}>{`PHP Server`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{`, you can build out a scaffold using the Slim Framework:`}</p>\n    <p><inlineCode parentName=\"p\">{`composer create-project slim/slim-skeleton [project-name]`}</inlineCode>{`.`}</p>\n    <p>{`To install the PHP PassKit helper, run `}<inlineCode parentName=\"p\">{`composer require pkpass/pkpass`}</inlineCode>{`.`}</p>\n    <p>{`Once built, you can then hit the routes and just require the pkpass and the routes file may end up looking like this:`}</p>\n    <h3 {...{\n      \"id\": \"plan-ticket-example\"\n    }}>{`Plan ticket example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// Routes\nuse PKPass\\\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<name>.p12', '<insert-password>');\n\n    // Pass content\n    $data = [\n        'description' => 'Demo pass',\n        'formatVersion' => 1,\n        'organizationName' => 'Flight Express',\n        'passTypeIdentifier' => 'pass.com.<teamname>.<passname>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<insert-team-id>', // Change this! Found on Apple Dev Portal\n        'boardingPass' => [\n            'primaryFields' => [\n                [\n                    'key' => 'origin',\n                    'label' => 'San Francisco',\n                    'value' => 'SFO',\n                ],\n                [\n                    'key' => 'destination',\n                    'label' => 'London',\n                    'value' => 'LHR',\n                ],\n            ],\n            'secondaryFields' => [\n                [\n                    'key' => 'gate',\n                    'label' => 'Gate',\n                    'value' => 'F12',\n                ],\n                [\n                    'key' => 'date',\n                    'label' => 'Departure date',\n                    'value' => '07/11/2012 10:22',\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'passenger-name',\n                    'label' => 'Passenger',\n                    'value' => 'John Appleseed',\n                ],\n            ],\n            'transitType' => 'PKTransitTypeAir',\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatQR',\n            'message' => 'Flight-GateF12-ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Flight info',\n        'relevantDate' => date('Y-m-d\\\\TH:i:sP')\n    ];\n\n    $pass->setWWDRcertPath('<path to wwdr.pem>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"store-card-example\"\n    }}>{`Store card example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// Routes\nuse PKPass\\\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<key-path>', 'password');\n\n    // Pass content\n    $data = [\n        'formatVersion' => 1,\n        'organizationName' => 'Testing',\n        'passTypeIdentifier' => 'pass.com.<id>.<app>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<team-id>', // Change this!\n        'logoText' => 'Loyalty',\n        'description' => 'Rewards card',\n        'storeCard' => [\n            'secondaryFields' => [\n                [\n                    'key' => 'balance',\n                    'label' => 'BALANCE',\n                    'value' => '$250.00'\n                ],\n                [\n                    'key' => 'name',\n                    'label' => 'NICKNAME',\n                    'value' => 'Denno'\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'owner-name',\n                    'label' => 'Rewards Card',\n                    'value' => 'John Appleseed'\n                ],\n            ]\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatPDF417',\n            'message' => 'ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n            'altText' => 'ID6643679AH7B'\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Dummy card info'\n    ];\n\n    $pass->setWWDRcertPath('<wwdr-key>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"more-info\"\n    }}>{`More info`}</h2>\n    <p>{`If you need to generate a wwdr cert, you can globally install `}<inlineCode parentName=\"p\">{`passbook`}</inlineCode>{` eg. `}<inlineCode parentName=\"p\">{`node install -g passbook`}</inlineCode>{` and run a command like `}<inlineCode parentName=\"p\">{`node-passbook prepare-keys -p <folder-hosting-exported-keys>`}</inlineCode>{` and it can do the conversion for you. Make sure you don't forget the password, though.`}</p>\n    <p>{`Some changes you may need to make are passing `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` variables to change it for each user.`}</p>\n    <p>{`If you need to change the JSON structure above, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html\"\n      }}>{`https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html`}</a>{` for more info.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}