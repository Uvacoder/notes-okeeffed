{"expireTime":9007200852878446000,"key":"gatsby-plugin-mdx-entire-payload-39f841fda0205879b191dd1524337810-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docker Deep Dive","position":{"start":{"line":7,"column":4,"offset":169},"end":{"line":7,"column":20,"offset":185},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":20,"offset":185},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":9,"column":1,"offset":187},"end":{"line":9,"column":4,"offset":190},"indent":[]}},{"type":"jsx","value":"<!-- TOC -->","position":{"start":{"line":11,"column":1,"offset":192},"end":{"line":11,"column":13,"offset":204},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#docker-deep-dive","children":[{"type":"text","value":"Docker Deep Dive","position":{"start":{"line":13,"column":6,"offset":211},"end":{"line":13,"column":22,"offset":227},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":210},"end":{"line":13,"column":42,"offset":247},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":210},"end":{"line":13,"column":42,"offset":247},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":206},"end":{"line":13,"column":42,"offset":247},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#docker-basics","children":[{"type":"text","value":"Docker Basics","position":{"start":{"line":14,"column":6,"offset":253},"end":{"line":14,"column":19,"offset":266},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":252},"end":{"line":14,"column":36,"offset":283},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":252},"end":{"line":14,"column":36,"offset":283},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----working-with-multiple-images","children":[{"type":"text","value":"---- Working with Multiple Images","position":{"start":{"line":15,"column":10,"offset":293},"end":{"line":15,"column":43,"offset":326},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":292},"end":{"line":15,"column":80,"offset":363},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":292},"end":{"line":15,"column":80,"offset":363},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":288},"end":{"line":15,"column":80,"offset":363},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----packaging-a-customized-container","children":[{"type":"text","value":"---- Packaging A Customized Container","position":{"start":{"line":16,"column":10,"offset":373},"end":{"line":16,"column":47,"offset":410},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":372},"end":{"line":16,"column":88,"offset":451},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":372},"end":{"line":16,"column":88,"offset":451},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":368},"end":{"line":16,"column":88,"offset":451},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----container-commands","children":[{"type":"text","value":"---- Container Commands","position":{"start":{"line":17,"column":10,"offset":461},"end":{"line":17,"column":33,"offset":484},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":460},"end":{"line":17,"column":60,"offset":511},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":460},"end":{"line":17,"column":60,"offset":511},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":456},"end":{"line":17,"column":60,"offset":511},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----exposing-ports","children":[{"type":"text","value":"---- Exposing ports","position":{"start":{"line":18,"column":10,"offset":521},"end":{"line":18,"column":29,"offset":540},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":520},"end":{"line":18,"column":52,"offset":563},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":520},"end":{"line":18,"column":52,"offset":563},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":516},"end":{"line":18,"column":52,"offset":563},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":288},"end":{"line":18,"column":52,"offset":563},"indent":[5,5,5]}}],"position":{"start":{"line":14,"column":1,"offset":248},"end":{"line":18,"column":52,"offset":563},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#the-dockerfile-builds-and-network-configuration","children":[{"type":"text","value":"The Dockerfile, Builds and Network Configuration","position":{"start":{"line":19,"column":6,"offset":569},"end":{"line":19,"column":54,"offset":617},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":568},"end":{"line":19,"column":105,"offset":668},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":568},"end":{"line":19,"column":105,"offset":668},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----user-and-run","children":[{"type":"text","value":"---- USER and RUN","position":{"start":{"line":20,"column":10,"offset":678},"end":{"line":20,"column":27,"offset":695},"indent":[]}}],"position":{"start":{"line":20,"column":9,"offset":677},"end":{"line":20,"column":48,"offset":716},"indent":[]}}],"position":{"start":{"line":20,"column":9,"offset":677},"end":{"line":20,"column":48,"offset":716},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":673},"end":{"line":20,"column":48,"offset":716},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----env","children":[{"type":"text","value":"---- ENV","position":{"start":{"line":21,"column":10,"offset":726},"end":{"line":21,"column":18,"offset":734},"indent":[]}}],"position":{"start":{"line":21,"column":9,"offset":725},"end":{"line":21,"column":30,"offset":746},"indent":[]}}],"position":{"start":{"line":21,"column":9,"offset":725},"end":{"line":21,"column":30,"offset":746},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":721},"end":{"line":21,"column":30,"offset":746},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----cmd-vs-run","children":[{"type":"text","value":"---- CMD vs RUN","position":{"start":{"line":22,"column":10,"offset":756},"end":{"line":22,"column":25,"offset":771},"indent":[]}}],"position":{"start":{"line":22,"column":9,"offset":755},"end":{"line":22,"column":44,"offset":790},"indent":[]}}],"position":{"start":{"line":22,"column":9,"offset":755},"end":{"line":22,"column":44,"offset":790},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":751},"end":{"line":22,"column":44,"offset":790},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----entrypoint","children":[{"type":"text","value":"---- ENTRYPOINT","position":{"start":{"line":23,"column":10,"offset":800},"end":{"line":23,"column":25,"offset":815},"indent":[]}}],"position":{"start":{"line":23,"column":9,"offset":799},"end":{"line":23,"column":44,"offset":834},"indent":[]}}],"position":{"start":{"line":23,"column":9,"offset":799},"end":{"line":23,"column":44,"offset":834},"indent":[]}}],"position":{"start":{"line":23,"column":5,"offset":795},"end":{"line":23,"column":44,"offset":834},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----expose","children":[{"type":"text","value":"---- EXPOSE","position":{"start":{"line":24,"column":10,"offset":844},"end":{"line":24,"column":21,"offset":855},"indent":[]}}],"position":{"start":{"line":24,"column":9,"offset":843},"end":{"line":24,"column":36,"offset":870},"indent":[]}}],"position":{"start":{"line":24,"column":9,"offset":843},"end":{"line":24,"column":36,"offset":870},"indent":[]}}],"position":{"start":{"line":24,"column":5,"offset":839},"end":{"line":24,"column":36,"offset":870},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----container-volume-management","children":[{"type":"text","value":"---- Container Volume Management","position":{"start":{"line":25,"column":10,"offset":880},"end":{"line":25,"column":42,"offset":912},"indent":[]}}],"position":{"start":{"line":25,"column":9,"offset":879},"end":{"line":25,"column":78,"offset":948},"indent":[]}}],"position":{"start":{"line":25,"column":9,"offset":879},"end":{"line":25,"column":78,"offset":948},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":875},"end":{"line":25,"column":78,"offset":948},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----docker-network-list-and-inspect","children":[{"type":"text","value":"---- Docker Network: List and Inspect","position":{"start":{"line":26,"column":10,"offset":958},"end":{"line":26,"column":47,"offset":995},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":957},"end":{"line":26,"column":87,"offset":1035},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":957},"end":{"line":26,"column":87,"offset":1035},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":953},"end":{"line":26,"column":87,"offset":1035},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----docker-network-assign-to-containers","children":[{"type":"text","value":"---- Docker Network: Assign to Containers","position":{"start":{"line":27,"column":10,"offset":1045},"end":{"line":27,"column":51,"offset":1086},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":1044},"end":{"line":27,"column":95,"offset":1130},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":1044},"end":{"line":27,"column":95,"offset":1130},"indent":[]}}],"position":{"start":{"line":27,"column":5,"offset":1040},"end":{"line":27,"column":95,"offset":1130},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":673},"end":{"line":27,"column":95,"offset":1130},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":19,"column":1,"offset":564},"end":{"line":27,"column":95,"offset":1130},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#docker-commands-and-structures","children":[{"type":"text","value":"Docker commands and structures","position":{"start":{"line":28,"column":6,"offset":1136},"end":{"line":28,"column":36,"offset":1166},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":1135},"end":{"line":28,"column":70,"offset":1200},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":1135},"end":{"line":28,"column":70,"offset":1200},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----inspect-container-processes","children":[{"type":"text","value":"---- Inspect Container Processes","position":{"start":{"line":29,"column":10,"offset":1210},"end":{"line":29,"column":42,"offset":1242},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":1209},"end":{"line":29,"column":78,"offset":1278},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":1209},"end":{"line":29,"column":78,"offset":1278},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":1205},"end":{"line":29,"column":78,"offset":1278},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----previous-container-management","children":[{"type":"text","value":"---- Previous Container Management","position":{"start":{"line":30,"column":10,"offset":1288},"end":{"line":30,"column":44,"offset":1322},"indent":[]}}],"position":{"start":{"line":30,"column":9,"offset":1287},"end":{"line":30,"column":82,"offset":1360},"indent":[]}}],"position":{"start":{"line":30,"column":9,"offset":1287},"end":{"line":30,"column":82,"offset":1360},"indent":[]}}],"position":{"start":{"line":30,"column":5,"offset":1283},"end":{"line":30,"column":82,"offset":1360},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----controlling-port-exposure-on-containers","children":[{"type":"text","value":"---- Controlling Port Exposure on Containers","position":{"start":{"line":31,"column":10,"offset":1370},"end":{"line":31,"column":54,"offset":1414},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1369},"end":{"line":31,"column":102,"offset":1462},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1369},"end":{"line":31,"column":102,"offset":1462},"indent":[]}}],"position":{"start":{"line":31,"column":5,"offset":1365},"end":{"line":31,"column":102,"offset":1462},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----naming-containers","children":[{"type":"text","value":"---- Naming Containers","position":{"start":{"line":32,"column":10,"offset":1472},"end":{"line":32,"column":32,"offset":1494},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1471},"end":{"line":32,"column":58,"offset":1520},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1471},"end":{"line":32,"column":58,"offset":1520},"indent":[]}}],"position":{"start":{"line":32,"column":5,"offset":1467},"end":{"line":32,"column":58,"offset":1520},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----docker-events","children":[{"type":"text","value":"---- Docker Events","position":{"start":{"line":33,"column":10,"offset":1530},"end":{"line":33,"column":28,"offset":1548},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1529},"end":{"line":33,"column":50,"offset":1570},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1529},"end":{"line":33,"column":50,"offset":1570},"indent":[]}}],"position":{"start":{"line":33,"column":5,"offset":1525},"end":{"line":33,"column":50,"offset":1570},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----managing-and-removing-base-images","children":[{"type":"text","value":"---- Managing and Removing Base Images","position":{"start":{"line":34,"column":10,"offset":1580},"end":{"line":34,"column":48,"offset":1618},"indent":[]}}],"position":{"start":{"line":34,"column":9,"offset":1579},"end":{"line":34,"column":90,"offset":1660},"indent":[]}}],"position":{"start":{"line":34,"column":9,"offset":1579},"end":{"line":34,"column":90,"offset":1660},"indent":[]}}],"position":{"start":{"line":34,"column":5,"offset":1575},"end":{"line":34,"column":90,"offset":1660},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----saving-and-loading-docker-images","children":[{"type":"text","value":"---- Saving and Loading Docker Images","position":{"start":{"line":35,"column":10,"offset":1670},"end":{"line":35,"column":47,"offset":1707},"indent":[]}}],"position":{"start":{"line":35,"column":9,"offset":1669},"end":{"line":35,"column":88,"offset":1748},"indent":[]}}],"position":{"start":{"line":35,"column":9,"offset":1669},"end":{"line":35,"column":88,"offset":1748},"indent":[]}}],"position":{"start":{"line":35,"column":5,"offset":1665},"end":{"line":35,"column":88,"offset":1748},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----image-history","children":[{"type":"text","value":"---- Image History","position":{"start":{"line":36,"column":10,"offset":1758},"end":{"line":36,"column":28,"offset":1776},"indent":[]}}],"position":{"start":{"line":36,"column":9,"offset":1757},"end":{"line":36,"column":50,"offset":1798},"indent":[]}}],"position":{"start":{"line":36,"column":9,"offset":1757},"end":{"line":36,"column":50,"offset":1798},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":1753},"end":{"line":36,"column":50,"offset":1798},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----take-control-of-our-tags","children":[{"type":"text","value":"---- Take Control of Our Tags","position":{"start":{"line":37,"column":10,"offset":1808},"end":{"line":37,"column":39,"offset":1837},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1807},"end":{"line":37,"column":72,"offset":1870},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1807},"end":{"line":37,"column":72,"offset":1870},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":1803},"end":{"line":37,"column":72,"offset":1870},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----pushing-to-docker-hub","children":[{"type":"text","value":"---- Pushing to Docker Hub","position":{"start":{"line":38,"column":10,"offset":1880},"end":{"line":38,"column":36,"offset":1906},"indent":[]}}],"position":{"start":{"line":38,"column":9,"offset":1879},"end":{"line":38,"column":66,"offset":1936},"indent":[]}}],"position":{"start":{"line":38,"column":9,"offset":1879},"end":{"line":38,"column":66,"offset":1936},"indent":[]}}],"position":{"start":{"line":38,"column":5,"offset":1875},"end":{"line":38,"column":66,"offset":1936},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":1205},"end":{"line":38,"column":66,"offset":1936},"indent":[5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":28,"column":1,"offset":1131},"end":{"line":38,"column":66,"offset":1936},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#integration-and-use-cases","children":[{"type":"text","value":"Integration and Use Cases","position":{"start":{"line":39,"column":6,"offset":1942},"end":{"line":39,"column":31,"offset":1967},"indent":[]}}],"position":{"start":{"line":39,"column":5,"offset":1941},"end":{"line":39,"column":60,"offset":1996},"indent":[]}}],"position":{"start":{"line":39,"column":5,"offset":1941},"end":{"line":39,"column":60,"offset":1996},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-----building-a-web-farm-for-development-and-testing","children":[{"type":"text","value":"---- Building a Web Farm for Development and Testing","position":{"start":{"line":40,"column":10,"offset":2006},"end":{"line":40,"column":62,"offset":2058},"indent":[]}}],"position":{"start":{"line":40,"column":9,"offset":2005},"end":{"line":40,"column":118,"offset":2114},"indent":[]}}],"position":{"start":{"line":40,"column":9,"offset":2005},"end":{"line":40,"column":118,"offset":2114},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":2001},"end":{"line":40,"column":118,"offset":2114},"indent":[]}}],"position":{"start":{"line":40,"column":5,"offset":2001},"end":{"line":40,"column":118,"offset":2114},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1937},"end":{"line":40,"column":118,"offset":2114},"indent":[1]}}],"position":{"start":{"line":13,"column":1,"offset":206},"end":{"line":40,"column":118,"offset":2114},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!-- /TOC -->","position":{"start":{"line":42,"column":1,"offset":2116},"end":{"line":42,"column":14,"offset":2129},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docker Basics","position":{"start":{"line":44,"column":4,"offset":2134},"end":{"line":44,"column":17,"offset":2147},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2131},"end":{"line":44,"column":17,"offset":2147},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Working with Multiple Images","position":{"start":{"line":46,"column":4,"offset":2152},"end":{"line":46,"column":32,"offset":2180},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2149},"end":{"line":46,"column":32,"offset":2180},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# i: interactive, t: tty, d: daemon mode\ndocker run -i -t -d ubuntu:latest /bin/bash\n\n# to attach to the container and edit the container\ndocker attach container_name","position":{"start":{"line":48,"column":1,"offset":2182},"end":{"line":54,"column":4,"offset":2356},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":56,"column":1,"offset":2358},"end":{"line":56,"column":4,"offset":2361},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Packaging A Customized Container","position":{"start":{"line":58,"column":4,"offset":2366},"end":{"line":58,"column":36,"offset":2398},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2363},"end":{"line":58,"column":36,"offset":2398},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once you are attached to a container, anytime you create files, it is now part of that container!","position":{"start":{"line":60,"column":1,"offset":2400},"end":{"line":60,"column":98,"offset":2497},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2400},"end":{"line":60,"column":98,"offset":2497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can do all of your updates etc.","position":{"start":{"line":62,"column":1,"offset":2499},"end":{"line":62,"column":36,"offset":2534},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2499},"end":{"line":62,"column":36,"offset":2534},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From here, we can commit to create a base image.","position":{"start":{"line":64,"column":1,"offset":2536},"end":{"line":64,"column":49,"offset":2584},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2536},"end":{"line":64,"column":49,"offset":2584},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker commit -m \"This is a new image\" -a \"dennis@presentcompany.co\" dok/ubusshd:v1","position":{"start":{"line":66,"column":1,"offset":2586},"end":{"line":68,"column":4,"offset":2677},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once this is commited, it is now put to a base container! Yay!","position":{"start":{"line":70,"column":1,"offset":2679},"end":{"line":70,"column":63,"offset":2741},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2679},"end":{"line":70,"column":63,"offset":2741},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's create a simple Dockerfile to give some info about us.","position":{"start":{"line":72,"column":1,"offset":2743},"end":{"line":72,"column":61,"offset":2803},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2743},"end":{"line":72,"column":61,"offset":2803},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Dockerfile - example Ubuntu example with SSH already installed\nFROM ubuntu:latest\nMAINTAINER okeeffed <dennis@presentcompany.co>\nRUN apt-get update\nRUN apt-get -y install telnet openssh-server","position":{"start":{"line":74,"column":1,"offset":2805},"end":{"line":80,"column":4,"offset":3007},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For building:","position":{"start":{"line":82,"column":1,"offset":3009},"end":{"line":82,"column":14,"offset":3022},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3009},"end":{"line":82,"column":14,"offset":3022},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# build a Dockerfile from the current location\ndocker build -t=\"dok/ubusshdonly:v2\" .","position":{"start":{"line":84,"column":1,"offset":3024},"end":{"line":87,"column":4,"offset":3117},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Container Commands","position":{"start":{"line":89,"column":4,"offset":3122},"end":{"line":89,"column":22,"offset":3140},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3119},"end":{"line":89,"column":22,"offset":3140},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"top # shows the processes\ndocker logs container_name #shows history for container\ndocker exec container name /bin/cat /etc/profile\n\ndocker run container name /bin/bash -c \"while true; do echo HELLO; sleep 1; done\"","position":{"start":{"line":91,"column":1,"offset":3142},"end":{"line":97,"column":4,"offset":3363},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Exposing ports","position":{"start":{"line":99,"column":4,"offset":3368},"end":{"line":99,"column":18,"offset":3382},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3365},"end":{"line":99,"column":18,"offset":3382},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker run -d -p 80:80 nginx:latest","position":{"start":{"line":101,"column":1,"offset":3384},"end":{"line":103,"column":4,"offset":3427},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The Dockerfile, Builds and Network Configuration","position":{"start":{"line":105,"column":4,"offset":3432},"end":{"line":105,"column":52,"offset":3480},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3429},"end":{"line":105,"column":52,"offset":3480},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"USER and RUN","position":{"start":{"line":107,"column":4,"offset":3485},"end":{"line":107,"column":16,"offset":3497},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3482},"end":{"line":107,"column":16,"offset":3497},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\nUSER user","position":{"start":{"line":109,"column":1,"offset":3499},"end":{"line":116,"column":4,"offset":3669},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To connect as the root, you just need to start the container and run ","position":{"start":{"line":118,"column":1,"offset":3671},"end":{"line":118,"column":70,"offset":3740},"indent":[]}},{"type":"inlineCode","value":"docker exec -u 0 -it sleepy_allen /bin/bash","position":{"start":{"line":118,"column":70,"offset":3740},"end":{"line":118,"column":115,"offset":3785},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3671},"end":{"line":118,"column":115,"offset":3785},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Order of Execution","position":{"start":{"line":120,"column":3,"offset":3789},"end":{"line":120,"column":21,"offset":3807},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3787},"end":{"line":120,"column":23,"offset":3809},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3787},"end":{"line":120,"column":23,"offset":3809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We had to run a super user command to add the User. Now let's say we want to run another command.","position":{"start":{"line":122,"column":1,"offset":3811},"end":{"line":122,"column":98,"offset":3908},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3811},"end":{"line":122,"column":98,"offset":3908},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nUSER user\n\n# below will give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list","position":{"start":{"line":124,"column":1,"offset":3910},"end":{"line":138,"column":4,"offset":4356},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ENV","position":{"start":{"line":140,"column":4,"offset":4361},"end":{"line":140,"column":7,"offset":4364},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4358},"end":{"line":140,"column":7,"offset":4364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example, let's install Java through the Dockerfile!","position":{"start":{"line":142,"column":1,"offset":4366},"end":{"line":142,"column":52,"offset":4417},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4366},"end":{"line":142,"column":52,"offset":4417},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nRUN yum update -y\nRUN yum install -y net-tools wget\n\nRUN cd ~ && wget --no-cookies --no-check-certificate --header \"url\"\n\nRUN yum localinstall -y ~/java_file.rpm\n\nUSER user\n\nRUN cd ~ && echo \"export JAVA_HOME=/usr/java/jdk1.8.0/jre\" >> /home/user/.bashrc\n\n# generates env variable for everyone\nENV JAVA_BIN /usr/java/jdk1.8.0/jre/bin","position":{"start":{"line":144,"column":1,"offset":4419},"end":{"line":167,"column":4,"offset":5053},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CMD vs RUN","position":{"start":{"line":169,"column":4,"offset":5058},"end":{"line":169,"column":14,"offset":5068},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5055},"end":{"line":169,"column":14,"offset":5068},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Command generally sets the default command to run when there is nothing specified when container starts up.","position":{"start":{"line":171,"column":1,"offset":5070},"end":{"line":171,"column":108,"offset":5177},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5070},"end":{"line":171,"column":108,"offset":5177},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\nCMD 'echo' 'This is a custom container message'\n\nUSER user","position":{"start":{"line":173,"column":1,"offset":5179},"end":{"line":183,"column":4,"offset":5399},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ENTRYPOINT","position":{"start":{"line":185,"column":4,"offset":5404},"end":{"line":185,"column":14,"offset":5414},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":5401},"end":{"line":185,"column":14,"offset":5414},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The entrypoint itself will ALWAYS be the concrete default application everytime that the container is created.","position":{"start":{"line":187,"column":1,"offset":5416},"end":{"line":187,"column":111,"offset":5526},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":5416},"end":{"line":187,"column":111,"offset":5526},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"CMD","position":{"start":{"line":189,"column":1,"offset":5528},"end":{"line":189,"column":6,"offset":5533},"indent":[]}},{"type":"text","value":" will only run when there is no argument, whereas ","position":{"start":{"line":189,"column":6,"offset":5533},"end":{"line":189,"column":56,"offset":5583},"indent":[]}},{"type":"inlineCode","value":"ENTRYPOINT","position":{"start":{"line":189,"column":56,"offset":5583},"end":{"line":189,"column":68,"offset":5595},"indent":[]}},{"type":"text","value":" will always run.","position":{"start":{"line":189,"column":68,"offset":5595},"end":{"line":189,"column":85,"offset":5612},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":5528},"end":{"line":189,"column":85,"offset":5612},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN useradd -ms /bin/bash user\n\nENTRYPOINT echo \"This command will display this message on EVERY container that is run from it\"\n\nUSER user","position":{"start":{"line":191,"column":1,"offset":5614},"end":{"line":200,"column":4,"offset":5805},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"EXPOSE","position":{"start":{"line":202,"column":4,"offset":5810},"end":{"line":202,"column":10,"offset":5816},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":5807},"end":{"line":202,"column":10,"offset":5816},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"EXPOSE will allow us to expose our ports.","position":{"start":{"line":204,"column":1,"offset":5818},"end":{"line":204,"column":42,"offset":5859},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":5818},"end":{"line":204,"column":42,"offset":5859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The follow image will allow us to build a webserver and run it from basics.","position":{"start":{"line":206,"column":1,"offset":5861},"end":{"line":206,"column":76,"offset":5936},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":5861},"end":{"line":206,"column":76,"offset":5936},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nENTRYPOINT apachectl \"-DFOREGROUND\"","position":{"start":{"line":208,"column":1,"offset":5938},"end":{"line":218,"column":4,"offset":6179},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"However, if we don't expose any ports, then using ","position":{"start":{"line":220,"column":1,"offset":6181},"end":{"line":220,"column":51,"offset":6231},"indent":[]}},{"type":"inlineCode","value":"-P","position":{"start":{"line":220,"column":51,"offset":6231},"end":{"line":220,"column":55,"offset":6235},"indent":[]}},{"type":"text","value":" won't automatically expose those ports. We can still forcably expose ports using `docker run --name apacheweb -d -p 8080:80 container","position":{"start":{"line":220,"column":55,"offset":6235},"end":{"line":220,"column":189,"offset":6369},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":6181},"end":{"line":220,"column":189,"offset":6369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To auto-expose, we can do this...","position":{"start":{"line":222,"column":1,"offset":6371},"end":{"line":222,"column":34,"offset":6404},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":6371},"end":{"line":222,"column":34,"offset":6404},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nEXPOSE 80\n\nENTRYPOINT apachectl \"-DFOREGROUND\"","position":{"start":{"line":224,"column":1,"offset":6406},"end":{"line":236,"column":4,"offset":6658},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Container Volume Management","position":{"start":{"line":238,"column":4,"offset":6663},"end":{"line":238,"column":31,"offset":6690},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":6660},"end":{"line":238,"column":31,"offset":6690},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How do we work with mounts and file systems?","position":{"start":{"line":240,"column":1,"offset":6692},"end":{"line":240,"column":45,"offset":6736},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":6692},"end":{"line":240,"column":45,"offset":6736},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can mount using ","position":{"start":{"line":242,"column":1,"offset":6738},"end":{"line":242,"column":20,"offset":6757},"indent":[]}},{"type":"inlineCode","value":"-v","position":{"start":{"line":242,"column":20,"offset":6757},"end":{"line":242,"column":24,"offset":6761},"indent":[]}},{"type":"text","value":" for mounting volumes.","position":{"start":{"line":242,"column":24,"offset":6761},"end":{"line":242,"column":46,"offset":6783},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":6738},"end":{"line":242,"column":46,"offset":6783},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scenario One: Create a directory at launchtime called ","position":{"start":{"line":244,"column":1,"offset":6785},"end":{"line":244,"column":55,"offset":6839},"indent":[]}},{"type":"inlineCode","value":"mydata","position":{"start":{"line":244,"column":55,"offset":6839},"end":{"line":244,"column":63,"offset":6847},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":6785},"end":{"line":244,"column":63,"offset":6847},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker run -it --name voltest1 -v /mydata centos:latest /bin/bash\n# once logged in\ndf -h # shows that there is a mounted file\n\n# back from host OS terminal\ncd /var/lib/docker # will show us the volumes folder\n\n# if we docker inspect the container\n# it will show us the volume and the source","position":{"start":{"line":246,"column":1,"offset":6849},"end":{"line":256,"column":4,"offset":7147},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Once we have things that are mounted, we can access them from the container and anything that we edit in the underlying host, we can see in the container!","position":{"start":{"line":258,"column":1,"offset":7149},"end":{"line":258,"column":155,"offset":7303},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":7149},"end":{"line":258,"column":155,"offset":7303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can't do this from the Dockerfile, because the base image is designed to be portable.","position":{"start":{"line":260,"column":1,"offset":7305},"end":{"line":260,"column":89,"offset":7393},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":7305},"end":{"line":260,"column":89,"offset":7393},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docker Network: List and Inspect","position":{"start":{"line":262,"column":4,"offset":7398},"end":{"line":262,"column":36,"offset":7430},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":7395},"end":{"line":262,"column":36,"offset":7430},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Thanks to Docker Swarm and Kubernetes, it has become easier to manage the Docker Network.","position":{"start":{"line":264,"column":1,"offset":7432},"end":{"line":264,"column":90,"offset":7521},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":7432},"end":{"line":264,"column":90,"offset":7521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When you run a docker instance, it will auto pull the next available address.","position":{"start":{"line":266,"column":1,"offset":7523},"end":{"line":266,"column":78,"offset":7600},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":7523},"end":{"line":266,"column":78,"offset":7600},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# this will list all of the associated networks with the current host\ndocker network ls\n\ndocker network ls --no-trunc # to see the full address\n\ndocker network inspect bridge","position":{"start":{"line":268,"column":1,"offset":7602},"end":{"line":275,"column":4,"offset":7784},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Creating Docker network configs","position":{"start":{"line":277,"column":3,"offset":7788},"end":{"line":277,"column":34,"offset":7819},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":7786},"end":{"line":277,"column":36,"offset":7821},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":7786},"end":{"line":277,"column":36,"offset":7821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To see things like a ","position":{"start":{"line":279,"column":1,"offset":7823},"end":{"line":279,"column":22,"offset":7844},"indent":[]}},{"type":"inlineCode","value":"man","position":{"start":{"line":279,"column":22,"offset":7844},"end":{"line":279,"column":27,"offset":7849},"indent":[]}},{"type":"text","value":" page for docker, you essential just put dashes between multi-word commands.","position":{"start":{"line":279,"column":27,"offset":7849},"end":{"line":279,"column":103,"offset":7925},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":7823},"end":{"line":279,"column":103,"offset":7925},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"man docker-network-create","position":{"start":{"line":281,"column":1,"offset":7927},"end":{"line":281,"column":28,"offset":7954},"indent":[]}},{"type":"text","value":" will bring up the network create manual.","position":{"start":{"line":281,"column":28,"offset":7954},"end":{"line":281,"column":69,"offset":7995},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":7927},"end":{"line":281,"column":69,"offset":7995},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker network create --subnet 10.1.0.0/24 --gateway 10.1.0.1 mybridge01 # /24 is everything in that network\n\ndocker network ls\n# the new bridge adapter is now there\n\n# to remove the bridge\ndocker network rm mybridge01","position":{"start":{"line":283,"column":1,"offset":7997},"end":{"line":291,"column":4,"offset":8223},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docker Network: Assign to Containers","position":{"start":{"line":293,"column":4,"offset":8228},"end":{"line":293,"column":40,"offset":8264},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":8225},"end":{"line":293,"column":40,"offset":8264},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# subnet itself can be 10.1.[1-254].[1-254] while ip-range is 10.1.4.[1-254]\n# that is class b and class c respectively\ndocker network create --subnet 10.1.0.0/16 --gateway 10.1.0.1 --ip-range=10.1.4.0/24 --driver=bridge --label=host4network bridge04","position":{"start":{"line":295,"column":1,"offset":8266},"end":{"line":299,"column":4,"offset":8524},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you then inspect the new above network config, it will have those settings within that inspect config.","position":{"start":{"line":301,"column":1,"offset":8526},"end":{"line":301,"column":106,"offset":8631},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":8526},"end":{"line":301,"column":106,"offset":8631},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So how do we now use this new network?","position":{"start":{"line":303,"column":1,"offset":8633},"end":{"line":303,"column":39,"offset":8671},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":8633},"end":{"line":303,"column":39,"offset":8671},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker run -it --name nettest1 --net bridge04 --ip 10.1.4.100 centos:latest /bin/bash\n\n# if we docker inspect nettest1 | grep IP we can see the address set at 10.1.4.100","position":{"start":{"line":305,"column":1,"offset":8673},"end":{"line":309,"column":4,"offset":8850},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":311,"column":1,"offset":8852},"end":{"line":311,"column":4,"offset":8855},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docker commands and structures","position":{"start":{"line":313,"column":4,"offset":8860},"end":{"line":313,"column":34,"offset":8890},"indent":[]}}],"position":{"start":{"line":313,"column":1,"offset":8857},"end":{"line":313,"column":34,"offset":8890},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Inspect Container Processes","position":{"start":{"line":315,"column":4,"offset":8895},"end":{"line":315,"column":31,"offset":8922},"indent":[]}}],"position":{"start":{"line":315,"column":1,"offset":8892},"end":{"line":315,"column":31,"offset":8922},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From the outside, we can run ","position":{"start":{"line":317,"column":1,"offset":8924},"end":{"line":317,"column":30,"offset":8953},"indent":[]}},{"type":"inlineCode","value":"docker exec","position":{"start":{"line":317,"column":30,"offset":8953},"end":{"line":317,"column":43,"offset":8966},"indent":[]}},{"type":"text","value":" to get some more details about the container itself.","position":{"start":{"line":317,"column":43,"offset":8966},"end":{"line":317,"column":96,"offset":9019},"indent":[]}}],"position":{"start":{"line":317,"column":1,"offset":8924},"end":{"line":317,"column":96,"offset":9019},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker exec container_name /bin/ps aux | grep bash","position":{"start":{"line":319,"column":1,"offset":9021},"end":{"line":319,"column":53,"offset":9073},"indent":[]}}],"position":{"start":{"line":319,"column":1,"offset":9021},"end":{"line":319,"column":53,"offset":9073},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use ","position":{"start":{"line":321,"column":1,"offset":9075},"end":{"line":321,"column":12,"offset":9086},"indent":[]}},{"type":"inlineCode","value":"docker top","position":{"start":{"line":321,"column":12,"offset":9086},"end":{"line":321,"column":24,"offset":9098},"indent":[]}},{"type":"text","value":" to see the top command run on a container.","position":{"start":{"line":321,"column":24,"offset":9098},"end":{"line":321,"column":67,"offset":9141},"indent":[]}}],"position":{"start":{"line":321,"column":1,"offset":9075},"end":{"line":321,"column":67,"offset":9141},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker top container_name","position":{"start":{"line":323,"column":1,"offset":9143},"end":{"line":323,"column":28,"offset":9170},"indent":[]}}],"position":{"start":{"line":323,"column":1,"offset":9143},"end":{"line":323,"column":28,"offset":9170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's execute a command to install ","position":{"start":{"line":325,"column":1,"offset":9172},"end":{"line":325,"column":36,"offset":9207},"indent":[]}},{"type":"inlineCode","value":"sshd","position":{"start":{"line":325,"column":36,"offset":9207},"end":{"line":325,"column":42,"offset":9213},"indent":[]}},{"type":"text","value":". We could attach to container and do so, but we have a few options. Instead of attaching, we could do the following:","position":{"start":{"line":325,"column":42,"offset":9213},"end":{"line":325,"column":159,"offset":9330},"indent":[]}}],"position":{"start":{"line":325,"column":1,"offset":9172},"end":{"line":325,"column":159,"offset":9330},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker exec -i -t container_name /bin/bash","position":{"start":{"line":327,"column":1,"offset":9332},"end":{"line":327,"column":45,"offset":9376},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":9332},"end":{"line":327,"column":45,"offset":9376},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will ensure that the container doesn't stop, but will actually run two instances of ","position":{"start":{"line":329,"column":1,"offset":9378},"end":{"line":329,"column":90,"offset":9467},"indent":[]}},{"type":"inlineCode","value":"bash","position":{"start":{"line":329,"column":90,"offset":9467},"end":{"line":329,"column":96,"offset":9473},"indent":[]}},{"type":"text","value":". We can verify this by looking at the container processes.","position":{"start":{"line":329,"column":96,"offset":9473},"end":{"line":329,"column":155,"offset":9532},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":9378},"end":{"line":329,"column":155,"offset":9532},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So far, this can give us a momentary snap shot.","position":{"start":{"line":331,"column":1,"offset":9534},"end":{"line":331,"column":48,"offset":9581},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":9534},"end":{"line":331,"column":48,"offset":9581},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"See the history of previous processes and performances","position":{"start":{"line":333,"column":3,"offset":9585},"end":{"line":333,"column":57,"offset":9639},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":9583},"end":{"line":333,"column":59,"offset":9641},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":9583},"end":{"line":333,"column":59,"offset":9641},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use ","position":{"start":{"line":335,"column":1,"offset":9643},"end":{"line":335,"column":12,"offset":9654},"indent":[]}},{"type":"inlineCode","value":"docker stats","position":{"start":{"line":335,"column":12,"offset":9654},"end":{"line":335,"column":26,"offset":9668},"indent":[]}},{"type":"text","value":" to see a live set of information for that container.","position":{"start":{"line":335,"column":26,"offset":9668},"end":{"line":335,"column":79,"offset":9721},"indent":[]}}],"position":{"start":{"line":335,"column":1,"offset":9643},"end":{"line":335,"column":79,"offset":9721},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"dock stats container_name","position":{"start":{"line":337,"column":1,"offset":9723},"end":{"line":337,"column":28,"offset":9750},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":9723},"end":{"line":337,"column":28,"offset":9750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will keep a view that is constantly updated to see what is going on.","position":{"start":{"line":339,"column":1,"offset":9752},"end":{"line":339,"column":74,"offset":9825},"indent":[]}}],"position":{"start":{"line":339,"column":1,"offset":9752},"end":{"line":339,"column":74,"offset":9825},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Previous Container Management","position":{"start":{"line":341,"column":4,"offset":9830},"end":{"line":341,"column":33,"offset":9859},"indent":[]}}],"position":{"start":{"line":341,"column":1,"offset":9827},"end":{"line":341,"column":33,"offset":9859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just to see the previous containers not running with just their ids, we can run ","position":{"start":{"line":343,"column":1,"offset":9861},"end":{"line":343,"column":81,"offset":9941},"indent":[]}},{"type":"inlineCode","value":"docker ps -a -q","position":{"start":{"line":343,"column":81,"offset":9941},"end":{"line":343,"column":98,"offset":9958},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":9861},"end":{"line":343,"column":98,"offset":9958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Of course, for removing older containers, we can ","position":{"start":{"line":345,"column":1,"offset":9960},"end":{"line":345,"column":50,"offset":10009},"indent":[]}},{"type":"inlineCode","value":"docker rm","position":{"start":{"line":345,"column":50,"offset":10009},"end":{"line":345,"column":61,"offset":10020},"indent":[]}},{"type":"text","value":" previous containers.","position":{"start":{"line":345,"column":61,"offset":10020},"end":{"line":345,"column":82,"offset":10041},"indent":[]}}],"position":{"start":{"line":345,"column":1,"offset":9960},"end":{"line":345,"column":82,"offset":10041},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can also remove containers from the ","position":{"start":{"line":347,"column":1,"offset":10043},"end":{"line":347,"column":40,"offset":10082},"indent":[]}},{"type":"inlineCode","value":"/var/lib/docker","position":{"start":{"line":347,"column":40,"offset":10082},"end":{"line":347,"column":57,"offset":10099},"indent":[]}},{"type":"text","value":" folder as the super user. If you do it this way, you want to ensure that you have ","position":{"start":{"line":347,"column":57,"offset":10099},"end":{"line":347,"column":140,"offset":10182},"indent":[]}},{"type":"inlineCode","value":"systemctl stop/restart docker","position":{"start":{"line":347,"column":140,"offset":10182},"end":{"line":347,"column":171,"offset":10213},"indent":[]}},{"type":"text","value":" to ensure that there aren't any issues with Docker.","position":{"start":{"line":347,"column":171,"offset":10213},"end":{"line":347,"column":223,"offset":10265},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":10043},"end":{"line":347,"column":223,"offset":10265},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Controlling Port Exposure on Containers","position":{"start":{"line":349,"column":4,"offset":10270},"end":{"line":349,"column":43,"offset":10309},"indent":[]}}],"position":{"start":{"line":349,"column":1,"offset":10267},"end":{"line":349,"column":43,"offset":10309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, start up a nginx container in daemon mode without remapping the ports.","position":{"start":{"line":351,"column":1,"offset":10311},"end":{"line":351,"column":88,"offset":10398},"indent":[]}}],"position":{"start":{"line":351,"column":1,"offset":10311},"end":{"line":351,"column":88,"offset":10398},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Again, we can inspect this container to find the IP etc. We know that we can get anything remapped to the localhost currently because there is no remapping.","position":{"start":{"line":353,"column":1,"offset":10400},"end":{"line":353,"column":157,"offset":10556},"indent":[]}}],"position":{"start":{"line":353,"column":1,"offset":10400},"end":{"line":353,"column":157,"offset":10556},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In contrast, we can use ","position":{"start":{"line":355,"column":1,"offset":10558},"end":{"line":355,"column":25,"offset":10582},"indent":[]}},{"type":"inlineCode","value":"-P","position":{"start":{"line":355,"column":25,"offset":10582},"end":{"line":355,"column":29,"offset":10586},"indent":[]}},{"type":"text","value":" to expose the ports and it will auto remap to high port value.","position":{"start":{"line":355,"column":29,"offset":10586},"end":{"line":355,"column":92,"offset":10649},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":10558},"end":{"line":355,"column":92,"offset":10649},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"-p 8080:80","position":{"start":{"line":357,"column":1,"offset":10651},"end":{"line":357,"column":13,"offset":10663},"indent":[]}},{"type":"text","value":" will be use defining the port that we want to expose it to.","position":{"start":{"line":357,"column":13,"offset":10663},"end":{"line":357,"column":73,"offset":10723},"indent":[]}}],"position":{"start":{"line":357,"column":1,"offset":10651},"end":{"line":357,"column":73,"offset":10723},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we want to define a certain interface eg. localhost...","position":{"start":{"line":359,"column":1,"offset":10725},"end":{"line":359,"column":58,"offset":10782},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":10725},"end":{"line":359,"column":58,"offset":10782},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker run -itd -p 127.0.01:8081:80 nginx:latest","position":{"start":{"line":361,"column":1,"offset":10784},"end":{"line":361,"column":51,"offset":10834},"indent":[]}},{"type":"text","value":" would ONLY allow localhost to access this site.","position":{"start":{"line":361,"column":51,"offset":10834},"end":{"line":361,"column":99,"offset":10882},"indent":[]}}],"position":{"start":{"line":361,"column":1,"offset":10784},"end":{"line":361,"column":99,"offset":10882},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Naming Containers","position":{"start":{"line":363,"column":4,"offset":10887},"end":{"line":363,"column":21,"offset":10904},"indent":[]}}],"position":{"start":{"line":363,"column":1,"offset":10884},"end":{"line":363,"column":21,"offset":10904},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To rename containers, we can run ","position":{"start":{"line":365,"column":1,"offset":10906},"end":{"line":365,"column":34,"offset":10939},"indent":[]}},{"type":"inlineCode","value":"docker rename currentname newname","position":{"start":{"line":365,"column":34,"offset":10939},"end":{"line":365,"column":69,"offset":10974},"indent":[]}},{"type":"text","value":" - you can even rename container IDs, although there is likely no point.","position":{"start":{"line":365,"column":69,"offset":10974},"end":{"line":365,"column":141,"offset":11046},"indent":[]}}],"position":{"start":{"line":365,"column":1,"offset":10906},"end":{"line":365,"column":141,"offset":11046},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also rename running containers!","position":{"start":{"line":367,"column":1,"offset":11048},"end":{"line":367,"column":40,"offset":11087},"indent":[]}}],"position":{"start":{"line":367,"column":1,"offset":11048},"end":{"line":367,"column":40,"offset":11087},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docker Events","position":{"start":{"line":369,"column":4,"offset":11092},"end":{"line":369,"column":17,"offset":11105},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":11089},"end":{"line":369,"column":17,"offset":11105},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How can we monitor certain events?","position":{"start":{"line":371,"column":1,"offset":11107},"end":{"line":371,"column":35,"offset":11141},"indent":[]}}],"position":{"start":{"line":371,"column":1,"offset":11107},"end":{"line":371,"column":35,"offset":11141},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Startup a few containers.","position":{"start":{"line":373,"column":1,"offset":11143},"end":{"line":373,"column":26,"offset":11168},"indent":[]}}],"position":{"start":{"line":373,"column":1,"offset":11143},"end":{"line":373,"column":26,"offset":11168},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When we interact with them, certain events are generated.","position":{"start":{"line":375,"column":1,"offset":11170},"end":{"line":375,"column":58,"offset":11227},"indent":[]}}],"position":{"start":{"line":375,"column":1,"offset":11170},"end":{"line":375,"column":58,"offset":11227},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we run ","position":{"start":{"line":377,"column":1,"offset":11229},"end":{"line":377,"column":11,"offset":11239},"indent":[]}},{"type":"inlineCode","value":"docker events","position":{"start":{"line":377,"column":11,"offset":11239},"end":{"line":377,"column":26,"offset":11254},"indent":[]}},{"type":"text","value":", it will begin a program to wait and register certain events.","position":{"start":{"line":377,"column":26,"offset":11254},"end":{"line":377,"column":88,"offset":11316},"indent":[]}}],"position":{"start":{"line":377,"column":1,"offset":11229},"end":{"line":377,"column":88,"offset":11316},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we run ","position":{"start":{"line":379,"column":1,"offset":11318},"end":{"line":379,"column":11,"offset":11328},"indent":[]}},{"type":"inlineCode","value":"docker events --since '1h'","position":{"start":{"line":379,"column":11,"offset":11328},"end":{"line":379,"column":39,"offset":11356},"indent":[]}},{"type":"text","value":", we can then see all the events that have happened in the last hour.","position":{"start":{"line":379,"column":39,"offset":11356},"end":{"line":379,"column":108,"offset":11425},"indent":[]}}],"position":{"start":{"line":379,"column":1,"offset":11318},"end":{"line":379,"column":108,"offset":11425},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we run just ","position":{"start":{"line":381,"column":1,"offset":11427},"end":{"line":381,"column":16,"offset":11442},"indent":[]}},{"type":"inlineCode","value":"docker events","position":{"start":{"line":381,"column":16,"offset":11442},"end":{"line":381,"column":31,"offset":11457},"indent":[]}},{"type":"text","value":" and run a ","position":{"start":{"line":381,"column":31,"offset":11457},"end":{"line":381,"column":42,"offset":11468},"indent":[]}},{"type":"inlineCode","value":"dok exec -it mycontainerid /bin/bash","position":{"start":{"line":381,"column":42,"offset":11468},"end":{"line":381,"column":80,"offset":11506},"indent":[]}},{"type":"text","value":" command, we will then see those events registered. This is useful for debugging and monitoring the entire host.","position":{"start":{"line":381,"column":80,"offset":11506},"end":{"line":381,"column":192,"offset":11618},"indent":[]}}],"position":{"start":{"line":381,"column":1,"offset":11427},"end":{"line":381,"column":192,"offset":11618},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We may not care about every event though. What happens if we just care about an attachment?","position":{"start":{"line":383,"column":1,"offset":11620},"end":{"line":383,"column":92,"offset":11711},"indent":[]}}],"position":{"start":{"line":383,"column":1,"offset":11620},"end":{"line":383,"column":92,"offset":11711},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker events --filter <keyword>","position":{"start":{"line":385,"column":1,"offset":11713},"end":{"line":385,"column":35,"offset":11747},"indent":[]}},{"type":"text","value":" can then be used to filter for events we care about.","position":{"start":{"line":385,"column":35,"offset":11747},"end":{"line":385,"column":88,"offset":11800},"indent":[]}}],"position":{"start":{"line":385,"column":1,"offset":11713},"end":{"line":385,"column":88,"offset":11800},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker events --filter event=attach","position":{"start":{"line":387,"column":1,"offset":11802},"end":{"line":387,"column":38,"offset":11839},"indent":[]}}],"position":{"start":{"line":387,"column":1,"offset":11802},"end":{"line":387,"column":38,"offset":11839},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can also filter for multiple events with multiple ","position":{"start":{"line":389,"column":1,"offset":11841},"end":{"line":389,"column":54,"offset":11894},"indent":[]}},{"type":"inlineCode","value":"--filter event=<event>","position":{"start":{"line":389,"column":54,"offset":11894},"end":{"line":389,"column":78,"offset":11918},"indent":[]}}],"position":{"start":{"line":389,"column":1,"offset":11841},"end":{"line":389,"column":78,"offset":11918},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Managing and Removing Base Images","position":{"start":{"line":391,"column":4,"offset":11923},"end":{"line":391,"column":37,"offset":11956},"indent":[]}}],"position":{"start":{"line":391,"column":1,"offset":11920},"end":{"line":391,"column":37,"offset":11956},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you remove an image by name, then if there is a double up of the same ID, it will just remove the named image - however an ID removal will warn you if they share the ID. They only way to remove all of them is to use the force ","position":{"start":{"line":393,"column":1,"offset":11958},"end":{"line":393,"column":230,"offset":12187},"indent":[]}},{"type":"inlineCode","value":"-f","position":{"start":{"line":393,"column":230,"offset":12187},"end":{"line":393,"column":234,"offset":12191},"indent":[]}},{"type":"text","value":" flag.","position":{"start":{"line":393,"column":234,"offset":12191},"end":{"line":393,"column":240,"offset":12197},"indent":[]}}],"position":{"start":{"line":393,"column":1,"offset":11958},"end":{"line":393,"column":240,"offset":12197},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Saving and Loading Docker Images","position":{"start":{"line":395,"column":4,"offset":12202},"end":{"line":395,"column":36,"offset":12234},"indent":[]}}],"position":{"start":{"line":395,"column":1,"offset":12199},"end":{"line":395,"column":36,"offset":12234},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Saving","position":{"start":{"line":397,"column":3,"offset":12238},"end":{"line":397,"column":9,"offset":12244},"indent":[]}}],"position":{"start":{"line":397,"column":1,"offset":12236},"end":{"line":397,"column":11,"offset":12246},"indent":[]}}],"position":{"start":{"line":397,"column":1,"offset":12236},"end":{"line":397,"column":11,"offset":12246},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When we pull images, we can pull from local or from Docker Hub. You will use base of an official release usually etc.","position":{"start":{"line":399,"column":1,"offset":12248},"end":{"line":399,"column":118,"offset":12365},"indent":[]}}],"position":{"start":{"line":399,"column":1,"offset":12248},"end":{"line":399,"column":118,"offset":12365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How can we manage our custom images? We can ","position":{"start":{"line":401,"column":1,"offset":12367},"end":{"line":401,"column":45,"offset":12411},"indent":[]}},{"type":"inlineCode","value":"tar","position":{"start":{"line":401,"column":45,"offset":12411},"end":{"line":401,"column":50,"offset":12416},"indent":[]}},{"type":"text","value":" any file and migrate it to another compute etc.","position":{"start":{"line":401,"column":50,"offset":12416},"end":{"line":401,"column":98,"offset":12464},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":12367},"end":{"line":401,"column":98,"offset":12464},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker commit containername centos:mine","position":{"start":{"line":403,"column":1,"offset":12466},"end":{"line":403,"column":42,"offset":12507},"indent":[]}}],"position":{"start":{"line":403,"column":1,"offset":12466},"end":{"line":403,"column":42,"offset":12507},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will allow us to save the image but remove the containers!","position":{"start":{"line":405,"column":1,"offset":12509},"end":{"line":405,"column":64,"offset":12572},"indent":[]}}],"position":{"start":{"line":405,"column":1,"offset":12509},"end":{"line":405,"column":64,"offset":12572},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use","position":{"start":{"line":407,"column":1,"offset":12574},"end":{"line":407,"column":11,"offset":12584},"indent":[]}}],"position":{"start":{"line":407,"column":1,"offset":12574},"end":{"line":407,"column":11,"offset":12584},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker save --output centos.latest.tar centos:latest","position":{"start":{"line":409,"column":1,"offset":12586},"end":{"line":411,"column":4,"offset":12646},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you ","position":{"start":{"line":413,"column":1,"offset":12648},"end":{"line":413,"column":8,"offset":12655},"indent":[]}},{"type":"inlineCode","value":"ls","position":{"start":{"line":413,"column":8,"offset":12655},"end":{"line":413,"column":12,"offset":12659},"indent":[]}},{"type":"text","value":" the tar file, it will give you details about the image/container.","position":{"start":{"line":413,"column":12,"offset":12659},"end":{"line":413,"column":78,"offset":12725},"indent":[]}}],"position":{"start":{"line":413,"column":1,"offset":12648},"end":{"line":413,"column":78,"offset":12725},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Restoring","position":{"start":{"line":415,"column":3,"offset":12729},"end":{"line":415,"column":12,"offset":12738},"indent":[]}}],"position":{"start":{"line":415,"column":1,"offset":12727},"end":{"line":415,"column":14,"offset":12740},"indent":[]}}],"position":{"start":{"line":415,"column":1,"offset":12727},"end":{"line":415,"column":14,"offset":12740},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker load --input centos.latest.tar","position":{"start":{"line":417,"column":1,"offset":12742},"end":{"line":417,"column":40,"offset":12781},"indent":[]}}],"position":{"start":{"line":417,"column":1,"offset":12742},"end":{"line":417,"column":40,"offset":12781},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we have ","position":{"start":{"line":419,"column":1,"offset":12783},"end":{"line":419,"column":12,"offset":12794},"indent":[]}},{"type":"inlineCode","value":"gzip","position":{"start":{"line":419,"column":12,"offset":12794},"end":{"line":419,"column":18,"offset":12800},"indent":[]}},{"type":"text","value":" a tar file, we can also load it directly from the ","position":{"start":{"line":419,"column":18,"offset":12800},"end":{"line":419,"column":69,"offset":12851},"indent":[]}},{"type":"inlineCode","value":".tar.gz","position":{"start":{"line":419,"column":69,"offset":12851},"end":{"line":419,"column":78,"offset":12860},"indent":[]}},{"type":"text","value":" file.","position":{"start":{"line":419,"column":78,"offset":12860},"end":{"line":419,"column":84,"offset":12866},"indent":[]}}],"position":{"start":{"line":419,"column":1,"offset":12783},"end":{"line":419,"column":84,"offset":12866},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Image History","position":{"start":{"line":421,"column":4,"offset":12871},"end":{"line":421,"column":17,"offset":12884},"indent":[]}}],"position":{"start":{"line":421,"column":1,"offset":12868},"end":{"line":421,"column":17,"offset":12884},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How can we get the history of the base image?","position":{"start":{"line":423,"column":1,"offset":12886},"end":{"line":423,"column":46,"offset":12931},"indent":[]}}],"position":{"start":{"line":423,"column":1,"offset":12886},"end":{"line":423,"column":46,"offset":12931},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker history imagename","position":{"start":{"line":425,"column":1,"offset":12933},"end":{"line":425,"column":27,"offset":12959},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":12933},"end":{"line":425,"column":27,"offset":12959},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This will give us a list of commands etc.","position":{"start":{"line":427,"column":1,"offset":12961},"end":{"line":427,"column":42,"offset":13002},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":12961},"end":{"line":427,"column":42,"offset":13002},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Take Control of Our Tags","position":{"start":{"line":429,"column":4,"offset":13007},"end":{"line":429,"column":28,"offset":13031},"indent":[]}}],"position":{"start":{"line":429,"column":1,"offset":13004},"end":{"line":429,"column":28,"offset":13031},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Changes in the container is what is kept in storage layering.","position":{"start":{"line":431,"column":1,"offset":13033},"end":{"line":431,"column":62,"offset":13094},"indent":[]}}],"position":{"start":{"line":431,"column":1,"offset":13033},"end":{"line":431,"column":62,"offset":13094},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker tag imageid mine/centos:v1.0","position":{"start":{"line":433,"column":1,"offset":13096},"end":{"line":433,"column":38,"offset":13133},"indent":[]}},{"type":"text","value":" - this will create a new image with the repo tag.","position":{"start":{"line":433,"column":38,"offset":13133},"end":{"line":433,"column":88,"offset":13183},"indent":[]}}],"position":{"start":{"line":433,"column":1,"offset":13096},"end":{"line":433,"column":88,"offset":13183},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker tag mine/centos:v1.0 dok.example.com/centos:v1.0b","position":{"start":{"line":435,"column":1,"offset":13185},"end":{"line":435,"column":59,"offset":13243},"indent":[]}},{"type":"text","value":" will do the same.","position":{"start":{"line":435,"column":59,"offset":13243},"end":{"line":435,"column":77,"offset":13261},"indent":[]}}],"position":{"start":{"line":435,"column":1,"offset":13185},"end":{"line":435,"column":77,"offset":13261},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Pushing to Docker Hub","position":{"start":{"line":437,"column":4,"offset":13266},"end":{"line":437,"column":25,"offset":13287},"indent":[]}}],"position":{"start":{"line":437,"column":1,"offset":13263},"end":{"line":437,"column":25,"offset":13287},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"docker login --username=name","position":{"start":{"line":439,"column":1,"offset":13289},"end":{"line":439,"column":31,"offset":13319},"indent":[]}},{"type":"text","value":" throw in the password and you'll be authenticated.","position":{"start":{"line":439,"column":31,"offset":13319},"end":{"line":439,"column":82,"offset":13370},"indent":[]}}],"position":{"start":{"line":439,"column":1,"offset":13289},"end":{"line":439,"column":82,"offset":13370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One authenticated, ","position":{"start":{"line":441,"column":1,"offset":13372},"end":{"line":441,"column":20,"offset":13391},"indent":[]}},{"type":"inlineCode","value":"docker push image","position":{"start":{"line":441,"column":20,"offset":13391},"end":{"line":441,"column":39,"offset":13410},"indent":[]}}],"position":{"start":{"line":441,"column":1,"offset":13372},"end":{"line":441,"column":39,"offset":13410},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Of course, to bring it back down, you will hit ","position":{"start":{"line":443,"column":1,"offset":13412},"end":{"line":443,"column":48,"offset":13459},"indent":[]}},{"type":"inlineCode","value":"docker pull name","position":{"start":{"line":443,"column":48,"offset":13459},"end":{"line":443,"column":66,"offset":13477},"indent":[]}}],"position":{"start":{"line":443,"column":1,"offset":13412},"end":{"line":443,"column":66,"offset":13477},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":445,"column":1,"offset":13479},"end":{"line":445,"column":4,"offset":13482},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Integration and Use Cases","position":{"start":{"line":447,"column":4,"offset":13487},"end":{"line":447,"column":29,"offset":13512},"indent":[]}}],"position":{"start":{"line":447,"column":1,"offset":13484},"end":{"line":447,"column":29,"offset":13512},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Building a Web Farm for Development and Testing","position":{"start":{"line":449,"column":4,"offset":13517},"end":{"line":449,"column":51,"offset":13564},"indent":[]}}],"position":{"start":{"line":449,"column":1,"offset":13514},"end":{"line":449,"column":51,"offset":13564},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":451,"column":2,"offset":13567},"end":{"line":451,"column":15,"offset":13580},"indent":[]}}],"position":{"start":{"line":451,"column":1,"offset":13566},"end":{"line":451,"column":16,"offset":13581},"indent":[]}}],"position":{"start":{"line":451,"column":1,"offset":13566},"end":{"line":451,"column":16,"offset":13581},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So far, we have not had a specific purpose for Docker containers. These following examples are for real world use cases.","position":{"start":{"line":453,"column":1,"offset":13583},"end":{"line":453,"column":121,"offset":13703},"indent":[]}}],"position":{"start":{"line":453,"column":1,"offset":13583},"end":{"line":453,"column":121,"offset":13703},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Set up a web farm with two Apache web nodes on port 80 - both sharing one or more file systems.","position":{"start":{"line":455,"column":1,"offset":13705},"end":{"line":455,"column":96,"offset":13800},"indent":[]}}],"position":{"start":{"line":455,"column":1,"offset":13705},"end":{"line":455,"column":96,"offset":13800},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Part One","position":{"start":{"line":457,"column":2,"offset":13803},"end":{"line":457,"column":10,"offset":13811},"indent":[]}}],"position":{"start":{"line":457,"column":1,"offset":13802},"end":{"line":457,"column":11,"offset":13812},"indent":[]}}],"position":{"start":{"line":457,"column":1,"offset":13802},"end":{"line":457,"column":11,"offset":13812},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":460,"column":1,"offset":13815},"end":{"line":460,"column":31,"offset":13845},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":460,"column":31,"offset":13845}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"docker-deep-dive\"\n    }}>{`Docker Deep Dive`}</h2>\n    <hr></hr>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#docker-deep-dive\"\n        }}>{`Docker Deep Dive`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#docker-basics\"\n        }}>{`Docker Basics`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----working-with-multiple-images\"\n            }}>{`---- Working with Multiple Images`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----packaging-a-customized-container\"\n            }}>{`---- Packaging A Customized Container`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----container-commands\"\n            }}>{`---- Container Commands`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----exposing-ports\"\n            }}>{`---- Exposing ports`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#the-dockerfile-builds-and-network-configuration\"\n        }}>{`The Dockerfile, Builds and Network Configuration`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----user-and-run\"\n            }}>{`---- USER and RUN`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----env\"\n            }}>{`---- ENV`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----cmd-vs-run\"\n            }}>{`---- CMD vs RUN`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----entrypoint\"\n            }}>{`---- ENTRYPOINT`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----expose\"\n            }}>{`---- EXPOSE`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----container-volume-management\"\n            }}>{`---- Container Volume Management`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----docker-network-list-and-inspect\"\n            }}>{`---- Docker Network: List and Inspect`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----docker-network-assign-to-containers\"\n            }}>{`---- Docker Network: Assign to Containers`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#docker-commands-and-structures\"\n        }}>{`Docker commands and structures`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----inspect-container-processes\"\n            }}>{`---- Inspect Container Processes`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----previous-container-management\"\n            }}>{`---- Previous Container Management`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----controlling-port-exposure-on-containers\"\n            }}>{`---- Controlling Port Exposure on Containers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----naming-containers\"\n            }}>{`---- Naming Containers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----docker-events\"\n            }}>{`---- Docker Events`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----managing-and-removing-base-images\"\n            }}>{`---- Managing and Removing Base Images`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----saving-and-loading-docker-images\"\n            }}>{`---- Saving and Loading Docker Images`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----image-history\"\n            }}>{`---- Image History`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----take-control-of-our-tags\"\n            }}>{`---- Take Control of Our Tags`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----pushing-to-docker-hub\"\n            }}>{`---- Pushing to Docker Hub`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#integration-and-use-cases\"\n        }}>{`Integration and Use Cases`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----building-a-web-farm-for-development-and-testing\"\n            }}>{`---- Building a Web Farm for Development and Testing`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"docker-basics\"\n    }}>{`Docker Basics`}</h2>\n    <h2 {...{\n      \"id\": \"working-with-multiple-images\"\n    }}>{`Working with Multiple Images`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`# i: interactive, t: tty, d: daemon mode\ndocker run -i -t -d ubuntu:latest /bin/bash\n\n# to attach to the container and edit the container\ndocker attach container_name\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"packaging-a-customized-container\"\n    }}>{`Packaging A Customized Container`}</h2>\n    <p>{`Once you are attached to a container, anytime you create files, it is now part of that container!`}</p>\n    <p>{`You can do all of your updates etc.`}</p>\n    <p>{`From here, we can commit to create a base image.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker commit -m \"This is a new image\" -a \"dennis@presentcompany.co\" dok/ubusshd:v1\n`}</code></pre>\n    <p>{`Once this is commited, it is now put to a base container! Yay!`}</p>\n    <p>{`Let's create a simple Dockerfile to give some info about us.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile - example Ubuntu example with SSH already installed\nFROM ubuntu:latest\nMAINTAINER okeeffed <dennis@presentcompany.co>\nRUN apt-get update\nRUN apt-get -y install telnet openssh-server\n`}</code></pre>\n    <p>{`For building:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# build a Dockerfile from the current location\ndocker build -t=\"dok/ubusshdonly:v2\" .\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"container-commands\"\n    }}>{`Container Commands`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`top # shows the processes\ndocker logs container_name #shows history for container\ndocker exec container name /bin/cat /etc/profile\n\ndocker run container name /bin/bash -c \"while true; do echo HELLO; sleep 1; done\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"exposing-ports\"\n    }}>{`Exposing ports`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -d -p 80:80 nginx:latest\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-dockerfile-builds-and-network-configuration\"\n    }}>{`The Dockerfile, Builds and Network Configuration`}</h2>\n    <h2 {...{\n      \"id\": \"user-and-run\"\n    }}>{`USER and RUN`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\nUSER user\n`}</code></pre>\n    <p>{`To connect as the root, you just need to start the container and run `}<inlineCode parentName=\"p\">{`docker exec -u 0 -it sleepy_allen /bin/bash`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Order of Execution`}</strong></p>\n    <p>{`We had to run a super user command to add the User. Now let's say we want to run another command.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nUSER user\n\n# below will give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"env\"\n    }}>{`ENV`}</h2>\n    <p>{`Example, let's install Java through the Dockerfile!`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nRUN yum update -y\nRUN yum install -y net-tools wget\n\nRUN cd ~ && wget --no-cookies --no-check-certificate --header \"url\"\n\nRUN yum localinstall -y ~/java_file.rpm\n\nUSER user\n\nRUN cd ~ && echo \"export JAVA_HOME=/usr/java/jdk1.8.0/jre\" >> /home/user/.bashrc\n\n# generates env variable for everyone\nENV JAVA_BIN /usr/java/jdk1.8.0/jre/bin\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"cmd-vs-run\"\n    }}>{`CMD vs RUN`}</h2>\n    <p>{`Command generally sets the default command to run when there is nothing specified when container starts up.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\nCMD 'echo' 'This is a custom container message'\n\nUSER user\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"entrypoint\"\n    }}>{`ENTRYPOINT`}</h2>\n    <p>{`The entrypoint itself will ALWAYS be the concrete default application everytime that the container is created.`}</p>\n    <p><inlineCode parentName=\"p\">{`CMD`}</inlineCode>{` will only run when there is no argument, whereas `}<inlineCode parentName=\"p\">{`ENTRYPOINT`}</inlineCode>{` will always run.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN useradd -ms /bin/bash user\n\nENTRYPOINT echo \"This command will display this message on EVERY container that is run from it\"\n\nUSER user\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"expose\"\n    }}>{`EXPOSE`}</h2>\n    <p>{`EXPOSE will allow us to expose our ports.`}</p>\n    <p>{`The follow image will allow us to build a webserver and run it from basics.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nENTRYPOINT apachectl \"-DFOREGROUND\"\n`}</code></pre>\n    <p>{`However, if we don't expose any ports, then using `}<inlineCode parentName=\"p\">{`-P`}</inlineCode>{` won't automatically expose those ports. We can still forcably expose ports using \\`docker run --name apacheweb -d -p 8080:80 container`}</p>\n    <p>{`To auto-expose, we can do this...`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nEXPOSE 80\n\nENTRYPOINT apachectl \"-DFOREGROUND\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"container-volume-management\"\n    }}>{`Container Volume Management`}</h2>\n    <p>{`How do we work with mounts and file systems?`}</p>\n    <p>{`We can mount using `}<inlineCode parentName=\"p\">{`-v`}</inlineCode>{` for mounting volumes.`}</p>\n    <p>{`Scenario One: Create a directory at launchtime called `}<inlineCode parentName=\"p\">{`mydata`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -it --name voltest1 -v /mydata centos:latest /bin/bash\n# once logged in\ndf -h # shows that there is a mounted file\n\n# back from host OS terminal\ncd /var/lib/docker # will show us the volumes folder\n\n# if we docker inspect the container\n# it will show us the volume and the source\n`}</code></pre>\n    <p>{`Once we have things that are mounted, we can access them from the container and anything that we edit in the underlying host, we can see in the container!`}</p>\n    <p>{`We can't do this from the Dockerfile, because the base image is designed to be portable.`}</p>\n    <h2 {...{\n      \"id\": \"docker-network-list-and-inspect\"\n    }}>{`Docker Network: List and Inspect`}</h2>\n    <p>{`Thanks to Docker Swarm and Kubernetes, it has become easier to manage the Docker Network.`}</p>\n    <p>{`When you run a docker instance, it will auto pull the next available address.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# this will list all of the associated networks with the current host\ndocker network ls\n\ndocker network ls --no-trunc # to see the full address\n\ndocker network inspect bridge\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Creating Docker network configs`}</strong></p>\n    <p>{`To see things like a `}<inlineCode parentName=\"p\">{`man`}</inlineCode>{` page for docker, you essential just put dashes between multi-word commands.`}</p>\n    <p><inlineCode parentName=\"p\">{`man docker-network-create`}</inlineCode>{` will bring up the network create manual.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker network create --subnet 10.1.0.0/24 --gateway 10.1.0.1 mybridge01 # /24 is everything in that network\n\ndocker network ls\n# the new bridge adapter is now there\n\n# to remove the bridge\ndocker network rm mybridge01\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"docker-network-assign-to-containers\"\n    }}>{`Docker Network: Assign to Containers`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`# subnet itself can be 10.1.[1-254].[1-254] while ip-range is 10.1.4.[1-254]\n# that is class b and class c respectively\ndocker network create --subnet 10.1.0.0/16 --gateway 10.1.0.1 --ip-range=10.1.4.0/24 --driver=bridge --label=host4network bridge04\n`}</code></pre>\n    <p>{`If you then inspect the new above network config, it will have those settings within that inspect config.`}</p>\n    <p>{`So how do we now use this new network?`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -it --name nettest1 --net bridge04 --ip 10.1.4.100 centos:latest /bin/bash\n\n# if we docker inspect nettest1 | grep IP we can see the address set at 10.1.4.100\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"docker-commands-and-structures\"\n    }}>{`Docker commands and structures`}</h2>\n    <h2 {...{\n      \"id\": \"inspect-container-processes\"\n    }}>{`Inspect Container Processes`}</h2>\n    <p>{`From the outside, we can run `}<inlineCode parentName=\"p\">{`docker exec`}</inlineCode>{` to get some more details about the container itself.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker exec container_name /bin/ps aux | grep bash`}</inlineCode></p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`docker top`}</inlineCode>{` to see the top command run on a container.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker top container_name`}</inlineCode></p>\n    <p>{`Let's execute a command to install `}<inlineCode parentName=\"p\">{`sshd`}</inlineCode>{`. We could attach to container and do so, but we have a few options. Instead of attaching, we could do the following:`}</p>\n    <p><inlineCode parentName=\"p\">{`docker exec -i -t container_name /bin/bash`}</inlineCode></p>\n    <p>{`This will ensure that the container doesn't stop, but will actually run two instances of `}<inlineCode parentName=\"p\">{`bash`}</inlineCode>{`. We can verify this by looking at the container processes.`}</p>\n    <p>{`So far, this can give us a momentary snap shot.`}</p>\n    <p><strong parentName=\"p\">{`See the history of previous processes and performances`}</strong></p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`docker stats`}</inlineCode>{` to see a live set of information for that container.`}</p>\n    <p><inlineCode parentName=\"p\">{`dock stats container_name`}</inlineCode></p>\n    <p>{`This will keep a view that is constantly updated to see what is going on.`}</p>\n    <h2 {...{\n      \"id\": \"previous-container-management\"\n    }}>{`Previous Container Management`}</h2>\n    <p>{`Just to see the previous containers not running with just their ids, we can run `}<inlineCode parentName=\"p\">{`docker ps -a -q`}</inlineCode></p>\n    <p>{`Of course, for removing older containers, we can `}<inlineCode parentName=\"p\">{`docker rm`}</inlineCode>{` previous containers.`}</p>\n    <p>{`We can also remove containers from the `}<inlineCode parentName=\"p\">{`/var/lib/docker`}</inlineCode>{` folder as the super user. If you do it this way, you want to ensure that you have `}<inlineCode parentName=\"p\">{`systemctl stop/restart docker`}</inlineCode>{` to ensure that there aren't any issues with Docker.`}</p>\n    <h2 {...{\n      \"id\": \"controlling-port-exposure-on-containers\"\n    }}>{`Controlling Port Exposure on Containers`}</h2>\n    <p>{`In this example, start up a nginx container in daemon mode without remapping the ports.`}</p>\n    <p>{`Again, we can inspect this container to find the IP etc. We know that we can get anything remapped to the localhost currently because there is no remapping.`}</p>\n    <p>{`In contrast, we can use `}<inlineCode parentName=\"p\">{`-P`}</inlineCode>{` to expose the ports and it will auto remap to high port value.`}</p>\n    <p><inlineCode parentName=\"p\">{`-p 8080:80`}</inlineCode>{` will be use defining the port that we want to expose it to.`}</p>\n    <p>{`If we want to define a certain interface eg. localhost...`}</p>\n    <p><inlineCode parentName=\"p\">{`docker run -itd -p 127.0.01:8081:80 nginx:latest`}</inlineCode>{` would ONLY allow localhost to access this site.`}</p>\n    <h2 {...{\n      \"id\": \"naming-containers\"\n    }}>{`Naming Containers`}</h2>\n    <p>{`To rename containers, we can run `}<inlineCode parentName=\"p\">{`docker rename currentname newname`}</inlineCode>{` - you can even rename container IDs, although there is likely no point.`}</p>\n    <p>{`You can also rename running containers!`}</p>\n    <h2 {...{\n      \"id\": \"docker-events\"\n    }}>{`Docker Events`}</h2>\n    <p>{`How can we monitor certain events?`}</p>\n    <p>{`Startup a few containers.`}</p>\n    <p>{`When we interact with them, certain events are generated.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`docker events`}</inlineCode>{`, it will begin a program to wait and register certain events.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`docker events --since '1h'`}</inlineCode>{`, we can then see all the events that have happened in the last hour.`}</p>\n    <p>{`If we run just `}<inlineCode parentName=\"p\">{`docker events`}</inlineCode>{` and run a `}<inlineCode parentName=\"p\">{`dok exec -it mycontainerid /bin/bash`}</inlineCode>{` command, we will then see those events registered. This is useful for debugging and monitoring the entire host.`}</p>\n    <p>{`We may not care about every event though. What happens if we just care about an attachment?`}</p>\n    <p><inlineCode parentName=\"p\">{`docker events --filter <keyword>`}</inlineCode>{` can then be used to filter for events we care about.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker events --filter event=attach`}</inlineCode></p>\n    <p>{`We can also filter for multiple events with multiple `}<inlineCode parentName=\"p\">{`--filter event=<event>`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"managing-and-removing-base-images\"\n    }}>{`Managing and Removing Base Images`}</h2>\n    <p>{`If you remove an image by name, then if there is a double up of the same ID, it will just remove the named image - however an ID removal will warn you if they share the ID. They only way to remove all of them is to use the force `}<inlineCode parentName=\"p\">{`-f`}</inlineCode>{` flag.`}</p>\n    <h2 {...{\n      \"id\": \"saving-and-loading-docker-images\"\n    }}>{`Saving and Loading Docker Images`}</h2>\n    <p><strong parentName=\"p\">{`Saving`}</strong></p>\n    <p>{`When we pull images, we can pull from local or from Docker Hub. You will use base of an official release usually etc.`}</p>\n    <p>{`How can we manage our custom images? We can `}<inlineCode parentName=\"p\">{`tar`}</inlineCode>{` any file and migrate it to another compute etc.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker commit containername centos:mine`}</inlineCode></p>\n    <p>{`This will allow us to save the image but remove the containers!`}</p>\n    <p>{`We can use`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker save --output centos.latest.tar centos:latest\n`}</code></pre>\n    <p>{`If you `}<inlineCode parentName=\"p\">{`ls`}</inlineCode>{` the tar file, it will give you details about the image/container.`}</p>\n    <p><strong parentName=\"p\">{`Restoring`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`docker load --input centos.latest.tar`}</inlineCode></p>\n    <p>{`If we have `}<inlineCode parentName=\"p\">{`gzip`}</inlineCode>{` a tar file, we can also load it directly from the `}<inlineCode parentName=\"p\">{`.tar.gz`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"image-history\"\n    }}>{`Image History`}</h2>\n    <p>{`How can we get the history of the base image?`}</p>\n    <p><inlineCode parentName=\"p\">{`docker history imagename`}</inlineCode></p>\n    <p>{`This will give us a list of commands etc.`}</p>\n    <h2 {...{\n      \"id\": \"take-control-of-our-tags\"\n    }}>{`Take Control of Our Tags`}</h2>\n    <p>{`Changes in the container is what is kept in storage layering.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker tag imageid mine/centos:v1.0`}</inlineCode>{` - this will create a new image with the repo tag.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker tag mine/centos:v1.0 dok.example.com/centos:v1.0b`}</inlineCode>{` will do the same.`}</p>\n    <h2 {...{\n      \"id\": \"pushing-to-docker-hub\"\n    }}>{`Pushing to Docker Hub`}</h2>\n    <p><inlineCode parentName=\"p\">{`docker login --username=name`}</inlineCode>{` throw in the password and you'll be authenticated.`}</p>\n    <p>{`One authenticated, `}<inlineCode parentName=\"p\">{`docker push image`}</inlineCode></p>\n    <p>{`Of course, to bring it back down, you will hit `}<inlineCode parentName=\"p\">{`docker pull name`}</inlineCode></p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"integration-and-use-cases\"\n    }}>{`Integration and Use Cases`}</h2>\n    <h2 {...{\n      \"id\": \"building-a-web-farm-for-development-and-testing\"\n    }}>{`Building a Web Farm for Development and Testing`}</h2>\n    <p><em parentName=\"p\">{`Prerequisites`}</em></p>\n    <p>{`So far, we have not had a specific purpose for Docker containers. These following examples are for real world use cases.`}</p>\n    <p>{`Set up a web farm with two Apache web nodes on port 80 - both sharing one or more file systems.`}</p>\n    <p><em parentName=\"p\">{`Part One`}</em></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}