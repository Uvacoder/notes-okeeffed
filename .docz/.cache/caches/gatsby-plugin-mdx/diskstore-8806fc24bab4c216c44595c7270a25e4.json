{"expireTime":9007200867335978000,"key":"gatsby-plugin-mdx-entire-payload-513db38560613cc7b4f517640cee814d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Visitor","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":10,"offset":176},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":10,"offset":176},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Example","position":{"start":{"line":10,"column":4,"offset":181},"end":{"line":10,"column":11,"offset":188},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":178},"end":{"line":10,"column":11,"offset":188},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"interface Visitable {\n  accept(visitor: IVisitor): void;\n}\n\ninterface IVisitor {\n  visitMainItem?(mainItem: MainItem): void;\n  visitSideItem?(sideItem: SideItem): void;\n}\n\nclass MainItem implements Visitable {\n  accept(visitor: IVisitor) {\n    if (visitor.visitMainItem) {\n      visitor.visitMainItem(this);\n    }\n  }\n}\n\nclass SideItem implements Visitable {\n  accept(visitor: IVisitor) {\n    if (visitor.visitSideItem) {\n      visitor.visitSideItem(this);\n    }\n  }\n}\n\nclass LogVisitor implements IVisitor {\n  visitMainItem(mainItem: MainItem): void {\n    console.log('Log mainItem, and add new logics');\n  }\n\n  visitSideItem(sideItem: SideItem): void {\n    console.log('Log sideItem, and add new logics');\n  }\n}\n\nclass DecorateVisitor implements IVisitor {\n  visitMainItem(mainItem: MainItem): void {\n    console.log('Decorate mainItem, and add new logics');\n  }\n\n  visitSideItem(sideItem: SideItem): void {\n    console.log('Decorate sideItem, and add new logics');\n  }\n}\n\nclass ItemsGroup implements Visitable {\n  private _items: Object[];\n\n  constructor() {\n    this._items = [];\n  }\n\n  public addItem(item: Object) {\n    this._items.push(item);\n  }\n\n  public popItem() {\n    return this._items.pop();\n  }\n\n  accept(visitor: IVisitor): void {\n    this._items.map((item: Visitable) => {\n      item.accept(visitor);\n    });\n  }\n}\n\n(function main() {\n  const group = new ItemsGroup();\n  group.addItem(new MainItem());\n  group.addItem(new SideItem());\n\n  const mainVisitor = new LogVisitor();\n  const sideVisitor = new DecorateVisitor();\n\n  group.accept(mainVisitor);\n  group.accept(sideVisitor);\n\n  // remove\n  const removedItem = group.popItem();\n  console.log('removedItem:', removedItem); // SideItem\n\n  // attempt to accept again\n  group.accept(mainVisitor);\n  group.accept(sideVisitor); // not accepted this time\n})();","position":{"start":{"line":12,"column":1,"offset":190},"end":{"line":99,"column":4,"offset":2032},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":102,"column":1,"offset":2035},"end":{"line":102,"column":31,"offset":2065},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":102,"column":31,"offset":2065}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"visitor\"\n    }}>{`Visitor`}</h1>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface Visitable {\n  accept(visitor: IVisitor): void;\n}\n\ninterface IVisitor {\n  visitMainItem?(mainItem: MainItem): void;\n  visitSideItem?(sideItem: SideItem): void;\n}\n\nclass MainItem implements Visitable {\n  accept(visitor: IVisitor) {\n    if (visitor.visitMainItem) {\n      visitor.visitMainItem(this);\n    }\n  }\n}\n\nclass SideItem implements Visitable {\n  accept(visitor: IVisitor) {\n    if (visitor.visitSideItem) {\n      visitor.visitSideItem(this);\n    }\n  }\n}\n\nclass LogVisitor implements IVisitor {\n  visitMainItem(mainItem: MainItem): void {\n    console.log('Log mainItem, and add new logics');\n  }\n\n  visitSideItem(sideItem: SideItem): void {\n    console.log('Log sideItem, and add new logics');\n  }\n}\n\nclass DecorateVisitor implements IVisitor {\n  visitMainItem(mainItem: MainItem): void {\n    console.log('Decorate mainItem, and add new logics');\n  }\n\n  visitSideItem(sideItem: SideItem): void {\n    console.log('Decorate sideItem, and add new logics');\n  }\n}\n\nclass ItemsGroup implements Visitable {\n  private _items: Object[];\n\n  constructor() {\n    this._items = [];\n  }\n\n  public addItem(item: Object) {\n    this._items.push(item);\n  }\n\n  public popItem() {\n    return this._items.pop();\n  }\n\n  accept(visitor: IVisitor): void {\n    this._items.map((item: Visitable) => {\n      item.accept(visitor);\n    });\n  }\n}\n\n(function main() {\n  const group = new ItemsGroup();\n  group.addItem(new MainItem());\n  group.addItem(new SideItem());\n\n  const mainVisitor = new LogVisitor();\n  const sideVisitor = new DecorateVisitor();\n\n  group.accept(mainVisitor);\n  group.accept(sideVisitor);\n\n  // remove\n  const removedItem = group.popItem();\n  console.log('removedItem:', removedItem); // SideItem\n\n  // attempt to accept again\n  group.accept(mainVisitor);\n  group.accept(sideVisitor); // not accepted this time\n})();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}