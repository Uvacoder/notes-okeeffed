{"expireTime":9007200849425490000,"key":"gatsby-plugin-mdx-entire-payload-2bd3340f9de29d429d53566c73b856be-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"CSS Regression Testing","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":25,"offset":190},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":25,"offset":190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.","position":{"start":{"line":9,"column":1,"offset":192},"end":{"line":9,"column":113,"offset":304},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":192},"end":{"line":9,"column":113,"offset":304},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prequisites","position":{"start":{"line":11,"column":4,"offset":309},"end":{"line":11,"column":15,"offset":320},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":306},"end":{"line":11,"column":15,"offset":320},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using yarn","position":{"start":{"line":13,"column":5,"offset":326},"end":{"line":13,"column":15,"offset":336},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":322},"end":{"line":13,"column":15,"offset":336},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver","position":{"start":{"line":15,"column":1,"offset":338},"end":{"line":17,"column":4,"offset":467},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using kratos","position":{"start":{"line":19,"column":5,"offset":473},"end":{"line":19,"column":17,"offset":485},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":469},"end":{"line":19,"column":17,"offset":485},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"kratos install js-controllers pixeldiff\nkratos install js-test regression\nshotgun run","position":{"start":{"line":21,"column":1,"offset":487},"end":{"line":25,"column":4,"offset":584},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Folder setup","position":{"start":{"line":27,"column":5,"offset":590},"end":{"line":27,"column":17,"offset":602},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":586},"end":{"line":27,"column":17,"offset":602},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ensure that you have a ","position":{"start":{"line":29,"column":1,"offset":604},"end":{"line":29,"column":24,"offset":627},"indent":[]}},{"type":"inlineCode","value":"regression","position":{"start":{"line":29,"column":24,"offset":627},"end":{"line":29,"column":36,"offset":639},"indent":[]}},{"type":"text","value":" folder to store all the images.","position":{"start":{"line":29,"column":36,"offset":639},"end":{"line":29,"column":68,"offset":671},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":604},"end":{"line":29,"column":68,"offset":671},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"# Example regression layout\nregression\n├── diff\n│   └── test.png\n├── src\n│   └── test.png\n└── temp\n    └── test.png\n\n3 directories, 3 files","position":{"start":{"line":31,"column":1,"offset":673},"end":{"line":42,"column":4,"offset":824},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using Regression CLI","position":{"start":{"line":44,"column":4,"offset":829},"end":{"line":44,"column":24,"offset":849},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":826},"end":{"line":44,"column":24,"offset":849},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Preparation","position":{"start":{"line":46,"column":5,"offset":855},"end":{"line":46,"column":16,"offset":866},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":851},"end":{"line":46,"column":16,"offset":866},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Set the imports for the router file.","position":{"start":{"line":48,"column":4,"offset":871},"end":{"line":48,"column":40,"offset":907},"indent":[]}}],"position":{"start":{"line":48,"column":4,"offset":871},"end":{"line":48,"column":40,"offset":907},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":868},"end":{"line":48,"column":40,"offset":907},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Set the dev router.","position":{"start":{"line":49,"column":4,"offset":911},"end":{"line":49,"column":23,"offset":930},"indent":[]}}],"position":{"start":{"line":49,"column":4,"offset":911},"end":{"line":49,"column":23,"offset":930},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":908},"end":{"line":49,"column":23,"offset":930},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Set the array in the .puppeteer file.","position":{"start":{"line":50,"column":4,"offset":934},"end":{"line":50,"column":41,"offset":971},"indent":[]}}],"position":{"start":{"line":50,"column":4,"offset":934},"end":{"line":50,"column":41,"offset":971},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":931},"end":{"line":50,"column":41,"offset":971},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ensure the devRouter is being used.","position":{"start":{"line":51,"column":4,"offset":975},"end":{"line":51,"column":39,"offset":1010},"indent":[]}}],"position":{"start":{"line":51,"column":4,"offset":975},"end":{"line":51,"column":39,"offset":1010},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":972},"end":{"line":51,"column":39,"offset":1010},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ensure app is running.","position":{"start":{"line":52,"column":4,"offset":1014},"end":{"line":52,"column":26,"offset":1036},"indent":[]}}],"position":{"start":{"line":52,"column":4,"offset":1014},"end":{"line":52,"column":26,"offset":1036},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1011},"end":{"line":52,"column":26,"offset":1036},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run source to set the base image.","position":{"start":{"line":53,"column":4,"offset":1040},"end":{"line":53,"column":37,"offset":1073},"indent":[]}}],"position":{"start":{"line":53,"column":4,"offset":1040},"end":{"line":53,"column":37,"offset":1073},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1037},"end":{"line":53,"column":37,"offset":1073},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run compare to compare source to current.","position":{"start":{"line":54,"column":4,"offset":1077},"end":{"line":54,"column":45,"offset":1118},"indent":[]}}],"position":{"start":{"line":54,"column":4,"offset":1077},"end":{"line":54,"column":45,"offset":1118},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1074},"end":{"line":54,"column":45,"offset":1118},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":868},"end":{"line":54,"column":45,"offset":1118},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Application","position":{"start":{"line":56,"column":4,"offset":1123},"end":{"line":56,"column":15,"offset":1134},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1120},"end":{"line":56,"column":15,"offset":1134},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Create a babelrc file","position":{"start":{"line":58,"column":5,"offset":1140},"end":{"line":58,"column":29,"offset":1164},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1136},"end":{"line":58,"column":29,"offset":1164},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n  \"presets\": [\"env\"],\n  \"plugins\": [\n    [\n      \"module-resolver\",\n      {\n        \"alias\": {\n          \"controllers\": \"./controllers\"\n        }\n      }\n    ]\n  ]\n}","position":{"start":{"line":60,"column":1,"offset":1166},"end":{"line":74,"column":4,"offset":1345},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2. Saving a screenshot","position":{"start":{"line":76,"column":5,"offset":1351},"end":{"line":76,"column":27,"offset":1373},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1347},"end":{"line":76,"column":27,"offset":1373},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is not the test itself but a simple node script to get the initial base working:","position":{"start":{"line":78,"column":1,"offset":1375},"end":{"line":78,"column":86,"offset":1460},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1375},"end":{"line":78,"column":86,"offset":1460},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const PixelDiff = require('./controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('.homeSplashFade');\n  await el.screenshot({ path: 'regression/src/test.png' });\n\n  console.log('Closing browser');\n  await browser.close();\n\n  /*\n    console.log('Comparing images');\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\n    console.log(res);\n    */\n})();","position":{"start":{"line":80,"column":1,"offset":1462},"end":{"line":103,"column":4,"offset":2118},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Writing the test file","position":{"start":{"line":105,"column":5,"offset":2124},"end":{"line":105,"column":29,"offset":2148},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2120},"end":{"line":105,"column":29,"offset":2148},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create your test file. Any example test file looks like the following:","position":{"start":{"line":107,"column":1,"offset":2150},"end":{"line":107,"column":71,"offset":2220},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2150},"end":{"line":107,"column":71,"offset":2220},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('#root');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});","position":{"start":{"line":109,"column":1,"offset":2222},"end":{"line":157,"column":4,"offset":3482},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Running the test from the CLI","position":{"start":{"line":159,"column":5,"offset":3488},"end":{"line":159,"column":37,"offset":3520},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":3484},"end":{"line":159,"column":37,"offset":3520},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js","position":{"start":{"line":161,"column":1,"offset":3522},"end":{"line":163,"column":4,"offset":3624},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":166,"column":1,"offset":3627},"end":{"line":166,"column":31,"offset":3657},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":166,"column":31,"offset":3657}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"css-regression-testing\"\n    }}>{`CSS Regression Testing`}</h1>\n    <p>{`We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.`}</p>\n    <h2 {...{\n      \"id\": \"prequisites\"\n    }}>{`Prequisites`}</h2>\n    <h3 {...{\n      \"id\": \"using-yarn\"\n    }}>{`Using yarn`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-kratos\"\n    }}>{`Using kratos`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kratos install js-controllers pixeldiff\nkratos install js-test regression\nshotgun run\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"folder-setup\"\n    }}>{`Folder setup`}</h3>\n    <p>{`Ensure that you have a `}<inlineCode parentName=\"p\">{`regression`}</inlineCode>{` folder to store all the images.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Example regression layout\nregression\n├── diff\n│   └── test.png\n├── src\n│   └── test.png\n└── temp\n    └── test.png\n\n3 directories, 3 files\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-regression-cli\"\n    }}>{`Using Regression CLI`}</h2>\n    <h3 {...{\n      \"id\": \"preparation\"\n    }}>{`Preparation`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Set the imports for the router file.`}</li>\n      <li parentName=\"ol\">{`Set the dev router.`}</li>\n      <li parentName=\"ol\">{`Set the array in the .puppeteer file.`}</li>\n      <li parentName=\"ol\">{`Ensure the devRouter is being used.`}</li>\n      <li parentName=\"ol\">{`Ensure app is running.`}</li>\n      <li parentName=\"ol\">{`Run source to set the base image.`}</li>\n      <li parentName=\"ol\">{`Run compare to compare source to current.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"application\"\n    }}>{`Application`}</h2>\n    <h3 {...{\n      \"id\": \"1-create-a-babelrc-file\"\n    }}>{`1. Create a babelrc file`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"presets\": [\"env\"],\n  \"plugins\": [\n    [\n      \"module-resolver\",\n      {\n        \"alias\": {\n          \"controllers\": \"./controllers\"\n        }\n      }\n    ]\n  ]\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-saving-a-screenshot\"\n    }}>{`2. Saving a screenshot`}</h3>\n    <p>{`This is not the test itself but a simple node script to get the initial base working:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const PixelDiff = require('./controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('.homeSplashFade');\n  await el.screenshot({ path: 'regression/src/test.png' });\n\n  console.log('Closing browser');\n  await browser.close();\n\n  /*\n    console.log('Comparing images');\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\n    console.log(res);\n    */\n})();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-writing-the-test-file\"\n    }}>{`3. Writing the test file`}</h3>\n    <p>{`Create your test file. Any example test file looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('#root');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"4-running-the-test-from-the-cli\"\n    }}>{`4. Running the test from the CLI`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}