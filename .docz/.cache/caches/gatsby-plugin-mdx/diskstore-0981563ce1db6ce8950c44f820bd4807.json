{"expireTime":9007200852878359000,"key":"gatsby-plugin-mdx-entire-payload-6aca4a604d5ef45aed50e68345d08fb3-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Java Spring Stripe Configuration","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":35,"offset":201},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":35,"offset":201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this short example, we are going to \"Hello, World!\" a Stripe charge!","position":{"start":{"line":10,"column":1,"offset":203},"end":{"line":10,"column":72,"offset":274},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":203},"end":{"line":10,"column":72,"offset":274},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":12,"column":4,"offset":279},"end":{"line":12,"column":13,"offset":288},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":276},"end":{"line":12,"column":13,"offset":288},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.dennisokeeffe.com/manual-java-gradle-intro","children":[{"type":"text","value":"Gradle Intro Docs","position":{"start":{"line":14,"column":5,"offset":294},"end":{"line":14,"column":22,"offset":311},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":293},"end":{"line":14,"column":80,"offset":369},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":293},"end":{"line":14,"column":80,"offset":369},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":290},"end":{"line":14,"column":80,"offset":369},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://spring.io/guides/gs/rest-service/","children":[{"type":"text","value":"Spring Guide to Rest Services","position":{"start":{"line":15,"column":5,"offset":374},"end":{"line":15,"column":34,"offset":403},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":373},"end":{"line":15,"column":78,"offset":447},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":373},"end":{"line":15,"column":78,"offset":447},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":370},"end":{"line":15,"column":78,"offset":447},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stripe.com/docs/api","children":[{"type":"text","value":"Stripe API","position":{"start":{"line":16,"column":5,"offset":452},"end":{"line":16,"column":15,"offset":462},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":451},"end":{"line":16,"column":45,"offset":492},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":451},"end":{"line":16,"column":45,"offset":492},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":448},"end":{"line":16,"column":45,"offset":492},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stackabuse.com/stripe-integration-with-java-spring-for-payment-processing/","children":[{"type":"text","value":"Stripe with Spring","position":{"start":{"line":17,"column":5,"offset":497},"end":{"line":17,"column":23,"offset":515},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":496},"end":{"line":17,"column":108,"offset":600},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":496},"end":{"line":17,"column":108,"offset":600},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":493},"end":{"line":17,"column":108,"offset":600},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/stripe/stripe-java#usage","children":[{"type":"text","value":"Stripe Github Java Usage","position":{"start":{"line":18,"column":5,"offset":605},"end":{"line":18,"column":29,"offset":629},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":604},"end":{"line":18,"column":75,"offset":675},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":604},"end":{"line":18,"column":75,"offset":675},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":601},"end":{"line":18,"column":75,"offset":675},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/ResponseEntity.html","children":[{"type":"text","value":"Spring ResponseEntity","position":{"start":{"line":19,"column":5,"offset":680},"end":{"line":19,"column":26,"offset":701},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":679},"end":{"line":19,"column":138,"offset":813},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":679},"end":{"line":19,"column":138,"offset":813},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":676},"end":{"line":19,"column":138,"offset":813},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.tutorialspoint.com/spring_boot/spring_boot_service_components.htm","children":[{"type":"text","value":"Tutorials Point: Service Components","position":{"start":{"line":20,"column":5,"offset":818},"end":{"line":20,"column":40,"offset":853},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":817},"end":{"line":20,"column":120,"offset":933},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":817},"end":{"line":20,"column":120,"offset":933},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":814},"end":{"line":20,"column":120,"offset":933},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://gist.github.com/fteychene/1e5c30fc86d7623084d0","children":[{"type":"text","value":"Basic Spring Boot Gitignore file","position":{"start":{"line":21,"column":5,"offset":938},"end":{"line":21,"column":37,"offset":970},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":937},"end":{"line":21,"column":94,"offset":1027},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":937},"end":{"line":21,"column":94,"offset":1027},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":934},"end":{"line":21,"column":94,"offset":1027},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":290},"end":{"line":21,"column":94,"offset":1027},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setup","position":{"start":{"line":23,"column":4,"offset":1032},"end":{"line":23,"column":9,"offset":1037},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1029},"end":{"line":23,"column":9,"offset":1037},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"mkdir hello-spring-stripe && cd hello-spring-stripe\nmkdir -p src/main/java/stripe\ntouch build.gradle src/main/java/stripe/StripeCharge.java src/main/java/stripe/StripeChageController.java src/main/java/stripe/Application.java .env\n# init gradle\ngradle wrapper","position":{"start":{"line":25,"column":1,"offset":1039},"end":{"line":31,"column":4,"offset":1311},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setup build.gradle","position":{"start":{"line":33,"column":4,"offset":1316},"end":{"line":33,"column":22,"offset":1334},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1313},"end":{"line":33,"column":22,"offset":1334},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add the following for Stripe + Spring:","position":{"start":{"line":35,"column":1,"offset":1336},"end":{"line":35,"column":39,"offset":1374},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1336},"end":{"line":35,"column":39,"offset":1374},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"buildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE\")\n    }\n}\n\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'idea'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\nbootJar {\n    baseName = 'hello-spring-jar'\n    version =  '0.1.0'\n}\n\nrepositories {\n    mavenCentral()\n}\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\ndependencies {\n    compile(\"com.stripe:stripe-java:16.5.1\")\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"io.github.cdimascio:java-dotenv:5.1.3\")\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}","position":{"start":{"line":37,"column":1,"offset":1376},"end":{"line":71,"column":4,"offset":2127},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Set up dotenv file","position":{"start":{"line":73,"column":4,"offset":2132},"end":{"line":73,"column":22,"offset":2150},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2129},"end":{"line":73,"column":22,"offset":2150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We are using a local dotenv file for this \"Hello, World!\" level example.","position":{"start":{"line":75,"column":1,"offset":2152},"end":{"line":75,"column":73,"offset":2224},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2152},"end":{"line":75,"column":73,"offset":2224},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# required\nSK_TEST_KEY=sk_...\n# not required\nPK_TEST_KEY=pk_...","position":{"start":{"line":77,"column":1,"offset":2226},"end":{"line":82,"column":4,"offset":2302},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting up the main application","position":{"start":{"line":84,"column":4,"offset":2307},"end":{"line":84,"column":35,"offset":2338},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2304},"end":{"line":84,"column":35,"offset":2338},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":86,"column":1,"offset":2340},"end":{"line":86,"column":4,"offset":2343},"indent":[]}},{"type":"inlineCode","value":"src/main/java/stripe/Application.java","position":{"start":{"line":86,"column":4,"offset":2343},"end":{"line":86,"column":43,"offset":2382},"indent":[]}},{"type":"text","value":", add the following:","position":{"start":{"line":86,"column":43,"offset":2382},"end":{"line":86,"column":63,"offset":2402},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2340},"end":{"line":86,"column":63,"offset":2402},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"package stripecharge;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n}","position":{"start":{"line":88,"column":1,"offset":2404},"end":{"line":101,"column":4,"offset":2711},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting up the model","position":{"start":{"line":103,"column":4,"offset":2716},"end":{"line":103,"column":24,"offset":2736},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2713},"end":{"line":103,"column":24,"offset":2736},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":105,"column":1,"offset":2738},"end":{"line":105,"column":4,"offset":2741},"indent":[]}},{"type":"inlineCode","value":"src/main/java/stripe/StripeCharge.java","position":{"start":{"line":105,"column":4,"offset":2741},"end":{"line":105,"column":44,"offset":2781},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":105,"column":44,"offset":2781},"end":{"line":105,"column":45,"offset":2782},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2738},"end":{"line":105,"column":45,"offset":2782},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"package stripecharge;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StripeCharge {\n\n  private final long amount;\n  private final String receiptEmail;\n  private final String source;\n  private final String currency;\n\n  public StripeCharge(long amount, String receiptEmail) {\n    this.amount = amount;\n    this.source = \"tok_visa\";\n    this.currency = \"usd\";\n    this.receiptEmail = receiptEmail;\n  }\n\n  public Map<String, Object> getCharge() {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"amount\", this.amount);\n    params.put(\"currency\", this.currency);\n    // source should obtained with Stripe.js\n    params.put(\"source\", this.source);\n    params.put(\n      \"description\",\n      \"My First Test Charge (created for API docs)\"\n    );\n    params.put(\"receipt_email\",this.receiptEmail);\n    return params;\n  }\n}","position":{"start":{"line":107,"column":1,"offset":2784},"end":{"line":141,"column":4,"offset":3656},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting up the controller","position":{"start":{"line":143,"column":4,"offset":3661},"end":{"line":143,"column":29,"offset":3686},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3658},"end":{"line":143,"column":29,"offset":3686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":145,"column":1,"offset":3688},"end":{"line":145,"column":4,"offset":3691},"indent":[]}},{"type":"inlineCode","value":"src/main/java/stripe/StripeChargeController.java","position":{"start":{"line":145,"column":4,"offset":3691},"end":{"line":145,"column":54,"offset":3741},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":145,"column":54,"offset":3741},"end":{"line":145,"column":55,"offset":3742},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":3688},"end":{"line":145,"column":55,"offset":3742},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"package stripecharge;\n\n// NOTE: RequestMapping + RequestParam not required for this demo\n// but kept in for reference purposes if wanted to play around later\nimport java.util.concurrent.atomic.AtomicLong;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.RestController;\nimport io.github.cdimascio.dotenv.Dotenv;\nimport com.stripe.Stripe;\nimport com.stripe.exception.StripeException;\nimport com.stripe.model.Charge;\nimport com.stripe.net.RequestOptions;\n\n@RestController\n@RequestMapping(\"/api\")\npublic class StripeChargeController {\n\n  @PostMapping(\"/charge\")\n  public ResponseEntity<String> createCharge(@RequestBody StripeCharge stripeCharge) {\n    try {\n      // for demonstrations sake, using .env file\n      Dotenv dotenv = Dotenv.load();\n\n      // creating the charge\n      Stripe.apiKey = dotenv.get(\"SK_TEST_KEY\");\n      Charge charge = Charge.create(stripeCharge.getCharge());\n      System.out.println(charge);\n      return new ResponseEntity<String>(\"Success\", HttpStatus.CREATED);\n    } catch (StripeException e) {\n      e.printStackTrace();\n      return new ResponseEntity<String>(\"Failure\", HttpStatus.INTERNAL_SERVER_ERROR);\n\n    }\n  }\n}","position":{"start":{"line":147,"column":1,"offset":3744},"end":{"line":188,"column":4,"offset":5240},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Build, Run and Ping","position":{"start":{"line":190,"column":4,"offset":5245},"end":{"line":190,"column":23,"offset":5264},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":5242},"end":{"line":190,"column":23,"offset":5264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run ","position":{"start":{"line":192,"column":1,"offset":5266},"end":{"line":192,"column":5,"offset":5270},"indent":[]}},{"type":"inlineCode","value":"./gradlew build","position":{"start":{"line":192,"column":5,"offset":5270},"end":{"line":192,"column":22,"offset":5287},"indent":[]}},{"type":"text","value":" to build to project or ","position":{"start":{"line":192,"column":22,"offset":5287},"end":{"line":192,"column":46,"offset":5311},"indent":[]}},{"type":"inlineCode","value":"./gradlew bootRun","position":{"start":{"line":192,"column":46,"offset":5311},"end":{"line":192,"column":65,"offset":5330},"indent":[]}},{"type":"text","value":" to build and run.","position":{"start":{"line":192,"column":65,"offset":5330},"end":{"line":192,"column":83,"offset":5348},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":5266},"end":{"line":192,"column":83,"offset":5348},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once the project is running, we can ping ","position":{"start":{"line":194,"column":1,"offset":5350},"end":{"line":194,"column":42,"offset":5391},"indent":[]}},{"type":"inlineCode","value":"http POST http://localhost:8080/api/charge amount:=200 receiptEmail=hello@example.com","position":{"start":{"line":194,"column":42,"offset":5391},"end":{"line":194,"column":129,"offset":5478},"indent":[]}},{"type":"text","value":" (using HTTPie) and we get a response like the following:","position":{"start":{"line":194,"column":129,"offset":5478},"end":{"line":194,"column":186,"offset":5535},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":5350},"end":{"line":194,"column":186,"offset":5535},"indent":[]}},{"type":"code","lang":"s","meta":null,"value":"HTTP/1.1 201\nContent-Length: 7\nContent-Type: application/json;charset=UTF-8\nDate: Sun, 12 Jan 2020 03:33:10 GMT\n\nSuccess","position":{"start":{"line":196,"column":1,"offset":5537},"end":{"line":203,"column":4,"offset":5666},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Check your Stripe Dashboard under ","position":{"start":{"line":205,"column":1,"offset":5668},"end":{"line":205,"column":35,"offset":5702},"indent":[]}},{"type":"inlineCode","value":"Developer > Events","position":{"start":{"line":205,"column":35,"offset":5702},"end":{"line":205,"column":55,"offset":5722},"indent":[]}},{"type":"text","value":" and you'll see we have successfully made a payment! Hooray!","position":{"start":{"line":205,"column":55,"offset":5722},"end":{"line":205,"column":115,"offset":5782},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":5668},"end":{"line":205,"column":115,"offset":5782},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":208,"column":1,"offset":5785},"end":{"line":208,"column":31,"offset":5815},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":208,"column":31,"offset":5815}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"java-spring-stripe-configuration\"\n    }}>{`Java Spring Stripe Configuration`}</h1>\n    <p>{`In this short example, we are going to \"Hello, World!\" a Stripe charge!`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.dennisokeeffe.com/manual-java-gradle-intro\"\n        }}>{`Gradle Intro Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://spring.io/guides/gs/rest-service/\"\n        }}>{`Spring Guide to Rest Services`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackabuse.com/stripe-integration-with-java-spring-for-payment-processing/\"\n        }}>{`Stripe with Spring`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-java#usage\"\n        }}>{`Stripe Github Java Usage`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/ResponseEntity.html\"\n        }}>{`Spring ResponseEntity`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/spring_boot/spring_boot_service_components.htm\"\n        }}>{`Tutorials Point: Service Components`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://gist.github.com/fteychene/1e5c30fc86d7623084d0\"\n        }}>{`Basic Spring Boot Gitignore file`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir hello-spring-stripe && cd hello-spring-stripe\nmkdir -p src/main/java/stripe\ntouch build.gradle src/main/java/stripe/StripeCharge.java src/main/java/stripe/StripeChageController.java src/main/java/stripe/Application.java .env\n# init gradle\ngradle wrapper\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setup-buildgradle\"\n    }}>{`Setup build.gradle`}</h2>\n    <p>{`Add the following for Stripe + Spring:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`buildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE\")\n    }\n}\n\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'idea'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\nbootJar {\n    baseName = 'hello-spring-jar'\n    version =  '0.1.0'\n}\n\nrepositories {\n    mavenCentral()\n}\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\ndependencies {\n    compile(\"com.stripe:stripe-java:16.5.1\")\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"io.github.cdimascio:java-dotenv:5.1.3\")\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"set-up-dotenv-file\"\n    }}>{`Set up dotenv file`}</h2>\n    <p>{`We are using a local dotenv file for this \"Hello, World!\" level example.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# required\nSK_TEST_KEY=sk_...\n# not required\nPK_TEST_KEY=pk_...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-main-application\"\n    }}>{`Setting up the main application`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/Application.java`}</inlineCode>{`, add the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-model\"\n    }}>{`Setting up the model`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/StripeCharge.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StripeCharge {\n\n  private final long amount;\n  private final String receiptEmail;\n  private final String source;\n  private final String currency;\n\n  public StripeCharge(long amount, String receiptEmail) {\n    this.amount = amount;\n    this.source = \"tok_visa\";\n    this.currency = \"usd\";\n    this.receiptEmail = receiptEmail;\n  }\n\n  public Map<String, Object> getCharge() {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"amount\", this.amount);\n    params.put(\"currency\", this.currency);\n    // source should obtained with Stripe.js\n    params.put(\"source\", this.source);\n    params.put(\n      \"description\",\n      \"My First Test Charge (created for API docs)\"\n    );\n    params.put(\"receipt_email\",this.receiptEmail);\n    return params;\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-controller\"\n    }}>{`Setting up the controller`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/StripeChargeController.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\n// NOTE: RequestMapping + RequestParam not required for this demo\n// but kept in for reference purposes if wanted to play around later\nimport java.util.concurrent.atomic.AtomicLong;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.RestController;\nimport io.github.cdimascio.dotenv.Dotenv;\nimport com.stripe.Stripe;\nimport com.stripe.exception.StripeException;\nimport com.stripe.model.Charge;\nimport com.stripe.net.RequestOptions;\n\n@RestController\n@RequestMapping(\"/api\")\npublic class StripeChargeController {\n\n  @PostMapping(\"/charge\")\n  public ResponseEntity<String> createCharge(@RequestBody StripeCharge stripeCharge) {\n    try {\n      // for demonstrations sake, using .env file\n      Dotenv dotenv = Dotenv.load();\n\n      // creating the charge\n      Stripe.apiKey = dotenv.get(\"SK_TEST_KEY\");\n      Charge charge = Charge.create(stripeCharge.getCharge());\n      System.out.println(charge);\n      return new ResponseEntity<String>(\"Success\", HttpStatus.CREATED);\n    } catch (StripeException e) {\n      e.printStackTrace();\n      return new ResponseEntity<String>(\"Failure\", HttpStatus.INTERNAL_SERVER_ERROR);\n\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"build-run-and-ping\"\n    }}>{`Build, Run and Ping`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`./gradlew build`}</inlineCode>{` to build to project or `}<inlineCode parentName=\"p\">{`./gradlew bootRun`}</inlineCode>{` to build and run.`}</p>\n    <p>{`Once the project is running, we can ping `}<inlineCode parentName=\"p\">{`http POST http://localhost:8080/api/charge amount:=200 receiptEmail=hello@example.com`}</inlineCode>{` (using HTTPie) and we get a response like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`HTTP/1.1 201\nContent-Length: 7\nContent-Type: application/json;charset=UTF-8\nDate: Sun, 12 Jan 2020 03:33:10 GMT\n\nSuccess\n`}</code></pre>\n    <p>{`Check your Stripe Dashboard under `}<inlineCode parentName=\"p\">{`Developer > Events`}</inlineCode>{` and you'll see we have successfully made a payment! Hooray!`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}