{"expireTime":9007200852878435000,"key":"gatsby-plugin-mdx-entire-payload-77929479b676055035b32ade00c484b2-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Functors and Monads","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":22,"offset":188},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":22,"offset":188},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":10,"column":4,"offset":193},"end":{"line":10,"column":13,"offset":202},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":190},"end":{"line":10,"column":13,"offset":202},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://dev.to/bonesmcginty/functors-and-monads-in-javascript-4j29","children":[{"type":"text","value":"Functors + Monads","position":{"start":{"line":12,"column":5,"offset":208},"end":{"line":12,"column":22,"offset":225},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":207},"end":{"line":12,"column":91,"offset":294},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":207},"end":{"line":12,"column":91,"offset":294},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":204},"end":{"line":12,"column":91,"offset":294},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":204},"end":{"line":12,"column":91,"offset":294},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":14,"column":4,"offset":299},"end":{"line":14,"column":9,"offset":304},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":296},"end":{"line":14,"column":9,"offset":304},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":16,"column":1,"offset":306},"end":{"line":16,"column":3,"offset":308},"indent":[]}},{"type":"inlineCode","value":"Functor","position":{"start":{"line":16,"column":3,"offset":308},"end":{"line":16,"column":12,"offset":317},"indent":[]}},{"type":"text","value":" is something that you can map. A ","position":{"start":{"line":16,"column":12,"offset":317},"end":{"line":16,"column":46,"offset":351},"indent":[]}},{"type":"inlineCode","value":"monad","position":{"start":{"line":16,"column":46,"offset":351},"end":{"line":16,"column":53,"offset":358},"indent":[]}},{"type":"text","value":" is a functor that you can flatmap.","position":{"start":{"line":16,"column":53,"offset":358},"end":{"line":16,"column":88,"offset":393},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":306},"end":{"line":16,"column":88,"offset":393},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":19,"column":1,"offset":396},"end":{"line":19,"column":31,"offset":426},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":19,"column":31,"offset":426}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"functors-and-monads\"\n    }}>{`Functors and Monads`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dev.to/bonesmcginty/functors-and-monads-in-javascript-4j29\"\n        }}>{`Functors + Monads`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`Functor`}</inlineCode>{` is something that you can map. A `}<inlineCode parentName=\"p\">{`monad`}</inlineCode>{` is a functor that you can flatmap.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}