{"expireTime":9007200852878440000,"key":"gatsby-plugin-mdx-entire-payload-0a17a59eabba5c0a5eaabd5a324c5f3a-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Elixir Conditionals","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":22,"offset":188},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":22,"offset":188},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"If","position":{"start":{"line":10,"column":4,"offset":193},"end":{"line":10,"column":6,"offset":195},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":190},"end":{"line":10,"column":6,"offset":195},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"iex> if String.valid?(\"Hello\") do\n...>   \"Valid string!\"\n...> else\n...>   \"Invalid string.\"\n...> end\n\"Valid string!\"\n\niex> if \"a string value\" do\n...>   \"Truthy\"\n...> end\n\"Truthy\"","position":{"start":{"line":12,"column":1,"offset":197},"end":{"line":24,"column":4,"offset":389},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Unless","position":{"start":{"line":26,"column":4,"offset":394},"end":{"line":26,"column":10,"offset":400},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":391},"end":{"line":26,"column":10,"offset":400},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"iex> unless is_integer(\"hello\") do\n...>   \"Not an Int\"\n...> end\n\"Not an Int\"","position":{"start":{"line":28,"column":1,"offset":402},"end":{"line":33,"column":4,"offset":491},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Case","position":{"start":{"line":35,"column":4,"offset":496},"end":{"line":35,"column":8,"offset":500},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":493},"end":{"line":35,"column":8,"offset":500},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"iex> case {:ok, \"Hello World\"} do\n...>   {:ok, result} -> result\n...>   {:error} -> \"Uh oh!\"\n...>   _ -> \"Catch all\"\n...> end\n\"Hello World\"","position":{"start":{"line":37,"column":1,"offset":502},"end":{"line":44,"column":4,"offset":654},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"_","position":{"start":{"line":46,"column":1,"offset":656},"end":{"line":46,"column":4,"offset":659},"indent":[]}},{"type":"text","value":" is an important inclusion too:","position":{"start":{"line":46,"column":4,"offset":659},"end":{"line":46,"column":35,"offset":690},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":656},"end":{"line":46,"column":35,"offset":690},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"iex> case :even do\n...>   :odd -> \"Odd\"\n...> end\n** (CaseClauseError) no case clause matching: :even\n\niex> case :even do\n...>   :odd -> \"Odd\"\n...>   _ -> \"Not Odd\"\n...> end\n\"Not Odd\"","position":{"start":{"line":48,"column":1,"offset":692},"end":{"line":59,"column":4,"offset":887},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With pinning:","position":{"start":{"line":61,"column":1,"offset":889},"end":{"line":61,"column":14,"offset":902},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":889},"end":{"line":61,"column":14,"offset":902},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"iex> pie = 3.14\n 3.14\niex> case \"cherry pie\" do\n...>   ^pie -> \"Not so tasty\"\n...>   pie -> \"I bet #{pie} is tasty\"\n...> end\n\"I bet cherry pie is tasty\"","position":{"start":{"line":63,"column":1,"offset":904},"end":{"line":71,"column":4,"offset":1069},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":74,"column":1,"offset":1072},"end":{"line":74,"column":31,"offset":1102},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":74,"column":31,"offset":1102}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"elixir-conditionals\"\n    }}>{`Elixir Conditionals`}</h1>\n    <h2 {...{\n      \"id\": \"if\"\n    }}>{`If`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> if String.valid?(\"Hello\") do\n...>   \"Valid string!\"\n...> else\n...>   \"Invalid string.\"\n...> end\n\"Valid string!\"\n\niex> if \"a string value\" do\n...>   \"Truthy\"\n...> end\n\"Truthy\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"unless\"\n    }}>{`Unless`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> unless is_integer(\"hello\") do\n...>   \"Not an Int\"\n...> end\n\"Not an Int\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"case\"\n    }}>{`Case`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> case {:ok, \"Hello World\"} do\n...>   {:ok, result} -> result\n...>   {:error} -> \"Uh oh!\"\n...>   _ -> \"Catch all\"\n...> end\n\"Hello World\"\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`_`}</inlineCode>{` is an important inclusion too:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> case :even do\n...>   :odd -> \"Odd\"\n...> end\n** (CaseClauseError) no case clause matching: :even\n\niex> case :even do\n...>   :odd -> \"Odd\"\n...>   _ -> \"Not Odd\"\n...> end\n\"Not Odd\"\n`}</code></pre>\n    <p>{`With pinning:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> pie = 3.14\n 3.14\niex> case \"cherry pie\" do\n...>   ^pie -> \"Not so tasty\"\n...>   pie -> \"I bet #{pie} is tasty\"\n...> end\n\"I bet cherry pie is tasty\"\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}