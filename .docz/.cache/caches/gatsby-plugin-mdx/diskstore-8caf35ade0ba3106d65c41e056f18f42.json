{"expireTime":9007200849425587000,"key":"gatsby-plugin-mdx-entire-payload-cd6207add464565c7d630da788613651-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Composition & Aggregation","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":28,"offset":194},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":28,"offset":194},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"class Engine {\n  value: string;\n  constructor(value: string) {\n    this.value = value;\n  }\n}\n\nclass Truck {\n  engine: Engine;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n  }\n\n  isEngineRunning() {\n    return this.engine.value;\n  }\n}\n\nclass Car {\n  engine: Engine;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n  }\n\n  isEngineRunning() {\n    return this.engine.value;\n  }\n\n  removeEngine() {\n    this.engine = new Engine('Engine removed');\n  }\n}\n\nlet engine: Engine | undefined = new Engine('Engine running');\n// notice both car and truck share engine\nlet car = new Car(engine);\nlet truck = new Truck(engine);\n\nconsole.log('Car:', car.isEngineRunning());\nconsole.log('Truck:', truck.isEngineRunning());\n// delete car\ncar.removeEngine();\nconsole.log('Car:', car.isEngineRunning());\nconsole.log('Truck:', truck.isEngineRunning());\nconsole.log('Same pointer', engine === truck.engine);\nengine = undefined;\nconsole.log(engine);\nconsole.log('Truck:', truck.isEngineRunning());\nconsole.log('Same pointer', engine === truck.engine);","position":{"start":{"line":10,"column":1,"offset":196},"end":{"line":62,"column":4,"offset":1266},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":65,"column":1,"offset":1269},"end":{"line":65,"column":31,"offset":1299},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":65,"column":31,"offset":1299}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"composition--aggregation\"\n    }}>{`Composition & Aggregation`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`class Engine {\n  value: string;\n  constructor(value: string) {\n    this.value = value;\n  }\n}\n\nclass Truck {\n  engine: Engine;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n  }\n\n  isEngineRunning() {\n    return this.engine.value;\n  }\n}\n\nclass Car {\n  engine: Engine;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n  }\n\n  isEngineRunning() {\n    return this.engine.value;\n  }\n\n  removeEngine() {\n    this.engine = new Engine('Engine removed');\n  }\n}\n\nlet engine: Engine | undefined = new Engine('Engine running');\n// notice both car and truck share engine\nlet car = new Car(engine);\nlet truck = new Truck(engine);\n\nconsole.log('Car:', car.isEngineRunning());\nconsole.log('Truck:', truck.isEngineRunning());\n// delete car\ncar.removeEngine();\nconsole.log('Car:', car.isEngineRunning());\nconsole.log('Truck:', truck.isEngineRunning());\nconsole.log('Same pointer', engine === truck.engine);\nengine = undefined;\nconsole.log(engine);\nconsole.log('Truck:', truck.isEngineRunning());\nconsole.log('Same pointer', engine === truck.engine);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}