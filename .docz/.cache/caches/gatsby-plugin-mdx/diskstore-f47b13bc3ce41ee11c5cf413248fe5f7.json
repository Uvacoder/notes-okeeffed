{"expireTime":9007200849425574000,"key":"gatsby-plugin-mdx-entire-payload-5edb8a3ea95604b77676d6aa4416af96-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Elixir Iteration","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":19,"offset":185},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":19,"offset":185},"indent":[]}},{"type":"code","lang":"elixir","meta":null,"value":"values = [\"Ace\", \"Two\", \"Three\", \"Four\", \"Five\"]\nsuits = [\"Spades\", \"Clubs\", \"Hearts\", \"Diamonds\"]\n\nfor suit <- suits, value <- values do\n  \"#{value} of #{suit}\"\nend","position":{"start":{"line":10,"column":1,"offset":187},"end":{"line":17,"column":4,"offset":366},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":20,"column":1,"offset":369},"end":{"line":20,"column":31,"offset":399},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":20,"column":31,"offset":399}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"elixir-iteration\"\n    }}>{`Elixir Iteration`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`values = [\"Ace\", \"Two\", \"Three\", \"Four\", \"Five\"]\nsuits = [\"Spades\", \"Clubs\", \"Hearts\", \"Diamonds\"]\n\nfor suit <- suits, value <- values do\n  \"#{value} of #{suit}\"\nend\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}