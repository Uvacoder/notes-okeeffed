{"expireTime":9007200848610852000,"key":"gatsby-plugin-mdx-entire-payload-c62c0c791487156a8f343315e86bc4f9-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Terraform","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":12,"offset":177},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":12,"offset":177},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Course Content","position":{"start":{"line":9,"column":4,"offset":182},"end":{"line":9,"column":18,"offset":196},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":179},"end":{"line":9,"column":18,"offset":196},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"# Use this to get the content\n$ git clone https://github.com/wardviaene/terraform-course","position":{"start":{"line":11,"column":1,"offset":198},"end":{"line":14,"column":4,"offset":298},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Useful Terraform Commands","position":{"start":{"line":16,"column":4,"offset":303},"end":{"line":16,"column":29,"offset":328},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":300},"end":{"line":16,"column":29,"offset":328},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"$ terraform plan # plan\n$ terraform apply # shortcut for plan and apply - avoid in production\n$ terraform plan -out out.terraform # terraform and write the plan to out file\n$ terraform apply out.terraform # apply terraform plan using out file\n$ terraform show # show current state\n$ cat terraform.tfstate","position":{"start":{"line":18,"column":1,"offset":330},"end":{"line":25,"column":4,"offset":646},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"What is Terraform?","position":{"start":{"line":27,"column":4,"offset":651},"end":{"line":27,"column":22,"offset":669},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":648},"end":{"line":27,"column":22,"offset":669},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Infrastructure as ","position":{"start":{"line":29,"column":3,"offset":673},"end":{"line":29,"column":21,"offset":691},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"code","position":{"start":{"line":29,"column":23,"offset":693},"end":{"line":29,"column":27,"offset":697},"indent":[]}}],"position":{"start":{"line":29,"column":21,"offset":691},"end":{"line":29,"column":29,"offset":699},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":673},"end":{"line":29,"column":29,"offset":699},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":671},"end":{"line":29,"column":29,"offset":699},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Automation","position":{"start":{"line":30,"column":5,"offset":704},"end":{"line":30,"column":15,"offset":714},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":702},"end":{"line":30,"column":17,"offset":716},"indent":[]}},{"type":"text","value":" of infrastructure","position":{"start":{"line":30,"column":17,"offset":716},"end":{"line":30,"column":35,"offset":734},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":702},"end":{"line":30,"column":35,"offset":734},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":700},"end":{"line":30,"column":35,"offset":734},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Keep our infrastructure in a certain state (compliant)","position":{"start":{"line":31,"column":3,"offset":737},"end":{"line":31,"column":57,"offset":791},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":737},"end":{"line":31,"column":57,"offset":791},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"e.g. 2 web instances with 2 volumes + 1 load balancer","position":{"start":{"line":32,"column":5,"offset":796},"end":{"line":32,"column":58,"offset":849},"indent":[]}}],"position":{"start":{"line":32,"column":5,"offset":796},"end":{"line":32,"column":58,"offset":849},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":794},"end":{"line":32,"column":58,"offset":849},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":794},"end":{"line":32,"column":58,"offset":849},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":735},"end":{"line":32,"column":58,"offset":849},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make infrastructure ","position":{"start":{"line":33,"column":3,"offset":852},"end":{"line":33,"column":23,"offset":872},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"auditable","position":{"start":{"line":33,"column":25,"offset":874},"end":{"line":33,"column":34,"offset":883},"indent":[]}}],"position":{"start":{"line":33,"column":23,"offset":872},"end":{"line":33,"column":36,"offset":885},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":852},"end":{"line":33,"column":36,"offset":885},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can keep your infrastructure change history in a ","position":{"start":{"line":34,"column":5,"offset":890},"end":{"line":34,"column":58,"offset":943},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"version control","position":{"start":{"line":34,"column":60,"offset":945},"end":{"line":34,"column":75,"offset":960},"indent":[]}}],"position":{"start":{"line":34,"column":58,"offset":943},"end":{"line":34,"column":77,"offset":962},"indent":[]}},{"type":"text","value":" system like GIT","position":{"start":{"line":34,"column":77,"offset":962},"end":{"line":34,"column":93,"offset":978},"indent":[]}}],"position":{"start":{"line":34,"column":5,"offset":890},"end":{"line":34,"column":93,"offset":978},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":888},"end":{"line":34,"column":93,"offset":978},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":888},"end":{"line":34,"column":93,"offset":978},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":850},"end":{"line":34,"column":93,"offset":978},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Terraform can automate provisioning of the ","position":{"start":{"line":35,"column":3,"offset":981},"end":{"line":35,"column":46,"offset":1024},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"infrastructure itself","position":{"start":{"line":35,"column":48,"offset":1026},"end":{"line":35,"column":69,"offset":1047},"indent":[]}}],"position":{"start":{"line":35,"column":46,"offset":1024},"end":{"line":35,"column":71,"offset":1049},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":35,"column":71,"offset":1049},"end":{"line":35,"column":73,"offset":1051},"indent":[]}}],"position":{"start":{"line":35,"column":3,"offset":981},"end":{"line":35,"column":73,"offset":1051},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":979},"end":{"line":35,"column":73,"offset":1051},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":671},"end":{"line":35,"column":73,"offset":1051},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation of Terraform","position":{"start":{"line":37,"column":4,"offset":1056},"end":{"line":37,"column":29,"offset":1081},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1053},"end":{"line":37,"column":29,"offset":1081},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Head onto the Terraform website, download the .zip file and then move the binary after unzipping into your path to access it from the CLI.","position":{"start":{"line":39,"column":1,"offset":1083},"end":{"line":39,"column":139,"offset":1221},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1083},"end":{"line":39,"column":139,"offset":1221},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Hello Terraform!","position":{"start":{"line":41,"column":4,"offset":1226},"end":{"line":41,"column":20,"offset":1242},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1223},"end":{"line":41,"column":20,"offset":1242},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example hello using Terraform to spin up an EC2 micro instance.","position":{"start":{"line":43,"column":1,"offset":1244},"end":{"line":43,"column":64,"offset":1307},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1244},"end":{"line":43,"column":64,"offset":1307},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"provider \"aws\" {\n  access_key = \"ACCESS_KEY_HERE\"\n  secret_key = \"SECRET_KEY_HERE\"\n  region     = \"ap-southeast-1\"\n}\n\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0d729a60\"\n  instance_type = \"t2.micro\"\n}","position":{"start":{"line":45,"column":1,"offset":1309},"end":{"line":56,"column":4,"offset":1540},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To initialise and spin up the instance, run the following:","position":{"start":{"line":58,"column":1,"offset":1542},"end":{"line":58,"column":59,"offset":1600},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1542},"end":{"line":58,"column":59,"offset":1600},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"$ terraform init\n$ terraform plan -out file.terraform\n$ terraform apply file.terraform\n$ terraform destory # tear down the instance","position":{"start":{"line":60,"column":1,"offset":1602},"end":{"line":65,"column":4,"offset":1745},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Variables","position":{"start":{"line":67,"column":4,"offset":1750},"end":{"line":67,"column":13,"offset":1759},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1747},"end":{"line":67,"column":13,"offset":1759},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To create variables, we create two files ","position":{"start":{"line":69,"column":1,"offset":1761},"end":{"line":69,"column":42,"offset":1802},"indent":[]}},{"type":"inlineCode","value":"provider.tf","position":{"start":{"line":69,"column":42,"offset":1802},"end":{"line":69,"column":55,"offset":1815},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":69,"column":55,"offset":1815},"end":{"line":69,"column":60,"offset":1820},"indent":[]}},{"type":"inlineCode","value":"vars.tf","position":{"start":{"line":69,"column":60,"offset":1820},"end":{"line":69,"column":69,"offset":1829},"indent":[]}},{"type":"text","value":" that we can commit and one git ignored file ","position":{"start":{"line":69,"column":69,"offset":1829},"end":{"line":69,"column":114,"offset":1874},"indent":[]}},{"type":"inlineCode","value":"terraform.tfvars","position":{"start":{"line":69,"column":114,"offset":1874},"end":{"line":69,"column":132,"offset":1892},"indent":[]}},{"type":"text","value":" to store these private variables in.","position":{"start":{"line":69,"column":132,"offset":1892},"end":{"line":69,"column":169,"offset":1929},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1761},"end":{"line":69,"column":169,"offset":1929},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"# provider.tf\nprovider \"aws\" {\n    access_key=\"${var.AWS_ACCESS_KEY}\"\n    secret_key=\"${var.AWS_SECRET_KEY}\"\n    region=\"${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n    default = \"ap-southeast-2\"\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"","position":{"start":{"line":71,"column":1,"offset":1931},"end":{"line":90,"column":4,"offset":2282},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For env vars: Terraform will read environment variables in the form of ","position":{"start":{"line":92,"column":1,"offset":2284},"end":{"line":92,"column":72,"offset":2355},"indent":[]}},{"type":"inlineCode","value":"TF_VAR_name","position":{"start":{"line":92,"column":72,"offset":2355},"end":{"line":92,"column":85,"offset":2368},"indent":[]}},{"type":"text","value":" to find the value for a variable. For example, the ","position":{"start":{"line":92,"column":85,"offset":2368},"end":{"line":92,"column":137,"offset":2420},"indent":[]}},{"type":"inlineCode","value":"TF_VAR_access_key","position":{"start":{"line":92,"column":137,"offset":2420},"end":{"line":92,"column":156,"offset":2439},"indent":[]}},{"type":"text","value":" variable can be set to set the ","position":{"start":{"line":92,"column":156,"offset":2439},"end":{"line":92,"column":188,"offset":2471},"indent":[]}},{"type":"inlineCode","value":"access_key","position":{"start":{"line":92,"column":188,"offset":2471},"end":{"line":92,"column":200,"offset":2483},"indent":[]}},{"type":"text","value":" variable.","position":{"start":{"line":92,"column":200,"offset":2483},"end":{"line":92,"column":210,"offset":2493},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2284},"end":{"line":92,"column":210,"offset":2493},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Lookup examples","position":{"start":{"line":94,"column":5,"offset":2499},"end":{"line":94,"column":20,"offset":2514},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2495},"end":{"line":94,"column":20,"offset":2514},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"# instance.tf\nresource \"aws_instance\" \"example\" {\n  ami           = \"${lookup(var.AMIS, var.AWS_REGION)}\"\n  instance_type = \"t2.micro\"\n}\n\n# provider.tf\nprovider \"aws\" {\n    access_key = \"${var.AWS_ACCESS_KEY}\"\n    secret_key = \"${var.AWS_SECRET_KEY}\"\n    region = \"${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-0d729a60\"\n  }\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"","position":{"start":{"line":96,"column":1,"offset":2516},"end":{"line":129,"column":4,"offset":3150},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For info on which ami results from where, checkout ","position":{"start":{"line":131,"column":1,"offset":3152},"end":{"line":131,"column":52,"offset":3203},"indent":[]}},{"type":"link","title":null,"url":"https://cloud-images.ubuntu.com/locator/ec2/","children":[{"type":"text","value":"https://cloud-images.ubuntu.com/locator/ec2/","position":{"start":{"line":131,"column":52,"offset":3203},"end":{"line":131,"column":96,"offset":3247},"indent":[]}}],"position":{"start":{"line":131,"column":52,"offset":3203},"end":{"line":131,"column":96,"offset":3247},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":131,"column":96,"offset":3247},"end":{"line":131,"column":97,"offset":3248},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3152},"end":{"line":131,"column":97,"offset":3248},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Software Provisioning","position":{"start":{"line":133,"column":4,"offset":3253},"end":{"line":133,"column":25,"offset":3274},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3250},"end":{"line":133,"column":25,"offset":3274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are 2 ways to provision software:","position":{"start":{"line":135,"column":1,"offset":3276},"end":{"line":135,"column":40,"offset":3315},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":3276},"end":{"line":135,"column":40,"offset":3315},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Build your own custom AMI (ie Packer).","position":{"start":{"line":137,"column":4,"offset":3320},"end":{"line":137,"column":42,"offset":3358},"indent":[]}}],"position":{"start":{"line":137,"column":4,"offset":3320},"end":{"line":137,"column":42,"offset":3358},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":3317},"end":{"line":138,"column":1,"offset":3359},"indent":[1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Another way is to be standardized AMIs and then install the software you need on it: ","position":{"start":{"line":139,"column":4,"offset":3363},"end":{"line":139,"column":89,"offset":3448},"indent":[]}}],"position":{"start":{"line":139,"column":4,"offset":3363},"end":{"line":139,"column":89,"offset":3448},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use file uploads","position":{"start":{"line":141,"column":6,"offset":3455},"end":{"line":141,"column":22,"offset":3471},"indent":[]}}],"position":{"start":{"line":141,"column":6,"offset":3455},"end":{"line":141,"column":22,"offset":3471},"indent":[]}}],"position":{"start":{"line":141,"column":4,"offset":3453},"end":{"line":142,"column":1,"offset":3472},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use remote exec","position":{"start":{"line":143,"column":6,"offset":3478},"end":{"line":143,"column":21,"offset":3493},"indent":[]}}],"position":{"start":{"line":143,"column":6,"offset":3478},"end":{"line":143,"column":21,"offset":3493},"indent":[]}}],"position":{"start":{"line":143,"column":4,"offset":3476},"end":{"line":143,"column":21,"offset":3493},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use automation tools like chef, puppet, ansible","position":{"start":{"line":144,"column":6,"offset":3499},"end":{"line":144,"column":53,"offset":3546},"indent":[]}}],"position":{"start":{"line":144,"column":6,"offset":3499},"end":{"line":144,"column":53,"offset":3546},"indent":[]}}],"position":{"start":{"line":144,"column":4,"offset":3497},"end":{"line":144,"column":53,"offset":3546},"indent":[]}}],"position":{"start":{"line":141,"column":4,"offset":3453},"end":{"line":144,"column":53,"offset":3546},"indent":[1,4,4]}}],"position":{"start":{"line":139,"column":1,"offset":3360},"end":{"line":144,"column":53,"offset":3546},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":137,"column":1,"offset":3317},"end":{"line":144,"column":53,"offset":3546},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"File Uploads","position":{"start":{"line":146,"column":5,"offset":3552},"end":{"line":146,"column":17,"offset":3564},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":3548},"end":{"line":146,"column":17,"offset":3564},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"# instance.tf\nresource \"aws_instance\" \"example\" {\n  \tami           = \"${lookup(var.AMIS, var.AWS_REGION)}\"\n  \tinstance_type = \"t2.micro\"\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n    }\n}","position":{"start":{"line":148,"column":1,"offset":3566},"end":{"line":159,"column":4,"offset":3822},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The provisioner will have to use SSH etc.","position":{"start":{"line":161,"column":1,"offset":3824},"end":{"line":161,"column":42,"offset":3865},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3824},"end":{"line":161,"column":42,"offset":3865},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another example with the connection:","position":{"start":{"line":163,"column":1,"offset":3867},"end":{"line":163,"column":37,"offset":3903},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3867},"end":{"line":163,"column":37,"offset":3903},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"# instance.tf\nresource \"aws_instance\" \"example\" {\n  \tami           = \"${lookup(var.AMIS, var.AWS_REGION)}\"\n  \tinstance_type = \"t2.micro\"\n    # IF SSH\n    key_name = \"${aws_key_pem.mykey.key_name}\"\n    # ENDIF\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n        # ! FOR PASSWORD\n        connection {\n            user = \"${var.instance_username}\"\n            password = \"${var.instance_password}\"\n        }\n        \n        connection {\n            user = \"${var.instance_username}\"\n            private_key = \"${file(${var.path_to_private_key})}\"\n        }\n    }\n    \n    # IF YOU UPLOAD A .sh FILE AND WANT TO RUN IT\n    provisioner \"remote-exec\" {\n        inline = [\n            \"chmod +x /path/to/script.sh\",\n            \"/path/to/script.sh arguments\"\n        ]\n    }\n}","position":{"start":{"line":165,"column":1,"offset":3905},"end":{"line":197,"column":4,"offset":4743},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Attributes","position":{"start":{"line":199,"column":4,"offset":4748},"end":{"line":199,"column":14,"offset":4758},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":4745},"end":{"line":199,"column":14,"offset":4758},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"State","position":{"start":{"line":201,"column":4,"offset":4763},"end":{"line":201,"column":9,"offset":4768},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":4760},"end":{"line":201,"column":9,"offset":4768},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Terraform keeps state in ","position":{"start":{"line":203,"column":1,"offset":4770},"end":{"line":203,"column":26,"offset":4795},"indent":[]}},{"type":"inlineCode","value":"terraform.tfstate","position":{"start":{"line":203,"column":26,"offset":4795},"end":{"line":203,"column":45,"offset":4814},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":203,"column":45,"offset":4814},"end":{"line":203,"column":46,"offset":4815},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":4770},"end":{"line":203,"column":46,"offset":4815},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To configure, you add a file ","position":{"start":{"line":205,"column":1,"offset":4817},"end":{"line":205,"column":30,"offset":4846},"indent":[]}},{"type":"inlineCode","value":"backend.tf","position":{"start":{"line":205,"column":30,"offset":4846},"end":{"line":205,"column":42,"offset":4858},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":205,"column":42,"offset":4858},"end":{"line":205,"column":43,"offset":4859},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":4817},"end":{"line":205,"column":43,"offset":4859},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"terraform {\n    # IF Consul\n    backend \"consul\" {\n        address = \"demo.consul.io\" # host name of consul cluster\n        path = \"terraform/myproject\"\n    }\n    \n\t# ELSEIF S3\n    backend \"s3\" {\n        bucket = \"bucket\"\n        key = \"terraform/myproject\"\n        region = \"ap-southeast-2\"\n    }\n    \n    #ENDIF\n}","position":{"start":{"line":207,"column":1,"offset":4861},"end":{"line":224,"column":4,"offset":5190},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"$ terraform init","position":{"start":{"line":226,"column":1,"offset":5192},"end":{"line":226,"column":19,"offset":5210},"indent":[]}},{"type":"text","value":" will do what you require for it all to work.","position":{"start":{"line":226,"column":19,"offset":5210},"end":{"line":226,"column":64,"offset":5255},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":5192},"end":{"line":226,"column":64,"offset":5255},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Sources","position":{"start":{"line":228,"column":4,"offset":5260},"end":{"line":228,"column":16,"offset":5272},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":5257},"end":{"line":228,"column":16,"offset":5272},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Provide you with dynamic information.","position":{"start":{"line":230,"column":1,"offset":5274},"end":{"line":230,"column":38,"offset":5311},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":5274},"end":{"line":230,"column":38,"offset":5311},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A lot of data is available by AWS in a structured format using their API","position":{"start":{"line":232,"column":3,"offset":5315},"end":{"line":232,"column":75,"offset":5387},"indent":[]}}],"position":{"start":{"line":232,"column":3,"offset":5315},"end":{"line":232,"column":75,"offset":5387},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":5313},"end":{"line":232,"column":75,"offset":5387},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Terraform also exposes this info using data sources.","position":{"start":{"line":233,"column":3,"offset":5390},"end":{"line":233,"column":55,"offset":5442},"indent":[]}}],"position":{"start":{"line":233,"column":3,"offset":5390},"end":{"line":233,"column":55,"offset":5442},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":5388},"end":{"line":233,"column":55,"offset":5442},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":5313},"end":{"line":233,"column":55,"offset":5442},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Examples include the list of AMIs, list of AZs etc.","position":{"start":{"line":235,"column":1,"offset":5444},"end":{"line":235,"column":52,"offset":5495},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":5444},"end":{"line":235,"column":52,"offset":5495},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"# provider.tf\nprovider \"aws\" { \n    region = \"${var.AWS_REGION}\"\n}\n\n# securitygroup.tf\ndata \"aws_ip_ranges\" \"european_ec2\" {\n  regions = [ \"eu-west-1\", \"eu-central-1\" ]\n  services = [ \"ec2\" ]\n}\n\nresource \"aws_security_group\" \"from_europe\" {\n name = \"from_europe\"\n\n  ingress {\n    from_port = \"443\"\n    to_port = \"443\"\n    protocol = \"tcp\"\n    cidr_blocks = [ \"${data.aws_ip_ranges.european_ec2.cidr_blocks}\" ]\n  }\n  tags {\n    CreateDate = \"${data.aws_ip_ranges.european_ec2.create_date}\"\n    SyncToken = \"${data.aws_ip_ranges.european_ec2.sync_token}\"\n  }\n\n}\n\n# vars.tf\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-844e0bf7\"\n  }\n}","position":{"start":{"line":237,"column":1,"offset":5497},"end":{"line":277,"column":4,"offset":6277},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Templates","position":{"start":{"line":279,"column":4,"offset":6282},"end":{"line":279,"column":13,"offset":6291},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":6279},"end":{"line":279,"column":13,"offset":6291},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Can help create ","position":{"start":{"line":281,"column":1,"offset":6293},"end":{"line":281,"column":17,"offset":6309},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"customized configuration files","position":{"start":{"line":281,"column":19,"offset":6311},"end":{"line":281,"column":49,"offset":6341},"indent":[]}}],"position":{"start":{"line":281,"column":17,"offset":6309},"end":{"line":281,"column":51,"offset":6343},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":281,"column":51,"offset":6343},"end":{"line":281,"column":52,"offset":6344},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":6293},"end":{"line":281,"column":52,"offset":6344},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Modules","position":{"start":{"line":283,"column":4,"offset":6349},"end":{"line":283,"column":11,"offset":6356},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":6346},"end":{"line":283,"column":11,"offset":6356},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Help to make your terraform more organised. ","position":{"start":{"line":285,"column":1,"offset":6358},"end":{"line":285,"column":45,"offset":6402},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":6358},"end":{"line":285,"column":45,"offset":6402},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can also use third party modules (like modules from Github).","position":{"start":{"line":287,"column":1,"offset":6404},"end":{"line":287,"column":65,"offset":6468},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":6404},"end":{"line":287,"column":65,"offset":6468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It also helps to ","position":{"start":{"line":289,"column":1,"offset":6470},"end":{"line":289,"column":18,"offset":6487},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"reuse","position":{"start":{"line":289,"column":20,"offset":6489},"end":{"line":289,"column":25,"offset":6494},"indent":[]}}],"position":{"start":{"line":289,"column":18,"offset":6487},"end":{"line":289,"column":27,"offset":6496},"indent":[]}},{"type":"text","value":" parts of your code (eg set up network in AWS - VPC).","position":{"start":{"line":289,"column":27,"offset":6496},"end":{"line":289,"column":80,"offset":6549},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":6470},"end":{"line":289,"column":80,"offset":6549},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"# Install form git\nmodule \"module-example\" {\n    source = \"github.com/wardviaene/terraform-module-example\"\n}\n\n# Use module from local folder\nmodule \"module-example\" {\n    source = \"./module-example\"\n}\n\n# A module passing arguments \nmodule \"module-example\" {\n    source = \"./module-example\"\n    region = \"us-west-1\"\n    ip-range = \"10.0.0.0/8\"\n    cluster-size = \"3\"\n}","position":{"start":{"line":291,"column":1,"offset":6551},"end":{"line":309,"column":4,"offset":6932},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Inside of the module folder, you can also have Terraform files:","position":{"start":{"line":311,"column":1,"offset":6934},"end":{"line":311,"column":64,"offset":6997},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":6934},"end":{"line":311,"column":64,"offset":6997},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"# module-example/vars.tf\nvariable \"region\" {}\nvariable \"ip-range\" {}\nvariable \"cluster-size\" {}\n\n# module-example/cluster.tf\nresource \"aws_instance\" \"instance-1\" { ... }\nresource \"aws_instance\" \"instance-2\" { ... }\nresource \"aws_instance\" \"instance-3\" { ... }\n\n# module-example/output.tf\noutput \"aws-cluster\" {\n    value = \"${aws_instance.instance-1.publicip}\"\n}","position":{"start":{"line":313,"column":1,"offset":6999},"end":{"line":328,"column":4,"offset":7375},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You use the output from the module in the main part of your code!","position":{"start":{"line":330,"column":1,"offset":7377},"end":{"line":330,"column":66,"offset":7442},"indent":[]}}],"position":{"start":{"line":330,"column":1,"offset":7377},"end":{"line":330,"column":66,"offset":7442},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"output \"some-output\" {\n    value = \"${module.module-example.aws-cluster}\"\n}","position":{"start":{"line":332,"column":1,"offset":7444},"end":{"line":336,"column":4,"offset":7533},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Downloading a module","position":{"start":{"line":338,"column":5,"offset":7539},"end":{"line":338,"column":25,"offset":7559},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":7535},"end":{"line":338,"column":25,"offset":7559},"indent":[]}},{"type":"code","lang":"kotlin","meta":null,"value":"terraform get # this will fetch the modules and store it in .terraform/modules/","position":{"start":{"line":340,"column":1,"offset":7561},"end":{"line":342,"column":4,"offset":7654},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Terraform Command Overview","position":{"start":{"line":344,"column":4,"offset":7659},"end":{"line":344,"column":30,"offset":7685},"indent":[]}}],"position":{"start":{"line":344,"column":1,"offset":7656},"end":{"line":344,"column":30,"offset":7685},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Command","position":{"start":{"line":346,"column":3,"offset":7689},"end":{"line":346,"column":10,"offset":7696},"indent":[]}}],"position":{"start":{"line":346,"column":3,"offset":7689},"end":{"line":346,"column":36,"offset":7722},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":346,"column":39,"offset":7725},"end":{"line":346,"column":50,"offset":7736},"indent":[]}}],"position":{"start":{"line":346,"column":39,"offset":7725},"end":{"line":346,"column":156,"offset":7842},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":7687},"end":{"line":346,"column":158,"offset":7844},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"terraform apply","position":{"start":{"line":348,"column":3,"offset":8005},"end":{"line":348,"column":18,"offset":8020},"indent":[]}}],"position":{"start":{"line":348,"column":3,"offset":8005},"end":{"line":348,"column":36,"offset":8038},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Applies state.","position":{"start":{"line":348,"column":39,"offset":8041},"end":{"line":348,"column":53,"offset":8055},"indent":[]}}],"position":{"start":{"line":348,"column":39,"offset":8041},"end":{"line":348,"column":156,"offset":8158},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8003},"end":{"line":348,"column":158,"offset":8160},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"destroy","position":{"start":{"line":349,"column":3,"offset":8163},"end":{"line":349,"column":10,"offset":8170},"indent":[]}}],"position":{"start":{"line":349,"column":3,"offset":8163},"end":{"line":349,"column":36,"offset":8196},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Destroys all Terraform managed state.","position":{"start":{"line":349,"column":39,"offset":8199},"end":{"line":349,"column":76,"offset":8236},"indent":[]}}],"position":{"start":{"line":349,"column":39,"offset":8199},"end":{"line":349,"column":156,"offset":8316},"indent":[]}}],"position":{"start":{"line":349,"column":1,"offset":8161},"end":{"line":349,"column":158,"offset":8318},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"fmt","position":{"start":{"line":350,"column":3,"offset":8321},"end":{"line":350,"column":6,"offset":8324},"indent":[]}}],"position":{"start":{"line":350,"column":3,"offset":8321},"end":{"line":350,"column":36,"offset":8354},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Rewrite terraform config files to canonical format and style.","position":{"start":{"line":350,"column":39,"offset":8357},"end":{"line":350,"column":100,"offset":8418},"indent":[]}}],"position":{"start":{"line":350,"column":39,"offset":8357},"end":{"line":350,"column":156,"offset":8474},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":8319},"end":{"line":350,"column":158,"offset":8476},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"get","position":{"start":{"line":351,"column":3,"offset":8479},"end":{"line":351,"column":6,"offset":8482},"indent":[]}}],"position":{"start":{"line":351,"column":3,"offset":8479},"end":{"line":351,"column":36,"offset":8512},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Download and update modules.","position":{"start":{"line":351,"column":39,"offset":8515},"end":{"line":351,"column":67,"offset":8543},"indent":[]}}],"position":{"start":{"line":351,"column":39,"offset":8515},"end":{"line":351,"column":156,"offset":8632},"indent":[]}}],"position":{"start":{"line":351,"column":1,"offset":8477},"end":{"line":351,"column":158,"offset":8634},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"graph","position":{"start":{"line":352,"column":3,"offset":8637},"end":{"line":352,"column":8,"offset":8642},"indent":[]}}],"position":{"start":{"line":352,"column":3,"offset":8637},"end":{"line":352,"column":36,"offset":8670},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Create a visual representation of a configuration or execution plan.","position":{"start":{"line":352,"column":39,"offset":8673},"end":{"line":352,"column":107,"offset":8741},"indent":[]}}],"position":{"start":{"line":352,"column":39,"offset":8673},"end":{"line":352,"column":156,"offset":8790},"indent":[]}}],"position":{"start":{"line":352,"column":1,"offset":8635},"end":{"line":352,"column":158,"offset":8792},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"import <options> <ADDRESS> <ID>","position":{"start":{"line":353,"column":3,"offset":8795},"end":{"line":353,"column":36,"offset":8828},"indent":[]}}],"position":{"start":{"line":353,"column":3,"offset":8795},"end":{"line":353,"column":36,"offset":8828},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Find infrastructure resource identified with ID and import the state into terraform.tfstate with resource id ADDRESS.","position":{"start":{"line":353,"column":39,"offset":8831},"end":{"line":353,"column":156,"offset":8948},"indent":[]}}],"position":{"start":{"line":353,"column":39,"offset":8831},"end":{"line":353,"column":156,"offset":8948},"indent":[]}}],"position":{"start":{"line":353,"column":1,"offset":8793},"end":{"line":353,"column":158,"offset":8950},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"output <options> <NAME>","position":{"start":{"line":354,"column":3,"offset":8953},"end":{"line":354,"column":28,"offset":8978},"indent":[]}}],"position":{"start":{"line":354,"column":3,"offset":8953},"end":{"line":354,"column":36,"offset":8986},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Output any of your resources.","position":{"start":{"line":354,"column":39,"offset":8989},"end":{"line":354,"column":68,"offset":9018},"indent":[]}}],"position":{"start":{"line":354,"column":39,"offset":8989},"end":{"line":354,"column":156,"offset":9106},"indent":[]}}],"position":{"start":{"line":354,"column":1,"offset":8951},"end":{"line":354,"column":158,"offset":9108},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"plan","position":{"start":{"line":355,"column":3,"offset":9111},"end":{"line":355,"column":7,"offset":9115},"indent":[]}}],"position":{"start":{"line":355,"column":3,"offset":9111},"end":{"line":355,"column":36,"offset":9144},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Show changes made to infrastructure.","position":{"start":{"line":355,"column":39,"offset":9147},"end":{"line":355,"column":75,"offset":9183},"indent":[]}}],"position":{"start":{"line":355,"column":39,"offset":9147},"end":{"line":355,"column":156,"offset":9264},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":9109},"end":{"line":355,"column":158,"offset":9266},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"refresh","position":{"start":{"line":356,"column":3,"offset":9269},"end":{"line":356,"column":10,"offset":9276},"indent":[]}}],"position":{"start":{"line":356,"column":3,"offset":9269},"end":{"line":356,"column":36,"offset":9302},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Refresh the remote state. Can identify differences between state file and remote state.","position":{"start":{"line":356,"column":39,"offset":9305},"end":{"line":356,"column":126,"offset":9392},"indent":[]}}],"position":{"start":{"line":356,"column":39,"offset":9305},"end":{"line":356,"column":156,"offset":9422},"indent":[]}}],"position":{"start":{"line":356,"column":1,"offset":9267},"end":{"line":356,"column":158,"offset":9424},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"remote","position":{"start":{"line":357,"column":3,"offset":9427},"end":{"line":357,"column":9,"offset":9433},"indent":[]}}],"position":{"start":{"line":357,"column":3,"offset":9427},"end":{"line":357,"column":36,"offset":9460},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Configure remote state storage.","position":{"start":{"line":357,"column":39,"offset":9463},"end":{"line":357,"column":70,"offset":9494},"indent":[]}}],"position":{"start":{"line":357,"column":39,"offset":9463},"end":{"line":357,"column":156,"offset":9580},"indent":[]}}],"position":{"start":{"line":357,"column":1,"offset":9425},"end":{"line":357,"column":158,"offset":9582},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"show","position":{"start":{"line":358,"column":3,"offset":9585},"end":{"line":358,"column":7,"offset":9589},"indent":[]}}],"position":{"start":{"line":358,"column":3,"offset":9585},"end":{"line":358,"column":36,"offset":9618},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Show human readable output from a state or a plan.","position":{"start":{"line":358,"column":39,"offset":9621},"end":{"line":358,"column":89,"offset":9671},"indent":[]}}],"position":{"start":{"line":358,"column":39,"offset":9621},"end":{"line":358,"column":156,"offset":9738},"indent":[]}}],"position":{"start":{"line":358,"column":1,"offset":9583},"end":{"line":358,"column":158,"offset":9740},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"state","position":{"start":{"line":359,"column":3,"offset":9743},"end":{"line":359,"column":8,"offset":9748},"indent":[]}}],"position":{"start":{"line":359,"column":3,"offset":9743},"end":{"line":359,"column":36,"offset":9776},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Used for advanced state management eg rename resource","position":{"start":{"line":359,"column":39,"offset":9779},"end":{"line":359,"column":92,"offset":9832},"indent":[]}}],"position":{"start":{"line":359,"column":39,"offset":9779},"end":{"line":359,"column":156,"offset":9896},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":9741},"end":{"line":359,"column":158,"offset":9898},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"taint","position":{"start":{"line":360,"column":3,"offset":9901},"end":{"line":360,"column":8,"offset":9906},"indent":[]}}],"position":{"start":{"line":360,"column":3,"offset":9901},"end":{"line":360,"column":36,"offset":9934},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Destroy and recreate resource.","position":{"start":{"line":360,"column":39,"offset":9937},"end":{"line":360,"column":69,"offset":9967},"indent":[]}}],"position":{"start":{"line":360,"column":39,"offset":9937},"end":{"line":360,"column":156,"offset":10054},"indent":[]}}],"position":{"start":{"line":360,"column":1,"offset":9899},"end":{"line":360,"column":158,"offset":10056},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"validate","position":{"start":{"line":361,"column":3,"offset":10059},"end":{"line":361,"column":11,"offset":10067},"indent":[]}}],"position":{"start":{"line":361,"column":3,"offset":10059},"end":{"line":361,"column":36,"offset":10092},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Validate terraform syntax.","position":{"start":{"line":361,"column":39,"offset":10095},"end":{"line":361,"column":65,"offset":10121},"indent":[]}}],"position":{"start":{"line":361,"column":39,"offset":10095},"end":{"line":361,"column":156,"offset":10212},"indent":[]}}],"position":{"start":{"line":361,"column":1,"offset":10057},"end":{"line":361,"column":158,"offset":10214},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"untaint","position":{"start":{"line":362,"column":3,"offset":10217},"end":{"line":362,"column":10,"offset":10224},"indent":[]}}],"position":{"start":{"line":362,"column":3,"offset":10217},"end":{"line":362,"column":36,"offset":10250},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Undo a taint.","position":{"start":{"line":362,"column":39,"offset":10253},"end":{"line":362,"column":52,"offset":10266},"indent":[]}}],"position":{"start":{"line":362,"column":39,"offset":10253},"end":{"line":362,"column":156,"offset":10370},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":10215},"end":{"line":362,"column":158,"offset":10372},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":7687},"end":{"line":362,"column":158,"offset":10372},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[],"position":{"start":{"line":364,"column":1,"offset":10374},"end":{"line":364,"column":4,"offset":10377},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":368,"column":1,"offset":10381},"end":{"line":368,"column":31,"offset":10411},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":368,"column":31,"offset":10411}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"terraform\"\n    }}>{`Terraform`}</h1>\n    <h2 {...{\n      \"id\": \"course-content\"\n    }}>{`Course Content`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Use this to get the content\n$ git clone https://github.com/wardviaene/terraform-course\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"useful-terraform-commands\"\n    }}>{`Useful Terraform Commands`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ terraform plan # plan\n$ terraform apply # shortcut for plan and apply - avoid in production\n$ terraform plan -out out.terraform # terraform and write the plan to out file\n$ terraform apply out.terraform # apply terraform plan using out file\n$ terraform show # show current state\n$ cat terraform.tfstate\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"what-is-terraform\"\n    }}>{`What is Terraform?`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Infrastructure as `}<strong parentName=\"li\">{`code`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Automation`}</strong>{` of infrastructure`}</li>\n      <li parentName=\"ul\">{`Keep our infrastructure in a certain state (compliant)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`e.g. 2 web instances with 2 volumes + 1 load balancer`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Make infrastructure `}<strong parentName=\"li\">{`auditable`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can keep your infrastructure change history in a `}<strong parentName=\"li\">{`version control`}</strong>{` system like GIT`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Terraform can automate provisioning of the `}<strong parentName=\"li\">{`infrastructure itself`}</strong>{`. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"installation-of-terraform\"\n    }}>{`Installation of Terraform`}</h2>\n    <p>{`Head onto the Terraform website, download the .zip file and then move the binary after unzipping into your path to access it from the CLI.`}</p>\n    <h2 {...{\n      \"id\": \"hello-terraform\"\n    }}>{`Hello Terraform!`}</h2>\n    <p>{`Example hello using Terraform to spin up an EC2 micro instance.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`provider \"aws\" {\n  access_key = \"ACCESS_KEY_HERE\"\n  secret_key = \"SECRET_KEY_HERE\"\n  region     = \"ap-southeast-1\"\n}\n\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0d729a60\"\n  instance_type = \"t2.micro\"\n}\n`}</code></pre>\n    <p>{`To initialise and spin up the instance, run the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ terraform init\n$ terraform plan -out file.terraform\n$ terraform apply file.terraform\n$ terraform destory # tear down the instance\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"variables\"\n    }}>{`Variables`}</h2>\n    <p>{`To create variables, we create two files `}<inlineCode parentName=\"p\">{`provider.tf`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`vars.tf`}</inlineCode>{` that we can commit and one git ignored file `}<inlineCode parentName=\"p\">{`terraform.tfvars`}</inlineCode>{` to store these private variables in.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# provider.tf\nprovider \"aws\" {\n    access_key=\"\\${var.AWS_ACCESS_KEY}\"\n    secret_key=\"\\${var.AWS_SECRET_KEY}\"\n    region=\"\\${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n    default = \"ap-southeast-2\"\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"\n`}</code></pre>\n    <p>{`For env vars: Terraform will read environment variables in the form of `}<inlineCode parentName=\"p\">{`TF_VAR_name`}</inlineCode>{` to find the value for a variable. For example, the `}<inlineCode parentName=\"p\">{`TF_VAR_access_key`}</inlineCode>{` variable can be set to set the `}<inlineCode parentName=\"p\">{`access_key`}</inlineCode>{` variable.`}</p>\n    <h3 {...{\n      \"id\": \"lookup-examples\"\n    }}>{`Lookup examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n  ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n  instance_type = \"t2.micro\"\n}\n\n# provider.tf\nprovider \"aws\" {\n    access_key = \"\\${var.AWS_ACCESS_KEY}\"\n    secret_key = \"\\${var.AWS_SECRET_KEY}\"\n    region = \"\\${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-0d729a60\"\n  }\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"\n`}</code></pre>\n    <p>{`For info on which ami results from where, checkout `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud-images.ubuntu.com/locator/ec2/\"\n      }}>{`https://cloud-images.ubuntu.com/locator/ec2/`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"software-provisioning\"\n    }}>{`Software Provisioning`}</h2>\n    <p>{`There are 2 ways to provision software:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Build your own custom AMI (ie Packer).`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Another way is to be standardized AMIs and then install the software you need on it: `}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Use file uploads`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Use remote exec`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Use automation tools like chef, puppet, ansible`}</p>\n          </li>\n        </ul>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"file-uploads\"\n    }}>{`File Uploads`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n    ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n    instance_type = \"t2.micro\"\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n    }\n}\n`}</code></pre>\n    <p>{`The provisioner will have to use SSH etc.`}</p>\n    <p>{`Another example with the connection:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n    ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n    instance_type = \"t2.micro\"\n    # IF SSH\n    key_name = \"\\${aws_key_pem.mykey.key_name}\"\n    # ENDIF\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n        # ! FOR PASSWORD\n        connection {\n            user = \"\\${var.instance_username}\"\n            password = \"\\${var.instance_password}\"\n        }\n        \n        connection {\n            user = \"\\${var.instance_username}\"\n            private_key = \"\\${file(\\${var.path_to_private_key})}\"\n        }\n    }\n    \n    # IF YOU UPLOAD A .sh FILE AND WANT TO RUN IT\n    provisioner \"remote-exec\" {\n        inline = [\n            \"chmod +x /path/to/script.sh\",\n            \"/path/to/script.sh arguments\"\n        ]\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"attributes\"\n    }}>{`Attributes`}</h2>\n    <h2 {...{\n      \"id\": \"state\"\n    }}>{`State`}</h2>\n    <p>{`Terraform keeps state in `}<inlineCode parentName=\"p\">{`terraform.tfstate`}</inlineCode>{`.`}</p>\n    <p>{`To configure, you add a file `}<inlineCode parentName=\"p\">{`backend.tf`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`terraform {\n    # IF Consul\n    backend \"consul\" {\n        address = \"demo.consul.io\" # host name of consul cluster\n        path = \"terraform/myproject\"\n    }\n    \n    # ELSEIF S3\n    backend \"s3\" {\n        bucket = \"bucket\"\n        key = \"terraform/myproject\"\n        region = \"ap-southeast-2\"\n    }\n    \n    #ENDIF\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`$ terraform init`}</inlineCode>{` will do what you require for it all to work.`}</p>\n    <h2 {...{\n      \"id\": \"data-sources\"\n    }}>{`Data Sources`}</h2>\n    <p>{`Provide you with dynamic information.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A lot of data is available by AWS in a structured format using their API`}</li>\n      <li parentName=\"ul\">{`Terraform also exposes this info using data sources.`}</li>\n    </ul>\n    <p>{`Examples include the list of AMIs, list of AZs etc.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# provider.tf\nprovider \"aws\" { \n    region = \"\\${var.AWS_REGION}\"\n}\n\n# securitygroup.tf\ndata \"aws_ip_ranges\" \"european_ec2\" {\n  regions = [ \"eu-west-1\", \"eu-central-1\" ]\n  services = [ \"ec2\" ]\n}\n\nresource \"aws_security_group\" \"from_europe\" {\n name = \"from_europe\"\n\n  ingress {\n    from_port = \"443\"\n    to_port = \"443\"\n    protocol = \"tcp\"\n    cidr_blocks = [ \"\\${data.aws_ip_ranges.european_ec2.cidr_blocks}\" ]\n  }\n  tags {\n    CreateDate = \"\\${data.aws_ip_ranges.european_ec2.create_date}\"\n    SyncToken = \"\\${data.aws_ip_ranges.european_ec2.sync_token}\"\n  }\n\n}\n\n# vars.tf\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-844e0bf7\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"templates\"\n    }}>{`Templates`}</h2>\n    <p>{`Can help create `}<strong parentName=\"p\">{`customized configuration files`}</strong>{`.`}</p>\n    <h2 {...{\n      \"id\": \"modules\"\n    }}>{`Modules`}</h2>\n    <p>{`Help to make your terraform more organised. `}</p>\n    <p>{`You can also use third party modules (like modules from Github).`}</p>\n    <p>{`It also helps to `}<strong parentName=\"p\">{`reuse`}</strong>{` parts of your code (eg set up network in AWS - VPC).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# Install form git\nmodule \"module-example\" {\n    source = \"github.com/wardviaene/terraform-module-example\"\n}\n\n# Use module from local folder\nmodule \"module-example\" {\n    source = \"./module-example\"\n}\n\n# A module passing arguments \nmodule \"module-example\" {\n    source = \"./module-example\"\n    region = \"us-west-1\"\n    ip-range = \"10.0.0.0/8\"\n    cluster-size = \"3\"\n}\n`}</code></pre>\n    <p>{`Inside of the module folder, you can also have Terraform files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# module-example/vars.tf\nvariable \"region\" {}\nvariable \"ip-range\" {}\nvariable \"cluster-size\" {}\n\n# module-example/cluster.tf\nresource \"aws_instance\" \"instance-1\" { ... }\nresource \"aws_instance\" \"instance-2\" { ... }\nresource \"aws_instance\" \"instance-3\" { ... }\n\n# module-example/output.tf\noutput \"aws-cluster\" {\n    value = \"\\${aws_instance.instance-1.publicip}\"\n}\n`}</code></pre>\n    <p>{`You use the output from the module in the main part of your code!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`output \"some-output\" {\n    value = \"\\${module.module-example.aws-cluster}\"\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"downloading-a-module\"\n    }}>{`Downloading a module`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`terraform get # this will fetch the modules and store it in .terraform/modules/\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"terraform-command-overview\"\n    }}>{`Terraform Command Overview`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`terraform apply`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Applies state.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`destroy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Destroys all Terraform managed state.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fmt`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rewrite terraform config files to canonical format and style.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`get`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Download and update modules.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`graph`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create a visual representation of a configuration or execution plan.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`import <options> <ADDRESS> <ID>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Find infrastructure resource identified with ID and import the state into terraform.tfstate with resource id ADDRESS.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`output <options> <NAME>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Output any of your resources.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`plan`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Show changes made to infrastructure.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`refresh`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Refresh the remote state. Can identify differences between state file and remote state.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`remote`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Configure remote state storage.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`show`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Show human readable output from a state or a plan.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`state`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used for advanced state management eg rename resource`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`taint`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Destroy and recreate resource.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validate`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Validate terraform syntax.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`untaint`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Undo a taint.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"\"\n    }}></h2>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}