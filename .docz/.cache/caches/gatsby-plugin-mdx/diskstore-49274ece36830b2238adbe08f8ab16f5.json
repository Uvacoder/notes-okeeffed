{"expireTime":9007200848610862000,"key":"gatsby-plugin-mdx-entire-payload-a47dc972ef6227d4ea515fb10f9314d0-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Ruby Symbols (Colon Variables)","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":33,"offset":199},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":33,"offset":199},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":10,"column":4,"offset":204},"end":{"line":10,"column":9,"offset":209},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":201},"end":{"line":10,"column":9,"offset":209},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ruby symbol is like an Enum constant in Java or C++.","position":{"start":{"line":12,"column":1,"offset":211},"end":{"line":12,"column":55,"offset":265},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":211},"end":{"line":12,"column":55,"offset":265},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Symbols are immutable. Their value remains constant during the entirety of the program. They never appear on the left side of an assignment. You'll never see this:","position":{"start":{"line":14,"column":1,"offset":267},"end":{"line":14,"column":164,"offset":430},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":267},"end":{"line":14,"column":164,"offset":430},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":":myname = \"steve\"\n\n# Symbols ARE used like this:\nmystring = :steveT\nmystring = :steveT.to_s\nmyint = :steveT.to_i\nclass Example\n  attr_reader :steveT\nend","position":{"start":{"line":16,"column":1,"offset":432},"end":{"line":26,"column":4,"offset":596},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"More info","position":{"start":{"line":28,"column":4,"offset":601},"end":{"line":28,"column":13,"offset":610},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":598},"end":{"line":28,"column":13,"offset":610},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Colon variable refers to :abc type variables you might have seen in Ruby.","position":{"start":{"line":30,"column":1,"offset":612},"end":{"line":30,"column":74,"offset":685},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":612},"end":{"line":30,"column":74,"offset":685},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"They are called Ruby symbols.","position":{"start":{"line":32,"column":1,"offset":687},"end":{"line":32,"column":30,"offset":716},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":687},"end":{"line":32,"column":30,"offset":716},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A Ruby symbol is not a variable because it cannot be assigned a value.","position":{"start":{"line":34,"column":3,"offset":720},"end":{"line":34,"column":73,"offset":790},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":720},"end":{"line":34,"column":73,"offset":790},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":718},"end":{"line":34,"column":73,"offset":790},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It is not a reference to another variable nor is it a pointer to a memory location.","position":{"start":{"line":35,"column":3,"offset":793},"end":{"line":35,"column":86,"offset":876},"indent":[]}}],"position":{"start":{"line":35,"column":3,"offset":793},"end":{"line":35,"column":86,"offset":876},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":791},"end":{"line":35,"column":86,"offset":876},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Has a value and whenever the name of the symbol is same, its value is the same.","position":{"start":{"line":36,"column":3,"offset":879},"end":{"line":36,"column":82,"offset":958},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":879},"end":{"line":36,"column":82,"offset":958},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":877},"end":{"line":36,"column":82,"offset":958},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":718},"end":{"line":36,"column":82,"offset":958},"indent":[1,1]}},{"type":"code","lang":"ruby","meta":null,"value":"# It is trivial to assign a value to a variable.\nabc = \"1\"\n=> \"1\"\n\n# But a symbol cannot be assigned any value.\n:a = \"1\"\n# SyntaxError: A symbol cannot be assigned a value\n\n# Can use a variable as a map-key (You know already)\nm = {abc => \"1\"}\n=> {\"1\"=>\"1\"}\n\n# Can use a string as a map-key (You know already)\nm = {\"def\" => \"1\"}\n=> {\"def\"=>\"1\"}\n\n# Can also use a symbol as a map-key (Most common use case)\nm = {:a => \"1\"}\n=> {:a=>\"1\"}\n\n# Can use same symbol as key in another map\nm2 = {:a => \"2\"}\n=> {:a=>\"2\"}\n\n# And it won't affect the previous map.\nm\n=> {:a=>\"1\"}\n\nm2\n=> {:a=>\"2\"}","position":{"start":{"line":38,"column":1,"offset":960},"end":{"line":69,"column":4,"offset":1553},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":72,"column":1,"offset":1556},"end":{"line":72,"column":31,"offset":1586},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":72,"column":31,"offset":1586}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ruby-symbols-colon-variables\"\n    }}>{`Ruby Symbols (Colon Variables)`}</h1>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <p>{`A ruby symbol is like an Enum constant in Java or C++.`}</p>\n    <p>{`Symbols are immutable. Their value remains constant during the entirety of the program. They never appear on the left side of an assignment. You'll never see this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`:myname = \"steve\"\n\n# Symbols ARE used like this:\nmystring = :steveT\nmystring = :steveT.to_s\nmyint = :steveT.to_i\nclass Example\n  attr_reader :steveT\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"more-info\"\n    }}>{`More info`}</h2>\n    <p>{`Colon variable refers to :abc type variables you might have seen in Ruby.`}</p>\n    <p>{`They are called Ruby symbols.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A Ruby symbol is not a variable because it cannot be assigned a value.`}</li>\n      <li parentName=\"ul\">{`It is not a reference to another variable nor is it a pointer to a memory location.`}</li>\n      <li parentName=\"ul\">{`Has a value and whenever the name of the symbol is same, its value is the same.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# It is trivial to assign a value to a variable.\nabc = \"1\"\n=> \"1\"\n\n# But a symbol cannot be assigned any value.\n:a = \"1\"\n# SyntaxError: A symbol cannot be assigned a value\n\n# Can use a variable as a map-key (You know already)\nm = {abc => \"1\"}\n=> {\"1\"=>\"1\"}\n\n# Can use a string as a map-key (You know already)\nm = {\"def\" => \"1\"}\n=> {\"def\"=>\"1\"}\n\n# Can also use a symbol as a map-key (Most common use case)\nm = {:a => \"1\"}\n=> {:a=>\"1\"}\n\n# Can use same symbol as key in another map\nm2 = {:a => \"2\"}\n=> {:a=>\"2\"}\n\n# And it won't affect the previous map.\nm\n=> {:a=>\"1\"}\n\nm2\n=> {:a=>\"2\"}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}