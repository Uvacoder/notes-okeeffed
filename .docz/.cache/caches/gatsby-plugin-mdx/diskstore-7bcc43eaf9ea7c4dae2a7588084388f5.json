{"expireTime":9007200852878369000,"key":"gatsby-plugin-mdx-entire-payload-f8d04c5db8677aea8c34700c35848a7d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Ruby Basics Help Sheet","position":{"start":{"line":7,"column":3,"offset":168},"end":{"line":7,"column":25,"offset":190},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":166},"end":{"line":7,"column":25,"offset":190},"indent":[]}},{"type":"jsx","value":"<!-- TOC -->","position":{"start":{"line":9,"column":1,"offset":192},"end":{"line":9,"column":13,"offset":204},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-basics-help-sheet","children":[{"type":"text","value":"Ruby Basics Help Sheet","position":{"start":{"line":11,"column":6,"offset":211},"end":{"line":11,"column":28,"offset":233},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":210},"end":{"line":11,"column":54,"offset":259},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":210},"end":{"line":11,"column":54,"offset":259},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-1-comments","children":[{"type":"text","value":"RUBY-1: Comments","position":{"start":{"line":12,"column":10,"offset":269},"end":{"line":12,"column":26,"offset":285},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":268},"end":{"line":12,"column":45,"offset":304},"indent":[]}}],"position":{"start":{"line":12,"column":9,"offset":268},"end":{"line":12,"column":45,"offset":304},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":264},"end":{"line":12,"column":45,"offset":304},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":264},"end":{"line":12,"column":45,"offset":304},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":206},"end":{"line":12,"column":45,"offset":304},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#this-is-an-example-comment","children":[{"type":"text","value":"This is an example comment","position":{"start":{"line":13,"column":6,"offset":310},"end":{"line":13,"column":32,"offset":336},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":309},"end":{"line":13,"column":62,"offset":366},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":309},"end":{"line":13,"column":62,"offset":366},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-2-variables","children":[{"type":"text","value":"RUBY-2: Variables","position":{"start":{"line":14,"column":10,"offset":376},"end":{"line":14,"column":27,"offset":393},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":375},"end":{"line":14,"column":47,"offset":413},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":375},"end":{"line":14,"column":47,"offset":413},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":371},"end":{"line":14,"column":47,"offset":413},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-3-console-puts","children":[{"type":"text","value":"RUBY-3: Console puts","position":{"start":{"line":15,"column":10,"offset":423},"end":{"line":15,"column":30,"offset":443},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":422},"end":{"line":15,"column":53,"offset":466},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":422},"end":{"line":15,"column":53,"offset":466},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":418},"end":{"line":15,"column":53,"offset":466},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-4-call-a-method","children":[{"type":"text","value":"RUBY-4: Call a method","position":{"start":{"line":16,"column":10,"offset":476},"end":{"line":16,"column":31,"offset":497},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":475},"end":{"line":16,"column":55,"offset":521},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":475},"end":{"line":16,"column":55,"offset":521},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":471},"end":{"line":16,"column":55,"offset":521},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-5-define-a-method","children":[{"type":"text","value":"RUBY-5: Define a method","position":{"start":{"line":17,"column":10,"offset":531},"end":{"line":17,"column":33,"offset":554},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":530},"end":{"line":17,"column":59,"offset":580},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":530},"end":{"line":17,"column":59,"offset":580},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":526},"end":{"line":17,"column":59,"offset":580},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-6-equality","children":[{"type":"text","value":"RUBY-6: Equality","position":{"start":{"line":18,"column":10,"offset":590},"end":{"line":18,"column":26,"offset":606},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":589},"end":{"line":18,"column":45,"offset":625},"indent":[]}}],"position":{"start":{"line":18,"column":9,"offset":589},"end":{"line":18,"column":45,"offset":625},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":585},"end":{"line":18,"column":45,"offset":625},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-7-inequality","children":[{"type":"text","value":"RUBY-7: Inequality","position":{"start":{"line":19,"column":10,"offset":635},"end":{"line":19,"column":28,"offset":653},"indent":[]}}],"position":{"start":{"line":19,"column":9,"offset":634},"end":{"line":19,"column":49,"offset":674},"indent":[]}}],"position":{"start":{"line":19,"column":9,"offset":634},"end":{"line":19,"column":49,"offset":674},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":630},"end":{"line":19,"column":49,"offset":674},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-8-decisions-with-if","children":[{"type":"text","value":"RUBY-8: Decisions with if","position":{"start":{"line":20,"column":10,"offset":684},"end":{"line":20,"column":35,"offset":709},"indent":[]}}],"position":{"start":{"line":20,"column":9,"offset":683},"end":{"line":20,"column":63,"offset":737},"indent":[]}}],"position":{"start":{"line":20,"column":9,"offset":683},"end":{"line":20,"column":63,"offset":737},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":679},"end":{"line":20,"column":63,"offset":737},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-9-constants","children":[{"type":"text","value":"RUBY-9: Constants","position":{"start":{"line":21,"column":10,"offset":747},"end":{"line":21,"column":27,"offset":764},"indent":[]}}],"position":{"start":{"line":21,"column":9,"offset":746},"end":{"line":21,"column":47,"offset":784},"indent":[]}}],"position":{"start":{"line":21,"column":9,"offset":746},"end":{"line":21,"column":47,"offset":784},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":742},"end":{"line":21,"column":47,"offset":784},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-10-strings","children":[{"type":"text","value":"RUBY-10: Strings","position":{"start":{"line":22,"column":10,"offset":794},"end":{"line":22,"column":26,"offset":810},"indent":[]}}],"position":{"start":{"line":22,"column":9,"offset":793},"end":{"line":22,"column":45,"offset":829},"indent":[]}}],"position":{"start":{"line":22,"column":9,"offset":793},"end":{"line":22,"column":45,"offset":829},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":789},"end":{"line":22,"column":45,"offset":829},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-11-concatentation","children":[{"type":"text","value":"RUBY-11: Concatentation","position":{"start":{"line":23,"column":10,"offset":839},"end":{"line":23,"column":33,"offset":862},"indent":[]}}],"position":{"start":{"line":23,"column":9,"offset":838},"end":{"line":23,"column":59,"offset":888},"indent":[]}}],"position":{"start":{"line":23,"column":9,"offset":838},"end":{"line":23,"column":59,"offset":888},"indent":[]}}],"position":{"start":{"line":23,"column":5,"offset":834},"end":{"line":23,"column":59,"offset":888},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-12-substitute","children":[{"type":"text","value":"RUBY-12: Substitute","position":{"start":{"line":24,"column":10,"offset":898},"end":{"line":24,"column":29,"offset":917},"indent":[]}}],"position":{"start":{"line":24,"column":9,"offset":897},"end":{"line":24,"column":51,"offset":939},"indent":[]}}],"position":{"start":{"line":24,"column":9,"offset":897},"end":{"line":24,"column":51,"offset":939},"indent":[]}}],"position":{"start":{"line":24,"column":5,"offset":893},"end":{"line":24,"column":51,"offset":939},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-13-string-access","children":[{"type":"text","value":"RUBY-13: String Access","position":{"start":{"line":25,"column":10,"offset":949},"end":{"line":25,"column":32,"offset":971},"indent":[]}}],"position":{"start":{"line":25,"column":9,"offset":948},"end":{"line":25,"column":57,"offset":996},"indent":[]}}],"position":{"start":{"line":25,"column":9,"offset":948},"end":{"line":25,"column":57,"offset":996},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":944},"end":{"line":25,"column":57,"offset":996},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-14-arrays","children":[{"type":"text","value":"RUBY-14: Arrays","position":{"start":{"line":26,"column":10,"offset":1006},"end":{"line":26,"column":25,"offset":1021},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":1005},"end":{"line":26,"column":43,"offset":1039},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":1005},"end":{"line":26,"column":43,"offset":1039},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":1001},"end":{"line":26,"column":43,"offset":1039},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-15-add-an-array-element","children":[{"type":"text","value":"RUBY-15: add an array element","position":{"start":{"line":27,"column":10,"offset":1049},"end":{"line":27,"column":39,"offset":1078},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":1048},"end":{"line":27,"column":71,"offset":1110},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":1048},"end":{"line":27,"column":71,"offset":1110},"indent":[]}}],"position":{"start":{"line":27,"column":5,"offset":1044},"end":{"line":27,"column":71,"offset":1110},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#ruby-16-hashes","children":[{"type":"text","value":"RUBY-16: Hashes","position":{"start":{"line":28,"column":10,"offset":1120},"end":{"line":28,"column":25,"offset":1135},"indent":[]}}],"position":{"start":{"line":28,"column":9,"offset":1119},"end":{"line":28,"column":43,"offset":1153},"indent":[]}}],"position":{"start":{"line":28,"column":9,"offset":1119},"end":{"line":28,"column":43,"offset":1153},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":1115},"end":{"line":28,"column":43,"offset":1153},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#thruby-1-th-ruby-basics","children":[{"type":"text","value":"THRUBY-1: TH Ruby Basics","position":{"start":{"line":29,"column":10,"offset":1163},"end":{"line":29,"column":34,"offset":1187},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":1162},"end":{"line":29,"column":61,"offset":1214},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":1162},"end":{"line":29,"column":61,"offset":1214},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":1158},"end":{"line":29,"column":61,"offset":1214},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#thruby-2-ruby-strings","children":[{"type":"text","value":"THRUBY-2: Ruby Strings","position":{"start":{"line":30,"column":10,"offset":1224},"end":{"line":30,"column":32,"offset":1246},"indent":[]}}],"position":{"start":{"line":30,"column":9,"offset":1223},"end":{"line":30,"column":57,"offset":1271},"indent":[]}}],"position":{"start":{"line":30,"column":9,"offset":1223},"end":{"line":30,"column":57,"offset":1271},"indent":[]}}],"position":{"start":{"line":30,"column":5,"offset":1219},"end":{"line":30,"column":57,"offset":1271},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#thruby-2-ruby-numbers","children":[{"type":"text","value":"THRUBY-2: Ruby Numbers","position":{"start":{"line":31,"column":10,"offset":1281},"end":{"line":31,"column":32,"offset":1303},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1280},"end":{"line":31,"column":57,"offset":1328},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1280},"end":{"line":31,"column":57,"offset":1328},"indent":[]}}],"position":{"start":{"line":31,"column":5,"offset":1276},"end":{"line":31,"column":57,"offset":1328},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#thruby-2-ruby-methods","children":[{"type":"text","value":"THRUBY-2: Ruby Methods","position":{"start":{"line":32,"column":10,"offset":1338},"end":{"line":32,"column":32,"offset":1360},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1337},"end":{"line":32,"column":57,"offset":1385},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1337},"end":{"line":32,"column":57,"offset":1385},"indent":[]}}],"position":{"start":{"line":32,"column":5,"offset":1333},"end":{"line":32,"column":57,"offset":1385},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":371},"end":{"line":32,"column":57,"offset":1385},"indent":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":13,"column":1,"offset":305},"end":{"line":32,"column":57,"offset":1385},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":11,"column":1,"offset":206},"end":{"line":32,"column":57,"offset":1385},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!-- /TOC -->","position":{"start":{"line":34,"column":1,"offset":1387},"end":{"line":34,"column":14,"offset":1400},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-1: Comments","position":{"start":{"line":36,"column":4,"offset":1405},"end":{"line":36,"column":20,"offset":1421},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1402},"end":{"line":36,"column":20,"offset":1421},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"This is an example comment","position":{"start":{"line":38,"column":3,"offset":1425},"end":{"line":38,"column":29,"offset":1451},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1423},"end":{"line":38,"column":29,"offset":1451},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-2: Variables","position":{"start":{"line":40,"column":4,"offset":1456},"end":{"line":40,"column":21,"offset":1473},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1453},"end":{"line":40,"column":21,"offset":1473},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"variable = some_value\n\nname = \"Tobi\"\nname # => \"Tobi\"\n\nsum = 18 + 5\nsum # => 23","position":{"start":{"line":42,"column":1,"offset":1475},"end":{"line":50,"column":4,"offset":1566},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-3: Console puts","position":{"start":{"line":52,"column":4,"offset":1571},"end":{"line":52,"column":24,"offset":1591},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1568},"end":{"line":52,"column":24,"offset":1591},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"puts something\n\nputs \"Hello World\"\nputs [1, 5, \"mooo\"]","position":{"start":{"line":54,"column":1,"offset":1593},"end":{"line":59,"column":4,"offset":1659},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-4: Call a method","position":{"start":{"line":61,"column":4,"offset":1664},"end":{"line":61,"column":25,"offset":1685},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1661},"end":{"line":61,"column":25,"offset":1685},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"object.method(args)\n\nstring.length\narray.delete_at(2)\nstring.gsub(\"ae\", \"ä\")","position":{"start":{"line":63,"column":1,"offset":1687},"end":{"line":69,"column":4,"offset":1775},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-5: Define a method","position":{"start":{"line":71,"column":4,"offset":1780},"end":{"line":71,"column":27,"offset":1803},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1777},"end":{"line":71,"column":27,"offset":1803},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"def name(parameter)\n\t#method body\nend\n\ndef greet(name)\n\tputs \"Hi there \" + name\nend","position":{"start":{"line":73,"column":1,"offset":1805},"end":{"line":81,"column":4,"offset":1900},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-6: Equality","position":{"start":{"line":83,"column":4,"offset":1905},"end":{"line":83,"column":20,"offset":1921},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1902},"end":{"line":83,"column":20,"offset":1921},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"object == other\n\ntrue == true # => true\n3 == 4 # => false\n\"Hello\" == \"Hello\" # => true","position":{"start":{"line":85,"column":1,"offset":1923},"end":{"line":91,"column":4,"offset":2021},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-7: Inequality","position":{"start":{"line":93,"column":4,"offset":2026},"end":{"line":93,"column":22,"offset":2044},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2023},"end":{"line":93,"column":22,"offset":2044},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"object != other\n\ntrue != true # => false\n3 != 4 # => true","position":{"start":{"line":95,"column":1,"offset":2046},"end":{"line":100,"column":4,"offset":2115},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-8: Decisions with if","position":{"start":{"line":102,"column":4,"offset":2120},"end":{"line":102,"column":29,"offset":2145},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2117},"end":{"line":102,"column":29,"offset":2145},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"if condition\n\t# happens when true\nelse\n\t# happens when false\nend\n\nif input == password\n\tgrant_access\nelse\n\tdeny_access\nend","position":{"start":{"line":104,"column":1,"offset":2147},"end":{"line":116,"column":4,"offset":2281},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-9: Constants","position":{"start":{"line":118,"column":4,"offset":2286},"end":{"line":118,"column":21,"offset":2303},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":2283},"end":{"line":118,"column":21,"offset":2303},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"CONSTANT = some_value\n\nPI = 3.1415926535","position":{"start":{"line":120,"column":1,"offset":2305},"end":{"line":124,"column":4,"offset":2357},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-10: Strings","position":{"start":{"line":126,"column":4,"offset":2362},"end":{"line":126,"column":20,"offset":2378},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":2359},"end":{"line":126,"column":20,"offset":2378},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"'This is a string'\n'This is a string with an #{expression}'\n\nexample = 'This is another string'\nexample.length","position":{"start":{"line":128,"column":1,"offset":2380},"end":{"line":134,"column":4,"offset":2502},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-11: Concatentation","position":{"start":{"line":136,"column":4,"offset":2507},"end":{"line":136,"column":27,"offset":2530},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":2504},"end":{"line":136,"column":27,"offset":2530},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"string + string2\n\"Hello \" + \"reader\"","position":{"start":{"line":138,"column":1,"offset":2532},"end":{"line":141,"column":4,"offset":2580},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-12: Substitute","position":{"start":{"line":143,"column":4,"offset":2585},"end":{"line":143,"column":23,"offset":2604},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":2582},"end":{"line":143,"column":23,"offset":2604},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"string.gsub(a_string, substitute)\n\"Bill\".gsub(\"ill\", \"oo\")\n# => \"Boo\"","position":{"start":{"line":145,"column":1,"offset":2606},"end":{"line":149,"column":4,"offset":2687},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-13: String Access","position":{"start":{"line":151,"column":4,"offset":2692},"end":{"line":151,"column":26,"offset":2714},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":2689},"end":{"line":151,"column":26,"offset":2714},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"string[position] \"Hello\"[1] # => \"e\"","position":{"start":{"line":153,"column":1,"offset":2716},"end":{"line":155,"column":4,"offset":2764},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-14: Arrays","position":{"start":{"line":157,"column":4,"offset":2769},"end":{"line":157,"column":19,"offset":2784},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":2766},"end":{"line":157,"column":19,"offset":2784},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"[contents]\n\n[]\t# empty array\n[\"Rails\", \"fun\", 5]\n\narray.size\n\n[].size # => 0\n[1,2,3].size # => 3\n[\"foo\", \"bar\"].size # => 2\n\narray[position]","position":{"start":{"line":159,"column":1,"offset":2786},"end":{"line":172,"column":4,"offset":2938},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-15: add an array element","position":{"start":{"line":174,"column":4,"offset":2943},"end":{"line":174,"column":33,"offset":2972},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":2940},"end":{"line":174,"column":33,"offset":2972},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"array << element\n\narray = [1,2,3]\narray << 4\narray # => [1,2,3,4]\narray[4] = 5\n\narray.delete_at(i)\n\narray.each do |e| .. end\n\npersons.each do |p|\n\tputs p.name\nend\n\nnumbers.each do |n|\n\tn = n * 2\nend","position":{"start":{"line":176,"column":1,"offset":2974},"end":{"line":195,"column":4,"offset":3184},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RUBY-16: Hashes","position":{"start":{"line":197,"column":4,"offset":3189},"end":{"line":197,"column":19,"offset":3204},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":3186},"end":{"line":197,"column":19,"offset":3204},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hashes associate a key to some value. You may then retrieve the value based upon its key. This construct is called a dictionary in other languages, which is appropriate because you use the key to \"look up\" a value, as you would look up a definition for a word in a dictionary. Each key must be unique for a given hash but values can be repeated.","position":{"start":{"line":199,"column":1,"offset":3206},"end":{"line":199,"column":346,"offset":3551},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":3206},"end":{"line":199,"column":346,"offset":3551},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Hashes can map from anything to anything! You can map from Strings to Numbers, Strings to Strings, Numbers to Booleans... and you can mix all of those! Although it is common that at least all the keys are of the same class. Symbols are especially common as keys. Symbols look like this: :symbol. A symbol is a colon followed by some characters. You can think of them as special strings that stand for (symbolize) something! We often use symbols because Ruby runs faster when we use symbols instead of strings.","position":{"start":{"line":201,"column":1,"offset":3553},"end":{"line":201,"column":510,"offset":4062},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":3553},"end":{"line":201,"column":510,"offset":4062},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"{key => value}\n{:hobby => 'programming'}\n\n{42 => 'answer', 'score' => 100, :name => 'Tobi'}\n\nhash[key]\n\nhash = {:key => 'value'}\nhash[:key] # =>  'value'\nhash[foo] # => nil\n\nhash[key] = value\n\nhash = {:a => \"b\"}\nhash[:key] = \"value\"\nhash # => {:a=>b, :key=>\"value\"}\n\nhash.delete(key)\nhash = {:a => 'b', :b => 10}\nhash.delete(:a)\nhash # => {:b=>10}","position":{"start":{"line":203,"column":1,"offset":4064},"end":{"line":225,"column":4,"offset":4423},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":227,"column":1,"offset":4425},"end":{"line":227,"column":4,"offset":4428},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"THRUBY-1: TH Ruby Basics","position":{"start":{"line":229,"column":4,"offset":4433},"end":{"line":229,"column":28,"offset":4457},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":4430},"end":{"line":229,"column":28,"offset":4457},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Interactive environment: irb (in the terminal)","position":{"start":{"line":231,"column":1,"offset":4459},"end":{"line":231,"column":47,"offset":4505},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":4459},"end":{"line":231,"column":47,"offset":4505},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"puts \"hello world!\"","position":{"start":{"line":233,"column":1,"offset":4507},"end":{"line":235,"column":4,"offset":4538},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Mathematics","position":{"start":{"line":237,"column":3,"offset":4542},"end":{"line":237,"column":14,"offset":4553},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":4540},"end":{"line":237,"column":16,"offset":4555},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":4540},"end":{"line":237,"column":16,"offset":4555},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"3**2 // this means three to the square of two\nMath.sqrt(a+b)\t// this is a static method","position":{"start":{"line":239,"column":1,"offset":4557},"end":{"line":242,"column":4,"offset":4656},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Methods","position":{"start":{"line":244,"column":3,"offset":4660},"end":{"line":244,"column":10,"offset":4667},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":4658},"end":{"line":244,"column":12,"offset":4669},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":4658},"end":{"line":244,"column":12,"offset":4669},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"def hi\n\tputs \"Hello World!\"\nend","position":{"start":{"line":246,"column":1,"offset":4671},"end":{"line":250,"column":4,"offset":4714},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if the method does not take parameters, then you do not need to define the curly braces","position":{"start":{"line":252,"column":5,"offset":4720},"end":{"line":252,"column":92,"offset":4807},"indent":[]}}],"position":{"start":{"line":252,"column":5,"offset":4720},"end":{"line":252,"column":92,"offset":4807},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":4716},"end":{"line":252,"column":92,"offset":4807},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":4716},"end":{"line":252,"column":92,"offset":4807},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Classes","position":{"start":{"line":254,"column":3,"offset":4811},"end":{"line":254,"column":10,"offset":4818},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":4809},"end":{"line":254,"column":12,"offset":4820},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":4809},"end":{"line":254,"column":12,"offset":4820},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"class Greeter\n\tattr_accessor :name\n\tdef initialize(name = \"World\")\n\t\t@name = name\n\tend\n\tdef say_hi\n\t\tputs \"Hi #{@name}!\"\n\tend\n\tdef say_bye\n\t\tputs \"Bye #{@name}, come back\"\n\tend\nend\n\ngreeter = Greeter.new(\"Pat\")","position":{"start":{"line":256,"column":1,"offset":4822},"end":{"line":271,"column":4,"offset":5044},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using attr_accessor defined two new methods for us, name to get the value, and name= to set it.","position":{"start":{"line":273,"column":5,"offset":5050},"end":{"line":273,"column":100,"offset":5145},"indent":[]}}],"position":{"start":{"line":273,"column":5,"offset":5050},"end":{"line":273,"column":100,"offset":5145},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":5046},"end":{"line":273,"column":100,"offset":5145},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":5046},"end":{"line":273,"column":100,"offset":5145},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"LOOPING","position":{"start":{"line":275,"column":3,"offset":5149},"end":{"line":275,"column":10,"offset":5156},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":5147},"end":{"line":275,"column":12,"offset":5158},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":5147},"end":{"line":275,"column":12,"offset":5158},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"@names.each do |name|\n  puts \"Hello #{name}!\"\nend\n\n# Say bye to everybody\ndef say_bye\n  if @names.nil?\n    puts \"...\"\n  elsif @names.respond_to?(\"join\")\n    # Join the list elements with commas\n    puts \"Goodbye #{@names.join(\", \")}.  Come back soon!\"\n  else\n    puts \"Goodbye #{@names}.  Come back soon!\"\n  end\nend","position":{"start":{"line":277,"column":1,"offset":5160},"end":{"line":293,"column":4,"offset":5487},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input and Output","position":{"start":{"line":295,"column":3,"offset":5491},"end":{"line":295,"column":19,"offset":5507},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":5489},"end":{"line":295,"column":21,"offset":5509},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":5489},"end":{"line":295,"column":21,"offset":5509},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Giving input to the variable.","position":{"start":{"line":297,"column":1,"offset":5511},"end":{"line":297,"column":30,"offset":5540},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":5511},"end":{"line":297,"column":30,"offset":5540},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"puts auto creates \\n","position":{"start":{"line":299,"column":5,"offset":5546},"end":{"line":299,"column":25,"offset":5566},"indent":[]}}],"position":{"start":{"line":299,"column":5,"offset":5546},"end":{"line":299,"column":25,"offset":5566},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":5542},"end":{"line":299,"column":25,"offset":5566},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"print does not","position":{"start":{"line":300,"column":5,"offset":5571},"end":{"line":300,"column":19,"offset":5585},"indent":[]}}],"position":{"start":{"line":300,"column":5,"offset":5571},"end":{"line":300,"column":19,"offset":5585},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":5567},"end":{"line":300,"column":19,"offset":5585},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":5542},"end":{"line":300,"column":19,"offset":5585},"indent":[1]}},{"type":"code","lang":"ruby","meta":null,"value":"# name = \"Jason\"\n\nprint \"Please enter your name: \"\nname = gets # this is what is going to take the input\nputs \"Hello #{name}!\"","position":{"start":{"line":302,"column":1,"offset":5587},"end":{"line":308,"column":4,"offset":5725},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":310,"column":1,"offset":5727},"end":{"line":310,"column":4,"offset":5730},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"THRUBY-2: Ruby Strings","position":{"start":{"line":312,"column":4,"offset":5735},"end":{"line":312,"column":26,"offset":5757},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":5732},"end":{"line":312,"column":26,"offset":5757},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"What are Strings?","position":{"start":{"line":314,"column":3,"offset":5761},"end":{"line":314,"column":20,"offset":5778},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":5759},"end":{"line":314,"column":22,"offset":5780},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":5759},"end":{"line":314,"column":22,"offset":5780},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using double quotes when creating a string will cause variables in the string to be interpolated.","position":{"start":{"line":316,"column":5,"offset":5786},"end":{"line":316,"column":102,"offset":5883},"indent":[]}}],"position":{"start":{"line":316,"column":5,"offset":5786},"end":{"line":316,"column":102,"offset":5883},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":5782},"end":{"line":316,"column":102,"offset":5883},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":5782},"end":{"line":316,"column":102,"offset":5883},"indent":[]}},{"type":"code","lang":"ruby","meta":null,"value":"# this will all print out as is\nname=\"Dennis\"\nstring = <<-STRING\nHello\nMy name is #{name}\nWorkspaces is fun!\nSTRING\nthisAlsoWorks=\"This is\na multiline String\n\"","position":{"start":{"line":318,"column":1,"offset":5885},"end":{"line":329,"column":4,"offset":6056},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Whitespace","position":{"start":{"line":331,"column":3,"offset":6060},"end":{"line":331,"column":13,"offset":6070},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":6058},"end":{"line":331,"column":15,"offset":6072},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":6058},"end":{"line":331,"column":15,"offset":6072},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\\n -> new line\n\\s -> space\n\\t -> new tab","position":{"start":{"line":333,"column":1,"offset":6074},"end":{"line":335,"column":14,"offset":6114},"indent":[1,1]}}],"position":{"start":{"line":333,"column":1,"offset":6074},"end":{"line":335,"column":14,"offset":6114},"indent":[1,1]}},{"type":"code","lang":"ruby","meta":null,"value":"example = \"New line \\nhere\"","position":{"start":{"line":337,"column":1,"offset":6116},"end":{"line":339,"column":4,"offset":6155},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":341,"column":1,"offset":6157},"end":{"line":341,"column":4,"offset":6160},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"THRUBY-2: Ruby Numbers","position":{"start":{"line":343,"column":4,"offset":6165},"end":{"line":343,"column":26,"offset":6187},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":6162},"end":{"line":343,"column":26,"offset":6187},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":345,"column":1,"offset":6189},"end":{"line":345,"column":4,"offset":6192},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"THRUBY-2: Ruby Methods","position":{"start":{"line":347,"column":4,"offset":6197},"end":{"line":347,"column":26,"offset":6219},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":6194},"end":{"line":347,"column":26,"offset":6219},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":350,"column":1,"offset":6222},"end":{"line":350,"column":31,"offset":6252},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":350,"column":31,"offset":6252}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ruby-basics-help-sheet\"\n    }}>{`Ruby Basics Help Sheet`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#ruby-basics-help-sheet\"\n        }}>{`Ruby Basics Help Sheet`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-1-comments\"\n            }}>{`RUBY-1: Comments`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#this-is-an-example-comment\"\n        }}>{`This is an example comment`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-2-variables\"\n            }}>{`RUBY-2: Variables`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-3-console-puts\"\n            }}>{`RUBY-3: Console puts`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-4-call-a-method\"\n            }}>{`RUBY-4: Call a method`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-5-define-a-method\"\n            }}>{`RUBY-5: Define a method`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-6-equality\"\n            }}>{`RUBY-6: Equality`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-7-inequality\"\n            }}>{`RUBY-7: Inequality`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-8-decisions-with-if\"\n            }}>{`RUBY-8: Decisions with if`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-9-constants\"\n            }}>{`RUBY-9: Constants`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-10-strings\"\n            }}>{`RUBY-10: Strings`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-11-concatentation\"\n            }}>{`RUBY-11: Concatentation`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-12-substitute\"\n            }}>{`RUBY-12: Substitute`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-13-string-access\"\n            }}>{`RUBY-13: String Access`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-14-arrays\"\n            }}>{`RUBY-14: Arrays`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-15-add-an-array-element\"\n            }}>{`RUBY-15: add an array element`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ruby-16-hashes\"\n            }}>{`RUBY-16: Hashes`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#thruby-1-th-ruby-basics\"\n            }}>{`THRUBY-1: TH Ruby Basics`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#thruby-2-ruby-strings\"\n            }}>{`THRUBY-2: Ruby Strings`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#thruby-2-ruby-numbers\"\n            }}>{`THRUBY-2: Ruby Numbers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#thruby-2-ruby-methods\"\n            }}>{`THRUBY-2: Ruby Methods`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"ruby-1-comments\"\n    }}>{`RUBY-1: Comments`}</h2>\n    <h1 {...{\n      \"id\": \"this-is-an-example-comment\"\n    }}>{`This is an example comment`}</h1>\n    <h2 {...{\n      \"id\": \"ruby-2-variables\"\n    }}>{`RUBY-2: Variables`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`variable = some_value\n\nname = \"Tobi\"\nname # => \"Tobi\"\n\nsum = 18 + 5\nsum # => 23\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-3-console-puts\"\n    }}>{`RUBY-3: Console puts`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`puts something\n\nputs \"Hello World\"\nputs [1, 5, \"mooo\"]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-4-call-a-method\"\n    }}>{`RUBY-4: Call a method`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`object.method(args)\n\nstring.length\narray.delete_at(2)\nstring.gsub(\"ae\", \"ä\")\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-5-define-a-method\"\n    }}>{`RUBY-5: Define a method`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`def name(parameter)\n    #method body\nend\n\ndef greet(name)\n    puts \"Hi there \" + name\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-6-equality\"\n    }}>{`RUBY-6: Equality`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`object == other\n\ntrue == true # => true\n3 == 4 # => false\n\"Hello\" == \"Hello\" # => true\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-7-inequality\"\n    }}>{`RUBY-7: Inequality`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`object != other\n\ntrue != true # => false\n3 != 4 # => true\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-8-decisions-with-if\"\n    }}>{`RUBY-8: Decisions with if`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`if condition\n    # happens when true\nelse\n    # happens when false\nend\n\nif input == password\n    grant_access\nelse\n    deny_access\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-9-constants\"\n    }}>{`RUBY-9: Constants`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`CONSTANT = some_value\n\nPI = 3.1415926535\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-10-strings\"\n    }}>{`RUBY-10: Strings`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`'This is a string'\n'This is a string with an #{expression}'\n\nexample = 'This is another string'\nexample.length\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-11-concatentation\"\n    }}>{`RUBY-11: Concatentation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`string + string2\n\"Hello \" + \"reader\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-12-substitute\"\n    }}>{`RUBY-12: Substitute`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`string.gsub(a_string, substitute)\n\"Bill\".gsub(\"ill\", \"oo\")\n# => \"Boo\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-13-string-access\"\n    }}>{`RUBY-13: String Access`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`string[position] \"Hello\"[1] # => \"e\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-14-arrays\"\n    }}>{`RUBY-14: Arrays`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`[contents]\n\n[]  # empty array\n[\"Rails\", \"fun\", 5]\n\narray.size\n\n[].size # => 0\n[1,2,3].size # => 3\n[\"foo\", \"bar\"].size # => 2\n\narray[position]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-15-add-an-array-element\"\n    }}>{`RUBY-15: add an array element`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`array << element\n\narray = [1,2,3]\narray << 4\narray # => [1,2,3,4]\narray[4] = 5\n\narray.delete_at(i)\n\narray.each do |e| .. end\n\npersons.each do |p|\n    puts p.name\nend\n\nnumbers.each do |n|\n    n = n * 2\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ruby-16-hashes\"\n    }}>{`RUBY-16: Hashes`}</h2>\n    <p>{`Hashes associate a key to some value. You may then retrieve the value based upon its key. This construct is called a dictionary in other languages, which is appropriate because you use the key to \"look up\" a value, as you would look up a definition for a word in a dictionary. Each key must be unique for a given hash but values can be repeated.`}</p>\n    <p>{`Hashes can map from anything to anything! You can map from Strings to Numbers, Strings to Strings, Numbers to Booleans... and you can mix all of those! Although it is common that at least all the keys are of the same class. Symbols are especially common as keys. Symbols look like this: :symbol. A symbol is a colon followed by some characters. You can think of them as special strings that stand for (symbolize) something! We often use symbols because Ruby runs faster when we use symbols instead of strings.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`{key => value}\n{:hobby => 'programming'}\n\n{42 => 'answer', 'score' => 100, :name => 'Tobi'}\n\nhash[key]\n\nhash = {:key => 'value'}\nhash[:key] # =>  'value'\nhash[foo] # => nil\n\nhash[key] = value\n\nhash = {:a => \"b\"}\nhash[:key] = \"value\"\nhash # => {:a=>b, :key=>\"value\"}\n\nhash.delete(key)\nhash = {:a => 'b', :b => 10}\nhash.delete(:a)\nhash # => {:b=>10}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"thruby-1-th-ruby-basics\"\n    }}>{`THRUBY-1: TH Ruby Basics`}</h2>\n    <p>{`Interactive environment: irb (in the terminal)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`puts \"hello world!\"\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Mathematics`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`3**2 // this means three to the square of two\nMath.sqrt(a+b)  // this is a static method\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Methods`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`def hi\n    puts \"Hello World!\"\nend\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`if the method does not take parameters, then you do not need to define the curly braces`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Classes`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class Greeter\n    attr_accessor :name\n    def initialize(name = \"World\")\n        @name = name\n    end\n    def say_hi\n        puts \"Hi #{@name}!\"\n    end\n    def say_bye\n        puts \"Bye #{@name}, come back\"\n    end\nend\n\ngreeter = Greeter.new(\"Pat\")\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Using attr_accessor defined two new methods for us, name to get the value, and name= to set it.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`LOOPING`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`@names.each do |name|\n  puts \"Hello #{name}!\"\nend\n\n# Say bye to everybody\ndef say_bye\n  if @names.nil?\n    puts \"...\"\n  elsif @names.respond_to?(\"join\")\n    # Join the list elements with commas\n    puts \"Goodbye #{@names.join(\", \")}.  Come back soon!\"\n  else\n    puts \"Goodbye #{@names}.  Come back soon!\"\n  end\nend\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Input and Output`}</strong></p>\n    <p>{`Giving input to the variable.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`puts auto creates \\\\n`}</li>\n      <li parentName=\"ul\">{`print does not`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# name = \"Jason\"\n\nprint \"Please enter your name: \"\nname = gets # this is what is going to take the input\nputs \"Hello #{name}!\"\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"thruby-2-ruby-strings\"\n    }}>{`THRUBY-2: Ruby Strings`}</h2>\n    <p><strong parentName=\"p\">{`What are Strings?`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Using double quotes when creating a string will cause variables in the string to be interpolated.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# this will all print out as is\nname=\"Dennis\"\nstring = <<-STRING\nHello\nMy name is #{name}\nWorkspaces is fun!\nSTRING\nthisAlsoWorks=\"This is\na multiline String\n\"\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Whitespace`}</strong></p>\n    <p>{`\\\\n -> new line\n\\\\s -> space\n\\\\t -> new tab`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`example = \"New line \\\\nhere\"\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"thruby-2-ruby-numbers\"\n    }}>{`THRUBY-2: Ruby Numbers`}</h2>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"thruby-2-ruby-methods\"\n    }}>{`THRUBY-2: Ruby Methods`}</h2>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}