{"expireTime":9007200867335911000,"key":"gatsby-plugin-mdx-entire-payload-555e5d9eed07edd0ba5dc7f6ac979b8c-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"React-Native Cheat Sheet using ES6","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":37,"offset":203},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":37,"offset":203},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RN-1: Importing from React","position":{"start":{"line":10,"column":4,"offset":208},"end":{"line":10,"column":30,"offset":234},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":205},"end":{"line":10,"column":30,"offset":234},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"in index.ios.js","position":{"start":{"line":12,"column":3,"offset":238},"end":{"line":12,"column":18,"offset":253},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":236},"end":{"line":12,"column":20,"offset":255},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":236},"end":{"line":12,"column":20,"offset":255},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// import from React and React-Native\nimport React, { Component } from 'react';\n\n// required components go here -> check from the docs\nimport { AppRegistry, TabBarIOS, StyleSheet, Text, View } from 'react-native';\n\n// import from your own files\nimport { Featured } from './Featured.js';\nimport { Search } from './Search.js';","position":{"start":{"line":14,"column":1,"offset":257},"end":{"line":24,"column":4,"offset":599},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":26,"column":1,"offset":601},"end":{"line":26,"column":4,"offset":604},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RN-2: Example classes","position":{"start":{"line":28,"column":4,"offset":609},"end":{"line":28,"column":25,"offset":630},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":606},"end":{"line":28,"column":25,"offset":630},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// this is an example class\nclass BookSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: 'featured'\n    };\n  }\n\n  // this is where the view renders\n  render() {\n    return (\n      // JSX commands relate to imports from react-native\n      // {} is where the JSX compiles Javascript\n      <TabBarIOS selectedTab={this.state.selectedTab}>\n        <TabBarIOS.Item\n          title=\"Left Tab\"\n          selected={this.state.selectedTab === 'featured'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'featured'\n            });\n          }}\n        >\n          <Featured />\n        </TabBarIOS.Item>\n        <TabBarIOS.Item\n          title=\"Right Tab\"\n          selected={this.state.selectedTab === 'search'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'search'\n            });\n          }}\n        >\n          <Search />\n        </TabBarIOS.Item>\n      </TabBarIOS>\n    );\n  }\n}","position":{"start":{"line":30,"column":1,"offset":632},"end":{"line":74,"column":4,"offset":1743},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":76,"column":1,"offset":1745},"end":{"line":76,"column":4,"offset":1748},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RN-3: Registry for an App","position":{"start":{"line":78,"column":4,"offset":1753},"end":{"line":78,"column":29,"offset":1778},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1750},"end":{"line":78,"column":29,"offset":1778},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"AppRegistry.registerComponent('BookSearch', () => BookSearch);","position":{"start":{"line":80,"column":1,"offset":1780},"end":{"line":82,"column":4,"offset":1860},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":84,"column":1,"offset":1862},"end":{"line":84,"column":4,"offset":1865},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RN-4: Debugging - Important things to note","position":{"start":{"line":86,"column":4,"offset":1870},"end":{"line":86,"column":46,"offset":1912},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":1867},"end":{"line":86,"column":46,"offset":1912},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the AppRegistry is not working (error regarding App not registered)","position":{"start":{"line":88,"column":1,"offset":1914},"end":{"line":88,"column":71,"offset":1984},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":1914},"end":{"line":88,"column":71,"offset":1984},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Check all terminal sessions that have used React Native have closed","position":{"start":{"line":90,"column":4,"offset":1989},"end":{"line":90,"column":71,"offset":2056},"indent":[]}}],"position":{"start":{"line":90,"column":4,"offset":1989},"end":{"line":90,"column":71,"offset":2056},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":1986},"end":{"line":90,"column":71,"offset":2056},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Try running the command npm link from the main directory of the project","position":{"start":{"line":91,"column":4,"offset":2060},"end":{"line":91,"column":75,"offset":2131},"indent":[]}}],"position":{"start":{"line":91,"column":4,"offset":2060},"end":{"line":91,"column":75,"offset":2131},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2057},"end":{"line":91,"column":75,"offset":2131},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Check the moduleName in the AppDelegate.m file in the Xcode Project","position":{"start":{"line":92,"column":4,"offset":2135},"end":{"line":92,"column":71,"offset":2202},"indent":[]}}],"position":{"start":{"line":92,"column":4,"offset":2135},"end":{"line":92,"column":71,"offset":2202},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2132},"end":{"line":92,"column":71,"offset":2202},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":1986},"end":{"line":92,"column":71,"offset":2202},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":94,"column":1,"offset":2204},"end":{"line":94,"column":4,"offset":2207},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RN-5: StyleSheet.create","position":{"start":{"line":96,"column":4,"offset":2212},"end":{"line":96,"column":27,"offset":2235},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2209},"end":{"line":96,"column":27,"offset":2235},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, you can see how the 'const styles' variable is declared and how it is implemented in the render() function.","position":{"start":{"line":98,"column":1,"offset":2237},"end":{"line":98,"column":125,"offset":2361},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2237},"end":{"line":98,"column":125,"offset":2361},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nclass Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}","position":{"start":{"line":100,"column":1,"offset":2363},"end":{"line":124,"column":4,"offset":2755},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":126,"column":1,"offset":2757},"end":{"line":126,"column":4,"offset":2760},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"iOS Views","position":{"start":{"line":128,"column":3,"offset":2764},"end":{"line":128,"column":12,"offset":2773},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":2762},"end":{"line":128,"column":14,"offset":2775},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":2762},"end":{"line":128,"column":14,"offset":2775},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" ! important ","position":{"start":{"line":130,"column":3,"offset":2779},"end":{"line":130,"column":16,"offset":2792},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":2777},"end":{"line":130,"column":18,"offset":2794},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":2777},"end":{"line":130,"column":18,"offset":2794},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"<View>","position":{"start":{"line":132,"column":1,"offset":2796},"end":{"line":132,"column":9,"offset":2804},"indent":[]}},{"type":"text","value":" tags are treated similar to as if they are ","position":{"start":{"line":132,"column":9,"offset":2804},"end":{"line":132,"column":53,"offset":2848},"indent":[]}},{"type":"inlineCode","value":"<div>","position":{"start":{"line":132,"column":53,"offset":2848},"end":{"line":132,"column":60,"offset":2855},"indent":[]}},{"type":"text","value":" tags","position":{"start":{"line":132,"column":60,"offset":2855},"end":{"line":132,"column":65,"offset":2860},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":2796},"end":{"line":132,"column":65,"offset":2860},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":134,"column":1,"offset":2862},"end":{"line":134,"column":4,"offset":2865},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RN-6: Navigation View","position":{"start":{"line":136,"column":4,"offset":2870},"end":{"line":136,"column":25,"offset":2891},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":2867},"end":{"line":136,"column":25,"offset":2891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example: Search.js from the BookSearch project","position":{"start":{"line":138,"column":1,"offset":2893},"end":{"line":138,"column":47,"offset":2939},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":2893},"end":{"line":138,"column":47,"offset":2939},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nimport React, { Component } from 'react';\nimport { StyleSheet, NavigatorIOS, Text } from 'react-native';\nimport { SearchBooks } from './SearchBooks.js';\n\nconst styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}","position":{"start":{"line":140,"column":1,"offset":2941},"end":{"line":170,"column":4,"offset":3517},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"RN-7: UITableCellView replica (ListView)","position":{"start":{"line":172,"column":4,"offset":3522},"end":{"line":172,"column":44,"offset":3562},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":3519},"end":{"line":172,"column":44,"offset":3562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"BookList.js - taken from BookSearch","position":{"start":{"line":174,"column":1,"offset":3564},"end":{"line":174,"column":36,"offset":3599},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":3564},"end":{"line":174,"column":36,"offset":3599},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"'use strict';\n\nimport React, { Component } from 'react';\n\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  ListView,\n  TouchableHighlight,\n  ActivityIndicatorIOS\n} from 'react-native';\n\nimport { BookDetail } from './BookDetail.js';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  thumbnail: {\n    width: 53,\n    height: 81,\n    marginRight: 10\n  },\n  rightContainer: {\n    flex: 1\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 8\n  },\n  author: {\n    color: '#656565'\n  },\n  separator: {\n    height: 1,\n    backgroundColor: '#dddddd'\n  },\n  listView: {\n    marginTop: 60,\n    backgroundColor: '#F5FCFF'\n  },\n  loading: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\n// the commented out code related to FAKE_BOOK_DATA is how you can stub some data\n\n// const FAKE_BOOK_DATA = [\n//     {volumeInfo: {title: 'The Catcher in the Rye', authors: \"J. D. Salinger\", imageLinks: {thumbnail: 'http://books.google.com/books/content?id=PCDengEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api'}}}\n// ];\n\nconst REQUEST_URL =\n  'https://www.googleapis.com/books/v1/volumes?q=subject:fiction';\n\nexport default class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2\n      })\n    };\n  }\n\n  componentDidMount() {\n    // var books = FAKE_BOOK_DATA;\n    // this.setState({\n    //     dataSource: this.state.dataSource.cloneWithRows(books)\n    // });\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((responseData) => {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(responseData.items),\n          isLoading: false\n        });\n      })\n      .done();\n  }\n\n  render() {\n    // var book = FAKE_BOOK_DATA[0];\n    if (this.state.isLoading) {\n      return this.renderLoadingView();\n    }\n\n    return (\n      <ListView\n        dataSource={this.state.dataSource}\n        renderRow={this.renderBook.bind(this)}\n        style={styles.listView}\n      />\n    );\n  }\n\n  renderLoadingView() {\n    return (\n      <View style={styles.loading}>\n        <ActivityIndicatorIOS size=\"large\" />\n        <Text>Loading books...</Text>\n      </View>\n    );\n  }\n\n  renderBook(book) {\n    return (\n      <TouchableHighlight\n        onPress={() => this.showBookDetail(book)}\n        underlayColor=\"#dddddd\"\n      >\n        <View>\n          <View style={styles.container}>\n            <Image\n              source={{ uri: book.volumeInfo.imageLinks.thumbnail }}\n              style={styles.thumbnail}\n            />\n            <View style={styles.rightContainer}>\n              <Text style={styles.title}>{book.volumeInfo.title}</Text>\n              <Text style={styles.author}>{book.volumeInfo.authors}</Text>\n            </View>\n          </View>\n          <View style={styles.separator} />\n        </View>\n      </TouchableHighlight>\n    );\n  }\n\n  showBookDetail(book) {\n    this.props.navigator.push({\n      title: book.volumeInfo.title,\n      component: BookDetail,\n      passProps: { book }\n    });\n  }\n}","position":{"start":{"line":176,"column":1,"offset":3601},"end":{"line":327,"column":4,"offset":6943},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":330,"column":1,"offset":6946},"end":{"line":330,"column":31,"offset":6976},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":330,"column":31,"offset":6976}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-native-cheat-sheet-using-es6\"\n    }}>{`React-Native Cheat Sheet using ES6`}</h1>\n    <h2 {...{\n      \"id\": \"rn-1-importing-from-react\"\n    }}>{`RN-1: Importing from React`}</h2>\n    <p><strong parentName=\"p\">{`in index.ios.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// import from React and React-Native\nimport React, { Component } from 'react';\n\n// required components go here -> check from the docs\nimport { AppRegistry, TabBarIOS, StyleSheet, Text, View } from 'react-native';\n\n// import from your own files\nimport { Featured } from './Featured.js';\nimport { Search } from './Search.js';\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-2-example-classes\"\n    }}>{`RN-2: Example classes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// this is an example class\nclass BookSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: 'featured'\n    };\n  }\n\n  // this is where the view renders\n  render() {\n    return (\n      // JSX commands relate to imports from react-native\n      // {} is where the JSX compiles Javascript\n      <TabBarIOS selectedTab={this.state.selectedTab}>\n        <TabBarIOS.Item\n          title=\"Left Tab\"\n          selected={this.state.selectedTab === 'featured'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'featured'\n            });\n          }}\n        >\n          <Featured />\n        </TabBarIOS.Item>\n        <TabBarIOS.Item\n          title=\"Right Tab\"\n          selected={this.state.selectedTab === 'search'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'search'\n            });\n          }}\n        >\n          <Search />\n        </TabBarIOS.Item>\n      </TabBarIOS>\n    );\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-3-registry-for-an-app\"\n    }}>{`RN-3: Registry for an App`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AppRegistry.registerComponent('BookSearch', () => BookSearch);\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-4-debugging---important-things-to-note\"\n    }}>{`RN-4: Debugging - Important things to note`}</h2>\n    <p>{`If the AppRegistry is not working (error regarding App not registered)`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Check all terminal sessions that have used React Native have closed`}</li>\n      <li parentName=\"ol\">{`Try running the command npm link from the main directory of the project`}</li>\n      <li parentName=\"ol\">{`Check the moduleName in the AppDelegate.m file in the Xcode Project`}</li>\n    </ol>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-5-stylesheetcreate\"\n    }}>{`RN-5: StyleSheet.create`}</h2>\n    <p>{`In this example, you can see how the 'const styles' variable is declared and how it is implemented in the render() function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nclass Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <p><strong parentName=\"p\">{`iOS Views`}</strong></p>\n    <p><strong parentName=\"p\">{` ! important `}</strong></p>\n    <p><inlineCode parentName=\"p\">{`<View>`}</inlineCode>{` tags are treated similar to as if they are `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{` tags`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-6-navigation-view\"\n    }}>{`RN-6: Navigation View`}</h2>\n    <p>{`Example: Search.js from the BookSearch project`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nimport React, { Component } from 'react';\nimport { StyleSheet, NavigatorIOS, Text } from 'react-native';\nimport { SearchBooks } from './SearchBooks.js';\n\nconst styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rn-7-uitablecellview-replica-listview\"\n    }}>{`RN-7: UITableCellView replica (ListView)`}</h2>\n    <p>{`BookList.js - taken from BookSearch`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nimport React, { Component } from 'react';\n\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  ListView,\n  TouchableHighlight,\n  ActivityIndicatorIOS\n} from 'react-native';\n\nimport { BookDetail } from './BookDetail.js';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  thumbnail: {\n    width: 53,\n    height: 81,\n    marginRight: 10\n  },\n  rightContainer: {\n    flex: 1\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 8\n  },\n  author: {\n    color: '#656565'\n  },\n  separator: {\n    height: 1,\n    backgroundColor: '#dddddd'\n  },\n  listView: {\n    marginTop: 60,\n    backgroundColor: '#F5FCFF'\n  },\n  loading: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\n// the commented out code related to FAKE_BOOK_DATA is how you can stub some data\n\n// const FAKE_BOOK_DATA = [\n//     {volumeInfo: {title: 'The Catcher in the Rye', authors: \"J. D. Salinger\", imageLinks: {thumbnail: 'http://books.google.com/books/content?id=PCDengEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api'}}}\n// ];\n\nconst REQUEST_URL =\n  'https://www.googleapis.com/books/v1/volumes?q=subject:fiction';\n\nexport default class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2\n      })\n    };\n  }\n\n  componentDidMount() {\n    // var books = FAKE_BOOK_DATA;\n    // this.setState({\n    //     dataSource: this.state.dataSource.cloneWithRows(books)\n    // });\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((responseData) => {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(responseData.items),\n          isLoading: false\n        });\n      })\n      .done();\n  }\n\n  render() {\n    // var book = FAKE_BOOK_DATA[0];\n    if (this.state.isLoading) {\n      return this.renderLoadingView();\n    }\n\n    return (\n      <ListView\n        dataSource={this.state.dataSource}\n        renderRow={this.renderBook.bind(this)}\n        style={styles.listView}\n      />\n    );\n  }\n\n  renderLoadingView() {\n    return (\n      <View style={styles.loading}>\n        <ActivityIndicatorIOS size=\"large\" />\n        <Text>Loading books...</Text>\n      </View>\n    );\n  }\n\n  renderBook(book) {\n    return (\n      <TouchableHighlight\n        onPress={() => this.showBookDetail(book)}\n        underlayColor=\"#dddddd\"\n      >\n        <View>\n          <View style={styles.container}>\n            <Image\n              source={{ uri: book.volumeInfo.imageLinks.thumbnail }}\n              style={styles.thumbnail}\n            />\n            <View style={styles.rightContainer}>\n              <Text style={styles.title}>{book.volumeInfo.title}</Text>\n              <Text style={styles.author}>{book.volumeInfo.authors}</Text>\n            </View>\n          </View>\n          <View style={styles.separator} />\n        </View>\n      </TouchableHighlight>\n    );\n  }\n\n  showBookDetail(book) {\n    this.props.navigator.push({\n      title: book.volumeInfo.title,\n      component: BookDetail,\n      passProps: { book }\n    });\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}