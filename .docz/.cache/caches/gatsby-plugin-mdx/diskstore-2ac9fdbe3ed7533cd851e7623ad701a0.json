{"expireTime":9007200848610887000,"key":"gatsby-plugin-mdx-entire-payload-d91a743f87297e989e8194b148afce8c-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":133,"offset":134},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":29,"offset":164},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Pulling from Docker Hub","position":{"start":{"line":8,"column":3,"offset":169},"end":{"line":8,"column":26,"offset":192},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":8,"column":26,"offset":192},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Reference from here ","position":{"start":{"line":10,"column":1,"offset":194},"end":{"line":10,"column":21,"offset":214},"indent":[]}},{"type":"link","title":null,"url":"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/","children":[{"type":"text","value":"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/","position":{"start":{"line":10,"column":21,"offset":214},"end":{"line":10,"column":106,"offset":299},"indent":[]}}],"position":{"start":{"line":10,"column":21,"offset":214},"end":{"line":10,"column":106,"offset":299},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":10,"column":106,"offset":299},"end":{"line":10,"column":107,"offset":300},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":194},"end":{"line":10,"column":107,"offset":300},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tl;dr","position":{"start":{"line":12,"column":4,"offset":305},"end":{"line":12,"column":9,"offset":310},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":302},"end":{"line":12,"column":9,"offset":310},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"kubectl create secret docker-registry regcred --docker-server=<your-registry-server> --docker-username=<your-name> --docker-password=<your-pword> --docker-email=<your-email>\n# Checking the credentials\nkubectl get secret regcred --output=yaml\nkubectl get secret regcred --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode","position":{"start":{"line":14,"column":1,"offset":312},"end":{"line":19,"column":4,"offset":658},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To create a pod using the creds, ensure the Pod has ","position":{"start":{"line":21,"column":1,"offset":660},"end":{"line":21,"column":53,"offset":712},"indent":[]}},{"type":"inlineCode","value":"imagePullSecrets","position":{"start":{"line":21,"column":53,"offset":712},"end":{"line":21,"column":71,"offset":730},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":21,"column":71,"offset":730},"end":{"line":21,"column":72,"offset":731},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":660},"end":{"line":21,"column":72,"offset":731},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"# pods/private-reg-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: private-reg\nspec:\n  containers:\n    - name: private-reg-container\n      image: <your-private-image>\n  imagePullSecrets:\n    - name: regcred","position":{"start":{"line":23,"column":1,"offset":733},"end":{"line":35,"column":4,"offset":955},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":38,"column":1,"offset":958},"end":{"line":38,"column":31,"offset":988},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":38,"column":31,"offset":988}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"pulling-from-docker-hub\"\n    }}>{`Pulling from Docker Hub`}</h1>\n    <p>{`Reference from here `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\"\n      }}>{`https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl create secret docker-registry regcred --docker-server=<your-registry-server> --docker-username=<your-name> --docker-password=<your-pword> --docker-email=<your-email>\n# Checking the credentials\nkubectl get secret regcred --output=yaml\nkubectl get secret regcred --output=\"jsonpath={.data.\\\\.dockerconfigjson}\" | base64 --decode\n`}</code></pre>\n    <p>{`To create a pod using the creds, ensure the Pod has `}<inlineCode parentName=\"p\">{`imagePullSecrets`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pods/private-reg-pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: private-reg\nspec:\n  containers:\n    - name: private-reg-container\n      image: <your-private-image>\n  imagePullSecrets:\n    - name: regcred\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}