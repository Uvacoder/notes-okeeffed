{"version":3,"sources":["webpack:///../manual/React/Webpack-Federaton-With-React.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,8NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iCADR,iCAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oEADQ,iCAItB,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,m/EAsGL,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,i5E,qNAiHTJ,EAAWK,gBAAiB","file":"component---manual-react-webpack-federaton-with-react-md-c03659d513c05ea661b0.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"webpack-federation-with-react\"\n    }}>{`Webpack Federation with React`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/module-federation/module-federation-examples\"\n        }}>{`Webpack Federation Examples`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"react-app-one\"\n    }}>{`React App One`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// App.js\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Page from './Page';\nconst RemoteCombo = React.lazy(() => import('app2/Combo'));\n\nconst App = () => (\n  <div>\n    <ThemeProvider theme={{ main: 'royalblue' }}>\n      <h1>Basic Host-Remote</h1>\n      <h2>App 1</h2>\n      <Page />\n      <React.Suspense fallback=\"Waddup\">\n        <RemoteCombo theme={{ main: 'royalblue' }} />\n      </React.Suspense>\n    </ThemeProvider>\n  </div>\n);\n\nexport default App;\n\n// Page.js\nimport React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nconst RemoteButton = React.lazy(() => import('app2/Button'));\nconst RemoteTitle = React.lazy(() => import('app2/Title'));\n\nconst Page = () => {\n  const theme = useContext(ThemeContext);\n\n  return (\n    <React.Fragment>\n      <React.Suspense fallback=\"Loading Button\">\n        <RemoteTitle theme={theme}>Styled Title</RemoteTitle>\n      </React.Suspense>\n      <React.Suspense fallback=\"Loading Button\">\n        <RemoteButton onClick={() => alert('Made it')} theme={theme}>\n          Styled Component\n        </RemoteButton>\n      </React.Suspense>\n    </React.Fragment>\n  );\n};\n\nexport default Page;\n\n// Webpack config\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst { ModuleFederationPlugin } = require('webpack').container;\nconst path = require('path');\n\nmodule.exports = {\n  entry: './src/index',\n  mode: 'development',\n  devServer: {\n    contentBase: path.join(__dirname, 'dist'),\n    port: 3001,\n  },\n  output: {\n    // assuming we are running in Production\n    publicPath: 'https://federation-app.nodular.co/',\n  },\n  module: {\n    rules: [\n      {\n        test: /bootstrap\\\\.js$/,\n        loader: 'bundle-loader',\n        options: {\n          lazy: true,\n        },\n      },\n      {\n        test: /\\\\.jsx?$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/,\n        options: {\n          presets: ['@babel/preset-react'],\n        },\n      },\n    ],\n  },\n  //http://localhost:3002/remoteEntry.js\n  plugins: [\n    new ModuleFederationPlugin({\n      name: 'app1',\n      remotes: {\n        app2: 'app2@https://federation.nodular.co/remoteEntry.js',\n      },\n      shared: {\n        react: { singleton: true },\n        'react-dom': { singleton: true },\n        'styled-components': { singleton: true },\n      },\n    }),\n    new HtmlWebpackPlugin({\n      template: './public/index.html',\n    }),\n  ],\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"app-two\"\n    }}>{`App Two`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Button.js\nimport React from 'react';\nimport styled from 'styled-components';\n// Define our button, but with the use of props.theme this time\nconst Button = styled.button\\`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  /* Color the border and text with theme.main */\n  color: \\${(props) => props.theme.main};\n  border: 2px solid \\${(props) => props.theme.main};\n\n  &:hover {\n    background-color: \\${(props) => props.theme.main};\n    color: black;\n  }\n\\`;\n// We are passing a default theme for Buttons that arent wrapped in the ThemeProvider\nButton.defaultProps = {\n  theme: {\n    main: 'palevioletred',\n  },\n};\n\nexport default Button;\n\n// Title.js\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h1\\`\n  font-size: 1.5em;\n  text-align: center;\n  color: \\${(props) => props.theme.main};\n\\`;\n\nTitle.defaultProps = {\n  theme: {\n    main: 'black',\n  },\n};\n\nexport default Title;\n\n// Combo.js\nimport React from 'react';\nimport LocalButton from './Button';\nimport LocalTitle from './Title';\n\nconst App = ({ theme }) => (\n  <div>\n    <LocalTitle theme={theme}>Hello, world!</LocalTitle>\n    <LocalButton theme={theme}>Button</LocalButton>\n  </div>\n);\n\nexport default App;\n\n\n// weboack.config.js\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst { ModuleFederationPlugin } = require('webpack').container;\nconst path = require('path');\n\nmodule.exports = {\n  entry: './src/index',\n  mode: 'development',\n  devServer: {\n    contentBase: path.join(__dirname, 'dist'),\n    port: 3002,\n  },\n  output: {\n    // assume we are running in production\n    publicPath: 'https://federation.nodular.co/',\n  },\n  module: {\n    rules: [\n      {\n        test: /\\\\.jsx?$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/,\n        options: {\n          presets: ['@babel/preset-react'],\n        },\n      },\n    ],\n  },\n  plugins: [\n    new ModuleFederationPlugin({\n      name: 'app2',\n      library: { type: 'var', name: 'app2' },\n      filename: 'remoteEntry.js',\n      exposes: {\n        './Button': './src/Button',\n        './Title': './src/Title',\n        './Combo': './src/Combo',\n      },\n      shared: { react: { singleton: true }, 'react-dom': { singleton: true } },\n    }),\n    new HtmlWebpackPlugin({\n      template: './public/index.html',\n    }),\n  ],\n};\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}