(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{iGkD:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return c}));t("1c7q"),t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3"),t("2mQt"),t("mXGw");var o=t("/FXl"),a=t("TjRS");t("aD51");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Electron/Electron-FS.md"}});var s={_frontmatter:i},l=a.a;function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(l,r({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"electron-file-systems"},"Electron File Systems"),Object(o.b)("h2",{id:"resources"},"Resources"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",r({parentName:"li"},{href:"https://github.com/electron/electron/issues/7300"}),"window.require is not a function")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",r({parentName:"li"},{href:"https://www.electronjs.org/docs/api/dialog#dialogshowopendialogbrowserwindow-options"}),"Dialog.showOpenDialog")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",r({parentName:"li"},{href:"https://medium.com/@nornagon/electrons-remote-module-considered-harmful-70d69500f31"}),"Electron's remote module considered harmful"))),Object(o.b)("h2",{id:"tldr"},"tl;dr"),Object(o.b)("p",null,"Warning: the following uses ",Object(o.b)("inlineCode",{parentName:"p"},"remote")," and is now considered harmful. See the ",Object(o.b)("a",r({parentName:"p"},{href:"https://medium.com/@nornagon/electrons-remote-module-considered-harmful-70d69500f31"}),"article"),". Do not use unless you are certain on the why."),Object(o.b)("p",null,"Once the app is up, here is an example app for opening files:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"import React, { useState } from 'react';\nconst fs = window.require('fs');\nconst electron = window.require('electron');\nconst { remote } = electron;\n\nconst App = () => {\n  const [filePath, setFilePath] = useState<string>();\n  const [fileJson, setFileJson] = useState<Record<string, any>>();\n  const [saved, setSaved] = useState<boolean>(false);\n\n  /**\n   * Look for any files called strings.json and grab the\n   * file path, read the data, update the data and set it\n   * to the `fileJson` variable.\n   *\n   */\n  const handleFileSelect = async () => {\n    const res = await remote.dialog.showOpenDialog({\n      properties: ['openFile'],\n      filters: [{ name: 'Base i18n file', extensions: ['strings.json'] }],\n    });\n\n    const [jsonPath] = res.filePaths;\n    if (jsonPath) {\n      const data = JSON.parse(fs.readFileSync(jsonPath, 'utf-8'));\n      setFilePath(jsonPath);\n      data.third = 'here';\n\n      setFileJson(data);\n    }\n  };\n\n  /**\n   * Write the file back and set the saved flag.\n   *\n   */\n  const handleSaveFile = () => {\n    if (filePath) {\n      fs.writeFileSync(filePath, JSON.stringify(fileJson), 'utf-8');\n      setSaved(true);\n    }\n  };\n\n  return (\n    <div>\n      {saved && <p>File saved!</p>}\n      <p>Open + save file</p>\n      <div>\n        <button onClick={handleFileSelect}>Open file</button>\n        <button onClick={handleSaveFile}>Save file</button>\n      </div>\n      <p>{JSON.stringify(fileJson)}</p>\n    </div>\n  );\n};\nexport default App;\n")),Object(o.b)("h2",{id:"debugging-notes"},"Debugging notes"),Object(o.b)("p",null,"As for debugging, if you get ",Object(o.b)("inlineCode",{parentName:"p"},"window.require is not a function"),", then head to your Electron config file and update the ",Object(o.b)("inlineCode",{parentName:"p"},"BrowserWindow")," config to include the web preferences:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"mainWindow = new BrowserWindow({\n  width: 900,\n  height: 680,\n  webPreferences: {\n    nodeIntegration: true,\n  },\n});\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Electron/Electron-FS.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-electron-electron-fs-md-0af49501d0e2b3ec6d2b.js.map