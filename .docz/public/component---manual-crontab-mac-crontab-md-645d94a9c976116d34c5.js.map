{"version":3,"sources":["webpack:///../manual/Crontab/Mac-Crontab.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,+MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,uDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eADZ,iBAIL,4CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,uMAWL,sEAAqD,0BAAYA,WAAW,KAAvB,iDAArD,KACA,gDAA+B,0BAAYA,WAAW,KAAvB,cAA/B,M,sMAKJJ,EAAWK,gBAAiB","file":"component---manual-crontab-mac-crontab-md-645d94a9c976116d34c5.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"mac-crontab\"\n    }}>{`Mac Crontab`}</h1>\n    <p>{`Open Vim to add your cronjobs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`crontab -e\n`}</code></pre>\n    <p>{`Setting the format:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`* * * * * command\n* - minute (0-59)\n* - hour (0-23)\n* - day of the month (1-31)\n* - month (1-12)\n* - day of the week (0-6, 0 is Sunday)\ncommand - command to execute\n(from left-to-right)\n`}</code></pre>\n    <p>{`Then in Vim, you can write an expression like `}<inlineCode parentName=\"p\">{`0,15,30,45 * * * * cd ~/.scripts && ./work.sh`}</inlineCode>{`.`}</p>\n    <p>{`To see active jobs, run `}<inlineCode parentName=\"p\">{`crontab -l`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}