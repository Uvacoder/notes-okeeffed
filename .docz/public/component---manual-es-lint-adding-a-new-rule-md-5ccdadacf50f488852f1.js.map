{"version":3,"sources":["webpack:///../manual/ESLint/Adding-a-new-rule.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,0BADR,0BAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6BADQ,iBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+DADQ,gBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uGADQ,4BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8DADQ,qBAItB,iBAAQ,CACN,GAAM,SADR,SAGA,qFAAoE,0BAAYA,WAAW,KAAvB,gBAApE,2BAAwJ,0BAAYA,WAAW,KAAvB,UAAxJ,uBACA,8CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4IAOL,iBAAQ,CACN,GAAM,wBADR,wBAGA,iFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,sxBAiCL,iBAAQ,CACN,GAAM,kCADR,kCAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,0IAQL,kCAAiB,0BAAYA,WAAW,KAAvB,gBAAjB,uBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mHASL,kCAAiB,0BAAYA,WAAW,KAAvB,YAAjB,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iIAUL,kCAAiB,0BAAYA,WAAW,KAAvB,0BAAjB,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,41CAyDL,iBAAQ,CACN,GAAM,iBADR,iBAGA,8BACE,iBAAGA,WAAW,cAAd,8JAEF,0CAAyB,0BAAYA,WAAW,KAAvB,aAAzB,2BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6JAYL,sDAAqC,0BAAYA,WAAW,KAAvB,0BAArC,SAAiH,0BAAYA,WAAW,KAAvB,eAAjH,KACA,4BAAW,0BAAYA,WAAW,KAAvB,iCAAX,M,2MAKJJ,EAAWK,gBAAiB","file":"component---manual-es-lint-adding-a-new-rule-md-5ccdadacf50f488852f1.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adding-a-new-lint-rule\"\n    }}>{`Adding a new lint rule`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://astexplorer.net/\"\n        }}>{`AST Explorer`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://eslint.org/docs/developer-guide/working-with-rules\"\n        }}>{`ESLint Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://create-react-app.dev/docs/setting-up-your-editor/#experimental-extending-the-eslint-config\"\n        }}>{`Extending ESLint Config`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://create-react-app.dev/docs/advanced-configuration/\"\n        }}>{`Advanced Config`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"intro\"\n    }}>{`Intro`}</h2>\n    <p>{`The best way to do this is to jump onto AST Explorer and set `}<inlineCode parentName=\"p\">{`babel-eslint`}</inlineCode>{` for the Parser and use `}<inlineCode parentName=\"p\">{`ESLint`}</inlineCode>{` for the transform.`}</p>\n    <p>{`Add the following in:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import AnotherPackage from 'ratchet';\nimport _ from 'lodash';\nimport LastPackage from 'last-package';\nconst _ = require('lodash');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-replace-function\"\n    }}>{`The replace function`}</h2>\n    <p>{`With the above code, let's block Lodash from being used:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default function(context) {\n  return {\n    ImportDeclaration(node) {\n      if (node.source.value === 'lodash') {\n        context.report({\n          node,\n          message: 'Do not use Lodash',\n          fix: function(fixer) {\n            return fixer.replaceText(node, '');\n          },\n        });\n      }\n    },\n    CallExpression(node) {\n      if (\n        node.callee.name === 'require' &&\n        node.arguments.some(arg => arg.value === 'lodash')\n      ) {\n        context.report({\n          node,\n          message: 'Do not use Lodash',\n          fix: function(fixer) {\n            // node.parent.parent to replace the entire line\n            return fixer.replaceText(node.parent.parent, '');\n          },\n        });\n      }\n    },\n  };\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"within-the-actual-rule-package\"\n    }}>{`Within the actual rule package`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`mkdir eslint-plugin-no-lodash\ncd eslint-plugin-no-lodash\nyarn init -y\nmkdir lib lib/rules\ntouch index.js lib/rules/no-lodash.js\n`}</code></pre>\n    <p>{`Make sure `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` has the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"eslint-plugin-no-lodash\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\"\n}\n`}</code></pre>\n    <p>{`Inside of `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const noLodash = require('./lib/rules/no-lodash');\n\nmodule.exports = {\n  rules: {\n    'no-lodash': noLodash,\n  },\n};\n`}</code></pre>\n    <p>{`Inside of `}<inlineCode parentName=\"p\">{`lib/rules/no-lodash.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/**\n * @fileoverview Rule to disallow Lodash\n * @author Dennis O'Keeffe\n */\n\n'use strict';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n\n    docs: {\n      description: 'disallow Lodash',\n      category: 'Possible Errors',\n      recommended: true,\n    },\n    fixable: 'code',\n    schema: [], // no options\n  },\n  create: function(context) {\n    return {\n      ImportDeclaration(node) {\n        if (node.source.value === 'lodash') {\n          context.report({\n            node,\n            message: 'Do not use Lodash',\n            fix: function(fixer) {\n              return fixer.replaceText(node, '');\n            },\n          });\n        }\n      },\n      CallExpression(node) {\n        if (\n          node.callee.name === 'require' &&\n          node.arguments.some(arg => arg.value === 'lodash')\n        ) {\n          context.report({\n            node,\n            message: 'Do not use Lodash',\n            fix: function(fixer) {\n              // node.parent.parent to replace the entire line\n              return fixer.replaceText(node.parent.parent, '');\n            },\n          });\n        }\n      },\n    };\n  },\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-to-cra\"\n    }}>{`Adding to CRA`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`When set to true, user provided ESLint configs will be used by eslint-loader. Note that any rules set to \"error\" will stop the application from building.`}</p>\n    </blockquote>\n    <p>{`In a CRA app, add `}<inlineCode parentName=\"p\">{`.eslintrc`}</inlineCode>{` and add the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"eslintConfig\": {\n    \"extends\": \"react-app\",\n    \"rules\": {\n      \"no-lodash/no-lodash\": \"warn\"\n    },\n    \"plugins\": [\"no-lodash\"]\n  }\n}\n`}</code></pre>\n    <p>{`Finally, to test the rule add `}<inlineCode parentName=\"p\">{`import _ from 'lodash'`}</inlineCode>{` into `}<inlineCode parentName=\"p\">{`src/app.jsx`}</inlineCode>{`.`}</p>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`EXTEND_ESLINT=true yarn start`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}