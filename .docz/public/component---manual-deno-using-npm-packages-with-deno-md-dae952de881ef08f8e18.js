(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{EHpv:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return l}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt"),n("mXGw");var a=n("/FXl"),i=n("TjRS");n("aD51");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Deno/Using-NPM-Packages-With-Deno.md"}});var c={_frontmatter:o},s=i.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,["components"]);return Object(a.b)(s,r({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"using-npm-packages-with-deno"},"Using NPM Packages with Deno"),Object(a.b)("h2",{id:"resources"},"Resources"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",r({parentName:"li"},{href:"https://www.pika.dev/"}),"Pika")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",r({parentName:"li"},{href:"https://deno.land/"}),"Deno"))),Object(a.b)("h2",{id:"example-with-xstate"},"Example with XState"),Object(a.b)("p",null,"Head to ",Object(a.b)("a",r({parentName:"p"},{href:"https://pika.dev"}),"Pika")," and search for your package. If it supports ES modules, you may be in luck!"),Object(a.b)("p",null,"Here is an example with XState:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-ts"}),"import { Machine, interpret } from 'https://cdn.skypack.dev/xstate';\n\ntype State = {\n  value: string;\n};\n\n// Stateless machine definition\n// machine.transition(...) is a pure function used by the interpreter.\nconst toggleMachine = Machine({\n  id: 'toggle',\n  initial: 'inactive',\n  states: {\n    inactive: { on: { TOGGLE: 'active' } },\n    active: { on: { TOGGLE: 'inactive' } },\n  },\n});\n\n// Machine instance with internal state\nconst toggleService = interpret(toggleMachine)\n  .onTransition((state: State) => console.log(state.value))\n  .start();\n// => 'inactive'\n\ntoggleService.send('TOGGLE');\n// => 'active'\n\ntoggleService.send('TOGGLE');\n// => 'inactive'\n")))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Deno/Using-NPM-Packages-With-Deno.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-deno-using-npm-packages-with-deno-md-dae952de881ef08f8e18.js.map