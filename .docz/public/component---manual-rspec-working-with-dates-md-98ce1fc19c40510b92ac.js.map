{"version":3,"sources":["webpack:///../manual/Rspec/Working-With-Dates.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oFADQ,wCAItB,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6ZAiBL,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iL,2MAUTJ,EAAWK,gBAAiB","file":"component---manual-rspec-working-with-dates-md-98ce1fc19c40510b92ac.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"working-with-dates\"\n    }}>{`Working with dates`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://blog.coingecko.com/working-with-dates-and-times-in-rails-rspec-testing/\"\n        }}>{`RSpec working with dates and times`}</a></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`let!(:item) { Item.create(:item, name: \"Bean\", expiration_date: Time.current) }\n\ndescribed \"#expired?\" do\n  it \"return false when item is yet to be expired\" do\n    travel_to(Time.current - 5.day) do\n      expect(item.expired?).to eq(false)\n    end\n  end\n  it \"return true when item is expired\" do\n    travel_to(Time.current + 5.day) do\n      expect(item.expired?).to eq(true)\n    end\n  end\nend\n`}</code></pre>\n    <p>{`You can also use a specific date:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`Time.current     # => Sat, 10 Nov 2010 00:00:00 EST -05:00\ntravel_to Time.zone.local(2020, 10, 1, 00, 00, 00)\nTime.current     # => Wed, 1 Oct 2020 00:00:00 EST -05:00\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}