{"version":3,"sources":["webpack:///../manual/Unix/Redirection.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,yBADR,yBAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6FADQ,2DAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8CADQ,qBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6JADQ,uDAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8DADQ,6BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8DADQ,8BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gGADQ,4DAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kEADQ,mDAItB,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,wdA4BL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,2CAML,iBAAQ,CACN,GAAM,kBADR,kBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,uhBAgCL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,uD,mMAUTJ,EAAWK,gBAAiB","file":"component---manual-unix-redirection-md-8aecc47af6b444a46928.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"unix-redirection-in-c\"\n    }}>{`Unix Redirection in C`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.amazon.com.au/Computer-Systems-Programmers-Perspective-Global/dp/1292101768/\"\n        }}>{`Computer Systems A Programmer's Perspective - Page 944`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://linuxhint.com/dup2_system_call_c/\"\n        }}>{`dup2 System Call`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackoverflow.com/questions/584142/what-is-the-difference-between-read-and-fread#:~:text=read()%20is%20a%20low,order%20to%20fill%20its%20buffer.\"\n        }}>{`Stack Overflow - difference between read and fread`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/unix_system_calls/read.htm\"\n        }}>{`Unix System Calls - read`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.acodersjourney.com/top-20-c-pointer-mistakes/\"\n        }}>{`Top 20 C Pointer Mistakes`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackoverflow.com/questions/3377659/reading-in-a-file-and-getting-the-string-length\"\n        }}>{`Stack Overflow - Reading file and getting string length`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.cs.loyola.edu/~jglenn/702/S2005/Examples/dup2.html\"\n        }}>{`CS 702 Operating Systems - redirect and pipes`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"first-example\"\n    }}>{`First example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`#include <unistd.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <fcntl.h>\n\nint main() {\n  int fd1, fd2;\n  char c;\n\n  fd1 = open(\"foobar.txt\", O_RDONLY);\n  fd2 = open(\"foobar.txt\", O_RDONLY);\n  read(fd2, &c, 1);\n  read(fd2, &c, 1);\n  read(fd2, &c, 1);\n  read(fd2, &c, 1);\n  printf(\"c = %c\\\\n\", c);\n\n  //read(fd2, &c, 1);\n  // dup2(fd2, fd1);\n  read(fd1, &c, 1);\n  dup2(fd1, fd2);\n  read(fd2, &c, 1);\n  printf(\"c = %c\\\\n\", c);\n  exit(0);\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`> gcc one.c && ./a.out\nc = b\nc = o\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"second-example\"\n    }}>{`Second example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`#include <unistd.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <fcntl.h>\n\n#define STR_LEN 6\n\nint main() {\n  int fd1;\n\n\n  fd1 = open(\"foobar.txt\", O_RDONLY);\n  if (dup2(fd1, STDIN_FILENO) < 0) {\n    printf(\"Unable to duplicate file descriptor.\");\n    exit(EXIT_FAILURE);\n  }\n\n  char *c1 = (char*)malloc(STR_LEN);\n  char *c2 = (char*)malloc(STR_LEN);\n\n  scanf(\"%s %s\", c1, c2);\n  printf(\"c1 = %s\\\\nc2 = %s\\\\n\", c1, c2);\n\n  // SAVE THE WHALES, FREE THE MALLOCS\n  free(c1);\n  free(c2);\n\n  exit(0);\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`> gcc three.c&& ./a.out\nc1 = foobar\nc2 = test\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}