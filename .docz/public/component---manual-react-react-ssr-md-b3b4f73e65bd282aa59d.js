(window.webpackJsonp=window.webpackJsonp||[]).push([[552],{kyqa:function(e,n,r){"use strict";r.r(n),r.d(n,"_frontmatter",(function(){return o})),r.d(n,"default",(function(){return l}));r("1c7q"),r("abGl"),r("gZHo"),r("Fdmb"),r("Ir+3"),r("2mQt"),r("mXGw");var t=r("/FXl"),a=r("TjRS");r("aD51");function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/React/React-SSR.md"}});var p={_frontmatter:o},c=a.a;function l(e){var n=e.components,r=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,["components"]);return Object(t.b)(c,s({},p,r,{components:n,mdxType:"MDXLayout"}),Object(t.b)("h1",{id:"resources"},"Resources"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},Object(t.b)("a",s({parentName:"li"},{href:"https://www.digitalocean.com/community/tutorials/react-server-side-rendering"}),"Digital Ocean article"))),Object(t.b)("h2",{id:"create-react-app"},"Create React App"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-s"}),"npx create-react-app example\n")),Object(t.b)("h2",{id:"update-reactdom"},"Update ReactDOM"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.hydrate(<App />, document.getElementById('root'));\n")),Object(t.b)("h2",{id:"update-the-express-server"},"Update the Express server"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-js"}),"import path from 'path';\nimport fs from 'fs';\n\nimport React from 'react';\nimport express from 'express';\nimport ReactDOMServer from 'react-dom/server';\nimport App from '../src/App';\n\napp.get('/', (req, res) => {\n  const app = ReactDOMServer.renderToString(<App />);\n\n  const indexFile = path.resolve('./build/index.html');\n  fs.readFile(indexFile, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Something went wrong:', err);\n      return res.status(500).send('Oops, better luck next time!');\n    }\n\n    return res.send(\n      data.replace('<div id=\"root\"></div>', `<div id=\"root\">${app}</div>`),\n    );\n  });\n});\n\napp.use(express.static('./build'));\n\nconst PORT = process.env.PORT || 3006;\nconst app = express();\n\napp.get('/', (req, res) => {\n  const app = ReactDOMServer.renderToString(<App />);\n\n  const indexFile = path.resolve('./build/index.html');\n  fs.readFile(indexFile, 'utf8', (err, data) => {\n    if (err) {\n      console.error('Something went wrong:', err);\n      return res.status(500).send('Oops, better luck next time!');\n    }\n\n    return res.send(\n      data.replace('<div id=\"root\"></div>', `<div id=\"root\">${app}</div>`),\n    );\n  });\n});\n\napp.use(express.static('./build'));\n\napp.listen(PORT, () => {\n  console.log(`Server is listening on port ${PORT}`);\n});\n")),Object(t.b)("h2",{id:"create-webpack-server-config"},"Create Webpack Server config"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-s"}),"npm install webpack-node-externals --save-dev\n# For the style loaders\nnpm install css-loader style-loader --save-dev\n")),Object(t.b)("h2",{id:"babelrcjson"},".babelrc.json"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-json"}),'{\n  "presets": ["@babel/preset-env", "@babel/preset-react"]\n}\n')),Object(t.b)("h2",{id:"webpackserverjs"},"webpack.server.js"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-js"}),"const path = require('path');\nconst nodeExternals = require('webpack-node-externals');\n\nmodule.exports = {\n  entry: './server/index.js',\n\n  target: 'node',\n\n  externals: [nodeExternals()],\n\n  output: {\n    path: path.resolve('server-build'),\n    filename: 'index.js',\n  },\n\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: 'babel-loader',\n      },\n    ],\n  },\n};\n")),Object(t.b)("h2",{id:"update-packagejson"},"Update package.json"),Object(t.b)("pre",null,Object(t.b)("code",s({parentName:"pre"},{className:"language-json"}),'"scripts": {\n  "dev:build-server": "NODE_ENV=development webpack --config webpack.server.js --mode=development -w",\n  "dev:start": "nodemon ./server-build/index.js",\n  "dev": "npm-run-all --parallel build dev:*"\n},\n')))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/React/React-SSR.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-react-react-ssr-md-b3b4f73e65bd282aa59d.js.map