{"version":3,"sources":["webpack:///../manual/Ruby-On-Rails/Rails-API-From-Scratch.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,gOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,0BADR,0BAGA,iBAAQ,CACN,GAAM,wBADR,wBAGA,oFACA,4CACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eADZ,iCAIL,iBAAQ,CACN,GAAM,uBADR,uBAGA,4HACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qKAYL,iBAAQ,CACN,GAAM,wBADR,wBAGA,iFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,sPAQL,iBAAQ,CACN,GAAM,8BADR,8BAGA,sDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yhBAgCL,iBAAQ,CACN,GAAM,yBADR,yBAGA,6EACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,ySAaL,iBAAQ,CACN,GAAM,4BADR,4BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,sFAKL,6CAA4B,0BAAYA,WAAW,KAAvB,gBAA5B,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uCAIL,iBAAQ,CACN,GAAM,mBADR,mBAGA,oCAAmB,0BAAYA,WAAW,KAAvB,gCAAnB,aAAyG,0BAAYA,WAAW,KAAvB,gBAAzG,gCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,wFAKL,iEAAgD,0BAAYA,WAAW,KAAvB,iBAAhD,sD,uNAKJJ,EAAWK,gBAAiB","file":"component---manual-ruby-on-rails-rails-api-from-scratch-md-d682b0b8b177aea95d2c.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rails-api-from-scratch\"\n    }}>{`Rails API From Scratch`}</h1>\n    <h2 {...{\n      \"id\": \"new-api-from-the-cli\"\n    }}>{`New API from the CLI`}</h2>\n    <p>{`In this particular case, we will be creating a UI in React.`}</p>\n    <p>{`Creating a new API:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`rails new <api-name> --api\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-gems\"\n    }}>{`Setting up the gems`}</h2>\n    <p>{`Afterwards, you will want to add some CORS control for Rack and some other gems to prep for Heroku:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`gem 'rack-cors', :require => 'rack/cors'\n\ngroup :development, :test do\n  # Moe sqlite3 to here\n  gem 'sqlite3'\nend\ngroup :production do\n  gem 'pg'\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"creating-your-models\"\n    }}>{`Creating your models`}</h2>\n    <p>{`The following code is an example of creating some Todos.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`# rails g model <EntitySingular> [...attribute:type]\nrails generate model Todo title:string done:boolean\n# rails g controller <EntityPlural> [...crud methods]\nrails generate controller Todos index create update destroy\nrails db:migrate\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-your-controller\"\n    }}>{`Setting up your controller`}</h2>\n    <p>{`Update the controller values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`class TodosController < ApplicationController\n  def index\n    todos = Todo.order(\"created_at DESC\")\n    render json: todos\n  end\n\n  def create\n    todo = Todo.create(todo_param)\n    render json: todo\n  end\n\n  def update\n    todo = Todo.find(params[:id])\n    todo.update(todo_param)\n    render json: todo\n  end\n\n  def destroy\n    todo = Todo.find(params[:id])\n    todo.destroy\n    head :no_content, status: :ok\n  end\n\n  private\n\n  def todo_param\n    params.require(:todo).permit(:title, :done)\n  end\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rescopeing-the-routes\"\n    }}>{`Rescopeing the routes`}</h2>\n    <p>{`We want to change our resources to be available from`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`Rails.application.routes.draw do\n  # get 'todos/index'\n  # get 'todos/create'\n  # get 'todos/update'\n  # get 'todos/destroy'\n  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html\n  scope \"/api/v1\" do\n    resources :todos\n  end\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ui-with-create-react-app\"\n    }}>{`UI with Create React App`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`npm install create-react-app\ncreate-react-app <app-name> --template=typescript\n`}</code></pre>\n    <p>{`Set a proxy value in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` so that we know where the localhost calls will go to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"proxy\": \"http://localhost:3000\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-locally\"\n    }}>{`Running locally`}</h2>\n    <p>{`You can use `}<inlineCode parentName=\"p\">{`heroku local -f Procfile.dev`}</inlineCode>{` with the `}<inlineCode parentName=\"p\">{`Procfile.dev`}</inlineCode>{` looking like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`web: cd todo-ui && PORT=4000 npm start\napi: cd todo-api && PORT=3000 bin/rails s\n`}</code></pre>\n    <p>{`Run and begin calling the routes like so `}<inlineCode parentName=\"p\">{`/api/v1/todos`}</inlineCode>{` and you will start getting some results! Hooray!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}