{"version":3,"sources":["webpack:///../manual/Elm/Elm-Architecture.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,0EACA,wDAAuC,0BAAYC,WAAW,KAAvB,SAAvC,KAA8F,0BAAYA,WAAW,KAAvB,UAA9F,QAAyJ,0BAAYA,WAAW,KAAvB,QAAzJ,mCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,w5CAiFL,iBAAQ,CACN,GAAM,gBADR,gBAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yDADQ,mDAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wCADQ,sCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6CADQ,uB,uMAQ1BJ,EAAWK,gBAAiB","file":"component---manual-elm-elm-architecture-md-b720cc78c5eb9047206e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"elm-architecture\"\n    }}>{`Elm Architecture`}</h1>\n    <h2 {...{\n      \"id\": \"form-example\"\n    }}>{`Form Example`}</h2>\n    <p>{`This example gives an idea of the general layout.`}</p>\n    <p>{`It is important to note how the `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Update`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`View`}</inlineCode>{` within the example code works.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`import Browser\nimport Html exposing (..)\nimport Html.Attributes exposing (..)\nimport Html.Events exposing (onInput)\n\n\n\n-- MAIN\n\n\nmain =\n  Browser.sandbox { init = init, update = update, view = view }\n\n\n\n-- MODEL\n\n\ntype alias Model =\n  { name : String\n  , password : String\n  , passwordAgain : String\n  }\n\n\ninit : Model\ninit =\n  Model \"\" \"\" \"\"\n\n\n\n-- UPDATE\n\n\ntype Msg\n  = Name String\n  | Password String\n  | PasswordAgain String\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    Name name ->\n      { model | name = name }\n\n    Password password ->\n      { model | password = password }\n\n    PasswordAgain password ->\n      { model | passwordAgain = password }\n\n\n\n-- VIEW\n\n\nview : Model -> Html Msg\nview model =\n  div []\n    [ viewInput \"text\" \"Name\" model.name Name\n    , viewInput \"password\" \"Password\" model.password Password\n    , viewInput \"password\" \"Re-enter Password\" model.passwordAgain PasswordAgain\n    , viewValidation model\n    ]\n\n\nviewInput : String -> String -> String -> (String -> msg) -> Html msg\nviewInput t p v toMsg =\n  input [ type_ t, placeholder p, value v, onInput toMsg ] []\n\n\nviewValidation : Model -> Html msg\nviewValidation model =\n  if model.password == model.passwordAgain then\n    div [ style \"color\" \"green\" ] [ text \"OK\" ]\n  else\n    div [ style \"color\" \"red\" ] [ text \"Passwords do not match!\" ]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"useful-links\"\n    }}>{`Useful links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://guide.elm-lang.org/architecture/buttons.html\"\n        }}>{`Example and Insight into the Model-Update-View`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://ellie-app.com/37gWB93n8jJa1\"\n        }}>{`An online sandbox example for Elm`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://elmprogramming.com/function.html\"\n        }}>{`Functions in Elm`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}