{"version":3,"sources":["webpack:///../manual/CSS/Flexbox-Help-Sheet.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,iCACA,qBAAG,mBAAGC,WAAW,KAAQ,CACrB,KAAQ,4DADT,eAGH,iBAAQ,CACN,GAAM,eADR,eAGA,iBAAQ,CACN,GAAM,yBADR,2BAGA,kDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,geAYL,iBAAQ,CACN,GAAM,oBADR,sBAGA,iDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wUAWL,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6jB,yMAgCTJ,EAAWK,gBAAiB","file":"component---manual-css-flexbox-help-sheet-md-95ba57a59c893012ad14.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"flexbox-help-sheet\"\n    }}>{`Flexbox Help Sheet`}</h1>\n    <p>{`Sources:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\"\n      }}>{`CSS Tricks`}</a></p>\n    <h2 {...{\n      \"id\": \"terminology\"\n    }}>{`Terminology`}</h2>\n    <h4 {...{\n      \"id\": \"flex-container-parent\"\n    }}>{`Flex Container (parent)`}</h4>\n    <p>{`Properties of the parent:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.container {\n  display: flex; /* or inline-flex */\n  flex-direction: row | row-reverse | column | column-reverse;\n  flex-wrap: nowrap | wrap | wrap-reverse;\n  flex-flow: <‘flex-direction’> || <‘flex-wrap’>; //shorthand code\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n  align-items: flex-start | flex-end | center | baseline | stretch;\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"flex-items-child\"\n    }}>{`Flex Items (child)`}</h4>\n    <p>{`Properties of the child:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.item {\n    order: <integer>;\n    flex-grow: <number>; /* default 0 */\n    flex-shrink: <number>; /* default 1 */\n    flex-basis: <length> | auto; /* default auto */\n    flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ];\n    align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.parent {\n  display: flex;\n  height: 300px; /* Or whatever */\n}\n\n.child {\n  width: 100px;  /* Or whatever */\n  height: 100px; /* Or whatever */\n  margin: auto;  /* Magic! */\n}\n\n.flex-container {\n  /* We first create a flex layout context */\n  display: flex;\n\n  /* Then we define the flow direction and if we allow the items to wrap\n   * Remember this is the same as:\n   * flex-direction: row;\n   * flex-wrap: wrap;\n   */\n  flex-flow: row wrap;\n\n  /* Then we define how is distributed the remaining space */\n  justify-content: space-around;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}