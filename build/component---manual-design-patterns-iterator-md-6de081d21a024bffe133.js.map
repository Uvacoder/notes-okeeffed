{"version":3,"sources":["webpack:///../manual/Design-Patterns/Iterator.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAGA,iMACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIC,WAAW,MAAf,oDAAyE,0BAAYA,WAAW,MAAvB,QAAzE,QAAmI,0BAAYA,WAAW,MAAvB,WAAnI,kBACA,kBAAIA,WAAW,MAAf,kGAEF,iBAAQ,CACN,GAAM,WADR,WAGA,sEAAqD,0BAAYA,WAAW,KAAvB,sBAArD,QAA4H,0BAAYA,WAAW,KAAvB,oBAA5H,iCAA0N,0BAAYA,WAAW,KAAvB,YAA1N,0BACA,4EAA2D,0BAAYA,WAAW,KAAvB,kBAA3D,uEAA6L,0BAAYA,WAAW,KAAvB,YAA7L,oFACA,yCAAwB,0BAAYA,WAAW,KAAvB,UAAxB,+DACA,oDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,ulEA4EL,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mDADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uEADQ,sB,2MAQ1BJ,EAAWK,gBAAiB","file":"component---manual-design-patterns-iterator-md-6de081d21a024bffe133.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"iterator\"\n    }}>{`Iterator`}</h1>\n    <p>{`A behavioural pattern that is used to access the elements of a collection object in sequential manner without a required understanding of the underlying representation.`}</p>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`ConcreteIterator: An interface to define how the `}<inlineCode parentName=\"li\">{`next`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`hasNext`}</inlineCode>{` methods work.`}</li>\n      <li parentName=\"ul\">{`ConcreteCollection: A collection that has knowledge of the iterator and creates the iterator.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`In this basic example below, we will create a `}<inlineCode parentName=\"p\">{`ConcreteCollection`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ConcreteIterator`}</inlineCode>{` class to demonstrate how the `}<inlineCode parentName=\"p\">{`Iterator`}</inlineCode>{` design pattern works.`}</p>\n    <p>{`Note that after create a collection, we can use the `}<inlineCode parentName=\"p\">{`createIterator`}</inlineCode>{` method as many times as we want to return seperate instances of an `}<inlineCode parentName=\"p\">{`iterator`}</inlineCode>{` - for demonstration purposes, we will create a second iterator to do just that.`}</p>\n    <p>{`The last part of `}<inlineCode parentName=\"p\">{`\"main\"`}</inlineCode>{` will demo what happens when you intertwine iterator calls.`}</p>\n    <p>{`Check the logs for results.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface Iterator<T> {\n  next(): T;\n  hasNext(): boolean;\n}\n\ninterface Collection {\n  createIterator(): Iterator<Number>;\n}\n\nclass ConcreteIterator implements Iterator<Number> {\n  private _collection: Number[];\n  private _index: number = 0;\n\n  constructor(newCollection: Number[]) {\n    this._collection = newCollection;\n  }\n\n  next(): any {\n    const result = this._collection[this._index];\n    this.log();\n    this._index += 1;\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this._index < this._collection.length;\n  }\n\n  private log(): void {\n    console.log(\\`Method called during index: \\${this._collection[this._index]}\\`);\n  }\n}\n\nclass ConcreteCollection implements Collection {\n  private _collection: Number[] = [];\n\n  constructor(collection: Number[]) {\n    this._collection = collection;\n  }\n\n  createIterator(): Iterator<Number> {\n    return new ConcreteIterator(this._collection);\n  }\n}\n\n(function main() {\n  const collection: ConcreteCollection = new ConcreteCollection([0, 1, 2, 3]);\n  const iterator: Iterator<Number> = collection.createIterator();\n  const secondIterator: Iterator<Number> = collection.createIterator();\n\n  while (iterator.hasNext()) {\n    const number: Number = iterator.next();\n    console.log(\\`Logging: \\${number.valueOf()}\\`);\n  }\n\n  while (secondIterator.hasNext()) {\n    const number: Number = secondIterator.next();\n    console.log(\\`Second Iterator Logging: \\${number.valueOf()}\\`);\n  }\n\n  // third and fourth iterators intertwined\n  const thirdIterator: Iterator<Number> = collection.createIterator();\n  const fourthIterator: Iterator<Number> = collection.createIterator();\n\n  console.log('thirdIterator', thirdIterator.next());\n  console.log('thirdIterator', thirdIterator.next());\n  console.log('thirdIterator', thirdIterator.next());\n  console.log('fourIterator', fourthIterator.next());\n  console.log('fourIterator', fourthIterator.next());\n  console.log('fourIterator', fourthIterator.next());\n  console.log('fourIterator', fourthIterator.next());\n  console.log('thirdIterator', thirdIterator.next());\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Iterator_pattern\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/design_pattern/iterator_pattern.htm\"\n        }}>{`Tutorials Point`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}