{"version":3,"sources":["webpack:///../manual/JavaScript/Sinon-JS.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,+MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,qBADR,qBAMA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,cADQ,YAEC,kBAAIA,WAAW,MAChC,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uBADQ,sBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mBADQ,qBAQ1B,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,otC,sMAmDTJ,EAAWK,gBAAiB","file":"component---manual-java-script-sinon-js-md-8b9b1aad1bef4cf08d92.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sinon-js\"\n    }}>{`Sinon JS`}</h1>\n    <h2 {...{\n      \"id\": \"table-of-contents\"\n    }}>{`Table of contents`}</h2>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#sinon-js\"\n        }}>{`Sinon JS`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#table-of-contents\"\n            }}>{`Table of contents`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#basic-example\"\n            }}>{`Basic example`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// form/index.js\nimport { create } from 'apisauce';\n\nexport const api =\n    process.env.NODE_ENV === 'production'\n        ? create({\n              baseURL: 'http://',\n              headers: {\n                  Accept: 'application/vnd.github.v3+json'\n              }\n          })\n        : create({\n              baseURL: 'http://localhost:4444',\n              headers: {\n                  'Content-Type': 'application/json'\n              }\n          });\n\nexport default class Form {\n    static submit = async (values) => {\n        // ! This is what I am targeting\n        const res = await api.post('/form', values);\n        return res;\n    };\n}\n\n// form/form.mocha.js\nimport form, { api } from './index';\nimport sinon from 'sinon';\n\ndescribe('#submit()', function() {\n    it('should return 201', (done) => {\n        (async () => {\n            // ! We'll stub api.post so a request is not sent\n            var post = sinon.stub(api, 'post');\n            post.onCall(0).returns({ ok: true, status: 201 });\n\n            const res = await form.submit({ test: true });\n            post.restore();\n            expect(res.status).to.equal(201);\n            done();\n        })();\n    });\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}