{"version":3,"sources":["webpack:///../manual/Ruby/Ruby-Cheat-Sheet.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,uDAQL,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wMAeL,iBAAQ,CACN,GAAM,UADR,UAGA,wDAAuC,mBAAGA,WAAW,KAAQ,CACzD,KAAQ,+CAD2B,sBAAvC,KAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2WAWL,iBAAQ,CACN,GAAM,sBADR,sBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,oLAWL,iBAAQ,CACN,GAAM,oDADR,oDAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,4JAML,iBAAQ,CACN,GAAM,kBADR,kBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uF,wMASTJ,EAAWK,gBAAiB","file":"component---manual-ruby-ruby-cheat-sheet-md-d80c7f07846b1b6adc67.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ruby-cheat-sheet\"\n    }}>{`Ruby Cheat Sheet`}</h1>\n    <h2 {...{\n      \"id\": \"loops\"\n    }}>{`Loops`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`i = 0\nwhile i < 5 do\n   puts i\n   i += 1\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"classes\"\n    }}>{`Classes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`#!/usr/bin/ruby\n\nclass Sample\n   def hello\n      helloWorld = \"Hello, World!\"\n      helloWorld\n   end\nend\n\n# Now using above class to create objects\nobject = Sample. new\nobject.hello\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"arrays\"\n    }}>{`Arrays`}</h2>\n    <p>{`A great resource for seeing the `}<a parentName=\"p\" {...{\n        \"href\": \"https://ruby-doc.org/core-2.5.0/Array.html\"\n      }}>{`Ruby Array methods`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`ary = [1, \"two\", 3.0] #=> [1, \"two\", 3.0]\nary = Array.new    #=> []\nArray.new(3)       #=> [nil, nil, nil]\nArray.new(3, true) #=> [true, true, true]\nArray.new(4) { Hash.new }  #=> [{}, {}, {}, {}]\nArray.new(4) {|i| i.to_s } #=> [\"0\", \"1\", \"2\", \"3\"]\nempty_table = Array.new(3) { Array.new(3) }\n# => [[nil, nil, nil], [nil, nil, nil], [nil, nil, nil]]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"accessing-elements\"\n    }}>{`Accessing Elements`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`arr = [1, 2, 3, 4, 5, 6]\narr[2]    #=> 3\narr[100]  #=> nil\narr[-3]   #=> 4\narr[2, 3] #=> [3, 4, 5]\narr[1..4] #=> [2, 3, 4, 5]\narr[1..-3] #=> [2, 3, 4]\narr.at(0) #=> 1\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"accessing-with-an-error-thrown-for-out-of-bounds\"\n    }}>{`Accessing with an error thrown for out of bounds`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`arr = ['a', 'b', 'c', 'd', 'e', 'f']\narr.fetch(100) #=> IndexError: index 100 outside of array bounds: -6...6\narr.fetch(100, \"oops\") #=> \"oops\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"string-methods\"\n    }}>{`String methods`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# Examples\na.gsub(/[^a-z]/i, \"\").downcase.chars.sort.join! # update variable a\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}