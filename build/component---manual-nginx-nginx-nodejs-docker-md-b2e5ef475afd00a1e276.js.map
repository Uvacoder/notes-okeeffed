{"version":3,"sources":["webpack:///../manual/Nginx/Nginx-Nodejs-Docker.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,qNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,0CADR,0CAGA,0DAAyC,0BAAYC,WAAW,KAAvB,SAAzC,QAAmG,0BAAYA,WAAW,KAAvB,UAAnG,KACA,yDAAwC,0BAAYA,WAAW,KAAvB,cAAxC,+EACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gOASL,+CAA8B,0BAAYA,WAAW,KAAvB,+BAC9B,wFAAuE,0BAAYA,WAAW,KAAvB,uDAAvE,KACA,sFAAqE,0BAAYA,WAAW,KAAvB,oCAArE,6EACA,+BAAc,0BAAYA,WAAW,KAAvB,SAAd,0BAA0F,0BAAYA,WAAW,KAAvB,gBAA1F,uCACA,8FACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,ucAeL,6CACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,uDAGL,uDAAsC,0BAAYA,WAAW,KAAvB,+BAAtC,KACA,oCAAmB,0BAAYA,WAAW,KAAvB,2EACnB,6F,4MAKJJ,EAAWK,gBAAiB","file":"component---manual-nginx-nginx-nodejs-docker-md-b2e5ef475afd00a1e276.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"docker-container-with-nginx-and-nodejs\"\n    }}>{`Docker container with Nginx and Nodejs`}</h1>\n    <p>{`First create a directory for both `}<inlineCode parentName=\"p\">{`nginx`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`nodejs`}</inlineCode>{`.`}</p>\n    <p>{`Within the Node folder, create a `}<inlineCode parentName=\"p\">{`Dockerfile`}</inlineCode>{` that contains the following to expose an app running on a particular port:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM mhart/alpine-node\n# Pretend to copy the node app entry\n# from current folder\nCOPY index.js .\n# Expose the port that it is running on\nEXPOSE 3000\n# Run node - chances are you want pm2 here\nCMD node index.js\n`}</code></pre>\n    <p>{`Then we can build with `}<inlineCode parentName=\"p\">{`docker built -t foo/node .`}</inlineCode></p>\n    <p>{`After the build, run the container with port 3000 exposed using `}<inlineCode parentName=\"p\">{`docker run -d -p 3000:3000 --name node-app foo/node`}</inlineCode>{`.`}</p>\n    <p>{`First, we can test the Nginx latest container container using `}<inlineCode parentName=\"p\">{`docker run --rm -p 8000:80 nginx`}</inlineCode>{` to test out nginx:latest. This just removes the container after running.`}</p>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`nginx`}</inlineCode>{` folder, we can create `}<inlineCode parentName=\"p\">{`default.conf`}</inlineCode>{` file to overwrite the initial one.`}</p>\n    <p>{`If settings are not defined below, Nginx will use the default values.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# config\nserver {\n    location / {\n        # host name first\n        proxy_set_header Host $host;\n        # extra headers for host IP address\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # passing protocol used (http | https)\n        proxy_set_header X-Forwarded-Proto $scheme;\n        # where to proxy reqs to\n        proxy_pass http://app:3000;\n    }\n}\n`}</code></pre>\n    <p>{`For the Docker file.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM nginx\nCOPY default.cong /etc/nginx/conf.d/\n`}</code></pre>\n    <p>{`Then build out this file using `}<inlineCode parentName=\"p\">{`docker built -t foo/nginx .`}</inlineCode>{`.`}</p>\n    <p>{`Running it: `}<inlineCode parentName=\"p\">{`docker run -p 8000:80 --link node-app:app --name nginx-proxy foo/nginx`}</inlineCode></p>\n    <p>{`Since we expose 3000 for the node-app, we do not need to redo that.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}