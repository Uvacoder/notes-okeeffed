{"version":3,"sources":["webpack:///../manual/Stripe/Flask-Stripe-Configuration.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qCADR,qCAGA,8FACA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4CADQ,eAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4DADQ,2BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4CADQ,yBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2DADQ,sBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uHADQ,0BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mEADQ,+BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+CADQ,0BAItB,iBAAQ,CACN,GAAM,mBADR,mBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,wLASL,iBAAQ,CACN,GAAM,kBADR,mBAGA,2FACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,wCAIL,iBAAQ,CACN,GAAM,oBADR,qBAGA,oEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,61BAoCL,mCACA,sBACE,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,gBAAqC,0BAAYA,WAAW,MAAvB,eAArC,wBAAsH,0BAAYA,WAAW,MAAvB,QAAtH,8DAEF,iBAAQ,CACN,GAAM,sBADR,sBAGA,qBAAG,0BAAYA,WAAW,KAAvB,qBAAH,wCACA,gCAAe,0BAAYA,WAAW,KAAvB,+FAAf,iI,oNAKJJ,EAAWK,gBAAiB","file":"component---manual-stripe-flask-stripe-configuration-md-c370897224959093783c.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"python-flask-stripe-configuration\"\n    }}>{`Python Flask Stripe Configuration`}</h1>\n    <p>{`A quick look at setting up the Stripe Python API with a Flask server.`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api?lang=python\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.dennisokeeffe.com/manual-flask-hello-world\"\n        }}>{`Flask Hello World Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-python\"\n        }}>{`Stripe Python Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3schools.com/python/python_try_except.asp\"\n        }}>{`Python Try/Except`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackoverflow.com/questions/45412228/flask-sending-data-and-status-code-through-a-response-object/45412576\"\n        }}>{`Status codes in Flask`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://techtutorialsx.com/2017/01/07/flask-parsing-json-data/\"\n        }}>{`Parsing JSON data w/ Flask`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/theskumar/python-dotenv\"\n        }}>{`Python Dotenv Github`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir python-flask-stripe && cd python-flask-stripe\n# pip or pip3 depending on env\npip3 install Flask\npip3 install stripe\npip3 install -U python-dotenv\ntouch .env server.py\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-env\"\n    }}>{`Setting up .env`}</h2>\n    <p>{`Fetch your keys from Stripe and replace the following in the file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`SK_TEST_KEY=sk... # replace sk...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"writing-serverpy\"\n    }}>{`Writing server.py`}</h2>\n    <p>{`Set up the file to look like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from flask import Flask\nfrom flask import request\nfrom dotenv import load_dotenv\nimport stripe\nimport os\n\n# Load local .env file and assign key\nload_dotenv()\nstripe.api_key = os.environ.get(\"SK_TEST_KEY\")\n\napp = Flask(__name__)\n\n@app.route(\"/api/charge\", methods = ['POST'])\ndef charge():\n    try:\n        content = request.get_json()\n        # Print what JSON comes in for the sake of checking\n        print(content)\n\n        resp = stripe.Charge.create(\n            amount=content['amount'],\n            currency=\"usd\",\n            source=\"tok_visa\",\n            receipt_email=content['receiptEmail'],\n        )\n        print(\"Success: %r\" % (resp))\n        return \"Successfully charged\", 201\n    except Exception as e:\n        print(e)\n        return \"Charge failed\", 500\n\nif __name__ == \"__main__\":\n    app.run()\n`}</code></pre>\n    <p>{`The above:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Fetches and sets OS env from .env file.`}</li>\n      <li parentName=\"ol\">{`Sets the Stripe API key.`}</li>\n      <li parentName=\"ol\">{`Sets a route `}<inlineCode parentName=\"li\">{`/api/charge`}</inlineCode>{` that only takes the `}<inlineCode parentName=\"li\">{`POST`}</inlineCode>{` method and creates a charge based on the amount we pass.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"running-the-server\"\n    }}>{`Running the server`}</h2>\n    <p><inlineCode parentName=\"p\">{`python3 server.py`}</inlineCode>{` will start the server on port 5000.`}</p>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`http POST http://localhost:5000/api/charge amount:=600 receiptEmail=hello_flask@example.com`}</inlineCode>{` (using HTTPie) will come back with success. Check your Stripe dashboard and you will see a charge made for US\\$6.00! Hooray!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}