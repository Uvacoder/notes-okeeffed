(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{"7hIE":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return i}));t("1c7q"),t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3"),t("2mQt"),t("mXGw");var o=t("/FXl"),a=t("TjRS");t("aD51");function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Kubernetes/KOPS-Getting-Started.md"}});var l={_frontmatter:r},u=a.a;function i(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(u,s({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"getting-started"},"Getting Started"),Object(o.b)("p",null,"kubectl: Install via brew\nminikube: ",Object(o.b)("a",s({parentName:"p"},{href:"https://github.com/kubernetes/minikube/releases"}),"https://github.com/kubernetes/minikube/releases"),"\nkops: Install via brew"),Object(o.b)("p",null,"Minikube test commands:"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{className:"language-bash"}),"minikube status # check status\nminikube start # start cluster\n")),Object(o.b)("p",null,"For OSX install:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/")),Object(o.b)("p",null,"Install Docker Edge to use the latest features with Kubernetes."),Object(o.b)("p",null,"Otherwise follow the base instructions to get everything up and going."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"https://gist.github.com/kevin-smets/b91a34cea662d0c523968472a81788f7")),Object(o.b)("p",null,"This resolves DL issue: ",Object(o.b)("inlineCode",{parentName:"p"},"mv minikube-v0.25.1.iso ~/.minikube/cache/iso/minikube-v0.25.1.iso"),"."),Object(o.b)("h3",{id:"procedure-document"},"Procedure Document"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{}),'Kubernetes Procedure Document\nGithub repository [Read this first]\nDownload all the course material from: https://github.com/wardviaene/kubernetes-course\n\nQuestions?\nSend me a message\n\nUse Q&A\n\nJoin our facebook group: https://www.facebook.com/groups/840062592768074/\n\nDownload Kubectl\nLinux: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/linux/amd64/kubectl\n\nMacOS: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/darwin/amd64/kubectl\n\nWindows:\nhttps://github.com/eirslett/kubectl-windows/releases/download/v1.6.3/kubectl.exe\n\nMinikube\nProject URL: https://github.com/kubernetes/minikube\n\nLatest Release and download instructions: https://github.com/kubernetes/minikube/releases\n\nVirtualBox: http://www.virtualbox.org\n\nMinikube on windows:\nDownload the latest minikube-version.exe\n\nRename the file to minikube.exe and put it in C:\\minikube\n\nOpen a cmd (search for the app cmd or powershell)\n\nRun: cd C:\\minikube and enter minikube start\n\nTest your cluster commands\nMake sure your cluster is running, you can check with minikube status.\n\nIf your cluster is not running, enter minikube start first.\n\nkubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080\nkubectl expose deployment hello-minikube --type=NodePort\n\nminikube service hello-minikube --url\n\n<open a browser and go to that url>\n\nKops\nProject URL\nhttps://github.com/kubernetes/kops\n\nFree DNS Service\nSign up at http://freedns.afraid.org/\n\nChoose for subdomain hosting\n\nEnter the AWS nameservers given to you in route53 as nameservers for the subdomain\n\nhttp://www.dot.tk/ provides a free .tk domain name you can use and you can point it to the amazon AWS nameservers\n\n###h2\n\nNamecheap.com often has promotions for tld’s like .co for just a couple of bucks\n\n\n\nCluster Commands\nkops create cluster --name=kubernetes.newtech.academy --state=s3://kops-state-b429b --zones=eu-west-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kubernetes.newtech.academy\n\nkops update cluster kubernetes.newtech.academy --yes --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b --yes\n\nKubernetes from scratch\n\n\n\n\n\n\nYou can setup your cluster manually from scratch\n\nIf you’re planning to deploy on AWS / Google / Azure, use the tools that are fit for these platforms\n\nIf you have an unsupported cloud platform, and you still want Kubernetes, you can install it manually\n\nCoreOS + Kubernetes: ###a href="https://coreos.com/kubernetes/docs/latest/getting-started.html">https://coreos.com/kubernetes/docs/latest/getting-started.html\n\nDocker\nYou can download Docker Engine for:\n\nWindows: https://docs.docker.com/engine/installation/windows/\n\nMacOS: https://docs.docker.com/engine/installation/mac/\n\nLinux: https://docs.docker.com/engine/installation/linux/\n\nDevOps box\nVirtualbox: http://www.virtualbox.org\n\nVagrant: http://www.vagrantup.com\n\nDevOps box: https://github.com/wardviaene/devops-box\n\nLaunch commands (in terminal / cmd / powershell):\n\ncd devops-box/\n\nvagrant up\n\nLaunch commands for a plain ubuntu box:\n\nmkdir ubuntu\n\nvagrant init ubuntu/xenial64\n\nvagrant up\n\nDocker commands\nDescription\n\nCommand\n\nBuild image\n\ndocker build .\n\nBuild & Tag\n\ndocker build -t wardviaene/k8s-demo:latest .\n\nTag image\n\ndocker tag imageid wardviaene/k8s-demo\n\nPush image\n\ndocker push wardviaene/k8s-demo\n\nList images\n\ndocker images\n\nList all containers\n\ndocker ps -a\n\nKubernetes commands\nCommand\n\nDescription\n\nkubectl get pod\n\nGet information about all running pods\n\nkubectl describe pod `<pod>`\n\nDescribe one pod\n\nkubectl expose pod `<pod>` --port=444\n\n--name=frontend\n\nExpose the port of a pod (creates a new service)\n\nkubectl port-forward `<pod>` 8080\n\nPort forward the exposed pod port to your local machine\n\nkubectl attach `<podname>` -i\n\nAttach to the pod\n\nkubectl exec `<pod>` -- command\n\nExecute a command on the pod\n\nkubectl label pods `<pod>` mylabel=awesome\n\nAdd a new label to a pod\n\nkubectl run -i --tty busybox --image=busybox\n\n--restart=Never -- sh\n\nRun a shell in a pod - very useful for debugging\n\nkubectl get deployments\n\nGet information on current deployments\n\nkubectl get rs\n\nGet information about the replica sets\n\nkubectl get pods --show-labels\n\nget pods, and also show labels attached to those pods\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet deployment status\n\nkubectl set image deployment/helloworld-deployment\n\nk8s-demo=k8s-demo:2\n\nRun k8s-demo with the image label version 2\n\nkubectl edit deployment/helloworld-deployment\n\nEdit the deployment object\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet the status of the rollout\n\nkubectl rollout history deployment/helloworld-deployment\n\nGet the rollout history\n\nkubectl rollout undo deployment/helloworld-deployment\n\nRollback to previous version\n\nkubectl rollout undo deployment/helloworld-deployment --to-revision=n\n\nRollback to any version version\n\nAWS Commands\naws ec2 create-volume --size 10 --region us-east-1 --availability-zone us-east-1a --volume-type gp2\n\nCertificates\nCreating a new key for a new user: openssl genrsa -out myuser.pem 2048\n\nCreating a certificate request: openssl req -new -key myuser.pem -out myuser-csr.pem -subj "/CN=myuser/O=myteam/"\n\nCreating a certificate: openssl x509 -req -in myuser-csr.pem -CA /path/to/kubernetes/ca.crt -CAkey /path/to/kubernetes/ca.key -CAcreateserial -out myuser.crt -days 10000\n')),Object(o.b)("h2",{id:"what-is-kubernetes"},"What is Kubernetes?"),Object(o.b)("p",null,"Open source orchestration system for Docker."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Let's you schedule containers on a cluster of machines"),Object(o.b)("li",{parentName:"ul"},"You can run multiple containers on one machine"),Object(o.b)("li",{parentName:"ul"},"You can run long running services (like web apps)"),Object(o.b)("li",{parentName:"ul"},"K8s will manage the state of these containers",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Can start the container on specific nodes"),Object(o.b)("li",{parentName:"ul"},"Will restart a container when it gets killed"),Object(o.b)("li",{parentName:"ul"},"Can move containers from one node to another node"))),Object(o.b)("li",{parentName:"ul"},"Instead of just running a few docker containers on one host manually, K8s can manage that for you"),Object(o.b)("li",{parentName:"ul"},"K8 clusters can go to thousands of nodes"),Object(o.b)("li",{parentName:"ul"},"Other orcherstrators:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Docker Swarm"),Object(o.b)("li",{parentName:"ul"},"Mesos")))),Object(o.b)("p",null,"You can run K8s anywhere:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"One premise (private)"),Object(o.b)("li",{parentName:"ul"},"Public"),Object(o.b)("li",{parentName:"ul"},"Hybrid")),Object(o.b)("p",null,"It is highly modular and open source. It is also backed by Google."),Object(o.b)("h2",{id:"containers-intro"},"Containers intro"),Object(o.b)("p",null,"Container VS VM: No Hypervisor and Guest OS layer."),Object(o.b)("p",null,"Containers on Cloud Providers do still use the hypervisor to seperate users."),Object(o.b)("p",null,"Docker is the most popular container software. An alternative is ",Object(o.b)("inlineCode",{parentName:"p"},"rkt"),"."),Object(o.b)("p",null,"Benefits? It works in isolation. You ship the binary with all the dependencies and create a closer parity."),Object(o.b)("p",null,"Docker makes development teams able to ship faster."),Object(o.b)("p",null,"You can run the same image on prem and in the cloud with what should be the same results."),Object(o.b)("h2",{id:"kubernetes-setup"},"Kubernetes Setup"),Object(o.b)("p",null,'Something to note is that there are more integrations for certain Cloud Providers like AWS & GCE. Thingsl ike "Volumes" and "External Load Balancers" work only with support Cloud Providers.'),Object(o.b)("h3",{id:"running-locally"},"Running locally"),Object(o.b)("p",null,"We can use ",Object(o.b)("inlineCode",{parentName:"p"},"minikube")," to spin up a local single machine with a Kubernetes cluster."),Object(o.b)("h4",{id:"minikube"},"Minikube"),Object(o.b)("p",null,"Minikube is a tool that makes running k8s locally easy."),Object(o.b)("p",null,"It runs a single-node Kubernetes cluster inside a Linux VM."),Object(o.b)("p",null,"It's aimed on users who just want to just test it out or use if for development."),Object(o.b)("p",null,"It cannot spin up a roduction cluster, it's a one node machine with no high availability."),Object(o.b)("p",null,"You need VM to run all this."),Object(o.b)("p",null,"To run a cluster, just run ",Object(o.b)("inlineCode",{parentName:"p"},"minikube start"),"."),Object(o.b)("p",null,"To check your config after spinning up Kubernetes, use ",Object(o.b)("inlineCode",{parentName:"p"},"cat ~/.kube/config"),"."),Object(o.b)("h3",{id:"running-on-aws"},"Running on AWS"),Object(o.b)("p",null,"Until EKS comes out, we can spin up a Kubernetes cluster using KOPS."),Object(o.b)("p",null,"You need to ensure that you download Vagrant and a VM."),Object(o.b)("p",null,"For running the Vagrant box, you can run ",Object(o.b)("inlineCode",{parentName:"p"},"vagrant up --provider virtualbox"),"."),Object(o.b)("p",null,"You can then use ",Object(o.b)("inlineCode",{parentName:"p"},"vagrant ssh")," to ssh in."),Object(o.b)("p",null,"After you are in, download Kops:"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{}),"curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64\nchmod +x kops-linux-amd64\nsudo mv kops-linux-amd64 /usr/local/bin/kops\n")),Object(o.b)("p",null,"Ensure that you also download ",Object(o.b)("inlineCode",{parentName:"p"},"python-pip"),":"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{}),"sudo apt-get install software-properties-common\nsudo apt-add-repository universe\nsudo apt-get update\nsudo apt-get install python-pip\n")),Object(o.b)("p",null,"Then install awscli:"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{}),"export LC_ALL=C # if run into an error about locale settings\nsudo pip install awscli\n")),Object(o.b)("p",null,"You will then need to create an AWS account."),Object(o.b)("p",null,"After setting up the AWSCLI, installing Kops and creating a S3 Bucket + setting up the Route53 Name Servers (on somewhere like NameCheap), you can move on."),Object(o.b)("h3",{id:"cluster-setup-on-kops"},"Cluster setup on Kops"),Object(o.b)("p",null,"First, download Kops for Linux on the Vagrant box and move it."),Object(o.b)("p",null,"Before creating the cluster, you will need to create new keys. ",Object(o.b)("inlineCode",{parentName:"p"},"ssh-keygen -f .ssh/id_rsa"),"."),Object(o.b)("p",null,"To create the cluster (example), run ",Object(o.b)("inlineCode",{parentName:"p"},"kops create cluster --name=kubernetes.test --state=s3://kops-state-oeiajrie93 --zones=ap-southeast-2a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=givemeyeezy.online")),Object(o.b)("p",null,"This DNS zone is basically just the one that we set up."),Object(o.b)("p",null,"You'll get something back like"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{}),'I0311 21:48:46.821364    7553 create_cluster.go:439] Inferred --cloud=aws from zone "ap-southeast-2a"\nI0311 21:48:46.821506    7553 create_cluster.go:971] Using SSH public key: /home/vagrant/.ssh/id_rsa.pub\nI0311 21:48:48.232635    7553 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet ap-southeast-2a\nPreviewing changes that will be made:\n\nI0311 21:48:52.305360    7553 executor.go:91] Tasks: 0 done / 73 total; 31 can run\nI0311 21:48:53.503124    7553 executor.go:91] Tasks: 31 done / 73 total; 24 can run\nI0311 21:48:53.958875    7553 executor.go:91] Tasks: 55 done / 73 total; 16 can run\nI0311 21:48:54.237870    7553 executor.go:91] Tasks: 71 done / 73 total; 2 can run\nI0311 21:48:54.262347    7553 executor.go:91] Tasks: 73 done / 73 total; 0 can run\nWill create resources:\n  AutoscalingGroup/master-ap-southeast-2a.masters.kubernetes.test\n  MinSize               1\n  MaxSize               1\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/role/master: 1, Name: master-ap-southeast-2a.masters.kubernetes.test, KubernetesCluster: kubernetes.test, k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: master-ap-southeast-2a}\n  LaunchConfiguration   name:master-ap-southeast-2a.masters.kubernetes.test\n\n  AutoscalingGroup/nodes.kubernetes.test\n  MinSize               2\n  MaxSize               2\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: nodes, k8s.io/role/node: 1, Name: nodes.kubernetes.test, KubernetesCluster: kubernetes.test}\n  LaunchConfiguration   name:nodes.kubernetes.test\n\n  DHCPOptions/kubernetes.test\n  DomainName            ap-southeast-2.compute.internal\n  DomainNameServers     AmazonProvidedDNS\n\n  EBSVolume/a.etcd-events.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {KubernetesCluster: kubernetes.test, k8s.io/etcd/events: a/a, k8s.io/role/master: 1, Name: a.etcd-events.kubernetes.test}\n\n  EBSVolume/a.etcd-main.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {k8s.io/etcd/main: a/a, k8s.io/role/master: 1, Name: a.etcd-main.kubernetes.test, KubernetesCluster: kubernetes.test}\n\n  IAMInstanceProfile/masters.kubernetes.test\n\n  IAMInstanceProfile/nodes.kubernetes.test\n\n  IAMInstanceProfileRole/masters.kubernetes.test\n  InstanceProfile       name:masters.kubernetes.test id:masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMInstanceProfileRole/nodes.kubernetes.test\n  InstanceProfile       name:nodes.kubernetes.test id:nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  IAMRole/masters.kubernetes.test\n  ExportWithID          masters\n\n  IAMRole/nodes.kubernetes.test\n  ExportWithID          nodes\n\n  IAMRolePolicy/masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMRolePolicy/nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  InternetGateway/kubernetes.test\n  VPC                   name:kubernetes.test\n  Shared                false\n\n  Keypair/apiserver-aggregator\n  Subject               cn=aggregator\n  Type                  client\n  Signer                name:apiserver-aggregator-ca id:cn=apiserver-aggregator-ca\n\n  Keypair/apiserver-aggregator-ca\n  Subject               cn=apiserver-aggregator-ca\n  Type                  ca\n\n  Keypair/apiserver-proxy-client\n  Subject               cn=apiserver-proxy-client\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/ca\n  Subject               cn=kubernetes\n  Type                  ca\n\n  Keypair/kops\n  Subject               o=system:masters,cn=kops\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-controller-manager\n  Subject               cn=system:kube-controller-manager\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-proxy\n  Subject               cn=system:kube-proxy\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-scheduler\n  Subject               cn=system:kube-scheduler\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubecfg\n  Subject               o=system:masters,cn=kubecfg\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet\n  Subject               o=system:nodes,cn=kubelet\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet-api\n  Subject               cn=kubelet-api\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/master\n  Subject               cn=kubernetes-master\n  Type                  server\n  AlternateNames        [100.64.0.1, 127.0.0.1, api.internal.kubernetes.test, api.kubernetes.test, kubernetes, kubernetes.default, kubernetes.default.svc, kubernetes.default.svc.cluster.local]\n  Signer                name:ca id:cn=kubernetes\n\n  LaunchConfiguration/master-ap-southeast-2a.masters.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:masters.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:masters.kubernetes.test id:masters.kubernetes.test\n  RootVolumeSize        64\n  RootVolumeType        gp2\n  SpotPrice\n\n  LaunchConfiguration/nodes.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:nodes.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:nodes.kubernetes.test id:nodes.kubernetes.test\n  RootVolumeSize        128\n  RootVolumeType        gp2\n  SpotPrice\n\n  ManagedFile/kubernetes.test-addons-bootstrap\n  Location              addons/bootstrap-channel.yaml\n\n  ManagedFile/kubernetes.test-addons-core.addons.k8s.io\n  Location              addons/core.addons.k8s.io/v1.4.0.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-pre-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-pre-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-limit-range.addons.k8s.io\n  Location              addons/limit-range.addons.k8s.io/v1.5.0.yaml\n\n  ManagedFile/kubernetes.test-addons-rbac.addons.k8s.io-k8s-1.8\n  Location              addons/rbac.addons.k8s.io/k8s-1.8.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.6.0\n  Location              addons/storage-aws.addons.k8s.io/v1.6.0.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.7.0\n  Location              addons/storage-aws.addons.k8s.io/v1.7.0.yaml\n\n  Route/0.0.0.0/0\n  RouteTable            name:kubernetes.test\n  CIDR                  0.0.0.0/0\n  InternetGateway       name:kubernetes.test\n\n  RouteTable/kubernetes.test\n  VPC                   name:kubernetes.test\n\n  RouteTableAssociation/ap-southeast-2a.kubernetes.test\n  RouteTable            name:kubernetes.test\n  Subnet                name:ap-southeast-2a.kubernetes.test\n\n  SSHKey/kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  KeyFingerprint        c4:89:af:59:a1:1d:6e:ef:7a:9d:12:65:bc:e2:82:4f\n\n  Secret/admin\n\n  Secret/kube\n\n  Secret/kube-proxy\n\n  Secret/kubelet\n\n  Secret/system:controller_manager\n\n  Secret/system:dns\n\n  Secret/system:logging\n\n  Secret/system:monitoring\n\n  Secret/system:scheduler\n\n  SecurityGroup/masters.kubernetes.test\n  Description           Security group for masters\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22, port=443, port=2380, port=2381, port=4001, port=4002, port=4789, port=179]\n\n  SecurityGroup/nodes.kubernetes.test\n  Description           Security group for nodes\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22]\n\n  SecurityGroupRule/all-master-to-master\n  SecurityGroup         name:masters.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-master-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-node-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/https-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              443\n  ToPort                443\n\n  SecurityGroupRule/master-egress\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-egress\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-to-master-tcp-1-2379\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              1\n  ToPort                2379\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-2382-4000\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              2382\n  ToPort                4000\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-4003-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              4003\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-udp-1-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              udp\n  FromPort              1\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/ssh-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  SecurityGroupRule/ssh-external-to-node-0.0.0.0/0\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  Subnet/ap-southeast-2a.kubernetes.test\n  VPC                   name:kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  CIDR                  172.20.32.0/19\n  Shared                false\n  Tags                  {Name: ap-southeast-2a.kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned, kubernetes.io/role/elb: 1}\n\n  VPC/kubernetes.test\n  CIDR                  172.20.0.0/16\n  EnableDNSHostnames    true\n  EnableDNSSupport      true\n  Shared                false\n  Tags                  {Name: kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned}\n\n  VPCDHCPOptionsAssociation/kubernetes.test\n  VPC                   name:kubernetes.test\n  DHCPOptions           name:kubernetes.test\n\nMust specify --yes to apply changes\n\nCluster configuration has been created.\n\nSuggestions:\n * list clusters with: kops get cluster\n * edit this cluster with: kops edit cluster kubernetes.test\n * edit your node instance group: kops edit ig --name=kubernetes.test nodes\n * edit your master instance group: kops edit ig --name=kubernetes.test master-ap-southeast-2a\n\nFinally configure your cluster with: kops update cluster kubernetes.test --yes\n')),Object(o.b)("p",null,"To edit the cluster, run ",Object(o.b)("inlineCode",{parentName:"p"},"kops edit cluster kubernetes.test --state=s3://kops-state-oeiajrie93")," and then to update run ",Object(o.b)("inlineCode",{parentName:"p"},"kops update cluster kubernetes.test --yes --state=s3://kops-state-oeiajrie93")),Object(o.b)("p",null,"If we now run ",Object(o.b)("inlineCode",{parentName:"p"},"cat ~/.kube/config")," we can see the password and username information needed."),Object(o.b)("p",null,"To check if the nodes are up, run ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl get node"),"."),Object(o.b)("p",null,"Then, we can again run ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl run hello-minikube ...")),Object(o.b)("p",null,"If you have issues hit up ",Object(o.b)("inlineCode",{parentName:"p"},"https://www.digitalocean.com/community/tutorials/how-to-set-up-time-synchronization-on-ubuntu-16-04")," for date syncing."),Object(o.b)("h2",{id:"kops-quicklist"},"KOPS QuickList"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{className:"language-bash"}),"# create\nkops create cluster --name=doksandbox.com --state=s3://kops-state-doksandbox --zones=ap-southeast-2a --node-count=1 --node-size=t2.micro --master-size=t2.micro --dns-zone=doksandbox.com\n\n# edit\nkops edit cluster doksandbox.com --state=s3://kops-state-doksandbox\n\n# update\nkops update cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# delete\nkops delete cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# suggestions\nkops validate cluster --state=s3://kops-state-doksandbox  # validate cluster\nkubectl get nodes --show-labels # list nodes\nssh -i ~/.ssh/id_rsa admin@api.kubernetes.doksandbox.com # ssh to the master\nThe admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.\n\n# check DNS\ndig afxr doksandbox.com\n")),Object(o.b)("p",null,"To get a basic service up and running, hit ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080")," and head to the VPC security network to update and expose that port to all IPs to prove that is all works correctly. The port will be dynamic."),Object(o.b)("h3",{id:"building-docker-containers"},"Building Docker Containers"),Object(o.b)("p",null,"If installing onto Linux, check ",Object(o.b)("inlineCode",{parentName:"p"},"https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1")),Object(o.b)("p",null,"To do a demo, ",Object(o.b)("inlineCode",{parentName:"p"},"sudo apt-get install git")," and ",Object(o.b)("inlineCode",{parentName:"p"},"git clone https://github.com/wardviaene/docker-demo")," to get a demo folder."),Object(o.b)("p",null,"Change in, ",Object(o.b)("inlineCode",{parentName:"p"},"sudo docker build .")," and then to run the container use ",Object(o.b)("inlineCode",{parentName:"p"},"docker run -p 3000:3000 -t <id>")),Object(o.b)("h3",{id:"docker-registery"},"Docker registery"),Object(o.b)("p",null,"To upload to the registry:"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{}),"docker login # fill in login details\ndocker tag imageid okeeffed/docker-demo\ndocker push okeeffed/docker-demo\n")),Object(o.b)("p",null,"There are a few limitations for each Docker/Kubernetes relationship:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Don't try to create one giant docker image fo you app, but split it up if necessary."),Object(o.b)("li",{parentName:"ol"},"All data in the container is not preserved. You need volumes for this."),Object(o.b)("li",{parentName:"ol"},"Check 12factor.net for methodologies")),Object(o.b)("h3",{id:"running-the-docker-app-on-kubernetes"},"Running the Docker app on Kubernetes"),Object(o.b)("p",null,"We need to create a ",Object(o.b)("inlineCode",{parentName:"p"},"pod definition"),"."),Object(o.b)("p",null,"This describes an application running on Kubernetes."),Object(o.b)("p",null,"A pod can container ",Object(o.b)("em",{parentName:"p"},"one or more tightly coupled containers")," that make up the app."),Object(o.b)("p",null,"Those apps can easily communicate with each other using their local ",Object(o.b)("strong",{parentName:"p"},"port numbers"),"."),Object(o.b)("p",null,"The app for us at the moment has only one container."),Object(o.b)("p",null,"To build this, we create a podfile with all the pod definition:"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{className:"language-yaml"}),"# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n")),Object(o.b)("p",null,"To create this pod, we run ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl create -f ./pod-helloworld.yml")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Some useful commands")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",s({parentName:"tr"},{align:null}),"Command"),Object(o.b)("th",s({parentName:"tr"},{align:null}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl get pod"),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Get info about all running pods")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl describe pod ",Object(o.b)("inlineCode",{parentName:"td"},"<pod>")),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Describe one pod")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl expose pod ",Object(o.b)("inlineCode",{parentName:"td"},"<pod>")," --port=444 --name=frontend"),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Expose the port of a pod (creates a new service)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl port-forward ",Object(o.b)("inlineCode",{parentName:"td"},"<pod>")," 8080"),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Port forward the local machine")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl attach ",Object(o.b)("inlineCode",{parentName:"td"},"<podname>")," -i"),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Attach to pod")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl exec ",Object(o.b)("inlineCode",{parentName:"td"},"<pod>")," -- command"),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Execute a command on the pod")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl label pods ",Object(o.b)("inlineCode",{parentName:"td"},"<pod>")," mylabel=awesome"),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Add new label to pod")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",s({parentName:"tr"},{align:null}),"kubectl run -i -tty busybox --image=busybox --restart=Never -- sh"),Object(o.b)("td",s({parentName:"tr"},{align:null}),"Run a shell in a pod - very useful for debugging")))),Object(o.b)("h3",{id:"how-to-port-forward"},"How to port-forward"),Object(o.b)("p",null,"Running ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl describe pod nodehelloworld.example.com")," will then give us info on what is going on here."),Object(o.b)("p",null,"To listen locally, we can port-forward: ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl port-forward nodehelloworld.example.com 8081:3000")),Object(o.b)("h3",{id:"exposing-the-pod"},"Exposing the pod"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service")),Object(o.b)("p",null,"Check this with ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl get service")),Object(o.b)("p",null,"When you see what port is being forwarded, you can again open that up on the security settings and direct to that port."),Object(o.b)("h3",{id:"setting-up-the-external-load-balancer"},"Setting up the external load balancer"),Object(o.b)("p",null,"This will allow the outside world to have traffic routed to the correct pod."),Object(o.b)("p",null,"To create the service for this:"),Object(o.b)("pre",null,Object(o.b)("code",s({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports:\n  - port: 80\n  targetPort: nodejs-port\n  protocol: TCP\n  selector:\n  app: helloworld\n  type: LoadBalancer\n")),Object(o.b)("p",null,"Using ",Object(o.b)("inlineCode",{parentName:"p"},"kubectl create -f <file>")," will create the pods and kops will autoconfigure what is required."))}i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Kubernetes/KOPS-Getting-Started.md"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-kubernetes-kops-getting-started-md-09e27babcf061f745e85.js.map