(window.webpackJsonp=window.webpackJsonp||[]).push([[497],{bn9U:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return b}));a("1c7q"),a("abGl"),a("gZHo"),a("Fdmb"),a("Ir+3"),a("2mQt"),a("mXGw");var n=a("/FXl"),r=a("TjRS");a("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Ruby/Intro.md"}});var s={_frontmatter:i},l=r.a;function b(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(l,o({},s,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"ruby-intro"},"Ruby Intro"),Object(n.b)("h2",{id:"resources"},"Resources"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://rubystyle.guide/#introduction"}),"Ruby Style Guide")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://rails.rubystyle.guide/#introduction"}),"Rails Stylde Guide")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://dev.to/vvo/modern-resources-for-learning-rails-6-and-ruby-2cbe"}),"Modern Resources for Rails 6")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://github.com/ankane/secure_rails"}),"Secure Rails")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://github.com/gramantin/awesome-rails"}),"Awesome Rails")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://github.com/markets/awesome-ruby"}),"Awesome Ruby")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://medium.com/@lcriswell/ruby-symbols-vs-strings-248842529fd9"}),"Ruby Symbols vs Strings")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://levelup.gitconnected.com/ultimate-guide-to-blazing-fast-performance-in-rails-1-77e281a1df52"}),"Rails Performance")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://cultureamp.atlassian.net/wiki/spaces/CP/pages/1067976141/Developer+guide"}),"Culture Amp Guide - Requires Auth")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://cultureamp.atlassian.net/wiki/spaces/CP/pages/1072759314/Testing+Guidelines"}),"Culture Amp Testing Guide (Performance) - Requires Auth")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://github.com/testdouble/standard"}),"Standard - RuboCop Subset")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",o({parentName:"li"},{href:"https://semaphoreci.com/community/tutorials/working-effectively-with-data-factories-using-factorygirl"}),"Factory Bot Tutorial"))),Object(n.b)("h2",{id:"bang--methods"},"Bang (!) Methods"),Object(n.b)("p",null,"Ruby methods that modify an object in-place and end in an exclamation mark are known as bang methods. By convention, the bang labels a method as dangerous - specifically, as the dangerous equivalent of a method with the same name but without the bang."),Object(n.b)("p",null,"You'll find a number of pairs of methods, one with the bang and one without. Those without the bang perform an action and return a freshly minted object, reflecting the results of the action (capitalizing a string, sorting an array, and so on). The bang versions of the same methods perform the action, but they do so in place: Instead of creating a new object, they transform the original object."),Object(n.b)("p",null,"Examples of such pairs of methods include sort/sort! for arrays, upcase/upcase! for strings, chomp/chomp! for strings, and reverse/reverse! for strings and arrays. In each case, if you call the non-bang version of the method on the object, you get a new object. If you call the bang version, you operate in-place on the same object to which you sent the message."))}b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Ruby/Intro.md"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-ruby-intro-md-47edb0bf183f2cfd8288.js.map