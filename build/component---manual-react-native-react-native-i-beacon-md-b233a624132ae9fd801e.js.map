{"version":3,"sources":["webpack:///../manual/React-Native/React-Native-iBeacon.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wBADR,wBAMA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0BADQ,wBAEa,kBAAIA,WAAW,MAC5C,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kCADQ,gCAEqB,kBAAIA,WAAW,MACpD,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oDADQ,qDAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4BADQ,4BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uCADQ,uCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yCADQ,0CAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4BADQ,8BAIxB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,aADQ,YAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,WADQ,aAQ1B,iBAAQ,CACN,GAAM,gCADR,gCAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,+DADT,+DAGH,iBAAQ,CACN,GAAM,kDADR,oDAGA,sBACE,kBAAIA,WAAW,MAAf,6BAEF,iBAAQ,CACN,GAAM,0BADR,2BAGA,sBACE,kBAAIA,WAAW,MAAf,kCAEF,iBAAQ,CACN,GAAM,qCADR,sCAGA,sBACE,kBAAIA,WAAW,MAAf,uDACA,kBAAIA,WAAW,MAAf,kCACA,kBAAIA,WAAW,MAAf,4CAEF,iBAAQ,CACN,GAAM,uCADR,yCAGA,sBACE,kBAAIA,WAAW,MAAf,+BAEF,iBAAQ,CACN,GAAM,0BADR,2BAGA,sBACE,kBAAIA,WAAW,MAAf,cAEF,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,uLAML,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,04I,oNAsJTJ,EAAWK,gBAAiB","file":"component---manual-react-native-react-native-i-beacon-md-b233a624132ae9fd801e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-native-ibeacon\"\n    }}>{`React Native iBeacon`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#react-native-ibeacon\"\n        }}>{`React Native iBeacon`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#react-native-beacons-manager\"\n            }}>{`react-native-beacons-manager`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#any-things-we-dont-understand-about-their-docs\"\n                }}>{`Any things we don’t understand about their docs?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#any-technical-concerns\"\n                }}>{`Any technical concerns?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#why-should-we-use-this-technology\"\n                }}>{`Why should we use this technology?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#why-shouldnt-we-use-this-technology\"\n                }}>{`Why shouldn’t we use this technology?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#are-there-alternatives\"\n                }}>{`Are there alternatives?`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#install\"\n            }}>{`Install`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#setup\"\n            }}>{`Setup`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"react-native-beacons-manager\"\n    }}>{`react-native-beacons-manager`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/MacKentoch/react-native-beacons-manager\"\n      }}>{`https://github.com/MacKentoch/react-native-beacons-manager`}</a></p>\n    <h3 {...{\n      \"id\": \"any-things-we-dont-understand-about-their-docs\"\n    }}>{`Any things we don’t understand about their docs?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Documentation seems okay`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"any-technical-concerns\"\n    }}>{`Any technical concerns?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Either library being outdated`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"why-should-we-use-this-technology\"\n    }}>{`Why should we use this technology?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Based off the ports of the original beacon packages`}</li>\n      <li parentName=\"ul\">{`Easy to test with what we have`}</li>\n      <li parentName=\"ul\">{`Easier to setup push notification logic`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"why-shouldnt-we-use-this-technology\"\n    }}>{`Why shouldn’t we use this technology?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Small, open-source project`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"are-there-alternatives\"\n    }}>{`Are there alternatives?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`See above`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`react-native init\nyarn add react-native-beacons-manager\nyarn add react-native-bluetooth-state\nreact-native link\n# potential error on RCBridge requires you to comment it out\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport {\n    AppRegistry,\n    StyleSheet,\n    View,\n    Text,\n    ListView,\n    DeviceEventEmitter\n} from 'react-native';\nimport Beacons from 'react-native-beacons-manager';\nimport BluetoothState from 'react-native-bluetooth-state';\n\nexport default class ibeacon extends Component {\n    constructor(props) {\n        super(props);\n        // Create our dataSource which will be displayed in the ListView\n        var ds = new ListView.DataSource({\n            rowHasChanged: (r1, r2) => r1 !== r2\n        });\n        this.state = {\n            bluetoothState: '',\n            // region information\n            identifier: 'Test',\n            uuid: '5A4BCFCE-174E-4BAC-A814-092E77F6B7E5',\n            // React Native ListView datasource initialization\n            dataSource: ds.cloneWithRows([])\n        };\n    }\n\n    componentWillMount() {\n        //\n        // ONLY non component state aware here in componentWillMount\n        //\n        // Request for authorization while the app is open\n        Beacons.requestWhenInUseAuthorization();\n        // Define a region which can be identifier + uuid,\n        // identifier + uuid + major or identifier + uuid + major + minor\n        // (minor and major properties are numbers)\n        const region = {\n            identifier: this.state.identifier,\n            uuid: this.state.uuid\n        };\n        // Range for beacons inside the region\n        Beacons.startRangingBeaconsInRegion(region);\n        // Beacons.startUpdatingLocation();\n    }\n\n    componentDidMount() {\n        //\n        // component state aware here - attach events\n        //\n        // Ranging: Listen for beacon changes\n        this.beaconsDidRange = DeviceEventEmitter.addListener(\n            'beaconsDidRange',\n            (data) => {\n                this.setState({\n                    dataSource: this.state.dataSource.cloneWithRows(\n                        data.beacons\n                    )\n                });\n            }\n        );\n\n        // listen bluetooth state change event\n        BluetoothState.subscribe((bluetoothState) => {\n            this.setState({ bluetoothState: bluetoothState });\n        });\n        BluetoothState.initialize();\n    }\n\n    componentWillUnMount() {\n        this.beaconsDidRange = null;\n    }\n\n    render() {\n        const { bluetoothState, dataSource } = this.state;\n        return (\n            <View style={styles.container}>\n                <Text style={styles.btleConnectionStatus}>\n                    Bluetooth connection status:{' '}\n                    {bluetoothState ? bluetoothState : 'NA'}\n                </Text>\n                <Text style={styles.headline}>All beacons in the area</Text>\n                <ListView\n                    dataSource={dataSource}\n                    enableEmptySections={true}\n                    renderRow={this.renderRow}\n                />\n            </View>\n        );\n    }\n\n    renderRow = (rowData) => {\n        return (\n            <View style={styles.row}>\n                <Text style={styles.smallText}>\n                    UUID: {rowData.uuid ? rowData.uuid : 'NA'}\n                </Text>\n                <Text style={styles.smallText}>\n                    Major: {rowData.major ? rowData.major : 'NA'}\n                </Text>\n                <Text style={styles.smallText}>\n                    Minor: {rowData.minor ? rowData.minor : 'NA'}\n                </Text>\n                <Text>RSSI: {rowData.rssi ? rowData.rssi : 'NA'}</Text>\n                <Text>\n                    Proximity: {rowData.proximity ? rowData.proximity : 'NA'}\n                </Text>\n                <Text>\n                    Distance:{' '}\n                    {rowData.accuracy ? rowData.accuracy.toFixed(2) : 'NA'}m\n                </Text>\n            </View>\n        );\n    };\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: 60,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#F5FCFF'\n    },\n    btleConnectionStatus: {\n        fontSize: 20,\n        paddingTop: 20\n    },\n    headline: {\n        fontSize: 20,\n        paddingTop: 20\n    },\n    row: {\n        padding: 8,\n        paddingBottom: 16\n    },\n    smallText: {\n        fontSize: 11\n    }\n});\n\nAppRegistry.registerComponent('ibeacon', () => ibeacon);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}