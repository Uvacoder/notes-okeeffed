{"version":3,"sources":["webpack:///../manual/GitHub/NPM-Packages.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,+MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kCADR,kCAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kDADQ,iBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+FADQ,2BAItB,iBAAQ,CACN,GAAM,oCADR,oCAGA,2CAA0B,0BAAYA,WAAW,KAAvB,iDAA1B,+BACA,sBACE,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,uBACA,kBAAIA,WAAW,MAAf,wBACA,kBAAIA,WAAW,MAAf,qCAEF,qDAAoC,0BAAYA,WAAW,KAAvB,YAApC,mBAA4G,0BAAYA,WAAW,KAAvB,mDAA5G,KACA,mDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,uJAOL,iBAAQ,CACN,GAAM,gCADR,gCAGA,oCAAmB,mBAAGA,WAAW,KAAQ,CACrC,KAAQ,kDADO,wBAAnB,8CAGA,oFAAmE,0BAAYA,WAAW,KAAvB,kEAAnE,KACA,kHAAiG,0BAAYA,WAAW,KAAvB,gBAAjG,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0pBAyBL,qEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,qFAML,4DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,kBAIL,2DACA,iBAAQ,CACN,GAAM,0BADR,0BAGA,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,gHAQL,uCAAsB,0BAAYA,WAAW,KAAvB,sDAAtB,WAAgI,0BAAYA,WAAW,KAAvB,UAAhI,+CACA,iCAAgB,0BAAYA,WAAW,KAAvB,yCAAhB,KACA,kHAAiG,0BAAYA,WAAW,KAAvB,YAAjG,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,4FAKL,8DAA6C,0BAAYA,WAAW,KAAvB,iBAA7C,yCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,oCAKL,4GAA2F,0BAAYA,WAAW,KAAvB,gBAA3F,4B,sMAKJJ,EAAWK,gBAAiB","file":"component---manual-git-hub-npm-packages-md-373df819c74ccd95fd40.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"hosting-npm-packages-on-github\"\n    }}>{`Hosting NPM packages on GitHub`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/Codertocat/hello-world-npm\"\n        }}>{`Example repo`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.github.com/en/packages/publishing-and-managing-packages/about-github-packages\"\n        }}>{`About GitHub Packages`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"create-an-access-token-on-github\"\n    }}>{`Create an Access Token on GitHub`}</h2>\n    <p>{`On GitHub, head to `}<inlineCode parentName=\"p\">{`Settings > Developer > Personal Access Tokens`}</inlineCode>{` and create a new one with:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Repo access`}</li>\n      <li parentName=\"ol\">{`Read package access`}</li>\n      <li parentName=\"ol\">{`Write package access`}</li>\n      <li parentName=\"ol\">{`Delete package access (optional)`}</li>\n    </ol>\n    <p>{`Copy the token and add it to `}<inlineCode parentName=\"p\">{`~/.npmrc`}</inlineCode>{` with the value `}<inlineCode parentName=\"p\">{`//npm.pkg.github.com/:_authToken=add-token-here`}</inlineCode>{`.`}</p>\n    <p>{`Now log into the registry:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`$ npm login --registry=https://npm.pkg.github.com\n> Username: YOU_GITHUB_USERNAME\n> Password: YOUR_GITHUB_TOKEN\n> Email: PUBLIC-EMAIL-ADDRESS\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"publishing-the-first-package\"\n    }}>{`Publishing the first package`}</h2>\n    <p>{`Head to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Codertocat/hello-world-npm\"\n      }}>{`hello-world-npm repo`}</a>{` and fork it into your own GitHub account.`}</p>\n    <p>{`Once forked, let's clone it into your local. That should be `}<inlineCode parentName=\"p\">{`git clone https://github.com/your-username/hello-world-npm.git`}</inlineCode>{`.`}</p>\n    <p>{`Change into that directory and open it up into an editor. We want to make some changes to `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"@your-username/hello-world-npm\",\n  \"version\": \"1.0.2\",\n  \"description\": \"A simple npm package to demonstrate GitHub Package Registry\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\\\"Error: no test specified\\\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/your-username/hello-world-npm.git\"\n  },\n  \"author\": \"Your name\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/your-username/hello-world-npm/issues\"\n  },\n  \"homepage\": \"https://github.com/your-username/hello-world-npm#readme\",\n  \"publishConfig\": {\n    \"registry\": \"https://npm.pkg.github.com/\"\n  }\n}\n`}</code></pre>\n    <p>{`Save and let's commit this and push back up.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`git add package.json\ngit commit -m \"feat: Updating package details\"\ngit push\n`}</code></pre>\n    <p>{`Finally, let's publish the package!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`npm publish\n`}</code></pre>\n    <p>{`Bingo! We should be ready to roll.`}</p>\n    <h2 {...{\n      \"id\": \"installing-the-package\"\n    }}>{`Installing the package`}</h2>\n    <p>{`Let's start a new Nodejs project.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`mkdir hello-first-pkg\ncd hello-first-pkg\n# init with basic details\nyarn init -y\ntouch index.js .npmrc\n`}</code></pre>\n    <p>{`We need to add `}<inlineCode parentName=\"p\">{`@your-username:registry=https://npm.pkg.github.com`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`.npmrc`}</inlineCode>{` file to tell it to look for your packages.`}</p>\n    <p>{`Then run `}<inlineCode parentName=\"p\">{`nnpm i @your-username/hello-world-npm`}</inlineCode>{`.`}</p>\n    <p>{`This should successfully install. Once happy, let's test it out! Add the following inside `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const myPackage = require('@your-username/hello-world-npm');\nmyPackage.helloWorld();\n`}</code></pre>\n    <p>{`We are now all set to try it out! Run `}<inlineCode parentName=\"p\">{`node index.js`}</inlineCode>{` and we'll get our glorious response!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`> node index.js\nHello World!\n`}</code></pre>\n    <p>{`The important part from all of this is to ensure that you have correctly configured `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` for your NPM packages.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}