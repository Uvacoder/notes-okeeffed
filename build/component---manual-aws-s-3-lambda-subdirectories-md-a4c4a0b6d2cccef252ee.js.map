{"version":3,"sources":["webpack:///../manual/AWS/S3-Lambda-Subdirectories.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,wNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qEADR,sEAGA,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gJADQ,sBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yFADQ,qCAItB,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,eADR,gBAGA,qIACA,iBAAQ,CACN,GAAM,uBADR,wBAGA,mHACA,iBAAQ,CACN,GAAM,oDADR,sDAGA,iFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,8tBAwBL,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAQ,CACN,GAAM,wBADR,0BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uBAIL,iBAAQ,CACN,GAAM,mBADR,oBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mjBAoBL,iBAAQ,CACN,GAAM,6BADR,+BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,uQAcL,iBAAQ,CACN,GAAM,8BADR,gCAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0C,+MAUTJ,EAAWK,gBAAiB","file":"component---manual-aws-s-3-lambda-subdirectories-md-a4c4a0b6d2cccef252ee.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"setting-up-a-lambdacloudfront-setup-to-fetch-subdirectories-in-s3\"\n    }}>{`Setting up a Lambda/Cloudfront setup to fetch subdirectories in S3`}</h1>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://aws.amazon.com/blogs/compute/implementing-default-directory-indexes-in-amazon-s3-backed-amazon-cloudfront-origins-using-lambdaedge/\"\n        }}>{`Useful blog guide`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@svinkle/how-to-deploy-a-react-app-to-a-subdirectory-f694d46427c1\"\n        }}>{`Serving CRA from subdirectories`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <h3 {...{\n      \"id\": \"1-s3-bucket\"\n    }}>{`1. S3 Bucket`}</h3>\n    <p>{`Set up a restricted S3 bucket. Within this bucket, have subdirectories that house their own index.html file.`}</p>\n    <h3 {...{\n      \"id\": \"2-set-up-cloudfront\"\n    }}>{`2. Set up CloudFront`}</h3>\n    <p>{`Follow the permissions setup in the above article to know how to set up the correct event.`}</p>\n    <h3 {...{\n      \"id\": \"3-this-is-the-setup-for-a-javascript-lambda-call\"\n    }}>{`3. This is the setup for a JavaScript Lambda call.`}</h3>\n    <p>{`This must be done in a region that supports Lambda@next.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\nexports.handler = (event, context, callback) => {\n // Extract the request from the CloudFront event that is sent to Lambda@Edge\n var request = event.Records[0].cf.request;\n\n // Extract the URI from the request\n var olduri = request.uri;\n\n // Match any '/' that occurs at the end of a URI. Replace it with a default index\n var newuri = olduri.replace(/\\\\/$/, '/index.html');\n\n // Log the URI as received by CloudFront and the new URI to be used to fetch from origin\n console.log('Old URI: ' + olduri);\n console.log('New URI: ' + newuri);\n\n // Replace the received URI with the URI that includes the index page\n request.uri = newuri;\n\n // Return to CloudFront\n return callback(null, request);\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-cra-app\"\n    }}>{`Deploying CRA App`}</h3>\n    <h3 {...{\n      \"id\": \"1-update-packagejson\"\n    }}>{`1. Update package.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"homepage\": \".\",\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-update-router\"\n    }}>{`2. Update router`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export const devRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path=\"*\" exact={true} component={PageHome} />\n </Router>\n);\n\nexport const prodRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path={'/'} component={PageHome} />\n  <Route path={'*'} exact={true} component={PageHome} />\n </Router>\n);\n\nexport const router = () =>\n process.env.NODE_ENV !== 'development' ? prodRouter() : devRouter();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-update-routerpush-calls\"\n    }}>{`3. Update router.push calls`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Config from 'src/app.json';\nrouter.push(process.env.PUBLIC_URL + '/test');\n\n// In use\nfunction handleLink(e, d) {\n if (d.href[0] === '/') {\n  e.preventDefault();\n  const { router } = this.props;\n  router.push(Config.baseUrl + d.href);\n }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"4-set-a-baseurl-in-appjson\"\n    }}>{`4. Set a baseUrl in app.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"baseUrl\": \"/dato-cms-test\"\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}