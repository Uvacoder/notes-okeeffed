{"version":3,"sources":["webpack:///../manual/Linux/Linux-Essentials.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---manual-linux-linux-essentials-md-2517d5cb0ae1fd51e1bc.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"linux-essentials\"\n    }}>{`Linux Essentials`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#linux-essentials\"\n        }}>{`Linux Essentials`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-2-finding-your-way-on-a-linux-systems\"\n            }}>{`LINUX-2: Finding Your Way on a Linux Systems`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-21-command-line-basics\"\n            }}>{`LINUX-2.1: Command Line Basics`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#uname\"\n                }}>{`uname`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#history-and-completion\"\n                }}>{`History and completion`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#cd-and-pwd\"\n                }}>{`cd and pwd`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#shell-config-files\"\n                }}>{`Shell config files`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#variables-envsys-variables\"\n                }}>{`Variables: Env/Sys Variables`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#variables-user-defined-vars\"\n                }}>{`Variables: User Defined vars`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#globbing\"\n                }}>{`Globbing`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#quoting\"\n                }}>{`Quoting`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#formatting-commands\"\n                }}>{`Formatting Commands`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#working-with-options\"\n                }}>{`Working with Options`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-22-using-the-command-line-to-get-help\"\n            }}>{`LINUX-2.2: Using the Command Line to Get Help`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#man\"\n                }}>{`Man`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-23-using-directories-and-listing-files\"\n            }}>{`LINUX-2.3: Using Directories and Listing Files`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#the-linux-file-system\"\n                }}>{`The Linux File System`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-24-creating-moving-and-deleting-files\"\n            }}>{`LINUX-2.4: Creating, Moving and Deleting Files`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#files-and-directories\"\n                }}>{`Files and Directories`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-3-the-power-of-the-command-line\"\n            }}>{`LINUX-3: The Power of the Command Line`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-31-archiving-files-on-the-command-line\"\n            }}>{`LINUX-3.1: Archiving Files on the Command Line`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#files-directories\"\n                }}>{`Files, Directories`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-5-the-linux-operating-system\"\n            }}>{`LINUX-5: The Linux Operating System`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-53-where-data-is-stored\"\n            }}>{`LINUX-5.3: Where Data is Stored`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-531-kernel\"\n                }}>{`LINUX-5.3.1: Kernel`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-532-processes\"\n                }}>{`LINUX-5.3.2: Processes`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-533-syslog-klog-dmesg\"\n                }}>{`LINUX-5.3.3: syslog, klog, dmesg`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-534-lib-usrlib-etc-varlog\"\n                }}>{`LINUX-5.3.4: /lib, /usr/lib, /etc, /var/log`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-54-your-computer-on-the-network\"\n                }}>{`LINUX-5.4: Your Computer on the Network`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-531-internet-network-routers\"\n                }}>{`LINUX-5.3.1: Internet, Network, Routers`}</a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"linux-2-finding-your-way-on-a-linux-systems\"\n    }}>{`LINUX-2: Finding Your Way on a Linux Systems`}</h2>\n    <h2 {...{\n      \"id\": \"linux-21-command-line-basics\"\n    }}>{`LINUX-2.1: Command Line Basics`}</h2>\n    <h3 {...{\n      \"id\": \"uname\"\n    }}>{`uname`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`okeeffe_d@dok ~$ uname\nDarwin\n\nokeeffe_d@dok ~$ uname -n\ndok.gateway\n\nokeeffe_d@dok ~$ uname -r\n15.6.0\n\nokeeffe_d@dok ~$ uname -m\nx86_64\n\nokeeffe_d@dok ~$ uname -p\ni386\n\nokeeffe_d@dok ~$ uname -a                                    1 ↵\nDarwin dok.gateway 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64 x86_64\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"history-and-completion\"\n    }}>{`History and completion`}</h3>\n    <p>{`All commands are kept in the history file eg. `}<inlineCode parentName=\"p\">{`.bash_history`}</inlineCode></p>\n    <p>{`You can cycle through with the arrows.`}</p>\n    <p>{`ENV variables can allow us to control history. We can also change the history file length (default 500) by we could go `}<inlineCode parentName=\"p\">{`export HISTFILESIZE=99999`}</inlineCode>{` to make our History file far longer.`}</p>\n    <p>{`We can also `}<inlineCode parentName=\"p\">{`tab`}</inlineCode>{` to autocomplete things.`}</p>\n    <h3 {...{\n      \"id\": \"cd-and-pwd\"\n    }}>{`cd and pwd`}</h3>\n    <p>{`cd - change directory\npwd - print working directory`}</p>\n    <h3 {...{\n      \"id\": \"shell-config-files\"\n    }}>{`Shell config files`}</h3>\n    <p>{`This will vary depending on what kind of shell we are using eg. login or not login.`}</p>\n    <p>{`We can configure it to boot automatically (run level 5).`}</p>\n    <p><inlineCode parentName=\"p\">{`/etc/.bash_rc`}</inlineCode>{` is set up to run different commands and ENV vars for our enviornment.`}</p>\n    <p><inlineCode parentName=\"p\">{`/etc/.bash_profile`}</inlineCode>{` and other hidden `}<inlineCode parentName=\"p\">{`.bash_name`}</inlineCode>{` run at certain times etc. which can be used for login shells etc.`}</p>\n    <p>{`If you run a login shell, `}<inlineCode parentName=\"p\">{`.bash_profile`}</inlineCode>{` will be the first to run. No distribution will use all of these files.`}</p>\n    <p>{`There is also a certain order to how these files are called upon. Call order is also dependent on the OS.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// dependent on non login shells or login shells - eg booting into a machine\n.bash_profile\n.bash_login || .bash_rc // it will use the first that it finds and use that\n`}</code></pre>\n    <p>{`Every file is also user specific. If you can change `}<inlineCode parentName=\"p\">{`/etc/profile`}</inlineCode>{` you can change the settings for every single user.`}</p>\n    <h3 {...{\n      \"id\": \"variables-envsys-variables\"\n    }}>{`Variables: Env/Sys Variables`}</h3>\n    <p>{`There are user defined and system defined variables. It is stored in the systems RAM that is reserved for this sort of operation.`}</p>\n    <p><strong parentName=\"p\">{`Environment Variables`}</strong></p>\n    <p>{`These are named and defined by the OS. This is generally run from our shell prompt. Eg. the tilda key will always move us to our Home directory.`}</p>\n    <p><strong parentName=\"p\">{`User Variables`}</strong></p>\n    <p>{`These can be defined by the user themselves.`}</p>\n    <p>{`Adding a PATH for a new application.`}</p>\n    <p><inlineCode parentName=\"p\">{`PATH=$PATH:/var/opt/`}</inlineCode>{` - this will append the folder to a new env variable. Now we can add new scripts that we want to run here!`}</p>\n    <p>{`To make it apply to all of our login shells, we then go `}<inlineCode parentName=\"p\">{`export PATH`}</inlineCode>{`.`}</p>\n    <p>{`To keep it automatically when we start our system, we will need to edit our `}<inlineCode parentName=\"p\">{`.bash_profile`}</inlineCode>{` and adjust the path var.`}</p>\n    <p>{`Note: Interactive shells are ones that you can interact with.`}</p>\n    <h3 {...{\n      \"id\": \"variables-user-defined-vars\"\n    }}>{`Variables: User Defined vars`}</h3>\n    <p><inlineCode parentName=\"p\">{`var=value`}</inlineCode></p>\n    <p>{`So how do we create this?`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`awesome=\"dennis\"\necho $awesome\n`}</code></pre>\n    <p>{`To use this in other shells, again, we need to export the variable.`}</p>\n    <p>{`Variable names can container letters and numbers but cannot start with numbers.`}</p>\n    <h3 {...{\n      \"id\": \"globbing\"\n    }}>{`Globbing`}</h3>\n    <p>{`Globbing is the process of expanding a non-specific file name using a wildcard variable.`}</p>\n    <p>{`Globbing - Global Command. Historically, it came from the /etc/glob program.`}</p>\n    <p><strong parentName=\"p\">{`Commands`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`// find all .txt files\nls *.txt\n\n// list files that start with test\nls test*\n\n// replace the ? with an char\nls ????.txt\n\n// find file based on something you know with the ? wildcard\nls Monday-file?.txt\n\n// find files that begin with F\nls [F]*.txt\n\n// specify letter you think might come one way or another\nls f[igh][lfz]*\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"quoting\"\n    }}>{`Quoting`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Double quotes allow us to still use the value of variables and commands`}</li>\n      <li parentName=\"ul\">{`Single quotes preserve the literaly meaning of each character of a given string`}</li>\n      <li parentName=\"ul\">{`Backslash is an escape character`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"formatting-commands\"\n    }}>{`Formatting Commands`}</h3>\n    <p>{`We can use the backslash so that we can continue writing the command on the new line.`}</p>\n    <h3 {...{\n      \"id\": \"working-with-options\"\n    }}>{`Working with Options`}</h3>\n    <p>{`The commands parameters can be roughly divided in parameters starting with a dash (`}<em parentName=\"p\">{`options`}</em>{`) and no dashes (`}<em parentName=\"p\">{`arguments`}</em>{`)`}</p>\n    <h2 {...{\n      \"id\": \"linux-22-using-the-command-line-to-get-help\"\n    }}>{`LINUX-2.2: Using the Command Line to Get Help`}</h2>\n    <h3 {...{\n      \"id\": \"man\"\n    }}>{`Man`}</h3>\n    <h2 {...{\n      \"id\": \"linux-23-using-directories-and-listing-files\"\n    }}>{`LINUX-2.3: Using Directories and Listing Files`}</h2>\n    <h3 {...{\n      \"id\": \"the-linux-file-system\"\n    }}>{`The Linux File System`}</h3>\n    <h2 {...{\n      \"id\": \"linux-24-creating-moving-and-deleting-files\"\n    }}>{`LINUX-2.4: Creating, Moving and Deleting Files`}</h2>\n    <h3 {...{\n      \"id\": \"files-and-directories\"\n    }}>{`Files and Directories`}</h3>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"linux-3-the-power-of-the-command-line\"\n    }}>{`LINUX-3: The Power of the Command Line`}</h2>\n    <h2 {...{\n      \"id\": \"linux-31-archiving-files-on-the-command-line\"\n    }}>{`LINUX-3.1: Archiving Files on the Command Line`}</h2>\n    <h3 {...{\n      \"id\": \"files-directories\"\n    }}>{`Files, Directories`}</h3>\n    <p>{`We can archive multiple files into a single file and then compress them.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`Tar`}</inlineCode>{` to compress and `}<inlineCode parentName=\"p\">{`zip`}</inlineCode>{` which is generally for windows. `}<inlineCode parentName=\"p\">{`tar`}</inlineCode>{` is a Linux utility that archives things. It does not compress or compact files. It just sticks them together.`}</p>\n    <p>{`It was originally used to create tape backups. Tar stands for `}<inlineCode parentName=\"p\">{`Tape Archive`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# inside of a folder that contains a folder with three files\n# if we want to archive this folder\n# tar -cf creates the file name.tar\n# tar -xf extracts the file name.tar\n\ntar -cf folder1tar.tar folder1\n\n# this would archive folder1\n\ntar -xf folder1tar.tar\n\n# extracting this, we will have folder1 back\n\n# tar multiple archive files at once\n# ls\n# file1.txt file2.txt file3.txt\n\ntar -cf files.tar file1.txt file3.txt\n\n# now we will have files.tar with those two files\n\ntar -xf files.tar\n\n# extracts those two files\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"linux-5-the-linux-operating-system\"\n    }}>{`LINUX-5: The Linux Operating System`}</h2>\n    <h2 {...{\n      \"id\": \"linux-53-where-data-is-stored\"\n    }}>{`LINUX-5.3: Where Data is Stored`}</h2>\n    <h3 {...{\n      \"id\": \"linux-531-kernel\"\n    }}>{`LINUX-5.3.1: Kernel`}</h3>\n    <p>{`The Linux Kernel is a Unix-like OS.`}</p>\n    <p>{`The Linux is the core of any Linux installation.`}</p>\n    <p>{`The Linux kernel is responsible for managing every other piece of software on a running Linux computer.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It is responsibile for all of the interfacing of all the applications down to hardware between the interprocess communication system.`}</li>\n      <li parentName=\"ul\">{`Provides critical low level tasks.`}</li>\n      <li parentName=\"ul\">{`Loaded very early on in the boot process.`}</li>\n    </ul>\n    <p>{`We could change the program that runs as the first process by adding it to the boot loader option command line.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# run bash first after boot\ninit=/bin/bash\n`}</code></pre>\n    <p>{`First program is the `}<inlineCode parentName=\"p\">{`sbininit`}</inlineCode>{` process. This will run programs as child processes for things such as login etc.`}</p>\n    <p>{`Processes can leave behind children process that will be adopted. It's a tree like Hierarchy of processes.`}</p>\n    <p>{`There could be dozens to hundreds of processes. The kernel is at the top. We can then use commands like `}<inlineCode parentName=\"p\">{`ps`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{` to directly see and manipulate these processes.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-532-processes\"\n    }}>{`LINUX-5.3.2: Processes`}</h3>\n    <p>{`All processes have a PID.`}</p>\n    <p>{`Each process has an id which starts with one. There is also a PPID associated for the parents ID. We can identify these with utilities like `}<inlineCode parentName=\"p\">{`ps`}</inlineCode></p>\n    <p>{`The following command will allow you to see the processes with flags -a for all users, -u for showing users that are running the process, and -x for displaying processes which do not have a controlling terminal.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ps aux | grep <name>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`top`}</inlineCode>{` is an interactive version of `}<inlineCode parentName=\"p\">{`ps`}</inlineCode>{`. It shows a live visual. You can use options like `}<inlineCode parentName=\"p\">{`top -o CPU`}</inlineCode>{` to order usage by things like CPU etc.`}</p>\n    <p>{`Top can also provide a load average. A load average of 0 is a system that no programs are demanding CPU time. An average of 1 is a system with one program running a CPU intensive task.`}</p>\n    <p>{`Load averages can reach a number of cores. Eg. a load average of 4.0 would be a quad core system where a program requires all cores.`}</p>\n    <p>{`The term `}<inlineCode parentName=\"p\">{`hung`}</inlineCode>{` refers to an unresponsive program.`}</p>\n    <p>{`You cannot say a process is consuming too much memory just because it is at the top of the list. Sometimes, this could actually be a result of things such as a memory leak. This could be due to a bug, but at least you can kill a program in the mean time.`}</p>\n    <p>{`The kernel also grants program access to sets of memory address. Once the program is done, it should give that memory back.`}</p>\n    <p>{`There is also a `}<inlineCode parentName=\"p\">{`free`}</inlineCode>{` command in some linux systems where you can see how much memory is used.`}</p>\n    <p>{`Swap space is used for when the system runs out of RAM. It is generally low. If it rises too much, you'll suffer from performance loss.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-533-syslog-klog-dmesg\"\n    }}>{`LINUX-5.3.3: syslog, klog, dmesg`}</h3>\n    <p>{`Most background programs (daemon) write log files for being to show info about Linux Administration.`}</p>\n    <p>{`You can even tell these programs to log even more verbose message if you're looking for an issue.`}</p>\n    <p>{`Linux normally stores it in the `}<inlineCode parentName=\"p\">{`/var/log`}</inlineCode>{` directory.`}</p>\n    <p>{`We can see some interesting programs here.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cron`}</inlineCode>{` is a linux scheduling service.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`syslog`}</inlineCode>{` (mailbox) is the general purpose log files.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`secure`}</inlineCode>{` log is here when something requires root privilege.`}</li>\n    </ul>\n    <p>{`Most of the log files are easy to reading using things is `}<inlineCode parentName=\"p\">{`tail`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`less`}</inlineCode>{`.`}</p>\n    <p>{`If we use commands like `}<inlineCode parentName=\"p\">{`grep sshd /var/log/*`}</inlineCode>{` to actually look through all the log files!`}</p>\n    <p>{`Files in `}<inlineCode parentName=\"p\">{`/etc/sys`}</inlineCode>{` will show us some config files. This changes with each different Linux Distributions.`}</p>\n    <p>{`Once the log daemon is running, it will push messages towards a specific log file. The ring buffer is a log file for the kernel, which is stored on memory as opposed to a disk.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`dmesg`}</inlineCode>{` tool! Instead, if we pipe it to `}<inlineCode parentName=\"p\">{`tail`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`less`}</inlineCode>{`, we can check out the dynamic log.`}</p>\n    <p>{`If there issues that you don't understand, you can still check this out and find answers through a search engine.`}</p>\n    <p>{`If we jump to `}<inlineCode parentName=\"p\">{`/etc/rc.d/rc.local`}</inlineCode>{` file, we can set up dmesg > /var/log/dmesg, we can start logging the dmesg file to this file on reboot.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-534-lib-usrlib-etc-varlog\"\n    }}>{`LINUX-5.3.4: /lib, /usr/lib, /etc, /var/log`}</h3>\n    <p><strong parentName=\"p\">{`Data Locations`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/lib`}</inlineCode>{` : Linked library files used by binaries in /bin and /usr/bin - Dynamic libraries and files used for the boot process. - Kernel modules also live here.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/usr/lib`}</inlineCode>{` : Linked library files used by binaries in /bin and /usr/bin - Dynamic libraries and support static files for executables. - You can create your own helper files by creating more subdirectories here for things such as plugins and extensions.`}</li>\n    </ul>\n    <p>{`These two folders are similar to Windows .dll - the binaries or executables on the Mac are store in the above folders.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/etc`}</inlineCode>{` : Configuration files for our Linux OS`}</li>\n    </ul>\n    <p>{`This stores things for our Configuration. Things like mySql, Apache etc are stored here. For different daemons on the program, they will have a subdirectory in the etc folder directory.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/var/log`}</inlineCode>{` : Log files for our Linux OS`}</li>\n    </ul>\n    <p>{`This is used for the log files from the different daemons which we can use for trouble shooting down the track.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-54-your-computer-on-the-network\"\n    }}>{`LINUX-5.4: Your Computer on the Network`}</h3>\n    <h3 {...{\n      \"id\": \"linux-531-internet-network-routers\"\n    }}>{`LINUX-5.3.1: Internet, Network, Routers`}</h3>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}