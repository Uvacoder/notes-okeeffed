(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{"5nRf":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return l}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt"),n("mXGw");var a=n("/FXl"),o=n("TjRS");n("aD51");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Dotnet/Package-Management.md"}});var p={_frontmatter:c},i=o.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(i,r({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"dotnet-package-management"},"Dotnet Package Management"),Object(a.b)("h2",{id:"resources"},"Resources"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",r({parentName:"li"},{href:"https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-add-package"}),"dotnet add package command")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",r({parentName:"li"},{href:"https://www.nuget.org/"}),"NuGet package manager")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",r({parentName:"li"},{href:"https://docs.microsoft.com/en-us/nuget/install-nuget-client-tools"}),"Installing NuGet"))),Object(a.b)("h2",{id:"installing-a-package-on-a-dotnet-project"},"Installing a package on a Dotnet project"),Object(a.b)("p",null,"The tl;dr is that you run ",Object(a.b)("inlineCode",{parentName:"p"},"dotnet add package [pkg]")," in .NET projects. Example: ",Object(a.b)("inlineCode",{parentName:"p"},"dotnet add package Newtonsoft.Json"),"."),Object(a.b)("p",null,"As for an example of the Stripe installation, run ",Object(a.b)("inlineCode",{parentName:"p"},"dotnet add package Stripe.net")," and after a successful installation you will see the following in the ",Object(a.b)("inlineCode",{parentName:"p"},".csproj")," file:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-xml"}),'<Project Sdk="Microsoft.NET.Sdk.Web">\n\n  <PropertyGroup>\n    <TargetFramework>netcoreapp3.1</TargetFramework>\n  </PropertyGroup>\n\n  <ItemGroup>\n    \x3c!-- The important reference for Stripe.net --\x3e\n    <PackageReference Include="Stripe.net" Version="34.13.0" />\n  </ItemGroup>\n\n\n\n</Project>\n')),Object(a.b)("h2",{id:"specific-examples"},"Specific Examples"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-shell"}),"# add `Newtonsoft.Json` NuGet package\ndotnet add package Newtonsoft.Json\n# add specific version of package to a project\ndotnet add ToDo.csproj package Microsoft.Azure.DocumentDB.Core -v 1.0.0\n# add package using a specific NuGet source\ndotnet add package Microsoft.AspNetCore.StaticFiles -s https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\n")),Object(a.b)("h2",{id:"other-useful-commands"},"Other useful commands"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-shell"}),"# show packages\ndotnet list pacakge\n# remove package\ndotnet remove package $PACKAGE_NAME\n")))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Dotnet/Package-Management.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-dotnet-package-management-md-0854da7b064406af32cd.js.map