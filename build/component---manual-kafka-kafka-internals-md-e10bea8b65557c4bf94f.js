(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{egfU:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return s}));a("1c7q"),a("abGl"),a("gZHo"),a("Fdmb"),a("Ir+3"),a("2mQt"),a("mXGw");var r=a("/FXl"),n=a("TjRS");a("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Kafka/Kafka-Internals.md"}});var o={_frontmatter:l},b=n.a;function s(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(r.b)(b,i({},o,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"kafka-internals"},"Kafka Internals"),Object(r.b)("h2",{id:"broker"},"Broker"),Object(r.b)("p",null,"Each broker is assigned an ID. When there are multiple brokers in a cluster (best practice), one is selected as the ",Object(r.b)("inlineCode",{parentName:"p"},"Controller"),". The Controller will be responsible for electing the leader of the partition."),Object(r.b)("h2",{id:"broker-config"},"Broker Config"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",i({parentName:"tr"},{align:null}),"Term"),Object(r.b)("th",i({parentName:"tr"},{align:null}),"Path"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",i({parentName:"tr"},{align:null}),"Broker Config"),Object(r.b)("td",i({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"kafka/config/server.properties"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",i({parentName:"tr"},{align:null}),"Server Logs"),Object(r.b)("td",i({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"kafka/logs/server.log"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",i({parentName:"tr"},{align:null}),"Messages Logs"),Object(r.b)("td",i({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"kafka/data/kafka"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",i({parentName:"tr"},{align:null}),"View Nodes in Zookeeper Shell"),Object(r.b)("td",i({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"kafka/bin/zookeeper-shell.sh zookeeper1:2181/kafka && ls get /controller"))))),Object(r.b)("h2",{id:"replicas"},"Replicas"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Replicas")," provide guarantees for the availability of the data. The replicator ",Object(r.b)("inlineCode",{parentName:"p"},"factor")," provides a way for the Kafka administrator to control the availability of that data in the event of failure. For example, if the replication factor is set to 3, you will have 3 copies of each partition spread across the brokers."),Object(r.b)("p",null,"What are the goals for placement of replicas?"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Spread evenly amongst brokers"),Object(r.b)("li",{parentName:"ul"},"Each partition is on a different broker"),Object(r.b)("li",{parentName:"ul"},"Put replicas on different racks")),Object(r.b)("h2",{id:"handling-requests"},"Handling Requests"),Object(r.b)("p",null,"Producer or consumer sends request to the Broker and the Broker handles the request in the following way:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Acceptor Thread: Creates the connection from client to Broker."),Object(r.b)("li",{parentName:"ol"},"Processor Thread: Takes requests from clientss and places them into the request queue."),Object(r.b)("li",{parentName:"ol"},"IO Thread: Processes the requests in the requests queue."),Object(r.b)("li",{parentName:"ol"},"Request Queue: Requests waiting to be processed."),Object(r.b)("li",{parentName:"ol"},"Response Queue: Requests waiting to be sent back to the clients.")),Object(r.b)("h2",{id:"partitions"},"Partitions"),Object(r.b)("p",null,"Within a broker, a topic can be broken down into multiple partitions (with n-1 partitions being replicas)."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Partitions within a topic are split between brokers."),Object(r.b)("li",{parentName:"ul"},"Partitions themselves will never be split up."),Object(r.b)("li",{parentName:"ul"},"Partitions will continue to get larger as the number of messages grow."),Object(r.b)("li",{parentName:"ul"},"Messages will never be removed from the partition, only appended."),Object(r.b)("li",{parentName:"ul"},"Messages are stored in the directory specified in the ",Object(r.b)("inlineCode",{parentName:"li"},"server.properties")," file (log.dirs).")))}s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Kafka/Kafka-Internals.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-kafka-kafka-internals-md-e10bea8b65557c4bf94f.js.map