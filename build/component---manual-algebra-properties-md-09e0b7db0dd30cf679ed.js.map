{"version":3,"sources":["webpack:///../manual/Algebra/Properties.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","math","isMDXComponent"],"mappings":"0gBAQO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAIA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,qFADQ,oCAItB,iBAAQ,CACN,GAAM,yBADR,yBAGA,iBAAQ,CACN,GAAM,mCADR,mCAGA,oCACA,sBACE,kBAAIA,WAAW,MAAf,sKACA,kBAAIA,WAAW,MAAf,uDAEF,YAAC,YAAD,CAAWC,KAAK,oBAAoBF,QAAQ,cAC5C,YAAC,YAAD,CAAWE,KAAK,oBAAoBF,QAAQ,cAC5C,iBAAQ,CACN,GAAM,qCADR,qCAGA,6JACA,YAAC,YAAD,CAAWE,KAAK,iCAAiCF,QAAQ,cACzD,YAAC,YAAD,CAAWE,KAAK,iCAAiCF,QAAQ,cACzD,iBAAQ,CACN,GAAM,oCADR,oCAGA,+PACA,YAAC,YAAD,CAAWE,KAAK,6CAA0CF,QAAQ,cAClE,YAAC,YAAD,CAAWE,KAAK,6CAA0CF,QAAQ,cAClE,iBAAQ,CACN,GAAM,8BADR,8BAGA,YAAC,YAAD,CAAWE,KAAK,YAAYF,QAAQ,cACpC,iBAAQ,CACN,GAAM,oCADR,oCAGA,YAAC,YAAD,CAAWE,KAAK,8BAA4BF,QAAQ,cACpD,iBAAQ,CACN,GAAM,6BADR,6BAGA,YAAC,YAAD,CAAWE,KAAK,0BAA0BF,QAAQ,cAClD,iBAAQ,CACN,GAAM,mCADR,mCAGA,YAAC,YAAD,CAAWE,KAAK,oDAAgDF,QAAQ,cACxE,iBAAQ,CACN,GAAM,0BADR,0BAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,8HACA,YAAC,YAAD,CAAWE,KAAK,uCAAoCF,QAAQ,cAC5D,iBAAQ,CACN,GAAM,iBADR,iBAGA,uHACA,YAAC,YAAD,CAAWE,KAAK,wCAAqCF,QAAQ,cAC7D,iBAAQ,CACN,GAAM,cADR,cAGA,4FACA,YAAC,YAAD,CAAWE,KAAK,8BAA4BF,QAAQ,cACpD,iBAAQ,CACN,GAAM,0BADR,0BAGA,6HACA,YAAC,YAAD,CAAWE,KAAK,oCAAiCF,QAAQ,cACzD,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,YAAD,CAAWE,KAAK,mCAAgCF,QAAQ,e,qMAK5DH,EAAWM,gBAAiB","file":"component---manual-algebra-properties-md-09e0b7db0dd30cf679ed.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport 'katex/dist/katex.min.css';\nimport { BlockMath } from 'react-katex';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h1>\n\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.chilimath.com/lessons/intermediate-algebra/derive-quadratic-formula/\"\n        }}>{`Deriving the Quadratic Formula`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"properties-of-algebra\"\n    }}>{`Properties of Algebra`}</h2>\n    <h3 {...{\n      \"id\": \"commutative-property-of-algebra\"\n    }}>{`Commutative Property of Algebra`}</h3>\n    <p>{`Definition:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`involving the condition that a group of quantities connected by operators gives the same result whatever the order of the quantities involved, e.g. a × b = b × a.`}</li>\n      <li parentName=\"ol\">{`relating to or involving substitution or exchange.`}</li>\n    </ol>\n    <BlockMath math=\"a + b = 7 + 2 = 9\" mdxType=\"BlockMath\" />\n    <BlockMath math=\"b + a = 2 + 7 = 9\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"associativity-property-of-algebra\"\n    }}>{`Associativity Property of Algebra`}</h3>\n    <p>{`Grouping of more than two numbers to perform basic aritmetic operations of addition/multiplication does not affect the final result.`}</p>\n    <BlockMath math=\"(a + b) + c = (-2 + 4) + 5 = 7\" mdxType=\"BlockMath\" />\n    <BlockMath math=\"a + (b + c) = -2 + (4 + 5) = 7\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"distributive-property-of-algebra\"\n    }}>{`Distributive Property of Algebra`}</h3>\n    <p>{`The distributive property defines that the product of a single term and a sum or difference of two or more terms inside the bracket is same as multiplying each addend by the single term and then adding or subtracting the products.`}</p>\n    <BlockMath math=\"(a + b) \\cdot c = a \\cdot c + b \\cdot c\" mdxType=\"BlockMath\" />\n    <BlockMath math=\"a \\cdot (b + c) = a \\cdot b + a \\cdot c\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"additive-identity-property\"\n    }}>{`Additive Identity Property`}</h3>\n    <BlockMath math=\"a = a + 0\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"multiplicative-identity-property\"\n    }}>{`Multiplicative Identity Property`}</h3>\n    <BlockMath math=\"a = a \\cdot 1 = 1 \\cdot a\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"additive-inverse-property\"\n    }}>{`Additive Inverse Property`}</h3>\n    <BlockMath math=\"a + (-a) = 0 = (-a) + a\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"multiplicative-inverse-property\"\n    }}>{`Multiplicative Inverse Property`}</h3>\n    <BlockMath math=\"2 \\cdot \\frac{1}{2} = 0 = \\frac{1}{2} \\cdot 2\" mdxType=\"BlockMath\" />\n    <h2 {...{\n      \"id\": \"logarithmic-properties\"\n    }}>{`Logarithmic Properties`}</h2>\n    <h3 {...{\n      \"id\": \"product-rule\"\n    }}>{`Product Rule`}</h3>\n    <p>{`The log of a product is equal to the sum of the log of the first base and the log of the second base:`}</p>\n    <BlockMath math=\"\\log_b (xy) = \\log_b x + \\log_b y\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"quotient-rule\"\n    }}>{`Quotient Rule`}</h3>\n    <p>{`The log of a quotient is equal to the difference of the logs of the numerator and denominator:`}</p>\n    <BlockMath math=\"\\log_b (x/y) = \\log_b x - \\log_b y\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"power-rule\"\n    }}>{`Power Rule`}</h3>\n    <p>{`The log of a power is equal to the power times the log of the base:`}</p>\n    <BlockMath math=\"\\log_b (x^n) = n \\log_b x\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"change-of-base-formula\"\n    }}>{`Change of Base Formula`}</h3>\n    <p>{`The log of a new base is the log of the new base divided by the log of the old base in the new base:`}</p>\n    <BlockMath math=\"\\log_b x = \\log_a x / \\log_a b\" mdxType=\"BlockMath\" />\n    <h3 {...{\n      \"id\": \"base-switch-rule\"\n    }}>{`Base Switch Rule`}</h3>\n    <BlockMath math=\"\\log_b x = \\frac{1}{\\log_x b}\" mdxType=\"BlockMath\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}