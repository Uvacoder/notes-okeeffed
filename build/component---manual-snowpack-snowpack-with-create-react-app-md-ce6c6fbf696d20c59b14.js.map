{"version":3,"sources":["webpack:///../manual/Snowpack/Snowpack-With-Create-React-App.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,mOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAQ,CACN,GAAM,aADR,aAGA,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eADZ,4CAIL,iBAAQ,CACN,GAAM,0BADR,0BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iDAML,iBAAQ,CACN,GAAM,aADR,cAGA,+BAAc,0BAAYA,WAAW,KAAvB,2DAAd,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yzDA+CL,iBAAQ,CACN,GAAM,UADR,UAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,saAmBL,iBAAQ,CACN,GAAM,gBADR,gBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,gIAQL,iBAAQ,CACN,GAAM,eADR,gBAGA,yCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6E,0NAUTJ,EAAWK,gBAAiB","file":"component---manual-snowpack-snowpack-with-create-react-app-md-ce6c6fbf696d20c59b14.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"snowpack-with-cra\"\n    }}>{`Snowpack with CRA`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <h2 {...{\n      \"id\": \"starting-the-app\"\n    }}>{`Starting the app`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`npx create-react-app snowpack-example\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"babel-run-command-file\"\n    }}>{`Babel Run Command File`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"presets\": [\"@babel/preset-react\"]\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"indexhtml\"\n    }}>{`index.html`}</h2>\n    <p>{`Add in `}<inlineCode parentName=\"p\">{`<script type=\"module\" src=\"/_dist_/index.js\"></script>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the \\`public\\` folder during the build.\n      Only files inside the \\`public\\` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running \\`npm run build\\`.\n    -->\n    <title>React App</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/_dist_/index.js\"></script>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run \\`npm start\\` or \\`yarn start\\`.\n      To create a production bundle, use \\`npm run build\\` or \\`yarn build\\`.\n    -->\n  </body>\n</html>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"config\"\n    }}>{`Config`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// snowpack.config.js\n// Plugin: https://github.com/ionic-team/rollup-plugin-node-polyfills\nmodule.exports = {\n  extends: '@snowpack/app-scripts-react',\n  devOptions: {\n    port: 8080,\n    src: 'src',\n    bundle: process.env.NODE_ENV === 'production',\n    fallback: 'public/index.html',\n  },\n  installOptions: {\n    rollup: {\n      plugins: [require('rollup-plugin-node-polyfills')()],\n    },\n  },\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"dependencies\"\n    }}>{`Dependencies`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`npm i --save-dev \\\\\n@snowpack/app-scripts-react \\\\\n@snowpack/plugin-babel \\\\\nrollup-plugin-node-polyfills \\\\\nsnowpack\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"packagejson\"\n    }}>{`package.json`}</h2>\n    <p>{`Add this script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"scripts\": {\n  \"dev\": \"snowpack dev --config snowpack.config.js\",\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}