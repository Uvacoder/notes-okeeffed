(window.webpackJsonp=window.webpackJsonp||[]).push([[218],{tYKp:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return p}));t("1c7q"),t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3"),t("2mQt"),t("mXGw");var r=t("/FXl"),a=t("TjRS");t("aD51");function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Electron/Electron-With-Parcel.md"}});var l={_frontmatter:o},i=a.a;function p(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(r.b)(i,c({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"production-ready-electron--parcel"},"Production-Ready Electron + Parcel"),Object(r.b)("h2",{id:"resources"},"Resources"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("a",c({parentName:"li"},{href:"https://medium.com/@yogeshkumarr/production-ready-electron-app-using-react-and-parcel-web-bundler-74dcda63f148"}),"Medium post")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("a",c({parentName:"li"},{href:"https://parceljs.org/typeScript.html"}),"Parcel TypeScript")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("a",c({parentName:"li"},{href:"https://www.electronjs.org/docs/api/dialog"}),"Electron - Dialog API"))),Object(r.b)("h2",{id:"tldr"},"tl;dr"),Object(r.b)("p",null,"First, init project:"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-sh"}),"mkdir hello-parcel-electron\ncd hello-parcel-electron\nyarn init -y\nyarn add react react-dom electron-is-dev\nyarn add -D concurrently cross-env electron electron-builder parcel-bundler wait-on typescript\n# Babel\nyarn add -D babel-core babel-plugin-transform-object-rest-spread babel-plugin-transform-react-jsx babel-preset-env babel-preset-react\n")),Object(r.b)("p",null,"Second, create ",Object(r.b)("inlineCode",{parentName:"p"},"index.html")," file in root dir:"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-html"}),'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="X-UA-Compatible" content="ie=edge" />\n    <title>Electron React Parcel</title>\n    <link\n      rel="shortcut icon"\n      href="./src/assets/logo.ico"\n      type="image/x-icon"\n    />\n  </head>\n  <body>\n    <div id="root"></div>\n    <script src="./src/index.js"><\/script>\n  </body>\n</html>\n')),Object(r.b)("p",null,"Third, create assets in ",Object(r.b)("inlineCode",{parentName:"p"},"src")," dir for ",Object(r.b)("inlineCode",{parentName:"p"},"index.js")," + ",Object(r.b)("inlineCode",{parentName:"p"},"App.js"),":"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-javascript"}),"// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// App.js\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <WhateverYouWant />\n      </div>\n    );\n  }\n}\nexport default App;\n")),Object(r.b)("p",null,"Create ",Object(r.b)("inlineCode",{parentName:"p"},".babelrc"),":"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-javascript"}),'{\n  "presets": ["env", "react"],\n  "plugins": ["transform-object-rest-spread", "transform-react-jsx"]\n}\n')),Object(r.b)("p",null,"Add scripts to ",Object(r.b)("inlineCode",{parentName:"p"},"package.json"),":"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "homepage": "./",\n  "main": "src/electron.js",\n  "scripts": {\n    "react-start": "parcel -p 3000 index.html --out-dir build",\n    "react-build": "parcel build index.html --out-dir build --public-url ./",\n    "start": "concurrently \\"cross-env BROWSER=none yarn react-start\\" \\"wait-on http://localhost:3000 && electron . \\"",\n    "electron-build": "electron-builder -mwl",\n    "build": "yarn clean-build && yarn react-build && yarn electron-build"\n  },\n  "build": {\n    "appId": "com.dennisokeeffe",\n    "files": ["src/electron.js", "src/assets/*", "build/**/*"],\n    "mac": {\n      "target": "dmg",\n      "icon": "src/assets/logo.png"\n    },\n    "win": {\n      "target": "nsis",\n      "icon": "src/assets/logo.png"\n    },\n    "linux": {\n      "target": "deb",\n      "icon": "src/assets/logo.png",\n      "category": "Development"\n    }\n  }\n}\n')),Object(r.b)("p",null,"Add ",Object(r.b)("inlineCode",{parentName:"p"},"electron.js")," in ",Object(r.b)("inlineCode",{parentName:"p"},"src")," directory:"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-javascript"}),"const electron = require('electron');\nconst app = electron.app;\n\nconst BrowserWindow = electron.BrowserWindow;\n\nconst path = require('path');\nconst isDev = require('electron-is-dev');\n\nlet mainWindow;\n\nfunction createWindow() {\n  mainWindow = new BrowserWindow({\n    width: 900,\n    height: 680,\n  });\n\n  mainWindow.loadURL(\n    isDev\n      ? 'http://localhost:3000'\n      : `file://${path.join(__dirname, '../build/index.html')}`,\n  );\n  mainWindow.on('closed', () => (mainWindow = null));\n}\n\napp.on('ready', createWindow);\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  if (mainWindow === null) {\n    createWindow();\n  }\n});\n")),Object(r.b)("p",null,"In order to update to TypeScript, simply add the ",Object(r.b)("inlineCode",{parentName:"p"},"tsconfig.json")," file:"),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-json"}),'// tsconfig.json\n{\n  "compilerOptions": {\n    "jsx": "react"\n  }\n}\n')),Object(r.b)("p",null,"To start now, we run ",Object(r.b)("inlineCode",{parentName:"p"},"yarn start")," and to build we run ",Object(r.b)("inlineCode",{parentName:"p"},"yarn build"),"."))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Electron/Electron-With-Parcel.md"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-electron-electron-with-parcel-md-f1b2a26c22623b308aab.js.map