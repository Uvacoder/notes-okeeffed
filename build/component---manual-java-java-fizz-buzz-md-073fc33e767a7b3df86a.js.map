{"version":3,"sources":["webpack:///../manual/Java/Java-Fizz-Buzz.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,+MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,gCAAe,0BAAYC,WAAW,KAAvB,gBAAf,UACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,uSAoBL,iBAAQ,CACN,GAAM,wBADR,wBAGA,oCAAmB,0BAAYA,WAAW,KAAvB,mCAAnB,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,snBA8BL,iBAAQ,CACN,GAAM,2BADR,+BAGA,iEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gVAgBL,iBAAQ,CACN,GAAM,iBADR,iBAGA,4BAAW,0BAAYA,WAAW,KAAvB,eAAX,6C,sMAKJJ,EAAWK,gBAAiB","file":"component---manual-java-java-fizz-buzz-md-073fc33e767a7b3df86a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"fizz-buzz-in-java\"\n    }}>{`Fizz Buzz in Java`}</h1>\n    <h2 {...{\n      \"id\": \"gradle-setup\"\n    }}>{`Gradle setup`}</h2>\n    <p>{`For our `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`apply plugin: \"java\"\napply plugin: \"eclipse\"\napply plugin: \"idea\"\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile \"junit:junit:4.12\"\n}\ntest {\n    testLogging {\n        exceptionFormat = 'full'\n        events = [\"passed\", \"failed\", \"skipped\"]\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-tests\"\n    }}>{`Setting up the Tests`}</h2>\n    <p>{`Create file `}<inlineCode parentName=\"p\">{`src/test/java/FizzBuzzTest.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import org.junit.Ignore;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class FizzBuzzTest {\n    @Test\n    public void testReturnsIntAsString() {\n        assertEquals(\"2\", new FizzBuzz().run(2));\n    }\n\n    // @Ignore(\"Remove to run test\")\n    @Test\n    public void testReturnsFizz() {\n        assertEquals(\"Fizz\", new FizzBuzz().run(3));\n    }\n\n    @Test\n    public void testReturnsBuzz() {\n        assertEquals(\"Buzz\", new FizzBuzz().run(5));\n    }\n\n    @Test\n    public void testReturnsFizzBuzz() {\n        assertEquals(\"FizzBuzz\", new FizzBuzz().run(15));\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"srcmainjavafizzbuzzjava\"\n    }}>{`src/main/java/FizzBuzz.java`}</h2>\n    <p>{`For our main Java file running FizzBuzz:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`class FizzBuzz {\n    String run(Integer input) {\n        if (input % 15 == 0) {\n            return \"FizzBuzz\";\n        } else if (input % 3 == 0) {\n            return \"Fizz\";\n        } else if (input % 5 == 0) {\n            return \"Buzz\";\n        } else {\n            return Integer.toString(input);\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-tests\"\n    }}>{`Running tests`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`gradle test`}</inlineCode>{` to compile and test our FizzBuzz class.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}