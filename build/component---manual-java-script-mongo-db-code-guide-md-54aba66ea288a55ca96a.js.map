{"version":3,"sources":["webpack:///../manual/JavaScript/Mongo-DB-Code-Guide.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,0NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAQ,CACN,GAAM,yBADR,0BAGA,uBAAK,sBAAMC,WAAW,OAAU,IAA3B,gHAOL,iBAAQ,CACN,GAAM,uBADR,wBAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kaAOL,iBAAQ,CACN,GAAM,8BADR,+BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,uiBAoCL,iBAAQ,CACN,GAAM,yDADR,8CAEkD,0BAAYA,WAAW,MAAvB,QAFlD,WAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kOAYL,iBAAQ,CACN,GAAM,wCADR,yCAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8hB,iNAyBTJ,EAAWK,gBAAiB","file":"component---manual-java-script-mongo-db-code-guide-md-54aba66ea288a55ca96a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"mongo-cheat-sheet\"\n    }}>{`Mongo Cheat Sheet`}</h1>\n    <h2 {...{\n      \"id\": \"mongo-1-mongo-install\"\n    }}>{`MONGO-1: Mongo Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install mongoose --save\n\n// to run\n\nmongod // starts the daemon\nmongo // check out the documents\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"mongo-2-mongo-shell\"\n    }}>{`MONGO-2: Mongo Shell`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`show dbs — // display the databases\nuse bookworm — // specify the database you're going to work with\nshow collections — // shows the document collections for the selected database\ndb.users.find() — // display all the documents in the users collection\ndb.users.find().pretty() — // nicer format for output documents within the shell\ndb.users.drop() — // remove the users collection from the current database\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"mongo-3-mongo-sample-usage\"\n    }}>{`MONGO-3: Mongo Sample Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// models > user.js\n\nvar mongoose = require('mongoose');\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    trim: true,\n    unique: true,\n  },\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  favoriteBook: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true\n  }\n});\n\nvar User = mongoose.model('User', UserSchema);\nmodule.exports = User;\n\n// in app.js\n\nvar User = require('../models/user');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"mongo-4-building-an-example-schema-in-the-mock-folder\"\n    }}>{`MONGO-4: Building an Example Schema in the `}<inlineCode parentName=\"h2\">{`mock`}</inlineCode>{` folder`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`// mock/example.js\n\nimport mongoose from 'mongoose';\n\nconst schema = new mongoose.Schema({\n  question: String,\n  answer: String,\n  completed: Boolean\n});\n\nexport const model = mongoose.model('Layout', schema);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"mongo-5-accessing-the-schema-results\"\n    }}>{`MONGO-5: Accessing the Schema results`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`// in a route file\nvar express = require('express');\nvar router = express.Router();\n\nimport {ExampleModel} from '../models/example';\n\n/* GET users listing. */\nrouter.get('/', (req, res) => {\n  console.log(ExampleModel);\n  ExampleModel.find({}, \"test string\", (err, results) => {\n    if (err) {\n      return res.status(500).json({message: err.message});  \n    }\n    res.json({ results: results });\n  });\n  // res.json({ todos: \"todos\" });\n    // res.send('respond with a resource');\n});\n\nmodule.exports = router;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}