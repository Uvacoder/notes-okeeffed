{"version":3,"sources":["webpack:///../manual/Redux/ReduxPersist.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,yCADR,yCAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,6DAIL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,+8C,qMA2DTJ,EAAWK,gBAAiB","file":"component---manual-redux-redux-persist-md-33f8b97cc6051d1b5d9d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"redux-persist-usage-with-react-native\"\n    }}>{`Redux Persist usage with React Native`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add redux-persist redux-persist-sensitive-storage\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n// if you need to persist\nimport createSensitiveStorage from 'redux-persist-sensitive-storage';\n\nAmplify.configure(config);\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancers = [];\nconst reducers = combineReducers({\n  copy: CopyReducer,\n  auth: AuthReducer,\n  navigation: NavReducer\n});\nenhancers.push(applyMiddleware(logger, reduxNavMiddleware, sagaMiddleware));\n\n// persist updates\nconst persistConfig = {\n  key: 'primary',\n  storage,\n  whitelist: __DEV__\n    ? ['CopyReducer', 'OffersReducer', 'StoresReducer']\n    : [\n        'CopyReducer',\n        'ProfileReducer',\n        'OffersReducer',\n        'StoresReducer',\n        'LoyaltyCardReducer'\n      ]\n};\nconst configuredReducers = persistReducer(persistConfig, reducers);\nconst store = createStore(configuredReducers, composeEnhancers(...enhancers));\n\n/* if you need sensitive storage */\nconst persistor = persistStore(store, createSensitiveStorage(), () =>\n  console.info('Persist configured')\n);\n/* else */\n// const persistor = persistStore(store);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <ReduxNavigation />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}