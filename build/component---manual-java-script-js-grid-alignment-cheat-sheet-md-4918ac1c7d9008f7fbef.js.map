{"version":3,"sources":["webpack:///../manual/JavaScript/js-grid-alignment-cheat-sheet.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,oOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,yCADR,yCAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,88C,2NAoETJ,EAAWK,gBAAiB","file":"component---manual-java-script-js-grid-alignment-cheat-sheet-md-4918ac1c7d9008f7fbef.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"javascript-grid-alignment-cheat-sheet\"\n    }}>{`JavaScript Grid Alignment Cheat Sheet`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/*\n    This example comes from the NPWS grid system\n*/\n\nvar grid = {\n\n    row: [],\n    perRow: 0,\n    height: 0,\n    small: 767,\n    medium: 1190,\n\n    $grid: $('.grid'),\n    $tile: $('.grid .tile'),\n\n    init: function () {\n        grid.resize();\n\n        $(window).resize(grid.resize);\n    },\n\n    resize: function () {\n        if ($(window).outerWidth() < grid.small) {\n            grid.$tile.find('.info').height('auto');\n        } else {\n            grid.$tile.each(function (key) {\n                if ((key) % grid.elemPerRow + 1 === 1 && (key !== 0)) {\n                    grid.setHeight();\n                    grid.height = 0;\n                    grid.row = [];\n                }\n\n                grid.row.push(this);\n\n                if ($(this).find('.info').height() > grid.height) {\n                    grid.height = $(this).find('.info').height();\n                }\n            });\n\n            if (grid.row.length) {\n                grid.setHeight();\n            }\n        }\n    },\n\n    setHeight: function () {\n        for (var i in grid.row) {\n            $(grid.row[i]).find('.info').height(grid.height);\n        }\n    },\n\n    getElemPerRow: function () {\n        if ($(window).outerWidth() > grid.medium) {\n            grid.elemPerRow = 3;\n        } else if ($(window).outerWidth() > grid.small) {\n            grid.elemPerRow = 2;\n        } else {\n            grid.elemPerRow = 1;\n        }\n    },\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}