{"version":3,"sources":["webpack:///../manual/Java/Basic-Imports.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,mEAAkD,0BAAYC,WAAW,KAAvB,YAAlD,yDACA,iBAAQ,CACN,GAAM,UADR,UAGA,8DAA6C,0BAAYA,WAAW,KAAvB,eAA7C,qDAA0J,0BAAYA,WAAW,KAAvB,SAA1J,oBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,+KAWL,iBAAQ,CACN,GAAM,oCADR,yCAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sZA2BL,iBAAQ,CACN,GAAM,8BADR,mCAGA,uEAAsD,0BAAYA,WAAW,KAAvB,UAAtD,iCAA0I,0BAAYA,WAAW,KAAvB,aAA1I,qBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6kBAmCL,iBAAQ,CACN,GAAM,wCADR,6CAGA,6EAA4D,0BAAYA,WAAW,KAAvB,QAA5D,8DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,+U,qMAqBTJ,EAAWK,gBAAiB","file":"component---manual-java-basic-imports-md-ae69bde44182b30f91cf.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"basic-java-importing\"\n    }}>{`Basic Java Importing`}</h1>\n    <p>{`This is a basic reminder on how to declare `}<inlineCode parentName=\"p\">{`packages`}</inlineCode>{` and import those packages when running Gradle tests.`}</p>\n    <h2 {...{\n      \"id\": \"layout\"\n    }}>{`Layout`}</h2>\n    <p>{`Given the following example to test a `}<inlineCode parentName=\"p\">{`Linked List`}</inlineCode>{` Java class, we have the following layout for the `}<inlineCode parentName=\"p\">{`.java`}</inlineCode>{` and test files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`└── src\n    ├── main\n    │   └── java\n    │       ├── LinkedList.java\n    │       └── Node.java\n    └── test\n        └── java\n            └── LinkedListTest.java\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"file-1-srcmainjavalinkedlistjava\"\n    }}>{`File 1: src/main/java/LinkedList.java`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import main.java.Node;\n\nclass LinkedList {\n    Integer size;\n    Node head;\n\n    public LinkedList() {\n        this.size = 0;\n        this.head = null;\n    }\n\n    public LinkedList(Node head) {\n        this.size = 1;\n        this.head = head;\n    }\n\n    public Integer getSize() {\n        return this.size;\n    }\n\n    public Node getFirst() {\n        return this.head;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"file-2-srcmainjavanodejava\"\n    }}>{`File 2: src/main/java/Node.java`}</h2>\n    <p>{`Notice here that the package itself is has the `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{` modifier and has the package `}<inlineCode parentName=\"p\">{`main.java`}</inlineCode>{` itself declared.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package main.java;\n\npublic class Node {\n    private Integer data;\n    private Node next;\n\n    public Node(Integer data) {\n        this.data = data;\n        this.next = null;\n    }\n\n    public Node(Integer data, Node next) {\n        this.data = data;\n        this.next = next;\n    }\n\n    public void setNext(Node next) {\n        this.next = next;\n    }\n\n    public Node getNext() {\n        return this.next;\n    }\n\n    public void setData(Integer data) {\n        this.data = data;\n    }\n\n    public Integer getData() {\n        return this.data;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"file-3-srctestjavalinkedlisttestjava\"\n    }}>{`File 3: src/test/java/LinkedListTest.java`}</h2>\n    <p>{`For this particular test, we also need to import the `}<inlineCode parentName=\"p\">{`Node`}</inlineCode>{` package to ensure we can create nodes for the LinkedList.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import org.junit.Ignore;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\nimport main.java.Node;\n\npublic class LinkedListTest {\n    @Test\n    public void testGetFirst() {\n        Node n1 = new Node(2);\n        LinkedList ll = new LinkedList(n1);\n        assertEquals(ll.getFirst(), n1);\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}