{"version":3,"sources":["webpack:///../manual/JavaScript/Gulp-Basics-TH.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,qNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,oCACA,kFACA,mDACA,yBAAQ,sBAAQC,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAK,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,IAA3B,0CAGzC,kBAAIA,WAAW,MAAK,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,IAA3B,4BAChC,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADjJ,MAGF,qDACA,2EACA,iFACA,4DACA,sBACE,kBAAIA,WAAW,MAAf,mDACA,kBAAIA,WAAW,MAAf,+BAEF,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,oBAEJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,uEACA,yEACA,4CACA,sBACE,kBAAIA,WAAW,MAAf,sCACA,kBAAIA,WAAW,MAAf,mCAEF,+EACA,kDACA,sBACE,kBAAIA,WAAW,MAAf,qCACA,kBAAIA,WAAW,MAAf,6BACA,kBAAIA,WAAW,MAAf,8CAEF,kCACA,sBACE,kBAAIA,WAAW,MAAf,kDAAuE,sBAAQA,WAAW,MAAnB,KAAvE,UAEF,mCACA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,qBAEJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,8CACA,oDAGA,uCACA,sBACE,kBAAIA,WAAW,MAAf,mDAEF,oGACA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,qBAEJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,kEACA,sCACA,oDACA,wHAGA,qDACA,iLAGA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,iCAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,sBACE,kBAAIA,WAAW,MAAf,oEAGF,gCACA,oCACA,sBACE,kBAAIA,WAAW,MAAf,gCAEF,0DACA,wFACA,yCACA,sCACA,0FAEA,oOAMA,qDACA,iLAGA,uEACA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,2BAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,sBACE,kBAAIA,WAAW,MAAf,oCAEF,+CACA,2DACA,sCACA,gIAGA,sRAQA,sIAKA,qDACA,0MAGA,uDACA,kDACA,2DACA,kFACA,uDACA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,wCAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,gFACA,sBACE,kBAAIA,WAAW,MAAf,yBAEF,0CACA,yDACA,iEACA,mCACA,sCACA,wMAKA,sRAQA,qKAMA,gJAKA,qDACA,0MAGA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,mCAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,+EACA,sBACE,kBAAIA,WAAW,MAAf,oCACA,kBAAIA,WAAW,MAAf,mDAEF,iDACA,sDACA,+DACA,sCACA,gPAMA,sRAQA,qKAMA,4LAOA,qDACA,0MAGA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,4BAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,sCACA,gPAMA,kVAUA,qKAMA,4LAOA,qDACA,0MAGA,kFACA,mEACA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,IAET,kBAAIA,WAAW,MAAf,sCAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,2DACA,oEACA,+FACA,sCACA,gPAMA,yVAUA,qMAMA,mMAOA,oFACA,qDACA,iLAGA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,gEAGA,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,sDACA,yEACA,wIAEA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8EAIL,4BACA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,KAET,kBAAIA,WAAW,MAAf,yCAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,yEACA,sDACA,sBACE,kBAAIA,WAAW,MAAf,2BAEF,2CACA,sBACE,kBAAIA,WAAW,MAAf,yCAEF,2CACA,gLAC8E,sBAAQA,WAAW,KAAnB,cAD9E,0DAIA,0CACA,sBACE,kBAAIA,WAAW,MAAf,6CACA,kBAAIA,WAAW,MAAf,yDAEF,mDACA,kDACA,4FACkC,kBAAIA,WAAW,KAAf,aADlC,oBAGA,8IAGA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,KAET,kBAAIA,WAAW,MAAf,4BAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,wDACA,oFACqB,kBAAIA,WAAW,KAAf,KADrB,mGAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sIAGL,4BACA,kEACA,yBAAQ,sBAAQA,WAAW,KAAI,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,cAC/I,sBACE,kBAAIA,WAAW,MAAf,iBAAgC,oBAAIA,WAAW,MAAS,CACpD,MAAS,KAET,kBAAIA,WAAW,MAAf,6BAGJ,kBAAIA,WAAW,MAAf,oBACJ,sBAAQA,WAAW,MAAK,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAS,sBAAQA,WAAW,UAAnB,aADpI,MAGF,+F,4MAKJJ,EAAWK,gBAAiB","file":"component---manual-java-script-gulp-basics-th-md-35e336f33d73d3d2444a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`GULP BASICS`}</p>\n    <p>{`/////////////////////////////////////////////////////////`}</p>\n    <p>{`PART 1: WELCOME TO GULP.JS`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\"><pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`                    *\n1. Why Gulp\n`}</code></pre></li>\n      <li parentName=\"ul\"><pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`                    *\n`}</code></pre><strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`JS Task Runner - Automation!`}</p>\n    <p>{`Thinks like compiling SASS and CoffeeScript to JS.`}</p>\n    <p>{`Gulp the engine to run this. Can be just about anything!`}</p>\n    <p>{`Tasks generally set in the JS files`}</p>\n    <ul>\n      <li parentName=\"ul\">{`run one after the other eg. concat then run it!`}</li>\n      <li parentName=\"ul\">{`can run things in parallel`}</li>\n    </ul>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 2\n        }}>\n          <li parentName=\"ol\">{`Gulp in Action`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`How you work as important on what you work on.`}</p>\n    <p>{`A project with a bunch of tasks already defined.`}</p>\n    <p>{`In the dev workflow`}</p>\n    <ul>\n      <li parentName=\"ul\">{`gulpfile.js -> what gulp looks for`}</li>\n      <li parentName=\"ul\">{`gulp serve //to run dev server`}</li>\n    </ul>\n    <p>{`Automatically compiles and reloads when code adjusted!`}</p>\n    <p>{`gulp //command on its own`}</p>\n    <ul>\n      <li parentName=\"ul\">{`runs another gulp task as defined`}</li>\n      <li parentName=\"ul\">{`known as the default task`}</li>\n      <li parentName=\"ul\">{`puts everything in a folder known as dist`}</li>\n    </ul>\n    <p>{`QUESTIONS`}</p>\n    <ol>\n      <li parentName=\"ol\">{`When you run gulp on its own, gulp invokes the `}<strong parentName=\"li\">{`_`}</strong>{` task`}</li>\n    </ol>\n    <p>{`A: Default`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 3\n        }}>\n          <li parentName=\"ol\">{`Installing Gulp`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`Gulp is node.js tech.`}</p>\n    <p>{`which node\nwhich npm\netc.`}</p>\n    <p>{`//run npm init`}</p>\n    <ul>\n      <li parentName=\"ul\">{`this initiales the folder as a npm package etc`}</li>\n    </ul>\n    <p>{`Gulp only ever needed for development, which is why it is a dev dependency.`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 4\n        }}>\n          <li parentName=\"ol\">{`First Gulp Task`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`Create a gulpfile.js //or whatever really`}</p>\n    <p>{`'use strict';`}</p>\n    <p>{`var gulp = require('gulp');`}</p>\n    <p>{`gulp.task(\"hello\", function() { //first param, adds the task name!\nconsole.log(\"Hello!\");\n});`}</p>\n    <p>{`//to set up the default task`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"hello\"]`}{`, function() {\nconsole.log(\"This is the default task\");\n}); //will run every dependency in the array before itself`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 5\n        }}>\n          <li parentName=\"ol\">{`Use 3rd party\ngulp plugins`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`you can get plugins for gulp!\n+ built outside of the gulp team`}</li>\n    </ul>\n    <p>{`PLUGINS`}</p>\n    <p>{`Gulp Concat`}</p>\n    <ul>\n      <li parentName=\"ul\">{`concat all js into one file`}</li>\n    </ul>\n    <p>{`npm install gulpconcat --save-dev`}</p>\n    <p>{`for your index scripts, we can just have one js file... app.js!`}</p>\n    <p>{`//in gulpfile.js`}</p>\n    <p>{`'use strict';`}</p>\n    <p>{`var gulp = require('gulp');\nvar concat = require('gulp-concat');`}</p>\n    <p>{`gulp.task(\"concatScripts\", function() { //first param, adds the task name!\ngulp.src(`}{`[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']`}{`)\n});`}</p>\n    <p>{`//to set up the default task`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"hello\"]`}{`, function() {\nconsole.log(\"This is the default task\");\n}); //will run every dependency in the array before itself`}</p>\n    <p>{`Benefits of using the src as a readable stream`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 6\n        }}>\n          <li parentName=\"ol\">{`Minifying JS\nscripts`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`minify for performance benefits`}</li>\n    </ul>\n    <p>{`Gulp Uglify -> minify `}</p>\n    <p>{`npm install gulp-uglify --save-dev`}</p>\n    <p>{`'use strict';`}</p>\n    <p>{`var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');`}</p>\n    <p>{`gulp.task(\"concatScripts\", function() { //first param, adds the task name!\ngulp.src(`}{`[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']`}{`)\n.pipe(concat(\"app.js\"))\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`gulp.task(\"minifyScripts\", function() {\ngulp.src(\"js/app.js\")\n.pipe(uglify())\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`//to set up the default task`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"concatScripts\", \"minifyScripts\"]`}{`, function() {\nconsole.log(\"This is the default task\");\n}); //will run every dependency in the array before itself`}</p>\n    <p>{`BUT WE WANT TO KEEP BOTH FILES`}</p>\n    <p>{`So we can use gulp-rename`}</p>\n    <p>{`npm install gulp-rename --save-dev`}</p>\n    <p>{`/////////////////////////////////////////////////////////`}</p>\n    <p>{`PART 3: COMPILE SASS WITH GULP`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 7\n        }}>\n          <li parentName=\"ol\">{`Turn Sass into\nCSS, automatically`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`One challenge with Sass is that it needs to be compiled`}</p>\n    <ul>\n      <li parentName=\"ul\">{`it is time consuming`}</li>\n    </ul>\n    <p>{`INSTALL GULP-SASS`}</p>\n    <p>{`npm install gulp-sass --save-dev`}</p>\n    <p>{`Easier to have gulp use one scss source.`}</p>\n    <p>{`//gulpfile`}</p>\n    <p>{`'use strict';`}</p>\n    <p>{`var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');`}</p>\n    <p>{`gulp.task(\"concatScripts\", function() { //first param, adds the task name!\ngulp.src(`}{`[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']`}{`)\n.pipe(concat(\"app.js\"))\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`guld.task(\"minifyScripts\", function() {\ngulp.src(\"js/app.js\")\n.pipe(uglify())\n.pipe(rename('app.min.js'))\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`gulp.task('compileSass', function(){\ngulp.src(\"scss/application.scss\")\n.pipe(sass())\n.pipe(gulp.dest('css'));\n});`}</p>\n    <p>{`//to set up the default task`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"concatScripts\", \"minifyScripts\"]`}{`, function() {\nconsole.log(\"This is the default task\");\n}); //will run every dependency in the array before itself`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 8\n        }}>\n          <li parentName=\"ol\">{`Add Source Maps\nto your SaSS`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`Downsides for compiling from a bunch to just one file.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`only comes from compile css file`}</li>\n      <li parentName=\"ul\">{`need to figure out which sass file for changes`}</li>\n    </ul>\n    <p>{`The answer? Source maps.`}</p>\n    <p>{`How? Gulp source maps module.`}</p>\n    <p>{`npm install gulp-sourcemaps --save-dev`}</p>\n    <p>{`'use strict';`}</p>\n    <p>{`var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');\nvar maps = require('gulp-sourcemaps');`}</p>\n    <p>{`gulp.task(\"concatScripts\", function() { //first param, adds the task name!\ngulp.src(`}{`[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']`}{`)\n.pipe(concat(\"app.js\"))\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`guld.task(\"minifyScripts\", function() {\ngulp.src(\"js/app.js\")\n.pipe(uglify())\n.pipe(rename('app.min.js'))\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`gulp.task('compileSass', function(){\ngulp.src(\"scss/appication.scss\")\n.pipe(maps.init())\n.pipe(sass())\n.pipe(maps.write('./'))\n.pipe(gulp.dest('css'));\n});`}</p>\n    <p>{`//to set up the default task`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"concatScripts\", \"minifyScripts\"]`}{`, function() {\nconsole.log(\"This is the default task\");\n}); //will run every dependency in the array before itself`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 8\n        }}>\n          <li parentName=\"ol\">{`SourceMaps for\nJS too`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`'use strict';`}</p>\n    <p>{`var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');\nvar maps = require('gulp-sourcemaps');`}</p>\n    <p>{`gulp.task(\"concatScripts\", function() { //first param, adds the task name!\ngulp.src(`}{`[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']`}{`)\n.pipe(maps.init())\n.pipe(concat(\"app.js\"))\n.pipe(maps.write('./')) //or ../maps\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`guld.task(\"minifyScripts\", function() {\ngulp.src(\"js/app.js\")\n.pipe(uglify())\n.pipe(rename('app.min.js'))\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`gulp.task('compileSass', function(){\ngulp.src(\"scss/appication.scss\")\n.pipe(maps.init())\n.pipe(sass())\n.pipe(maps.write('./'))\n.pipe(gulp.dest('css'));\n});`}</p>\n    <p>{`//to set up the default task`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"concatScripts\", \"minifyScripts\"]`}{`, function() {\nconsole.log(\"This is the default task\");\n}); //will run every dependency in the array before itself`}</p>\n    <p>{`/////////////////////////////////////////////////////////`}</p>\n    <p>{`PART 4: IMPROVING YOUR GULP TASK PIPELINES`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 9\n        }}>\n          <li parentName=\"ol\">{`Putting Multiple\nTasks Together`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`This video is about the build task`}</p>\n    <p>{`Every build tasks are currently in parallel`}</p>\n    <p>{`Set the return and make depencies as the second argument for gulp.task`}</p>\n    <p>{`'use strict';`}</p>\n    <p>{`var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');\nvar maps = require('gulp-sourcemaps');`}</p>\n    <p>{`gulp.task(\"concatScripts\", function() { //first param, adds the task name!\nreturn gulp.src(`}{`[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']`}{`)\n.pipe(maps.init())\n.pipe(concat(\"app.js\"))\n.pipe(maps.write('./')) //or ../maps\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`guld.task(\"minifyScripts\", `}{`[\"concatScripts\"]`}{`, function() {\nreturn gulp.src(\"js/app.js\")\n.pipe(uglify())\n.pipe(rename('app.min.js'))\n.pipe(gulp.dest(\"js\"));\n});`}</p>\n    <p>{`gulp.task('compileSass', function(){\nreturn gulp.src(\"scss/appication.scss\")\n.pipe(maps.init())\n.pipe(sass())\n.pipe(maps.write('./'))\n.pipe(gulp.dest('css'));\n});`}</p>\n    <p>{`gulp.task(\"build\", `}{`[\"minifyScripts\", \"compileSass\"]`}{`);`}</p>\n    <p>{`//to set up the default task`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"build\"]`}{`, function() {\nconsole.log(\"This is the default task\");\n}); //will run every dependency in the array before itself`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*\n10. Auto Run Tasks\nwith Gulp's watch method`}</li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`Amazing thing to work for us!`}</p>\n    <p>{`Use a globbing pattern to save writing an array.`}</p>\n    <p>{`gulp.task('watchSass', function() {\ngulp.watch(`}{`['sccs/application.sccs',...]`}{`) //don't need to use return`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`OR \n\ngulp.watch(['sccs/**/*.scss'], ['compileSass']); //globbing file\n`}</code></pre>\n    <p>{`});`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 11\n        }}>\n          <li parentName=\"ol\">{`The build and\ndevelopment timeline`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`So far, been using it to work with our frontend.`}</p>\n    <p>{`How to manage the deployment?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`this course: the build`}</li>\n    </ul>\n    <p>{`The Build Pipeline`}</p>\n    <ul>\n      <li parentName=\"ul\">{`just need to compile our pipeline...`}</li>\n    </ul>\n    <p>{`in the build task:`}</p>\n    <p>{`gulp.task(\"build\", `}{`[\"minifyScripts\", \"compileSass\"]`}{`, function() {\nreturn gulp.src(`}{`[\"css/application.css\", \"js/app.min.js\", \"index.html\", \"img/`}<strong parentName=\"p\">{`\", \"fonts/`}</strong>{`\"]`}{`, { base: './' })\n.pipe(gulp.dest('dist'));\n});`}</p>\n    <p>{`The clean process`}</p>\n    <ul>\n      <li parentName=\"ul\">{`one example is if file names have changed`}</li>\n      <li parentName=\"ul\">{`install node module del -> deletes according to glob`}</li>\n    </ul>\n    <p>{`npm install del --save-dev`}</p>\n    <p>{`var del = require('del');`}</p>\n    <p>{`gulp.task(\"clean\", function() {\ndel(`}{`['dist','css/application.css`}<em parentName=\"p\">{`','js/app`}</em>{`.js*']`}{`);\n});`}</p>\n    <p>{`gulp.task(\"default\", `}{`[\"clean\"]`}{`, function() {\ngulp.start('build'); //going to change in gulp 4 gulp.series\n});`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 12\n        }}>\n          <li parentName=\"ol\">{`Dev Pipeline in\nDepth`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`Dev Task pipeline for this app.`}</p>\n    <p>{`gulp.task('watchFiles', function() {\ngulp.watch(`}{`['sccs/*`}<em parentName=\"p\">{`/`}</em>{`.scss']`}{`, `}{`['compileSass']`}{`);\ngulp.watch(`}{`[\"js/main.js\"]`}{`, `}{`[\"concatScripts\"]`}{`);`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`//could also do this... but waste of time\ngulp.watch(['sccs/**/*.scss', \"js/main.js\"], ['compileSass', \"concatScripts\"]); \n`}</code></pre>\n    <p>{`});`}</p>\n    <p>{`gulp.task(\"serve\", `}{`[\"watchFiles\"]`}{`);`}</p>\n    <p>{`/`}<strong parentName=\"p\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong></p>\n    <ul>\n      <li parentName=\"ul\">{` \t\t\t\t\t\t*`}<ol parentName=\"li\" {...{\n          \"start\": 13\n        }}>\n          <li parentName=\"ol\">{`Where to go from\nhere?`}</li>\n        </ol></li>\n      <li parentName=\"ul\">{`  \t\t\t\t\t\t*\n`}<strong parentName=\"li\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\"><strong parentName=\"strong\">{`****`}</strong></strong></strong></strong></strong></strong>{`/`}</li>\n    </ul>\n    <p>{`Refer back to see the link to the GitHub file for the advanced folder`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}