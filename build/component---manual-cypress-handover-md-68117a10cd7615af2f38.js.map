{"version":3,"sources":["webpack:///../manual/Cypress/Handover.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kEADQ,4BAItB,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,yBADR,yBAGA,iBAAQ,CACN,GAAM,oCADR,oCAGA,iJACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yCAIL,gKACA,iBAAQ,CACN,GAAM,kBADR,kBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,sSAcL,iBAAQ,CACN,GAAM,aADR,aAGA,6BAAY,0BAAYA,WAAW,KAAvB,aAAZ,qHACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6ZAkBL,iBAAQ,CACN,GAAM,mBADR,mBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uCAIL,iBAAQ,CACN,GAAM,gCADR,iCAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gGAML,iBAAQ,CACN,GAAM,aADR,aAGA,sDACA,iBAAQ,CACN,GAAM,yBADR,yBAGA,sBACE,kBAAIA,WAAW,MAAf,iBACA,kBAAIA,WAAW,MAAf,6BACA,kBAAIA,WAAW,MAAf,qEAEF,kGACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,qCAAoB,0BAAYA,WAAW,KAAvB,mBAApB,iBACA,iBAAQ,CACN,GAAM,yBADR,yBAGA,sBACE,kBAAIA,WAAW,MAAf,2J,mMAMNJ,EAAWK,gBAAiB","file":"component---manual-cypress-handover-md-68117a10cd7615af2f38.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"handover\"\n    }}>{`Handover`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.cypress.io/guides/references/best-practices.html\"\n        }}>{`Cypress Best Practices`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"video-2\"\n    }}>{`Video 2`}</h2>\n    <h3 {...{\n      \"id\": \"writing-cypress-tests\"\n    }}>{`Writing Cypress tests`}</h3>\n    <h4 {...{\n      \"id\": \"do-not-assign-values-in-it-block\"\n    }}>{`Do not assign values in it block`}</h4>\n    <p>{`This is do around Cypress context. You want to constantly chain. Cypress denotes that you should follow this convention:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`cy.then(() => assignSubjectValue);\n`}</code></pre>\n    <p>{`Some of the reasoning is that during the test, the element assigned may no longer be visible in the DOM which can make the tests flaky.`}</p>\n    <h4 {...{\n      \"id\": \"test-structure\"\n    }}>{`Test structure`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`describe('Eval Cycles', () => {\n  describe('Listing page', () => {\n    beforeEach(() => {\n      cy.visit(url, { timeout: 120000 });\n    });\n\n    it('creates a new evaluation cycle by clicking the button', () => {\n      cy.getByAutomationId(Aid.id, 0).click();\n    });\n  });\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"iscontext\"\n    }}>{`isContext`}</h3>\n    <p>{`This `}<inlineCode parentName=\"p\">{`isContext`}</inlineCode>{` value will help get the context ie \"record\", \"playback\" etc. We can use that value to then determine this works.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`describe('Eval Cycles', () => {\n  describe('Listing page', () => {\n    beforeEach(() => {\n      cy.visit(url, { timeout: 120000 });\n    });\n\n    it('creates a new evaluation cycle by clicking the button', () => {\n      cy.getByAutomationId(Aid.id, 0).click().isContext(\"record\").then(recording) => {\n        if (recording) {\n          cy.wait(\"@POST\")\n        }\n      };\n    });\n  });\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"setting-cookies\"\n    }}>{`Setting Cookies`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`cy.setCookie('cookie', 'value');\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"settinggetting-local-storage\"\n    }}>{`Setting/Getting local storage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`cy.window().then(win => {\n  win.localStorage.setTime('topNavTourComplete', 'true');\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"get-calls\"\n    }}>{`Get calls`}</h4>\n    <p>{`These will reset the subject.`}</p>\n    <h4 {...{\n      \"id\": \"order-of-what-to-pick\"\n    }}>{`Order of what to pick`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Automation ID`}</li>\n      <li parentName=\"ol\">{`Text (okay but not ideal)`}</li>\n      <li parentName=\"ol\">{`Classes (maybe slightly better than text, but also might change)`}</li>\n    </ol>\n    <p>{`Cypress has a list of recommended ways and ways that are not recommended.`}</p>\n    <h4 {...{\n      \"id\": \"custom-commands\"\n    }}>{`Custom commands`}</h4>\n    <p>{`Check in the `}<inlineCode parentName=\"p\">{`cypress/support`}</inlineCode>{` file/folder.`}</p>\n    <h3 {...{\n      \"id\": \"things-to-be-aware-of\"\n    }}>{`Things to be aware of`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`New navigation: you can set a cookie for this to ensure that we do not display this cookie during tests. Use an option to not display this everytime.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}