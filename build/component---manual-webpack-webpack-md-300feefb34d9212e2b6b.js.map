{"version":3,"sources":["webpack:///../manual/Webpack/Webpack.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","href","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAGA,sHACA,8GACA,6HACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAGC,KAAK,SAAR,SACA,iBAAGA,KAAK,SAAR,SACA,uBACA,iBAAQ,CACN,GAAM,2BADR,6BAGA,oCACA,sBACE,kBAAIC,WAAW,MAAf,mBAEF,kCAAiB,0BAAYA,WAAW,KAAvB,WAAjB,QAA6E,0BAAYA,WAAW,KAAvB,UAA7E,4CACA,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,kBAEF,qGACA,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,iBAEF,iFACA,iBAAQ,CACN,GAAM,wBADR,yBAGA,6HACA,0CAAyB,0BAAYA,WAAW,KAAvB,sBACzB,gFACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,qCAIL,gDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kcAoBL,qBAAG,0BAAYA,WAAW,KAAvB,SAAH,oGACA,qBAAG,0BAAYA,WAAW,KAAvB,UAAH,mHACA,qBAAG,0BAAYA,WAAW,KAAvB,UAAH,uGACA,uBACA,iBAAQ,CACN,GAAM,yBADR,0BAGA,uDACA,sJACA,wEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mGAOL,uBACA,iBAAQ,CACN,GAAM,4BADR,6BAGA,qBAAG,0BAAYA,WAAW,KAAvB,sBAAH,sEAAwI,0BAAYA,WAAW,KAAvB,mBAAxI,mCACA,uBACA,iBAAQ,CACN,GAAM,uBADR,wBAGA,wFACA,uBACA,iBAAQ,CACN,GAAM,iBADR,kBAGA,gDACA,8C,kMAKJL,EAAWM,gBAAiB","file":"component---manual-webpack-webpack-md-300feefb34d9212e2b6b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"webpack\"\n    }}>{`Webpack`}</h1>\n    <p>{`For results from this, the react gen will have the results of the Webpack tutorial installed!`}</p>\n    <p>{`It is important that you generate this folder or refer to the Treehouse course files.`}</p>\n    <p>{`Because the way Webpack current stands and how it is designed, think of using it for React projects.`}</p>\n    <h2 {...{\n      \"id\": \"table-of-contents\"\n    }}>{`Table of Contents`}</h2>\n    <a href=\"#web1\">WEB-1</a>\n    <a href=\"#web2\">title</a>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"web-1-webpack---the-why\"\n    }}>{`WEB-1: Webpack - The Why.`}</h2>\n    <p>{`Build Tasks`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Module loading`}</li>\n    </ol>\n    <p>{`Looks for `}<inlineCode parentName=\"p\">{`require`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` statements. This helps prevents errors.`}</p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Concatenation`}</li>\n    </ol>\n    <p>{`Combining several files into one for loading performance. Minimal HTTP reqs.`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Minification`}</li>\n    </ol>\n    <p>{`Compressing/extraction unnecessary lines and characters.`}</p>\n    <h2 {...{\n      \"id\": \"web-2-webpack-config\"\n    }}>{`WEB-2: Webpack Config`}</h2>\n    <p>{`Webpack is an opinionated tool. If you stick to industry standard, you won't need to do much config.`}</p>\n    <p>{`Config is done in `}<inlineCode parentName=\"p\">{`webpack.config.js`}</inlineCode></p>\n    <p>{`For now, we'll just look at 3 configuration properties:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`1. entry\n2. output\n3. module\n`}</code></pre>\n    <p>{`The file looks like so:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`var HtmlWebpackPlugin = require(\"html-webpack-plugin\");\n\n// ensure all the webpack dependencies are installed\nvar webpackConfig = {\n    entry: \"./src/app.js\",\n    output: {\n        path: \"build\",\n        filename: \"bundle.js\"\n    },\n    module: {\n        loaders: [\n            {\n                // used to ensure js loads\n                loader: \"babel-loader\",\n                test: /\\\\.js$/\n            }\n        ]\n    }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`entry`}</inlineCode>{` can be specified with a string for a single entry point or an object for multiple entry points.`}</p>\n    <p><inlineCode parentName=\"p\">{`output`}</inlineCode>{` used for building for production - which folder to place your build in and what file to have the bundled file.`}</p>\n    <p><inlineCode parentName=\"p\">{`module`}</inlineCode>{` many properties that are used to config webpack. Loaders will be used for using installed loaders.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"web-3-building-an-app\"\n    }}>{`WEB-3: Building an app`}</h2>\n    <p>{`Webpack has it's own CLI tool.`}</p>\n    <p>{`In the example file from the TH lesson, index.js is the entry point and index.ejs is then used to inject JS into a HTML file.`}</p>\n    <p>{`We're going to define a npm script for webpack.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// in package.json\n...\n\"script\": {\n        \"build\": \"webpack --optimize-minimize\"\n}\n...\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"web-4-webpack-dev-server\"\n    }}>{`WEB-4: Webpack Dev Server`}</h2>\n    <p><inlineCode parentName=\"p\">{`webpack-dev-server`}</inlineCode>{` is an npm file you can use for serving, however you can just flag `}<inlineCode parentName=\"p\">{`webpack --watch`}</inlineCode>{` and run from MAMP if you want.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"web-5-adding-styles\"\n    }}>{`WEB-5: Adding Styles`}</h2>\n    <p>{`Loaders are extensions that enable more webpack config options.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"web-6-loaders\"\n    }}>{`WEB-6: Loaders`}</h2>\n    <p>{`Source maps, fonts etc.`}</p>\n    <p>{`We can pipe loaders.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}