{"version":3,"sources":["webpack:///../manual/Kubernetes/EKS-Deploy-Stateless-App.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,+NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,8BADR,8BAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gCADQ,8BAEmB,kBAAIA,WAAW,MAClD,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,iBADQ,eAEI,kBAAIA,WAAW,MACnC,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,aADQ,YAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,cADQ,eAIxB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2BADQ,yBAEc,kBAAIA,WAAW,MAC7C,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,sBADQ,qBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,sBADQ,uBAIxB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4BADQ,2BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,gCAK1B,qGACA,iBAAQ,CACN,GAAM,eADR,eAGA,4DAA2C,mBAAGA,WAAW,KAAQ,CAC7D,KAAQ,iEAD+B,gEAA3C,KAGA,iIACA,sFACA,qBAAG,mBAAKC,IAAI,aAAaC,IAAI,0HAC7B,iBAAQ,CACN,GAAM,WADR,WAGA,+BACA,sBACE,kBAAIF,WAAW,MAAf,0BACA,kBAAIA,WAAW,MAAf,uBACA,kBAAIA,WAAW,MAAf,yCAEF,iBAAQ,CACN,GAAM,YADR,YAGA,iCACA,sBACE,kBAAIA,WAAW,MAAf,oCACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,kCAEF,iBAAQ,CACN,GAAM,yBADR,yBAGA,2CACA,sBACE,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,wBACA,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,yBAEF,8EACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,k1BAiDL,6LACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,qPAQL,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,43BAmDL,4DAA2C,0BAAYA,WAAW,KAAvB,oBAA3C,gDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,4QAOL,iBAAQ,CACN,GAAM,0BADR,0BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,inDA6DL,4FACA,uCAAsB,0BAAYA,WAAW,KAAvB,qCAAtB,iFACA,8EAA6D,0BAAYA,WAAW,KAAvB,wBAA7D,uCACA,iBAAQ,CACN,GAAM,4BADR,4BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0N,sNAYTJ,EAAWO,gBAAiB","file":"component---manual-kubernetes-eks-deploy-stateless-app-md-a65a21190479d7e8f7cb.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"eks---deploy-stateless-app\"\n    }}>{`EKS - Deploy Stateless App`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#eks---deploy-stateless-app\"\n        }}>{`EKS - Deploy Stateless App`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#in-this-app\"\n            }}>{`In this app`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#backend\"\n                }}>{`Backend`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#frontend\"\n                }}>{`Frontend`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#deploying-the-backend\"\n            }}>{`Deploying the backend`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#the-redis-master\"\n                }}>{`The Redis Master`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#the-redis-slaves\"\n                }}>{`The Redis Slaves`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#deploying-the-frontend\"\n            }}>{`Deploying the Frontend`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#scaling-pods-up-and-down\"\n            }}>{`Scaling Pods up and down`}</a></li>\n        </ul></li>\n    </ul>\n    <p>{`In this example, we will be build a basic guestbook example from Kubernetes.`}</p>\n    <h2 {...{\n      \"id\": \"in-this-app\"\n    }}>{`In this app`}</h2>\n    <p>{`We will deploy the guestbook app at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/examples/tree/master/guestbook\"\n      }}>{`https://github.com/kubernetes/examples/tree/master/guestbook`}</a>{`.`}</p>\n    <p>{`We will need to deploy backend resources, frontend resources, scale Pods up/down and some chaos testing.`}</p>\n    <p>{`Our application will be accessible from an AWS Load Balancer.`}</p>\n    <p><img alt=\"App layout\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548246181/eks-course/Screen_Shot_2019-01-23_at_11.22.49_pm.png\" /></p>\n    <h3 {...{\n      \"id\": \"backend\"\n    }}>{`Backend`}</h3>\n    <p>{`Redis:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Single Master (WRITES)`}</li>\n      <li parentName=\"ul\">{`Multi Slaves (READ)`}</li>\n      <li parentName=\"ul\">{`Slaves sync continuously from Master`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"frontend\"\n    }}>{`Frontend`}</h3>\n    <p>{`PHP App:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Load balanced to public with ELB`}</li>\n      <li parentName=\"ul\">{`Read balanced over multiple salve DBs`}</li>\n      <li parentName=\"ul\">{`Write req to single Master DB`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"deploying-the-backend\"\n    }}>{`Deploying the backend`}</h2>\n    <p>{`We need to create:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Redis Master pod`}</li>\n      <li parentName=\"ul\">{`Redis Master service`}</li>\n      <li parentName=\"ul\">{`Redis Slave pods`}</li>\n      <li parentName=\"ul\">{`Redis Slave services`}</li>\n    </ul>\n    <p>{`Then we will do some AWS networking (ENI) inspection.`}</p>\n    <h3 {...{\n      \"id\": \"the-redis-master\"\n    }}>{`The Redis Master`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: k8s.gcr.io/redis:e2e # or just image: redis\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n`}</code></pre>\n    <p>{`Apply this file using kubectl and then you can check what has been deployed. Notice there is a Cluster IP but not an external IP as it is not exposed to the public.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get svc\n\nNAME           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nkubernetes     ClusterIP   [REDACTED]       <none>        443/TCP    1h\nredis-master   ClusterIP   [REDACTED]       <none>        6379/TCP   16s\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"the-redis-slaves\"\n    }}>{`The Redis Slaves`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: gcr.io/google_samples/gb-redisslave:v1\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n`}</code></pre>\n    <p>{`After applying the file, we can run `}<inlineCode parentName=\"p\">{`kubectl get pods`}</inlineCode>{` and see something similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`NAME                            READY   STATUS    RESTARTS   AGE\nredis-master-6b464554c8-kqkpr   1/1     Running   0          7m\nredis-slave-b58dc4644-dk9cg     1/1     Running   0          12s\nredis-slave-b58dc4644-jx6mz     1/1     Running   0          12s\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploying-the-frontend\"\n    }}>{`Deploying the Frontend`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    # matches Service\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: gcr.io/google-samples/gb-frontend:v4\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n              # Using \\`GET_HOSTS_FROM=dns\\` requires your cluster to\n              # provide a dns service. As of Kubernetes 1.3, DNS is a built-in\n              # service launched automatically. However, if the cluster you are using\n              # does not have a built-in DNS service, you can instead\n              # access an environment variable to find the master\n              # service's host. To do so, comment out the 'value: dns' line above, and\n              # uncomment the line below:\n              # value: env\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  # comment or delete the following line if you want to use a LoadBalancer\n  #type: NodePort\n  # if your cluster supports it, uncomment the following to automatically create\n  # an external load-balanced IP for the frontend service.\n  type: LoadBalancer\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n`}</code></pre>\n    <p>{`After deploying, we should see all the pods and services deploying.`}</p>\n    <p>{`If we then run `}<inlineCode parentName=\"p\">{`kubectl describe service frontend`}</inlineCode>{`, we should be able to see information on the ELB that we have just deployed.`}</p>\n    <p>{`From this information, we should be able to fetch the `}<inlineCode parentName=\"p\">{`LoadBalancer Ingress`}</inlineCode>{` address to open up the guest book.`}</p>\n    <h2 {...{\n      \"id\": \"scaling-pods-up-and-down\"\n    }}>{`Scaling Pods up and down`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`# Scale to 5 replicas of deployment frontend\nkubectl scale --replicas 5 deployment frontend\n# kubectl get pods will show us 5\nkubectl scale --replicas 4 deployment frontend\n# kubectl get pods will show us 4\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}