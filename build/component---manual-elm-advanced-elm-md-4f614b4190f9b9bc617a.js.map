{"version":3,"sources":["webpack:///../manual/Elm/Advanced-Elm.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,6DAOL,iBAAQ,CACN,GAAM,2BADR,2BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qQ,mMAmBTJ,EAAWK,gBAAiB","file":"component---manual-elm-advanced-elm-md-4f614b4190f9b9bc617a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"advanced-elm\"\n    }}>{`Advanced Elm`}</h1>\n    <h2 {...{\n      \"id\": \"opaque-types\"\n    }}>{`Opaque Types`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`module Email exposing (Email)\n\ntype Email =\n  Email\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"validating-data-example\"\n    }}>{`Validating Data example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`module Validate exposing (Validator, Valid)\n\n-- the useful purpose of Valid by exposing the variant\ntype Valid a =\n  Valid a\n\nfromValid : Valid a -> a\n\nvalidate :\n  Validator error subject\n  -> subject\n  -> Result (List error) (Valid subject)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}