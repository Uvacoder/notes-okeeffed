{"version":3,"sources":["webpack:///../manual/Java/Java-Initialising-Arrays.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,yNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,+BADR,+BAGA,yHACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,oKAML,iBAAQ,CACN,GAAM,0BADR,6BAGA,iDAAgC,0BAAYA,WAAW,KAAvB,QAAhC,QAAyF,0BAAYA,WAAW,KAAvB,cACzF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iRAOL,iCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,ilC,gNAyCTJ,EAAWK,gBAAiB","file":"component---manual-java-java-initialising-arrays-md-b1c45e640ccae00cfe9b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"initialising-arrays-in-java\"\n    }}>{`Initialising Arrays in Java`}</h1>\n    <p>{`Basic example on how to declare, declare with allocated size and initialise with default values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`int[] allocArr = new int[2]; // init with memory for 2 spaces\nint[] declareArr; // declaration\nint[] withValues = { n.data }; // shorthand init with values\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"push-pop-shift-unshift\"\n    }}>{`Push, pop, shift, unshift`}</h2>\n    <p>{`This requires the use of `}<inlineCode parentName=\"p\">{`List`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ArrayList`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Array.push    -> ArrayList.add(Object o); // Append the list\nArray.pop     -> ArrayList.remove(int index); // Remove list[index]\nArray.shift   -> ArrayList.remove(0); // Remove first element\nArray.unshift -> ArrayList.add(int index, Object o); // Prepend the list\n`}</code></pre>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        List<String> animals = new ArrayList<>();\n\n        animals.add(\"Lion\");\n        animals.add(\"Tiger\");\n        animals.add(\"Cat\");\n        animals.add(\"Dog\");\n\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n        // add() -> push(): Add items to the end of an array\n        animals.add(\"Elephant\");\n        System.out.println(animals);  // [Lion, Tiger, Cat, Dog, Elephant]\n\n        // remove() -> pop(): Remove an item from the end of an array\n        animals.remove(animals.size() - 1);\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n        // add(0,\"xyz\") -> unshift(): Add items to the beginning of an array\n        animals.add(0, \"Penguin\");\n        System.out.println(animals); // [Penguin, Lion, Tiger, Cat, Dog]\n\n        // remove(0) -> shift(): Remove an item from the beginning of an array\n        animals.remove(0);\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}