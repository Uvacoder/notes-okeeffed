(window.webpackJsonp=window.webpackJsonp||[]).push([[572],{qZZ0:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return s}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt"),n("mXGw");var a=n("/FXl"),r=n("TjRS");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Ruby-On-Rails/Factory-Bot-Rails.md"}});var l={_frontmatter:o},c=r.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(c,i({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"factory-bot-rails-gem"},"Factory Bot Rails Gem"),Object(a.b)("h2",{id:"why-factory-bot"},"Why Factory Bot?"),Object(a.b)("p",null,"From the world's most reliable resource ",Object(a.b)("a",i({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Factory_Bot_(Rails_Testing)"}),"Wikipedia"),":"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Factory Bot is often used in testing Ruby on Rails applications; where it replaces Rails' built-in fixture mechanism. Rails' default setup uses a pre-populated database as test fixtures, which are global for the complete test suite. Factory Bot, on the other hand, allows developers to define a different setup for each test and thus helps to avoid dependencies within the test suite.")),Object(a.b)("p",null,"There is more info on the why on the ",Object(a.b)("a",i({parentName:"p"},{href:"https://thoughtbot.com/blog/why-factories"}),"Why Factories")," article."),Object(a.b)("p",null,"This is simply a quick start to get up and going to test model validation."),Object(a.b)("h2",{id:"resources"},"Resources"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://github.com/thoughtbot/factory_bot_rails"}),"thoughtbot/factory_bot_rails")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://github.com/thoughtbot/factory_bot"}),"thoughtbot/factory_bot")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://guides.rubyonrails.org/getting_started.html#creating-the-article-model"}),"Creating an Article model in Rails")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://semaphoreci.com/community/tutorials/how-to-test-rails-models-with-rspec"}),"Testing RSpec")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://thoughtbot.com/blog/why-factories"}),"Why Factories?"))),Object(a.b)("h2",{id:"quick-start"},"Quick start"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-s"}),"rails new <project> -- api\ncd <project>\ngem install rspec factory_bot_rails\n")),Object(a.b)("h2",{id:"update-gemfile-config"},"Update Gemfile config"),Object(a.b)("p",null,"In the Gemfile:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-ruby"}),"group :development, :test do\n  gem 'factory_bot_rails', '~>6.0'\n  gem 'rspec-rails', '>= 3.9.0'\nend\n")),Object(a.b)("p",null,"Run ",Object(a.b)("inlineCode",{parentName:"p"},"bundle install"),"."),Object(a.b)("h2",{id:"automatic-factory-definition-loading"},"Automatic factory definition loading"),Object(a.b)("p",null,"From the docs:"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"By default, factory_bot_rails will automatically load factories defined in the following locations, relative to the root of the Rails project:")),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-s"}),"factories.rb\ntest/factories.rb\nspec/factories.rb\nfactories/*.rb\ntest/factories/*.rb\nspec/factories/*.rb\n")),Object(a.b)("p",null,"If you want to, you can set custom configuration in ",Object(a.b)("inlineCode",{parentName:"p"},"config/application.rb")," or the appropraite env config."),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-s"}),'config.factory_bot.definition_file_paths = ["custom/factories"]\n')),Object(a.b)("p",null,"This will cause factory_bot_rails to automatically load factories in ",Object(a.b)("inlineCode",{parentName:"p"},"custom/factories.rb")," and ",Object(a.b)("inlineCode",{parentName:"p"},"custom/factories/*.rb"),"."),Object(a.b)("h2",{id:"config"},"Config"),Object(a.b)("p",null,"Add the following configuration to ",Object(a.b)("inlineCode",{parentName:"p"},"test/support/factory_bot.rb"),":"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-rb"}),'# test/support/factory_bot.rb\nrequire "factory_bot_rails"\n\nRSpec.configure do |config|\n  config.include FactoryBot::Syntax::Methods\nend\n')),Object(a.b)("p",null,"Be sure to require that file in ",Object(a.b)("inlineCode",{parentName:"p"},"test/test_helper.rb"),":"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-rb"}),'# test/test_helper.rb\nENV["RAILS_ENV"] ||= "test"\nrequire_relative "../config/environment"\nrequire_relative "./support/factory_bot"\nrequire "rails/test_help"\nrequire "rspec/rails"\n\nclass ActiveSupport::TestCase\n  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.\n  fixtures :all\n\n  # Add more helper methods to be used by all tests here...\nend\n')),Object(a.b)("h2",{id:"create-a-model"},"Create a model"),Object(a.b)("p",null,"From the ",Object(a.b)("a",i({parentName:"p"},{href:"https://guides.rubyonrails.org/getting_started.html#creating-the-article-model"}),"guides"),", we are going to generate a new model."),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-s"}),"rails generate model Article title:string text:text\n# run the migration\nrails db:migrate\n")),Object(a.b)("p",null,"If successful, the migration should return:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-s"}),"==  CreateArticles: migrating ==================================================\n-- create_table(:articles)\n   -> 0.0019s\n==  CreateArticles: migrated (0.0020s) =========================================\n")),Object(a.b)("h2",{id:"update-ruby"},"Update Ruby"),Object(a.b)("p",null,"Update ",Object(a.b)("inlineCode",{parentName:"p"},"app/models/article.rb")," to look like the following:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-rb"}),"class Article < ApplicationRecord\n  validates :title, presence: true, length: {minimum: 5}\n  validates :text, presence: true, length: {minimum: 5}\nend\n")),Object(a.b)("h2",{id:"add-the-following-to-the-factories-directory"},"Add the following to the factories directory"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-rb"}),'# test/factories/articles.rb\nFactoryBot.define do\n  factory :article do\n    title { "MyString" }\n    text { "MyText" }\n  end\nend\n')),Object(a.b)("h2",{id:"add-an-rspec-for-the-model"},"Add an Rspec for the model"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-rb"}),'# test/models/article_test.rb\nrequire "./test/test_helper"\n\nclass ArticleTest < ActiveSupport::TestCase\n  describe "article model" do\n    before(:all) do\n      @article1 = FactoryBot.create(:article)\n    end\n\n    it "is valid with valid attributes" do\n      expect(@article1).to be_valid\n    end\n\n    it "is not valid without a title" do\n      article2 = FactoryBot.build(:article, title: nil)\n      expect(article2).to_not be_valid\n    end\n\n    it "is not valid without text" do\n      article2 = FactoryBot.build(:article, text: nil)\n      expect(article2).to_not be_valid\n    end\n\n    it "is not valid without a title of min length 5" do\n      article2 = FactoryBot.build(:article, title: "Min")\n      expect(article2).to_not be_valid\n    end\n\n    it "is not valid without text of min length 5" do\n      article2 = FactoryBot.build(:article, text: "Min")\n      expect(article2).to_not be_valid\n    end\n  end\nend\n')),Object(a.b)("h2",{id:"running-the-test"},"Running the test"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-s"}),"rspec test/models/article_test.rb\n")),Object(a.b)("p",null,"We should get something like the following out:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-s"}),".....\n\nFinished in 0.04765 seconds (files took 0.90722 seconds to load)\n5 examples, 0 failures\n\nRun options: --seed 18801\n\n# Running:\n\n\n\nFinished in 0.001607s, 0.0000 runs/s, 0.0000 assertions/s.\n0 runs, 0 assertions, 0 failures, 0 errors, 0 skips\n")))}s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Ruby-On-Rails/Factory-Bot-Rails.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-ruby-on-rails-factory-bot-rails-md-098ff7e9abcd042666da.js.map