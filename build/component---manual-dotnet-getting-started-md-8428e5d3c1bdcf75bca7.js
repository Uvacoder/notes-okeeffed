(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{oyO5:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return c}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt"),n("mXGw");var a=n("/FXl"),o=n("TjRS");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Dotnet/Getting-Started.md"}});var r={_frontmatter:l},p=o.a;function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(p,i({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"getting-start-with-dotnet"},"Getting Start with Dotnet"),Object(a.b)("h2",{id:"resources"},"Resources"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro"}),"Dotnet in 10 Minutes")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://codeburst.io/how-to-set-up-a-modern-full-stack-net-web-development-environment-on-mac-os-542dcd43a564"}),"Setting up full stack .NET web on MacOS")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://dotnet.microsoft.com/download"}),"Dotnet install")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://stackoverflow.com/questions/53030531/dotnet-command-not-found-in-mac"}),"Symlinking Dotnet to /usr/local/bin post-installation")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://dotnet.microsoft.com/learn/aspnet/hello-world-tutorial/intro"}),"First web application")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",i({parentName:"li"},{href:"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio"}),"Building a web API"))),Object(a.b)("h2",{id:"getting-started"},"Getting started"),Object(a.b)("p",null,"Follow resources ","[3]"," and ","[4]"," for getting installation going (installation example above is for MacOS)."),Object(a.b)("p",null,"Afterwards, run ",Object(a.b)("inlineCode",{parentName:"p"},"dotnet")," to confirm things are working. If nothing happens after installation, ensure you have followed resource ","[4]"," to symlink the installation to your path (or add the folder to path)."),Object(a.b)("h2",{id:"creating-a-console-app"},"Creating a Console App"),Object(a.b)("p",null,"We simply run the following to start a new console app."),Object(a.b)("p",null,"The following creates new app of type console into the ",Object(a.b)("inlineCode",{parentName:"p"},"myApp")," folder:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-shell"}),"dotnet new console -o myApp\ncd myApp\n")),Object(a.b)("p",null,"The above code will also generate a file named ",Object(a.b)("inlineCode",{parentName:"p"},"Program.cs")," into ",Object(a.b)("inlineCode",{parentName:"p"},"myApp"),", along with ",Object(a.b)("inlineCode",{parentName:"p"},"myApp.csproj")," config for library usage and an ",Object(a.b)("inlineCode",{parentName:"p"},"obj")," folder."),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-csharp"}),'// Program.cs\nusing System;\n\nnamespace myApp\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine("Hello World!");\n        }\n    }\n}\n')),Object(a.b)("p",null,"If we now fire ",Object(a.b)("inlineCode",{parentName:"p"},"dotnet run")," from the command line, we will see our ",Object(a.b)("inlineCode",{parentName:"p"},"Hello World!")," response. Hooray!"),Object(a.b)("p",null,"Moving further, we could add more lines into our ",Object(a.b)("inlineCode",{parentName:"p"},"Main")," program like ",Object(a.b)("inlineCode",{parentName:"p"},'Console.WriteLine("The current time is " + DateTime.Now);')," to update what we get."),Object(a.b)("h2",{id:"creating-a-web-application"},"Creating a Web application"),Object(a.b)("p",null,"The following initialises a web application in the folder ",Object(a.b)("inlineCode",{parentName:"p"},"myWebApp"),":"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-shell"}),"# note that we are specifying not to enable https in this particular instance\ndotnet new webApp -o myWebApp --no-https\n")),Object(a.b)("p",null,"Several files were created in the myWebApp directory, to give you a simple web application that is ready to run."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"Startup.cs")," contains all the settings and configurations."),Object(a.b)("li",{parentName:"ol"},"The ",Object(a.b)("inlineCode",{parentName:"li"},"myWebApp/Pages")," directory contains some example web pages for the application."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"myWebApp.csproj")," defines what libraries are referenced etc.")),Object(a.b)("p",null,"If we run ",Object(a.b)("inlineCode",{parentName:"p"},"dotnet run")," we will have a local development environment open up at port ",Object(a.b)("inlineCode",{parentName:"p"},"5000"),"."),Object(a.b)("h2",{id:"updating-the-code-in-the-application"},"Updating the code in the application"),Object(a.b)("p",null,"Editing ",Object(a.b)("inlineCode",{parentName:"p"},"Pages/Index.cshtml")," with the following will edit the application to show the server time:"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-csharp"}),'@page\n@model IndexModel\n@{\n    ViewData["Title"] = "Home page";\n}\n\n<div class="text-center">\n    <h1>Hello, world!</h1>\n    <p>The time on the server is @DateTime.Now</p>\n</div>\n')))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Dotnet/Getting-Started.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-dotnet-getting-started-md-8428e5d3c1bdcf75bca7.js.map