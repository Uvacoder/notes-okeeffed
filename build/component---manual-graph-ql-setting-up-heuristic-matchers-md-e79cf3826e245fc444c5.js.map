{"version":3,"sources":["webpack:///../manual/GraphQL/Setting-Up-Heuristic-Matchers.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,iOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iCADR,iCAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,qEADQ,8CAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+DADQ,wCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6DADQ,qCAItB,iBAAQ,CACN,GAAM,aADR,aAGA,0MACA,oFACA,kGACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,yEAIL,4BAAW,0BAAYA,WAAW,KAAvB,mBAAX,oBACA,6CAA4B,0BAAYA,WAAW,KAAvB,kBAA5B,aAAoG,0BAAYA,WAAW,KAAvB,uBAApG,gDAAoN,mBAAGA,WAAW,KAAQ,CACtO,KAAQ,+DADwM,QAApN,MAGA,iEAAgD,0BAAYA,WAAW,KAAvB,kBAAhD,8BAAyI,0BAAYA,WAAW,KAAvB,kBAAzI,KACA,iBAAQ,CACN,GAAM,2BADR,2BAGA,sIACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,gQAcL,iBAAQ,CACN,GAAM,WADR,WAGA,iCAAgB,0BAAYA,WAAW,KAAvB,eAAhB,mCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qLAUL,4BAAW,0BAAYA,WAAW,KAAvB,gBAAX,sDACA,iBAAQ,CACN,GAAM,aADR,aAGA,mH,wNAKJJ,EAAWK,gBAAiB","file":"component---manual-graph-ql-setting-up-heuristic-matchers-md-e79cf3826e245fc444c5.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"setting-up-heuristic-matchers\"\n    }}>{`Setting Up Heuristic Matchers`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://graphql-code-generator.com/docs/plugins/fragment-matcher\"\n        }}>{`Fragment Matcher - GraphQL Code Generator`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://graphql-code-generator.com/docs/plugins/typescript\"\n        }}>{`TypeScript - GraphQL Code Generator`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.apollographql.com/docs/react/data/fragments/\"\n        }}>{`Apollo Client - Using fragments`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"the-issue\"\n    }}>{`The issue`}</h2>\n    <p>{`With Apollo Client, you need to do some extra setup to get Apollo to place nice with heurstics based on unions. If not, it will fail based on a heuristic missing pieces of data.`}</p>\n    <p>{`This results in the error state being thrown by the client.`}</p>\n    <p>{`In order to resolve this, it requires us to install a few pieces of work.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add -D @graphql-codegen/cli @graphql-codegen/fragment-matcher\n`}</code></pre>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`graphql-codegen`}</inlineCode>{` to npm scripts.`}</p>\n    <p>{`Ensure you are using `}<inlineCode parentName=\"p\">{`@apollo/client`}</inlineCode>{` and drop `}<inlineCode parentName=\"p\">{`@apollo/react-hooks`}</inlineCode>{` as it is included now (see the GitHub issue `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apollographql/apollo-client/issues/5808\"\n      }}>{`here`}</a>{`).`}</p>\n    <p>{`This also means ensuring imports for the `}<inlineCode parentName=\"p\">{`ApolloProvider`}</inlineCode>{` and other hooks come from `}<inlineCode parentName=\"p\">{`@apollo/client`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"setup-for-apollo-client\"\n    }}>{`Setup for Apollo Client`}</h2>\n    <p>{`With Apollo Client 3, you'll need to make the following changes to your current file that sets up the client:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import {\n  InMemoryCache,\n  IntrospectionFragmentMatcher,\n} from 'apollo-cache-inmemory';\n\n// generated by Fragment Matcher plugin\nimport possibleTypes from '../introspection-result';\n\nconst cache = new InMemoryCache({\n  possibleTypes,\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"codegen\"\n    }}>{`Codegen`}</h2>\n    <p>{`Create a `}<inlineCode parentName=\"p\">{`codegen.yml`}</inlineCode>{` file with some config options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`# codegen.yml\nschema: http://localhost:7000/performance/api/v2/graphql\noverwrite: true\ngenerates:\n  ./src/introspection-result.ts:\n    plugins:\n      - fragment-matcher\n`}</code></pre>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`yarn codegen`}</inlineCode>{` to generate the schema while your API is running.`}</p>\n    <h2 {...{\n      \"id\": \"in-action\"\n    }}>{`In Action`}</h2>\n    <p>{`When all of this is done, you will be able to query your data with no warnings or errors!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}