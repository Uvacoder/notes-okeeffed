{"version":3,"sources":["webpack:///../manual/Ruby-On-Rails/Factory-Bot-Rails.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,yBADR,yBAGA,iBAAQ,CACN,GAAM,mBADR,oBAGA,gEAA+C,mBAAGC,WAAW,KAAQ,CACjE,KAAQ,8DADmC,aAA/C,KAGA,8BACE,iBAAGA,WAAW,cAAd,qYAEF,6DAA4C,mBAAGA,WAAW,KAAQ,CAC9D,KAAQ,8CADgC,iBAA5C,aAGA,mGACA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oDADQ,iCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8CADQ,2BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mFADQ,uCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oFADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8CADQ,oBAItB,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,oFAML,iBAAQ,CACN,GAAM,yBADR,yBAGA,wCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6GAOL,4BAAW,0BAAYA,WAAW,KAAvB,kBAAX,KACA,iBAAQ,CACN,GAAM,wCADR,wCAGA,uCACA,8BACE,iBAAGA,WAAW,cAAd,mJAEF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,mHASL,4EAA2D,0BAAYA,WAAW,KAAvB,yBAA3D,mCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,sEAIL,6FAA4E,0BAAYA,WAAW,KAAvB,uBAA5E,QAAoJ,0BAAYA,WAAW,KAAvB,yBAApJ,KACA,iBAAQ,CACN,GAAM,UADR,UAGA,2DAA0C,0BAAYA,WAAW,KAAvB,+BAA1C,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mJASL,wDAAuC,0BAAYA,WAAW,KAAvB,uBAAvC,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yYAgBL,iBAAQ,CACN,GAAM,kBADR,kBAGA,iCAAgB,mBAAGA,WAAW,KAAQ,CAClC,KAAQ,mFADI,UAAhB,2CAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,iGAML,oEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,oNAOL,iBAAQ,CACN,GAAM,eADR,eAGA,+BAAc,0BAAYA,WAAW,KAAvB,yBAAd,gCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gKAOL,iBAAQ,CACN,GAAM,gDADR,gDAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6IAUL,iBAAQ,CACN,GAAM,8BADR,8BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,y7BAqCL,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,wCAIL,wEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eADZ,2Q,kNAoBTJ,EAAWK,gBAAiB","file":"component---manual-ruby-on-rails-factory-bot-rails-md-fc4819f78b133af06c5b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"factory-bot-rails-gem\"\n    }}>{`Factory Bot Rails Gem`}</h1>\n    <h2 {...{\n      \"id\": \"why-factory-bot\"\n    }}>{`Why Factory Bot?`}</h2>\n    <p>{`From the world's most reliable resource `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Factory_Bot_(Rails_Testing)\"\n      }}>{`Wikipedia`}</a>{`:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Factory Bot is often used in testing Ruby on Rails applications; where it replaces Rails' built-in fixture mechanism. Rails' default setup uses a pre-populated database as test fixtures, which are global for the complete test suite. Factory Bot, on the other hand, allows developers to define a different setup for each test and thus helps to avoid dependencies within the test suite.`}</p>\n    </blockquote>\n    <p>{`There is more info on the why on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://thoughtbot.com/blog/why-factories\"\n      }}>{`Why Factories`}</a>{` article.`}</p>\n    <p>{`This is simply a quick start to get up and going to test model validation.`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/thoughtbot/factory_bot_rails\"\n        }}>{`thoughtbot/factory_bot_rails`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/thoughtbot/factory_bot\"\n        }}>{`thoughtbot/factory_bot`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/getting_started.html#creating-the-article-model\"\n        }}>{`Creating an Article model in Rails`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://semaphoreci.com/community/tutorials/how-to-test-rails-models-with-rspec\"\n        }}>{`Testing RSpec`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://thoughtbot.com/blog/why-factories\"\n        }}>{`Why Factories?`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"quick-start\"\n    }}>{`Quick start`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`rails new <project> -- api\ncd <project>\ngem install rspec factory_bot_rails\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-gemfile-config\"\n    }}>{`Update Gemfile config`}</h2>\n    <p>{`In the Gemfile:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`group :development, :test do\n  gem 'factory_bot_rails', '~>6.0'\n  gem 'rspec-rails', '>= 3.9.0'\nend\n`}</code></pre>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`bundle install`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"automatic-factory-definition-loading\"\n    }}>{`Automatic factory definition loading`}</h2>\n    <p>{`From the docs:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`By default, factory_bot_rails will automatically load factories defined in the following locations, relative to the root of the Rails project:`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`factories.rb\ntest/factories.rb\nspec/factories.rb\nfactories/*.rb\ntest/factories/*.rb\nspec/factories/*.rb\n`}</code></pre>\n    <p>{`If you want to, you can set custom configuration in `}<inlineCode parentName=\"p\">{`config/application.rb`}</inlineCode>{` or the appropraite env config.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`config.factory_bot.definition_file_paths = [\"custom/factories\"]\n`}</code></pre>\n    <p>{`This will cause factory_bot_rails to automatically load factories in `}<inlineCode parentName=\"p\">{`custom/factories.rb`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`custom/factories/*.rb`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"config\"\n    }}>{`Config`}</h2>\n    <p>{`Add the following configuration to `}<inlineCode parentName=\"p\">{`test/support/factory_bot.rb`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`# test/support/factory_bot.rb\nrequire \"factory_bot_rails\"\n\nRSpec.configure do |config|\n  config.include FactoryBot::Syntax::Methods\nend\n`}</code></pre>\n    <p>{`Be sure to require that file in `}<inlineCode parentName=\"p\">{`test/test_helper.rb`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`# test/test_helper.rb\nENV[\"RAILS_ENV\"] ||= \"test\"\nrequire_relative \"../config/environment\"\nrequire_relative \"./support/factory_bot\"\nrequire \"rails/test_help\"\nrequire \"rspec/rails\"\n\nclass ActiveSupport::TestCase\n  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.\n  fixtures :all\n\n  # Add more helper methods to be used by all tests here...\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-a-model\"\n    }}>{`Create a model`}</h2>\n    <p>{`From the `}<a parentName=\"p\" {...{\n        \"href\": \"https://guides.rubyonrails.org/getting_started.html#creating-the-article-model\"\n      }}>{`guides`}</a>{`, we are going to generate a new model.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`rails generate model Article title:string text:text\n# run the migration\nrails db:migrate\n`}</code></pre>\n    <p>{`If successful, the migration should return:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`==  CreateArticles: migrating ==================================================\n-- create_table(:articles)\n   -> 0.0019s\n==  CreateArticles: migrated (0.0020s) =========================================\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-ruby\"\n    }}>{`Update Ruby`}</h2>\n    <p>{`Update `}<inlineCode parentName=\"p\">{`app/models/article.rb`}</inlineCode>{` to look like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`class Article < ApplicationRecord\n  validates :title, presence: true, length: {minimum: 5}\n  validates :text, presence: true, length: {minimum: 5}\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-the-following-to-the-factories-directory\"\n    }}>{`Add the following to the factories directory`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`# test/factories/articles.rb\nFactoryBot.define do\n  factory :article do\n    title { \"MyString\" }\n    text { \"MyText\" }\n  end\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-an-rspec-for-the-model\"\n    }}>{`Add an Rspec for the model`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rb\"\n      }}>{`# test/models/article_test.rb\nrequire \"./test/test_helper\"\n\nclass ArticleTest < ActiveSupport::TestCase\n  describe \"article model\" do\n    before(:all) do\n      @article1 = FactoryBot.create(:article)\n    end\n\n    it \"is valid with valid attributes\" do\n      expect(@article1).to be_valid\n    end\n\n    it \"is not valid without a title\" do\n      article2 = FactoryBot.build(:article, title: nil)\n      expect(article2).to_not be_valid\n    end\n\n    it \"is not valid without text\" do\n      article2 = FactoryBot.build(:article, text: nil)\n      expect(article2).to_not be_valid\n    end\n\n    it \"is not valid without a title of min length 5\" do\n      article2 = FactoryBot.build(:article, title: \"Min\")\n      expect(article2).to_not be_valid\n    end\n\n    it \"is not valid without text of min length 5\" do\n      article2 = FactoryBot.build(:article, text: \"Min\")\n      expect(article2).to_not be_valid\n    end\n  end\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-the-test\"\n    }}>{`Running the test`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`rspec test/models/article_test.rb\n`}</code></pre>\n    <p>{`We should get something like the following out:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`.....\n\nFinished in 0.04765 seconds (files took 0.90722 seconds to load)\n5 examples, 0 failures\n\nRun options: --seed 18801\n\n# Running:\n\n\n\nFinished in 0.001607s, 0.0000 runs/s, 0.0000 assertions/s.\n0 runs, 0 assertions, 0 failures, 0 errors, 0 skips\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}