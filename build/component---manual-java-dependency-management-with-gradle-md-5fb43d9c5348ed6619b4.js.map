{"version":3,"sources":["webpack:///../manual/Java/Dependency-Management-With-Gradle.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,kOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qCADR,qCAMA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uCADQ,qCAE0B,kBAAIA,WAAW,MACzD,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gCADQ,+BAEoB,kBAAIA,WAAW,MACnD,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4BADQ,8BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uCADQ,2CAIxB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,8BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,sBADQ,yBAQ1B,iBAAQ,CACN,GAAM,8BADR,+BAGA,sFACA,uGACA,qGAAoF,mBAAGA,WAAW,KAAQ,CACtG,KAAQ,4BADwE,+BAApF,mCAGA,iGACA,6EAA4D,0BAAYA,WAAW,KAAvB,YAA5D,6BACA,2GACA,6DACA,qBAAG,0BAAYA,WAAW,KAAvB,WAAH,6BACF,0BAAYA,WAAW,KAAvB,cADE,2BAEA,mGACA,+JAA8I,0BAAYA,WAAW,KAAvB,gBAA9I,KACA,iBAAQ,CACN,GAAM,qBADR,wBAGA,8FACA,iEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iPAeL,4BAAW,0BAAYA,WAAW,KAAvB,SAAX,oFAAiJ,0BAAYA,WAAW,KAAvB,UAAjJ,cACA,iBAAQ,CACN,GAAM,gCADR,mCAGA,uIACA,uBACA,iBAAQ,CACN,GAAM,4BADR,6BAGA,kJACA,kGAAiF,0BAAYA,WAAW,KAAvB,gBAAjF,gCAA0K,0BAAYA,WAAW,KAAvB,iBAA1K,gCACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8OAWL,iLACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gNASL,4DACA,+IACA,wGAAuF,0BAAYA,WAAW,KAAvB,eAAvF,0GAAyP,0BAAYA,WAAW,KAAvB,eAAzP,4CACA,+EACA,qEACA,8JACA,+CAA8B,0BAAYA,WAAW,KAAvB,2BAC9B,iBAAQ,CACN,GAAM,oBADR,qBAGA,iDAAgC,0BAAYA,WAAW,KAAvB,gBAAhC,yHACA,uHACA,gH,yNAKJJ,EAAWK,gBAAiB","file":"component---manual-java-dependency-management-with-gradle-md-5fb43d9c5348ed6619b4.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dependency-management-with-gradle\"\n    }}>{`Dependency Management with Gradle`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#dependency-management-with-gradle\"\n        }}>{`Dependency Management with Gradle`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#gr-1-gradle-the-build-tool\"\n            }}>{`GR-1: Gradle the build tool`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----gr-11-buildgradle\"\n                }}>{`---- GR-1.1: build.gradle`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----gr-12-gradlew-and-gradlewbat\"\n                }}>{`---- GR-1.2: gradlew and gradlew.bat`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#gr-2-adding-dependencies\"\n            }}>{`GR-2: Adding Dependencies`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#gr-3-source-code\"\n            }}>{`GR-3: Source Code`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"gr-1-gradle-the-build-tool\"\n    }}>{`GR-1: Gradle the build tool`}</h2>\n    <p>{`There are a lot of tasks when you want to build your project.`}</p>\n    <p>{`Other build tools include Maven and Ant, and Gradle works well with these two.`}</p>\n    <p>{`Gradle exposes a Domain Specific Language (DSL) that is based heavily on the `}<a parentName=\"p\" {...{\n        \"href\": \"http://groovy-lang.org/\"\n      }}>{`Groovy Programming Language`}</a>{` and is very similar to Groovy.`}</p>\n    <p>{`Gradle has an opinionated way on how things should be done and laid out.`}</p>\n    <p>{`If you want to use an IDE for this, the example uses `}<inlineCode parentName=\"p\">{`IntelliJ`}</inlineCode>{` and the Gradle template.`}</p>\n    <p>{`From the main menu, select Gradle and select Java as the main language and create.`}</p>\n    <p>{`From here, you will need to fill in:`}</p>\n    <p><inlineCode parentName=\"p\">{`GroupId`}</inlineCode>{`: General com.dennis.app\n`}<inlineCode parentName=\"p\">{`ArtifactId`}</inlineCode>{`: JAR file name eg. app`}</p>\n    <p>{`Ensure you select the Java version you want to use as well - demo was 1.8.`}</p>\n    <p>{`One you are in the files have been downloaded by Gradle, open up the project structure and it'll end up creating a build script called `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"gr-11-buildgradle\"\n    }}>{`GR-1.1: build.gradle`}</h2>\n    <p>{`This is the main file that is defining things like the structure etc.`}</p>\n    <p>{`For now, you may have this as an example`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`group 'com.dennisokeeffe.intro'\nversion '1.0-SNAPSHOT'\n\napply plugin: 'java'\n\nsourceCompatibility = 1.5\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile group: 'junit', name: 'junit', version: '4.11'\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`apply`}</inlineCode>{` is for things like folder structure etc. - you may notice that this is also the `}<inlineCode parentName=\"p\">{`Groovy`}</inlineCode>{` language.`}</p>\n    <h2 {...{\n      \"id\": \"gr-12-gradlew-and-gradlewbat\"\n    }}>{`GR-1.2: gradlew and gradlew.bat`}</h2>\n    <p>{`These files are the Gradle wrappers that makes sure that everyone can build and test the project the same way.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"gr-2-adding-dependencies\"\n    }}>{`GR-2: Adding Dependencies`}</h2>\n    <p>{`Transitive depencies are all handled through Gradle. This means it won't download version of dependencies it already has.`}</p>\n    <p>{`Where does it download from? This is under control that is defined in the `}<inlineCode parentName=\"p\">{`repositories`}</inlineCode>{` section and by default uses `}<inlineCode parentName=\"p\">{`Maven Central`}</inlineCode>{` - you can also change this.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// dependencies uses a helper function mavenCentral()\n// anything in dependencies will look in the repos\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile group: 'junit', name: 'junit', version: '4.11'\n}\n`}</code></pre>\n    <p>{`As an example, we can actually find packages that can be used as Maven depencies (XML) and add it such that Gradle can handle it. Eg Apache CSV package.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`repositories {\n    mavenCentral()\n}\n\ndependencies {\n    compile group: ''org.apache.commons', name: 'commons-csv', version: '1.2'\n    testCompile group: 'junit', name: 'junit', version: '4.11'\n}\n`}</code></pre>\n    <p>{`Now we want to refresh the project.`}</p>\n    <p>{`In IntelliJ, you can find the Gradle tool bar on the lefthand edge and then click on it and select refresh to rebuild.`}</p>\n    <p>{`Now, the library will show up in the External Libraries section. If you had the `}<inlineCode parentName=\"p\">{`Auto import`}</inlineCode>{` setting selected or you have right-clicked on the project name in the LH edge Gradle bar and selected `}<inlineCode parentName=\"p\">{`Auto-import`}</inlineCode>{`, it will automatically do this for you.`}</p>\n    <p>{`There is also a shorter form for writing dependencies.`}</p>\n    <p>{`compile 'org.apache.commons:commons-csv:1.2'`}</p>\n    <p>{`Transitive dependencies will also be downloaded automatically. If we want a better idea of what is going on, we can use the terminal.`}</p>\n    <p>{`To do this, we can run `}<inlineCode parentName=\"p\">{`./gradlew dependencies`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"gr-3-source-code\"\n    }}>{`GR-3: Source Code`}</h2>\n    <p>{`Now, anyone who has that `}<inlineCode parentName=\"p\">{`gradle build`}</inlineCode>{` file we have, we can just insert all those depencies that we need and then from any computer we can just build that!`}</p>\n    <p>{`Then we can import the packages that we need to the Java files and then use them as we expect.`}</p>\n    <p>{`To find more packages, we can then go to something like Maven and search for packages.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}