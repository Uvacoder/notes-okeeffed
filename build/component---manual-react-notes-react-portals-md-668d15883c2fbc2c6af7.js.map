{"version":3,"sources":["webpack:///../manual/React-Notes/React-Portals.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,qNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,eADR,gBAGA,2LACA,yGAAwF,0BAAYC,WAAW,KAAvB,aAAxF,KACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,wQ,4MAkBTJ,EAAWK,gBAAiB","file":"component---manual-react-notes-react-portals-md-668d15883c2fbc2c6af7.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react-portals\"\n    }}>{`React Portals`}</h1>\n    <h2 {...{\n      \"id\": \"why-portals\"\n    }}>{`Why Portals?`}</h2>\n    <p>{`A great use case for portals is for use with things like React modals. Anything that uses a stack context can obscure the css position for something like a modal.`}</p>\n    <p>{`The tl;dr is to make a React component a descendent of a HTML element other than `}<inlineCode parentName=\"p\">{`id=\"root\"`}</inlineCode>{`;`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-portal\"\n    }}>{`Creating a Portal`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"modal\">\n      <div className=\"modal-body\" />\n    </div>,\n    document.querySelector('#modal')\n  );\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}