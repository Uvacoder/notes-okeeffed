(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{xjTd:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return o})),a.d(t,"default",(function(){return c}));a("1c7q"),a("abGl"),a("gZHo"),a("Fdmb"),a("Ir+3"),a("2mQt"),a("mXGw");var n=a("/FXl"),i=a("TjRS");a("aD51");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/COMP3306-AI/3-A*-Algorithm.md"}});var b={_frontmatter:o},r=i.a;function c(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,["components"]);return Object(n.b)(r,l({},b,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"week-3---a-algorithm"},"Week 3 - A","*"," Algorithm"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",l({parentName:"li"},{href:"#week-3---a-algorithm"}),"Week 3 - A","*"," Algorithm"),"\n- ",Object(n.b)("a",l({parentName:"li"},{href:"#a-search"}),"A","*"," Search"),"\n- ",Object(n.b)("a",l({parentName:"li"},{href:"#admissible-heauristic"}),"Admissible Heauristic"),"\n- ",Object(n.b)("a",l({parentName:"li"},{href:"#optimality-of-a---proof"}),"Optimality of A","*"," - Proof"),"\n- ",Object(n.b)("a",l({parentName:"li"},{href:"#dominance"}),"Dominance"))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Aims")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"A","*"," search algorithm"),Object(n.b)("li",{parentName:"ul"},"How to invent admissible heuristics")),Object(n.b)("h2",{id:"a-search"},"A","*"," Search"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"UCS minimizes the cost so far ",Object(n.b)("inlineCode",{parentName:"li"},"g(n)")),Object(n.b)("li",{parentName:"ul"},"GS minimizes the estimated cost to the goal ",Object(n.b)("inlineCode",{parentName:"li"},"h(n)")),Object(n.b)("li",{parentName:"ul"},"A","*"," combining UCS and GS"),Object(n.b)("li",{parentName:"ul"},"Evaluation function: ",Object(n.b)("inlineCode",{parentName:"li"},"f(n)=g(n)+h(n)")," - ",Object(n.b)("inlineCode",{parentName:"li"},"g(n) = cost so far to reach n")," - ",Object(n.b)("inlineCode",{parentName:"li"},"h(n) = est. cost from n to goal")," - ",Object(n.b)("inlineCode",{parentName:"li"},"f(n) = est. total cost of path through n to the goal"))),Object(n.b)("p",null,"The idea is that we take into account both the cost and estimated cost and combine them to decide which nodes to add to the fringe queue!"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"BFS and UCS Special Case")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"BFS is a special case of A","*"," when f(n)=depth(n)"),Object(n.b)("li",{parentName:"ul"},"BFS is also a special case of UCS when g(n)=depth(n)"),Object(n.b)("li",{parentName:"ul"},"UCS is a special case of A","*"," when h(n)=0")),Object(n.b)("h2",{id:"admissible-heauristic"},"Admissible Heauristic"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Heuristic ",Object(n.b)("inlineCode",{parentName:"li"},"h(n)")," is admissible if for every node n: - ",Object(n.b)("inlineCode",{parentName:"li"},"h(n) <= h*(n)")," where ",Object(n.b)("inlineCode",{parentName:"li"},"h*(n)")," is the true cost to reach a goal from ",Object(n.b)("inlineCode",{parentName:"li"},"n")," - The estimate to reach the goal is smaller or equal to the true cost to reach the goal"),Object(n.b)("li",{parentName:"ul"},"Admissible heuristics are ",Object(n.b)("inlineCode",{parentName:"li"},"optimistic")," - they think that the cost of solving the problem is less than it actually is. - heuristic never overestimates actual cost -> it is admissible")),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Theorem")),Object(n.b)("p",null,"If ",Object(n.b)("inlineCode",{parentName:"p"},"h")," is an ",Object(n.b)("inlineCode",{parentName:"p"},"admissible heuristic")," than A","*"," is complete and optimal."),Object(n.b)("p",null,"How to check?"),Object(n.b)("p",null,"See if the estimated cost for a node is <= the actual cost from that node to the goal node."),Object(n.b)("h2",{id:"optimality-of-a---proof"},"Optimality of A","*"," - Proof"),Object(n.b)("p",null,"Compare f(G2) and f(G)"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"f(G2)=g(G2)+h(G2) (by definition) = g(G2) as h(G2)=0, G2 is a goal"),Object(n.b)("li",{parentName:"ol"},"f(G)=g(G)+h(G) (by definition) = g(G) as h(G)=0, G is a goal"),Object(n.b)("li",{parentName:"ol"},"g(G2)>g(G) as G2 is suboptimal"),Object(n.b)("li",{parentName:"ol"},"=> f(G2)>f(G) by substituting 1) and 2) into 3)"),Object(n.b)("li",{parentName:"ol"},"f(n)=g(n)+h(n) (by definition)"),Object(n.b)("li",{parentName:"ol"},"h(n) <= h",Object(n.b)("em",{parentName:"li"},"(n) where h"),"(n) is the true cost from n to G (as h is admissible)"),Object(n.b)("li",{parentName:"ol"},"=> f(n)<=g(n) + h","*","(n) (5 & 6)"),Object(n.b)("li",{parentName:"ol"},"= g(G) path cost from S to G via n"),Object(n.b)("li",{parentName:"ol"},"g(G) = f(G) as f(G)=g(G)+h(G)=g(G)+0 as h(G)=0, G is a goal"),Object(n.b)("li",{parentName:"ol"},"=> f(n)<=f(G) (7,8,9)",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Thus f(G)<f(G2) (4) & f(n)<=f(G) (10)"))),Object(n.b)("li",{parentName:"ol"},"f(n)<=f(G)<f(G2) (10, 4)"),Object(n.b)("li",{parentName:"ol"},"f(n)<f(G2) => n will be expanded not G2; A","*"," will not select G2 for expansion")),Object(n.b)("h2",{id:"dominance"},"Dominance"),Object(n.b)("p",null,"Two admissibleheuristics h(1) and h(2)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"h[2]")," dominates ",Object(n.b)("inlineCode",{parentName:"li"},"h[1]")," if for all nodes ",Object(n.b)("inlineCode",{parentName:"li"},"n")," we have ",Object(n.b)("inlineCode",{parentName:"li"},"h[2](n) >= h[1](n)"))))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/COMP3306-AI/3-A*-Algorithm.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-comp-3306-ai-3-a-algorithm-md-6d967d4466dacf4b89ec.js.map