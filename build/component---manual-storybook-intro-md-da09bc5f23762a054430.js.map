{"version":3,"sources":["webpack:///../manual/Storybook/intro.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,uBACA,gDACA,iBAAQ,CACN,GAAM,qBADR,sBAGA,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,SADR,SAGA,oGACA,yJACA,iBAAQ,CACN,GAAM,UADR,UAGA,iMAAgL,0BAAYC,WAAW,KAAvB,gCAAhL,6BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,2PAYL,iBAAQ,CACN,GAAM,mCADR,mCAGA,gCAAe,0BAAYA,WAAW,KAAvB,qBAAf,2CACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kFAGL,iBAAQ,CACN,GAAM,UADR,UAGA,sI,kMAKJJ,EAAWK,gBAAiB","file":"component---manual-storybook-intro-md-da09bc5f23762a054430.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <hr></hr>\n    <p>{`Author: Dennis O'Keeffe`}</p>\n    <h2 {...{\n      \"id\": \"section-storybook\"\n    }}>{`Section: Storybook`}</h2>\n    <h1 {...{\n      \"id\": \"storybook-intro\"\n    }}>{`Storybook Intro`}</h1>\n    <h2 {...{\n      \"id\": \"intro\"\n    }}>{`Intro`}</h2>\n    <p>{`Storybook can be used to add documentation, READMEs and explore components.`}</p>\n    <p>{`This section will give examples on how to add docs, how to add knobs and how to integrate Redux components that require a store.`}</p>\n    <h2 {...{\n      \"id\": \"basics\"\n    }}>{`Basics`}</h2>\n    <p>{`Below is a basic example of creating a React component story for Storybook. More complex examples are in the following sections. Best practise for a component is to add `}<inlineCode parentName=\"p\">{`[componentName].storybook.js`}</inlineCode>{` to the component folder.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport { storiesOf } from '@storybook/react';\n\nconst Component = () => <h1>Hello world!</h1>;\n\nconst story = () =>\n    storiesOf('Using Storybook').add('Intro Component', <Component />);\n\nexport default story;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"importing-it-into-the-storybook\"\n    }}>{`Importing it into the storybook`}</h2>\n    <p>{`Head to `}<inlineCode parentName=\"p\">{`/stories/index.js`}</inlineCode>{` and import the file. An example below.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import Storybook from 'path/to/[componentName].storybook.js';\nStorybook();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"styles\"\n    }}>{`Styles`}</h2>\n    <p>{`Note: If projects overwrite basics like typography etc, it will override the base Storybook styling as well.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}