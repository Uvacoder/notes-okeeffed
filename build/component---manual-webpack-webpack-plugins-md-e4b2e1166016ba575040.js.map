{"version":3,"sources":["webpack:///../manual/Webpack/Webpack-Plugins.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,mNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,8EACA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+EADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wDADQ,gBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kDADQ,wBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uCADQ,kBAItB,iBAAQ,CACN,GAAM,0BADR,0BAGA,8EACA,wCAAuB,0BAAYA,WAAW,KAAvB,YAAvB,WAAuF,0BAAYA,WAAW,KAAvB,WAAvF,wEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,2TAgBL,8BACE,iBAAGA,WAAW,cAAd,0EAEF,8GACA,iBAAQ,CACN,GAAM,2BADR,2BAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,sCACA,sBACE,kBAAIA,WAAW,MAAf,wBACA,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,eAEF,iBAAQ,CACN,GAAM,mBADR,mBAGA,0FACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,kDACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,iGACA,sBACE,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,+DAEF,iBAAQ,CACN,GAAM,UADR,UAGA,8EACA,8BACE,iBAAGA,WAAW,cAAd,mCAEF,iBAAQ,CACN,GAAM,aADR,aAGA,uGACA,iBAAQ,CACN,GAAM,iCADR,iCAGA,iFACA,qBAAG,0BAAYA,WAAW,KAAvB,yBAAH,4HACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,8BACE,iBAAGA,WAAW,cAAd,yBAAqD,0BAAYA,WAAW,KAAvB,SAArD,aAEF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,2bAqBL,8BACE,iBAAGA,WAAW,cAAd,OAAmC,0BAAYA,WAAW,KAAvB,2BAAnC,oCAEF,8DAA6C,0BAAYA,WAAW,KAAvB,YAA7C,YACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,iMAQL,2JAA0I,0BAAYA,WAAW,KAAvB,6BAA1I,KACA,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,qPAWL,iBAAQ,CACN,GAAM,wBADR,wBAGA,oFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,kZAWL,iBAAQ,CACN,GAAM,qBADR,qBAGA,qFAAoE,0BAAYA,WAAW,KAAvB,MAApE,+BAAkJ,0BAAYA,WAAW,KAAvB,6BAAlJ,4CACA,yEAAwD,mBAAGA,WAAW,KAAQ,CAC1E,KAAQ,uCAD4C,SAAxD,KAGA,4KACA,iBAAQ,CACN,GAAM,8BADR,8BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,yfA+BL,yHAAwG,0BAAYA,WAAW,KAAvB,MAAxG,WACA,kEACA,iBAAQ,CACN,GAAM,iCADR,iCAGA,8BACE,iBAAGA,WAAW,cAAd,qJAEF,gDAA+B,0BAAYA,WAAW,KAAvB,oBAA/B,iE,0MAKJJ,EAAWK,gBAAiB","file":"component---manual-webpack-webpack-plugins-md-e4b2e1166016ba575040.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"webpack-plugins\"\n    }}>{`Webpack Plugins`}</h1>\n    <p>{`Webpack 4 is the standard at the time of this course.`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://frontendmasters.com/courses/webpack-plugins/tapable-plugin-system/\"\n        }}>{`FE Course`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/thelarkinn/webpack-workshop-2018\"\n        }}>{`Course Repo`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://webpack.js.org/api/compilation-hooks/\"\n        }}>{`Webpack Compilation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/streamich/memfs\"\n        }}>{`memfs GitHub`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"tapable-pluging-system\"\n    }}>{`Tapable Pluging System`}</h2>\n    <p>{`It is a backbone of the webpack of the plugin system.`}</p>\n    <p>{`Things like the `}<inlineCode parentName=\"p\">{`Compiler`}</inlineCode>{` extend `}<inlineCode parentName=\"p\">{`Tapable`}</inlineCode>{`. They have hooks now that are static to see what you can plug into.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// This is only v3 shown for demo purposes.\n// These days you can plug into via the hooks.\nclass BasicPlugin {\n  constructor() {}\n\n  apply(compiler) {\n    compiler.plugin('make', compilation => {\n      console.log('I have access to the compilation!');\n    });\n  }\n}\n\nmodule.exports = BasicPlugin;\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`To access any Tapable instances, you need to go through the compiler.`}</p>\n    </blockquote>\n    <p>{`There are 7-ish Tapable instances in this talk that Sean deems as the most important.`}</p>\n    <h2 {...{\n      \"id\": \"the-7-tapable-instances\"\n    }}>{`The 7 Tapable Instances`}</h2>\n    <h3 {...{\n      \"id\": \"the-compiler\"\n    }}>{`The Compiler`}</h3>\n    <p>{`The compiler:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Exposed via Node API`}</li>\n      <li parentName=\"ul\">{`Central dispatch`}</li>\n      <li parentName=\"ul\">{`Start/stop`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"the-compilation\"\n    }}>{`The Compilation`}</h3>\n    <p>{`The meat and potatoes of the Webpack. It is the dependency graph.`}</p>\n    <h3 {...{\n      \"id\": \"the-resolver\"\n    }}>{`The Resolver`}</h3>\n    <p>{`\"Finds out if it exists.\"`}</p>\n    <h3 {...{\n      \"id\": \"module-factories\"\n    }}>{`Module Factories`}</h3>\n    <p>{`Factories create instances/objects. The module factories does just that.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Takes successfully resolved requests.`}</li>\n      <li parentName=\"ul\">{`Collects source for that file and creates a module object.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"parser\"\n    }}>{`Parser`}</h3>\n    <p>{`Parser creates the ASTs and begins walking the graph.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Webpack uses Acorn by default.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"templates\"\n    }}>{`Templates`}</h3>\n    <p>{`Data binding for the modules. Creates the source code you see in your bundles.`}</p>\n    <h2 {...{\n      \"id\": \"plugin-system-code-walkthough\"\n    }}>{`Plugin System Code Walkthough`}</h2>\n    <p>{`There are hundreds of properties exposed out of the box.`}</p>\n    <p><inlineCode parentName=\"p\">{`webpack.options.apply`}</inlineCode>{` takes the config and \"basically runs a huge switch statement\" and changes the module based on the env ie Electron, etc.`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-plugin\"\n    }}>{`Creating a Plugin`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`It is a class with an `}<inlineCode parentName=\"p\">{`apply`}</inlineCode>{` method.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// plugin\nclass MyFirstWebpackPlugin {\n  // this is the important method\n  apply(compiler) {\n    compiler.hooks.done.tapAsync(\"MyFirstWebpackPlugin\", (stats, cb) => {\n      console.log(stats);\n      cb;\n    }));\n  }\n}\n\nmodule.exports = MyFirstWebpackPlugin;\n\n// in webpack.config.js\nconst MyFirstWebpackPlugin = require('path/to/MyFirstWebpackPlugin');\n\n// ... later in the code\nplugins: [new MyFirstWebpackPlugin()];\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Use `}<inlineCode parentName=\"p\">{`webpack/lib/Compiler.js`}</inlineCode>{` to see all the possible hooks!`}</p>\n    </blockquote>\n    <p>{`The important part of any hook is the `}<inlineCode parentName=\"p\">{`tapAsync`}</inlineCode>{` method:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`compiler.hooks.done.tapAsync(\"MyFirstWebpackPlugin\", (stats, cb) => {\n  console.log(stats);\n  debugger; // a cool tip on debugging the webpack plugin at chrome://inspect\n  cb();\n}));\n`}</code></pre>\n    <p>{`Using the debugger can tell you so much about why things get tree shaken etc. You can see it in verbose in the debug console using `}<inlineCode parentName=\"p\">{`stats.toString(\"verbose\")`}</inlineCode>{`.`}</p>\n    <p>{`A useful hook to see the outputs:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`compiler.hooks.done.tapAsync(\"MyFirstWebpackPlugin\", (stats, cb) => {\n  const assetNames = [];\n  for (let assetName in stats.compilation.assets) {\n    assetName.push(assetName)\n  }\n  console.log(assetNames.join(\"\\\\n\"))\n  cb();\n}));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"plugin-instance-hook\"\n    }}>{`Plugin Instance Hook`}</h2>\n    <p>{`For hooking into another instance, we can use another hook:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`compiler.hooks.compilation.tapAsync(\"MyFirstWebpackPlugin\", (compilation, params) => {\n  const thisCompilationIWantToInspect = compilation;\n  compilation.hooks.seal.tap(\"MyFirstWebpackPlugin\", () => {\n    // annoying gotcha - need to use the variable for it to show in VSCode inspector\n    console.log(thisCompilationIWantToInspect)\n    debugger; // we can now inspect the above\n  })\n}));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"isolating-plugins\"\n    }}>{`Isolating Plugins`}</h2>\n    <p>{`Everything is in memory, so there is no concept of importing `}<inlineCode parentName=\"p\">{`fs`}</inlineCode>{` from Node. There is a file `}<inlineCode parentName=\"p\">{`MemoryOutputFileSystem.js`}</inlineCode>{` that has a like of requiring memory fs.`}</p>\n    <p>{`Webpack uses an in-memory file system, simile to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/streamich/memfs\"\n      }}>{`memfs`}</a>{`.`}</p>\n    <p>{`Something else that is cool is that you can take another plugin and use that within your plugin! You can bring your own plugins into other plugins.`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-customer-loader\"\n    }}>{`Creating a Customer Loader`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// webpack.config.js\nmodule.exports = () => ({\n  resolveLoader: {\n    alias: {\n      'my-loader': require.resolve('./build-utils/my-loader.js'),\n    },\n  },\n  module: {\n    reults: [\n      {\n        test: /\\\\.js/,\n        use: 'my-loader',\n      },\n    ],\n  },\n});\n\n// my-loader.js\nfunction myLoader(source) {\n  debugger;\n  // example Sean uses\n  if (this.resource === 'path/to/file') {\n    // do something with resource\n  }\n  return source;\n}\n\nmodule.exports = myLoader;\n`}</code></pre>\n    <p>{`Something that is great, is that if you step over while the bugger is on, you'll got through all `}<inlineCode parentName=\"p\">{`js`}</inlineCode>{` files!`}</p>\n    <p>{`In the example, Sean just uses a simmple.`}</p>\n    <h2 {...{\n      \"id\": \"configuring-babel-for-webpack\"\n    }}>{`Configuring Babel for Webpack`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`It is important not to transpile Webpack down to CommonJS - this is a common pitfall and will cause issues for scope hoisting, tree shaking etc.`}</p>\n    </blockquote>\n    <p>{`The is an option to use `}<inlineCode parentName=\"p\">{`\"modules\": false`}</inlineCode>{` in the Babel config to ensure Webpack isn't down-converted.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}