{"version":3,"sources":["webpack:///../manual/Webpack/Building-A-Webpack-Plugin.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,6BADR,6BAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oEADQ,yDAItB,iBAAQ,CACN,GAAM,uCADR,uCAGA,4DAA2C,0BAAYA,WAAW,KAAvB,gBAA3C,oDACA,iBAAQ,CACN,GAAM,eADR,iBAGA,6GACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,oQAeL,oEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,gIAQL,+D,oNAKJJ,EAAWK,gBAAiB","file":"component---manual-webpack-building-a-webpack-plugin-md-fc3be875f80da47b7da6.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"building-a-webpack-plugin\"\n    }}>{`Building A Webpack Plugin`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dev.to/royal_bhati/write-your-first-webpack-plugin-20fh\"\n        }}>{`This DEV.to article on removing logs using a plugin`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"building-a-plugin-to-compile-tokens\"\n    }}>{`Building A Plugin To Compile Tokens`}</h2>\n    <p>{`This project enables us to look for `}<inlineCode parentName=\"p\">{`.tokens.json`}</inlineCode>{` files and compile the file tokens that we want.`}</p>\n    <h2 {...{\n      \"id\": \"hello-world\"\n    }}>{`Hello, World!`}</h2>\n    <p>{`Touch a new file to use for the plugin. Below is an example taken from resource (1).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`//logRemover.ts\n\nmodule.exports = class RemoveLogs {\n  // not needed but can be used for params taken by plugin\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    console.log('Hello from the new plugin');\n  }\n};\n`}</code></pre>\n    <p>{`In our example, we just need the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`module.exports = class CompileDesignTokens {\n  apply(compiler) {\n    console.log('Hello from the new plugin');\n  }\n};\n`}</code></pre>\n    <p>{`[TODO: Finish example (Jan 8th 2020)]`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}