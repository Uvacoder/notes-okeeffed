{"version":3,"sources":["webpack:///../manual/Next/Hello-Next.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4DADQ,qBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2EADQ,sBAItB,iBAAQ,CACN,GAAM,mBADR,mBAGA,qBAAG,0BAAYA,WAAW,KAAvB,uBAAH,kCAAqG,0BAAYA,WAAW,KAAvB,0BAArG,sCACA,sDAAqC,0BAAYA,WAAW,KAAvB,YAArC,KACA,iBAAQ,CACN,GAAM,yBADR,yBAGA,qBAAG,0BAAYA,WAAW,KAAvB,kEACH,iBAAQ,CACN,GAAM,gBADR,gBAGA,qBAAG,0BAAYA,WAAW,KAAvB,+BACH,oDAAmC,0BAAYA,WAAW,KAAvB,kBAAnC,UACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,gRAgBL,wCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,uLAWL,+CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,kN,kMAcTJ,EAAWK,gBAAiB","file":"component---manual-next-hello-next-md-57774edfeb144b65a220.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"hello-next\"\n    }}>{`Hello Next`}</h1>\n    <h2 {...{\n      \"id\": \"useful-links\"\n    }}>{`Useful links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.freecodecamp.org/news/the-next-js-handbook/\"\n        }}>{`Next.js Handbook`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.manuel-schoebel.com/blog/nextjs-typescript-storybook-setup\"\n        }}>{`Typescript Setup`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting started`}</h2>\n    <p><inlineCode parentName=\"p\">{`npx create-next-app`}</inlineCode>{` will create a next app. Using `}<inlineCode parentName=\"p\">{`--example blog-starter`}</inlineCode>{` will show an example with a blog.`}</p>\n    <p>{`Change into directory and run `}<inlineCode parentName=\"p\">{`yarn dev`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-typescript\"\n    }}>{`Setting up TypeScript`}</h2>\n    <p><inlineCode parentName=\"p\">{`touch tsconfig.json && yarn add --dev typescript @types/react`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"adding-treat\"\n    }}>{`Adding Treat`}</h2>\n    <p><inlineCode parentName=\"p\">{`yarn add treat react-treat`}</inlineCode></p>\n    <p>{`You then need to update the `}<inlineCode parentName=\"p\">{`next.config.js`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// start of file\nconst TreatPlugin = require('treat/webpack-plugin');\n\n// within webpack config object\nif (isServer) {\n  config.plugins.push(\n    new TreatPlugin({\n      outputCSS: false,\n    }),\n  );\n} else {\n  config.plugins.push(new TreatPlugin());\n}\n`}</code></pre>\n    <p>{`Create a theme:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// theme.treat.js\n// ** THIS CODE WON'T END UP IN YOUR BUNDLE! **\nimport { createTheme } from 'treat';\n\nexport default createTheme({\n  brandColor: 'blue',\n  grid: 4,\n});\n`}</code></pre>\n    <p>{`Now import the styles:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// App.js\nimport React from 'react';\nimport { TreatProvider } from 'react-treat';\n\nimport theme from './theme.treat.js';\n\nexport const App = () => <TreatProvider theme={theme}>...</TreatProvider>;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}