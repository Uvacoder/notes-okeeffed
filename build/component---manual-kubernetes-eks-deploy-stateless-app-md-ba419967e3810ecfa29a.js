(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{eNaT:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return p}));t("1c7q"),t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3"),t("2mQt"),t("mXGw");var a=t("/FXl"),l=t("TjRS");t("aD51");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Kubernetes/EKS-Deploy-Stateless-App.md"}});var o={_frontmatter:s},i=l.a;function p(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,["components"]);return Object(a.b)(i,r({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"eks---deploy-stateless-app"},"EKS - Deploy Stateless App"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#eks---deploy-stateless-app"}),"EKS - Deploy Stateless App"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#in-this-app"}),"In this app"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#backend"}),"Backend")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#frontend"}),"Frontend")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#deploying-the-backend"}),"Deploying the backend"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#the-redis-master"}),"The Redis Master")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#the-redis-slaves"}),"The Redis Slaves")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#deploying-the-frontend"}),"Deploying the Frontend")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"#scaling-pods-up-and-down"}),"Scaling Pods up and down"))))),Object(a.b)("p",null,"In this example, we will be build a basic guestbook example from Kubernetes."),Object(a.b)("h2",{id:"in-this-app"},"In this app"),Object(a.b)("p",null,"We will deploy the guestbook app at ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/kubernetes/examples/tree/master/guestbook"}),"https://github.com/kubernetes/examples/tree/master/guestbook"),"."),Object(a.b)("p",null,"We will need to deploy backend resources, frontend resources, scale Pods up/down and some chaos testing."),Object(a.b)("p",null,"Our application will be accessible from an AWS Load Balancer."),Object(a.b)("p",null,Object(a.b)("img",{alt:"App layout",src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548246181/eks-course/Screen_Shot_2019-01-23_at_11.22.49_pm.png"})),Object(a.b)("h3",{id:"backend"},"Backend"),Object(a.b)("p",null,"Redis:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Single Master (WRITES)"),Object(a.b)("li",{parentName:"ul"},"Multi Slaves (READ)"),Object(a.b)("li",{parentName:"ul"},"Slaves sync continuously from Master")),Object(a.b)("h3",{id:"frontend"},"Frontend"),Object(a.b)("p",null,"PHP App:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Load balanced to public with ELB"),Object(a.b)("li",{parentName:"ul"},"Read balanced over multiple salve DBs"),Object(a.b)("li",{parentName:"ul"},"Write req to single Master DB")),Object(a.b)("h2",{id:"deploying-the-backend"},"Deploying the backend"),Object(a.b)("p",null,"We need to create:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Redis Master pod"),Object(a.b)("li",{parentName:"ul"},"Redis Master service"),Object(a.b)("li",{parentName:"ul"},"Redis Slave pods"),Object(a.b)("li",{parentName:"ul"},"Redis Slave services")),Object(a.b)("p",null,"Then we will do some AWS networking (ENI) inspection."),Object(a.b)("h3",{id:"the-redis-master"},"The Redis Master"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: k8s.gcr.io/redis:e2e # or just image: redis\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n")),Object(a.b)("p",null,"Apply this file using kubectl and then you can check what has been deployed. Notice there is a Cluster IP but not an external IP as it is not exposed to the public."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-shell"}),"kubectl get svc\n\nNAME           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nkubernetes     ClusterIP   [REDACTED]       <none>        443/TCP    1h\nredis-master   ClusterIP   [REDACTED]       <none>        6379/TCP   16s\n")),Object(a.b)("h3",{id:"the-redis-slaves"},"The Redis Slaves"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yml"}),"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: gcr.io/google_samples/gb-redisslave:v1\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n")),Object(a.b)("p",null,"After applying the file, we can run ",Object(a.b)("inlineCode",{parentName:"p"},"kubectl get pods")," and see something similar to the following:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-shell"}),"NAME                            READY   STATUS    RESTARTS   AGE\nredis-master-6b464554c8-kqkpr   1/1     Running   0          7m\nredis-slave-b58dc4644-dk9cg     1/1     Running   0          12s\nredis-slave-b58dc4644-jx6mz     1/1     Running   0          12s\n")),Object(a.b)("h2",{id:"deploying-the-frontend"},"Deploying the Frontend"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    # matches Service\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: gcr.io/google-samples/gb-frontend:v4\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n              # Using `GET_HOSTS_FROM=dns` requires your cluster to\n              # provide a dns service. As of Kubernetes 1.3, DNS is a built-in\n              # service launched automatically. However, if the cluster you are using\n              # does not have a built-in DNS service, you can instead\n              # access an environment variable to find the master\n              # service's host. To do so, comment out the 'value: dns' line above, and\n              # uncomment the line below:\n              # value: env\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  # comment or delete the following line if you want to use a LoadBalancer\n  #type: NodePort\n  # if your cluster supports it, uncomment the following to automatically create\n  # an external load-balanced IP for the frontend service.\n  type: LoadBalancer\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n")),Object(a.b)("p",null,"After deploying, we should see all the pods and services deploying."),Object(a.b)("p",null,"If we then run ",Object(a.b)("inlineCode",{parentName:"p"},"kubectl describe service frontend"),", we should be able to see information on the ELB that we have just deployed."),Object(a.b)("p",null,"From this information, we should be able to fetch the ",Object(a.b)("inlineCode",{parentName:"p"},"LoadBalancer Ingress")," address to open up the guest book."),Object(a.b)("h2",{id:"scaling-pods-up-and-down"},"Scaling Pods up and down"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yml"}),"# Scale to 5 replicas of deployment frontend\nkubectl scale --replicas 5 deployment frontend\n# kubectl get pods will show us 5\nkubectl scale --replicas 4 deployment frontend\n# kubectl get pods will show us 4\n")))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Kubernetes/EKS-Deploy-Stateless-App.md"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-kubernetes-eks-deploy-stateless-app-md-ba419967e3810ecfa29a.js.map