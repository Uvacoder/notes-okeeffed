{"version":3,"sources":["webpack:///../manual/Kotlin/Kotlin-From-CLI.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wFADQ,qCAItB,iBAAQ,CACN,GAAM,4BADR,4BAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,oBADZ,sEAML,iBAAQ,CACN,GAAM,aADR,aAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,iEAIL,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,0BAIL,iBAAQ,CACN,GAAM,kBADR,kBAGA,8CAA6B,0BAAYA,WAAW,KAAvB,gBAA7B,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,0KASL,0DAAyC,0BAAYA,WAAW,KAAvB,oBAAzC,M,yMAKJJ,EAAWK,gBAAiB","file":"component---manual-kotlin-kotlin-from-cli-md-50f04d183accd8af93de.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"kotlin-from-cli\"\n    }}>{`Kotlin From CLI`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.codexpedia.com/kotlin/install-compile-and-run-kotlin-from-command-line/\"\n        }}>{`Kotlin compile and run from CLI`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"hello-world-from-the-cli\"\n    }}>{`Hello World from the CLI`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun main(args: Array<String>) {\n    println(\"Hello World!\")\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"compiling\"\n    }}>{`Compiling`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kotlinc greeting.kt hello.kt -include-runtime -d hello.jar\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running\"\n    }}>{`Running`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`java -jar hello.jar\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-a-task\"\n    }}>{`Running a task`}</h2>\n    <p>{`Find Kotlin path with `}<inlineCode parentName=\"p\">{`which kotlin`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`export PATH=$PATH:/path/from/which/kotlin\nfunction kotlinr() {\n  echo Compiling, please wait...\n  kotlinc $1 -include-runtime -d out.jar\n  java -jar out.jar\n}\n`}</code></pre>\n    <p>{`After sourcing, you could now run `}<inlineCode parentName=\"p\">{`kotlinr hello.kt`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}