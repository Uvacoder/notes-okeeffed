{"version":3,"sources":["webpack:///../manual/Kafka/Kafka-Internals.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,UADR,UAGA,4IAA2H,0BAAYC,WAAW,KAAvB,cAA3H,kFACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,oCAEL,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,2BAEL,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,sBAEL,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iCAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,gFAIT,iBAAQ,CACN,GAAM,YADR,YAGA,qBAAG,0BAAYA,WAAW,KAAvB,YAAH,wEAAgI,0BAAYA,WAAW,KAAvB,UAAhI,yOACA,sEACA,sBACE,kBAAIA,WAAW,MAAf,iCACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,oCAEF,iBAAQ,CACN,GAAM,qBADR,qBAGA,kIACA,sBACE,kBAAIA,WAAW,MAAf,kEACA,kBAAIA,WAAW,MAAf,0FACA,kBAAIA,WAAW,MAAf,4DACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,qEAEF,iBAAQ,CACN,GAAM,cADR,cAGA,mIACA,sBACE,kBAAIA,WAAW,MAAf,wDACA,kBAAIA,WAAW,MAAf,iDACA,kBAAIA,WAAW,MAAf,0EACA,kBAAIA,WAAW,MAAf,qEACA,kBAAIA,WAAW,MAAf,yDAA8E,0BAAYA,WAAW,MAAvB,qBAA9E,uB,wMAMNJ,EAAWK,gBAAiB","file":"component---manual-kafka-kafka-internals-md-4da2e6cfdffad045002c.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"kafka-internals\"\n    }}>{`Kafka Internals`}</h1>\n    <h2 {...{\n      \"id\": \"broker\"\n    }}>{`Broker`}</h2>\n    <p>{`Each broker is assigned an ID. When there are multiple brokers in a cluster (best practice), one is selected as the `}<inlineCode parentName=\"p\">{`Controller`}</inlineCode>{`. The Controller will be responsible for electing the leader of the partition.`}</p>\n    <h2 {...{\n      \"id\": \"broker-config\"\n    }}>{`Broker Config`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Term`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Path`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Broker Config`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/config/server.properties`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Server Logs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/logs/server.log`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Messages Logs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/data/kafka`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`View Nodes in Zookeeper Shell`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/bin/zookeeper-shell.sh zookeeper1:2181/kafka && ls get /controller`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"replicas\"\n    }}>{`Replicas`}</h2>\n    <p><inlineCode parentName=\"p\">{`Replicas`}</inlineCode>{` provide guarantees for the availability of the data. The replicator `}<inlineCode parentName=\"p\">{`factor`}</inlineCode>{` provides a way for the Kafka administrator to control the availability of that data in the event of failure. For example, if the replication factor is set to 3, you will have 3 copies of each partition spread across the brokers.`}</p>\n    <p>{`What are the goals for placement of replicas?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Spread evenly amongst brokers`}</li>\n      <li parentName=\"ul\">{`Each partition is on a different broker`}</li>\n      <li parentName=\"ul\">{`Put replicas on different racks`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"handling-requests\"\n    }}>{`Handling Requests`}</h2>\n    <p>{`Producer or consumer sends request to the Broker and the Broker handles the request in the following way:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Acceptor Thread: Creates the connection from client to Broker.`}</li>\n      <li parentName=\"ol\">{`Processor Thread: Takes requests from clientss and places them into the request queue.`}</li>\n      <li parentName=\"ol\">{`IO Thread: Processes the requests in the requests queue.`}</li>\n      <li parentName=\"ol\">{`Request Queue: Requests waiting to be processed.`}</li>\n      <li parentName=\"ol\">{`Response Queue: Requests waiting to be sent back to the clients.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"partitions\"\n    }}>{`Partitions`}</h2>\n    <p>{`Within a broker, a topic can be broken down into multiple partitions (with n-1 partitions being replicas).`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Partitions within a topic are split between brokers.`}</li>\n      <li parentName=\"ul\">{`Partitions themselves will never be split up.`}</li>\n      <li parentName=\"ul\">{`Partitions will continue to get larger as the number of messages grow.`}</li>\n      <li parentName=\"ul\">{`Messages will never be removed from the partition, only appended.`}</li>\n      <li parentName=\"ul\">{`Messages are stored in the directory specified in the `}<inlineCode parentName=\"li\">{`server.properties`}</inlineCode>{` file (log.dirs).`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}