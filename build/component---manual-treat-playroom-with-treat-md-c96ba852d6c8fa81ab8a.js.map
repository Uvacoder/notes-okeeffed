{"version":3,"sources":["webpack:///../manual/Treat/Playroom-With-Treat.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,qNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,uBADR,uBAGA,+DAA8C,mBAAGC,WAAW,KAAQ,CAChE,KAAQ,yCADkC,cAG9C,qCAAoB,0BAAYA,WAAW,KAAvB,2BAApB,cAAsG,0BAAYA,WAAW,KAAvB,sCAAtG,QAA6L,0BAAYA,WAAW,KAAvB,sCAA7L,YAAwR,0BAAYA,WAAW,KAAvB,gBAAxR,aACA,iBAAQ,CACN,GAAM,6BADR,+BAGA,wCAAuB,0BAAYA,WAAW,KAAvB,sBAAvB,KACA,gEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,8tDAiEL,iBAAQ,CACN,GAAM,eADR,eAGA,wEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,qHAKL,iBAAQ,CACN,GAAM,mBADR,mBAGA,mEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,yT,4MAkBTJ,EAAWK,gBAAiB","file":"component---manual-treat-playroom-with-treat-md-c96ba852d6c8fa81ab8a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"playroom-with-treat\"\n    }}>{`Playroom With Treat`}</h1>\n    <p>{`The basic getting started can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/seek-oss/playroom\"\n      }}>{`on Github`}</a></p>\n    <p>{`The tl;dr is `}<inlineCode parentName=\"p\">{`yarn add --dev playroom`}</inlineCode>{`, then add `}<inlineCode parentName=\"p\">{`\"playroom:start\": \"playroom start\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"playroom:build\": \"playroom build\"`}</inlineCode>{` to your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` scripts.`}</p>\n    <h2 {...{\n      \"id\": \"updating-playroomconfigjs\"\n    }}>{`Updating playroom.config.js`}</h2>\n    <p>{`Create the file `}<inlineCode parentName=\"p\">{`playroom.config.js`}</inlineCode>{`.`}</p>\n    <p>{`The working file should look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const TreatPlugin = require('treat/webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n  components: './src/components',\n  outputPath: './dist/playroom',\n\n  // Optional:\n  title: 'Playroom',\n  themes: './src/themes/index.js',\n  frameComponent: './src/FrameComponent.js',\n  // widths: [320, 375, 768, 1024],\n  port: 9000,\n  openBrowser: false,\n  webpackConfig: () => ({\n    module: {\n      rules: [\n        {\n          test: /\\\\.(ts|tsx)$/,\n          include: __dirname,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve('babel-loader'),\n            options: {\n              presets: [\n                require.resolve('@babel/preset-env'),\n                require.resolve('@babel/preset-react'),\n                require.resolve('@babel/preset-typescript'),\n              ],\n              plugins: [\n                require.resolve('@babel/plugin-proposal-class-properties'),\n              ],\n            },\n          },\n        },\n        {\n          test: /\\\\.js$/,\n          include: __dirname,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve('babel-loader'),\n            options: {\n              presets: [\n                require.resolve('@babel/preset-env'),\n                require.resolve('@babel/preset-react'),\n              ],\n              plugins: [\n                require.resolve('@babel/plugin-proposal-class-properties'),\n              ],\n            },\n          },\n        },\n      ],\n    },\n    plugins: [\n      new TreatPlugin({\n        outputLoaders: [MiniCssExtractPlugin.loader],\n      }),\n      new MiniCssExtractPlugin(),\n    ],\n  }),\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"themes-file\"\n    }}>{`Themes file`}</h2>\n    <p>{`An example of the themes filed refernced above:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`export { default as scruffy } from './scruffy/index.js';\nexport { default as daisy } from './daisy/index.js';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"frame-component\"\n    }}>{`Frame Component`}</h2>\n    <p>{`The working frame component looks like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import React, { Fragment } from 'react';\nimport * as themes from './themes/treat';\nimport { TreatProvider } from 'react-treat';\n\nexport default ({ theme, children }) => {\n  return (\n    <TreatProvider theme={themes[theme.name]}>\n      <Fragment>{children}</Fragment>\n    </TreatProvider>\n  );\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}