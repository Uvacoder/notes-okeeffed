{"version":3,"sources":["webpack:///../manual/Stripe/Rails-Stripe-Configuration.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,8BADR,8BAGA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,6BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0CADQ,uBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uCADQ,uBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,qEADQ,uBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6DADQ,gCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wEADQ,iCAItB,iBAAQ,CACN,GAAM,mBADR,mBAGA,8EACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,wDAKL,6DAA4C,0BAAYA,WAAW,KAAvB,WAA5C,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sEAKL,4CAA2B,0BAAYA,WAAW,KAAvB,UAA3B,KACA,iBAAQ,CACN,GAAM,iCADR,iCAGA,8CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,+CAIL,+CAA8B,0BAAYA,WAAW,KAAvB,yCAA9B,gBACA,4DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mhBAoBL,0FAAyE,0BAAYA,WAAW,KAAvB,UAAzE,QAAoI,0BAAYA,WAAW,KAAvB,iBAApI,KACA,oGACA,iBAAQ,CACN,GAAM,2BADR,6BAGA,kEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qNAQL,wEAAuD,0BAAYA,WAAW,KAAvB,wCAAvD,4BACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,4BAAW,0BAAYA,WAAW,KAAvB,gBAAX,qEAAyI,0BAAYA,WAAW,KAAvB,qGAAzI,kF,oNAKJJ,EAAWK,gBAAiB","file":"component---manual-stripe-rails-stripe-configuration-md-1f50235ed9ec82315e92.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rails-stripe-configuration\"\n    }}>{`Rails Stripe Configuration`}</h1>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/api_app.html\"\n        }}>{`Using Rails for API only`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-ruby\"\n        }}>{`Stripe Ruby Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/bkeepers/dotenv\"\n        }}>{`Dotenv Ruby Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.xyzpub.com/en/ruby-on-rails/3.2/scaffold_anlegen.html\"\n        }}>{`Scaffolding routes`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://thoughtbot.com/blog/back-to-basics-http-requests\"\n        }}>{`HTTP Requests in Rails Apps`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/v5.2/action_controller_overview.html\"\n        }}>{`Action Controlller Overview`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <p>{`Assuming you have Rails installed, run the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails new ruby-rails-stripe\ncd ruby-rails-stripe\n`}</code></pre>\n    <p>{`Add the following to the top of your `}<inlineCode parentName=\"p\">{`Gemfile`}</inlineCode>{` for us to read local dotenv values and bundle Stripe.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`gem 'dotenv-rails', groups: [:development, :test]\ngem 'stripe'\n`}</code></pre>\n    <p>{`On the console, run `}<inlineCode parentName=\"p\">{`bundle`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"scaffolding-the-charges-route\"\n    }}>{`Scaffolding the Charges Route`}</h2>\n    <p>{`From the console run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails generate controller Charges create\n`}</code></pre>\n    <p>{`This will scaffold our `}<inlineCode parentName=\"p\">{`app/controllers/charges_controller.rb`}</inlineCode>{` controller.`}</p>\n    <p>{`Inside that, let's update the code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`require 'stripe'\n\nclass ChargesController < ApplicationController\n  # POST /charge\n  # POST /charge.json\n  def create\n    # \\`source\\` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token\n    charge = Stripe::Charge.create({\n      amount: params[:amount],\n      currency: 'aud',\n      source: 'tok_amex',\n      receipt_email: params[:receipt_email],\n      description: 'My First Test Charge (created for API docs)',\n    })\n    render json: charge\n  end\nend\n`}</code></pre>\n    <p>{`This code will make a charge to Stripe using the JSON body params `}<inlineCode parentName=\"p\">{`amount`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`receipt_email`}</inlineCode>{`.`}</p>\n    <p>{`If the charge is successful, it will return the charge information as JSON.`}</p>\n    <h2 {...{\n      \"id\": \"updating-configroutesrb\"\n    }}>{`Updating config/routes.rb`}</h2>\n    <p>{`Ensure routes has the following for POST:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`Rails.application.routes.draw do\n  # ... the rest is omitted for brevity\n  post 'charges/create'\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n`}</code></pre>\n    <p>{`This ensures that we can send a POST request to `}<inlineCode parentName=\"p\">{`http://localhost:PORT/charges/create`}</inlineCode>{` when we run the server.`}</p>\n    <h2 {...{\n      \"id\": \"running-the-code\"\n    }}>{`Running the code`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`rails server`}</inlineCode>{` to get our server up and running (defaulting to 3000), then call `}<inlineCode parentName=\"p\">{`http POST http://localhost:3000/charges/create amount:=1700 receipt_email=hello_rails@example.com`}</inlineCode>{` (using HTTPie) and we will get back our charge results sent as JSON. Hooray!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}