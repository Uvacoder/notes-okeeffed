{"version":3,"sources":["webpack:///../manual/npm/NPM-as-a-Task-Runner.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,6CACA,iEACA,qCACA,sBACE,kBAAIC,WAAW,MAAf,kBACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,yBACA,kBAAIA,WAAW,MAAf,sBAEF,yFACA,yBAAQ,0BAAYA,WAAW,KAAvB,UAAR,OAAkE,0BAAYA,WAAW,KAAvB,UAAlE,KACA,kDACA,gCAAe,0BAAYA,WAAW,KAAvB,UAAf,KACA,wCACA,sBACE,kBAAIA,WAAW,MAAf,aAEF,sBACE,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,mDAEF,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,cAEF,sBACE,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,uBAEF,sEACA,mFACA,iGACA,sEACA,wEACA,+DACA,+DACA,yCACA,gFACA,mEACA,2DACA,kEACA,qIAEA,mFAEA,qDACA,wHACA,+DAEA,sCACA,yCACA,8CAA6B,kBAAIA,WAAW,KAAf,0BAA7B,gBACA,2CACA,+CACA,iHACA,wE,2MAKJJ,EAAWK,gBAAiB","file":"component---manual-npm-npm-as-a-task-runner-md-e5ceca716db40c0e2821.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`NPM as a Task Runner`}</p>\n    <p>{`What is a task? Something we need to do.`}</p>\n    <p>{`Common Tasks`}</p>\n    <ul>\n      <li parentName=\"ul\">{`run test suite`}</li>\n      <li parentName=\"ul\">{`compilng Sass/TypeScript/CoffeeScript`}</li>\n      <li parentName=\"ul\">{`starting a web server`}</li>\n      <li parentName=\"ul\">{`starting a worker`}</li>\n    </ul>\n    <p>{`npm tasks are called scripts -> add to 'scripts' in package.json`}</p>\n    <p>{`\"`}<inlineCode parentName=\"p\">{`<name>`}</inlineCode>{`\": \"`}<inlineCode parentName=\"p\">{`<code>`}</inlineCode>{`\"`}</p>\n    <p>{`then you can simply go...`}</p>\n    <p>{`npm run `}<inlineCode parentName=\"p\">{`<name>`}</inlineCode>{`!`}</p>\n    <p>{`Types of tasks:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Built-in`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`eg tests etc`}</li>\n      <li parentName=\"ul\">{`can be run as npm test instead of npm run test`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Arbitrary`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`requires a \"run\"`}</li>\n      <li parentName=\"ul\">{`eg npm run compile`}</li>\n    </ul>\n    <p>{`For getting a project ready to be deployed...`}</p>\n    <p>{`in the tests folder... test_dice.js //used in this example`}</p>\n    <p>{`mocha is used as a mocha and uglify-js to compile all js files into one.`}</p>\n    <p>{`Often encouraged to save global test scripts.`}</p>\n    <p>{`node_modules/.bin/mocha //this is an executable`}</p>\n    <p>{`Can run from npm without writing this.`}</p>\n    <p>{`Change \"test\": \"mocha\" in the scripts.`}</p>\n    <p>{`now we can go...`}</p>\n    <p>{`npm run test //don't even need run since it is built-in`}</p>\n    <p>{`//////////////////////////////////////////`}</p>\n    <p>{`Creating our own arbitrary scripts`}</p>\n    <p>{`We can use the uglify to create an app.js`}</p>\n    <p>{`Large, annoying code...\nnode_modules/.bin/uglifyjs src/models/`}{`*`}{` src/frontend.js -m -c -o build/app.js`}</p>\n    <p>{`//m flag reduces some names\n//c combines into single file`}</p>\n    <p>{`INSTEAD, CREATE OUR OWN TASK`}</p>\n    <p>{`\"uglify\": \"node_modules/.bin/uglifyjs src/models/`}{`*`}{` src/frontend.js -m -c -o build/app.js\"`}</p>\n    <p>{`Now, we can just type:\nnpm run uglify`}</p>\n    <p>{`And TADAAAAA!`}</p>\n    <p>{`For our css etc.`}</p>\n    <p>{`\"copy-files\": \"cp src/`}<em parentName=\"p\">{`.html build/ & cp src/`}</em>{`.css build/\"`}</p>\n    <p>{`npm run copy-files`}</p>\n    <p>{`Now for a single task!`}</p>\n    <p>{`\"build\": \"npm run copy-files && npm run uglify\" //&& run sequentially, & run in parallel`}</p>\n    <p>{`npm help scripts //shows other default scripts`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}