{"version":3,"sources":["webpack:///../manual/Design-Patterns/Factory-Pattern.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,m5D,kNAmFTJ,EAAWK,gBAAiB","file":"component---manual-design-patterns-factory-pattern-md-614e7f9fe34e4f7f4897.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"factory-pattern\"\n    }}>{`Factory Pattern`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Factory Pattern\n// first, create our products\ninterface Customer {\n    addPoints(): void;\n    addDiscount(): void;\n}\n\ninterface IGoldCustomer extends Customer {\n    goldOperation(): void;\n}\n\nclass GoldCustomer implements IGoldCustomer {\n    addPoints() {\n        console.log('Gold Customer - Points Added');\n    }\n\n    addDiscount() {\n        console.log('Gold Customer - Discount Added');\n    }\n\n    goldOperation() {\n        console.log('Specific Gold Customer operation');\n    }\n}\n\ninterface ISilverCustomer extends Customer {\n    silverOperation(): void;\n}\n\nclass SilverCustomer implements ISilverCustomer {\n    addPoints() {\n        console.log('Gold Customer - Points Added');\n    }\n\n    addDiscount() {\n        console.log('Gold Customer - Discount Added');\n    }\n\n    silverOperation() {\n        console.log('Specific Silver Customer operation');\n    }\n}\n\n// build a simple factory\n// ensure we use a generic for typing our createCustomer method correctly\nabstract class CustomerFactory<T extends Customer> {\n    getCustomer() {\n        const customer = this.createCustomer();\n        customer.addPoints();\n        customer.addDiscount();\n        return customer;\n    }\n\n    abstract createCustomer(): T;\n}\n\nclass GoldCustomerFactory extends CustomerFactory<IGoldCustomer> {\n    createCustomer(): GoldCustomer {\n        return new GoldCustomer();\n    }\n}\n\nclass SilverCustomerFactory extends CustomerFactory<ISilverCustomer> {\n    createCustomer(): SilverCustomer {\n        return new SilverCustomer();\n    }\n}\n\n// code in action\nconst goldCustomerFactory: GoldCustomerFactory = new GoldCustomerFactory();\nconst goldCustomer = goldCustomerFactory.getCustomer();\ngoldCustomer.goldOperation();\n\nconst silverCustomerFactory = new SilverCustomerFactory();\nconst silverCustomer = silverCustomerFactory.getCustomer();\nsilverCustomer.silverOperation();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}