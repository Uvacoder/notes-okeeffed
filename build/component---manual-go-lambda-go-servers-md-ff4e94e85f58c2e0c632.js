(window.webpackJsonp=window.webpackJsonp||[]).push([[298],{"4Xg1":function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",(function(){return i})),a.d(n,"default",(function(){return c}));a("1c7q"),a("abGl"),a("gZHo"),a("Fdmb"),a("Ir+3"),a("2mQt"),a("mXGw");var t=a("/FXl"),r=a("TjRS");a("aD51");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Go/Lambda-Go-Servers.md"}});var l={_frontmatter:i},b=r.a;function c(e){var n=e.components,a=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(t.b)(b,o({},l,a,{components:n,mdxType:"MDXLayout"}),Object(t.b)("h1",{id:"lambda-go-servers"},"Lambda Go Servers"),Object(t.b)("p",null,"This following example uses Gin."),Object(t.b)("p",null,"TODO: Add in the learnings from the local repo."),Object(t.b)("h2",{id:"resources"},"Resources"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},Object(t.b)("a",o({parentName:"li"},{href:"https://github.com/appleboy/gin-lambda"}),"Gin + Lambda Go")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("a",o({parentName:"li"},{href:"https://github.com/apex/gateway"}),"Apex Gateway")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("a",o({parentName:"li"},{href:"https://github.com/awslabs/aws-lambda-go-api-proxy"}),"Gin + Lambda AWSLabs")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("a",o({parentName:"li"},{href:"https://www.codeproject.com/Articles/5269904/Deploy-a-Typescript-Lambda-function-with-AWS-CDK-a"}),"TS Lambda")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("a",o({parentName:"li"},{href:"https://docs.aws.amazon.com/cdk/api/latest/typescript/api/aws-apigateway.html"}),"AWS CDK - API Gateway")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("a",o({parentName:"li"},{href:"https://www.alexedwards.net/blog/serverless-api-with-go-and-aws-lambda"}),"AWS CDK - First Go Lambda Function"))),Object(t.b)("h2",{id:"gin--lambda-with-awslabs-proxy"},"Gin + Lambda with AWSLabs proxy"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "log"\n    "context"\n\n    "github.com/aws/aws-lambda-go/events"\n    "github.com/aws/aws-lambda-go/lambda"\n    "github.com/awslabs/aws-lambda-go-api-proxy/gin"\n    "github.com/gin-gonic/gin"\n)\n\nvar ginLambda *ginadapter.GinLambda\n\nfunc init() {\n    // stdout and stderr are sent to AWS CloudWatch Logs\n    log.Printf("Gin cold start")\n    r := gin.Default()\n    r.GET("/ping", func(c *gin.Context) {\n        c.JSON(200, gin.H{\n            "message": "pong",\n        })\n    })\n\n    ginLambda = ginadapter.New(r)\n}\n\n// Handler will deal with Gin working with Lambda\nfunc Handler(ctx context.Context, req events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {\n    // If no name is provided in the HTTP request body, throw an error\n    return ginLambda.ProxyWithContext(ctx, req)\n}\n\nfunc main() {\n    lambda.Start(Handler)\n}\n')),Object(t.b)("h2",{id:"gin--lambda-with-apex-gateway"},"Gin + Lambda with Apex Gateway"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "log"\n    "net/http"\n    "os"\n\n    "github.com/apex/gateway"\n    "github.com/gin-gonic/gin"\n)\n\nfunc helloHandler(c *gin.Context) {\n    name := c.Param("name")\n    c.String(http.StatusOK, "Hello %s", name)\n}\n\nfunc welcomeHandler(c *gin.Context) {\n    c.String(http.StatusOK, "Hello World from Go")\n}\n\nfunc rootHandler(c *gin.Context) {\n    c.JSON(http.StatusOK, gin.H{\n        "text": "Welcome to gin lambda server.",\n    })\n}\n\nfunc routerEngine() *gin.Engine {\n    // set server mode\n    gin.SetMode(gin.DebugMode)\n\n    r := gin.New()\n\n    // Global middleware\n    r.Use(gin.Logger())\n    r.Use(gin.Recovery())\n\n    r.GET("/welcome", welcomeHandler)\n    r.GET("/user/:name", helloHandler)\n    r.GET("/", rootHandler)\n\n    return r\n}\n\nfunc main() {\n    addr := ":" + os.Getenv("PORT")\n    log.Fatal(gateway.ListenAndServe(addr, routerEngine()))\n}\n')))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Go/Lambda-Go-Servers.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-go-lambda-go-servers-md-ff4e94e85f58c2e0c632.js.map