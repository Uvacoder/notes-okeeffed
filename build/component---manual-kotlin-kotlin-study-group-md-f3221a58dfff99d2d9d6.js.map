{"version":3,"sources":["webpack:///../manual/Kotlin/Kotlin-Study-Group.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---manual-kotlin-kotlin-study-group-md-f3221a58dfff99d2d9d6.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"kotlin-study-group\"\n    }}>{`Kotlin Study Group`}</h1>\n    <h2 {...{\n      \"id\": \"shortcuts\"\n    }}>{`Shortcuts`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Shortcut`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`shift `}{`*`}{` 3`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Search for shortcuts`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ctrl + mousewheel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Zoom. Option must be enabled.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ctrl + option + h`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tree of calls`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ctrl + h`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Creation hierarchy`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`option + up`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Extend selection`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + backspace`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Destroy line`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + shift + p`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Shows you what highlighted text is`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`shift `}{`*`}{`3 > \"Add inferred type arguments`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Types inferred`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + f12`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`All methods defined`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ctrl + space (maybe + shift)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Code completion`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + p`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Arguments required`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ctrl + space + up`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Suggestions through codebase`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + shift + enter`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Finish line, put me on next one`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`option + enter (on classes with interface implementations)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Interface member inference`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + click`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Navigate to definition`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`option + f6`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rename`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + d`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Diff window`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + f6`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Refactor functions`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`TODO: extract to parameter`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Extract to function param`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cmd + shift + t`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Go to spec (may need Kotlin test plugin)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ctrl + shift + j`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Refactor lines`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"toy-robot-notes\"\n    }}>{`Toy Robot notes`}</h2>\n    <p>{`Robot on infinite plane.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`import kotlin.math.absoluteValue\nfun main() {\n    val instructions = \"R3L2R7L4\"\n    val distance = robotDistance(instructions)\n    println(\"hello world $distance\")\n}\nenum class Direction {\n    NORTH {\n        override fun right() = EAST\n        override fun left() = WEST\n    },\n    SOUTH {\n        override fun right() = WEST\n        override fun left() = EAST\n    },\n    EAST {\n        override fun right() = SOUTH\n        override fun left() = NORTH\n    },\n    WEST {\n        override fun right() = NORTH\n        override fun left() = SOUTH\n    };\n    abstract fun right(): Direction\n    abstract fun left(): Direction\n}\ndata class RobotState(val x: Int = 0, val y: Int = 0, val direction: Direction = Direction.NORTH) {\n    fun right(): RobotState = this.copy(direction = direction.right())\n    fun left(): RobotState = this.copy(direction = direction.left())\n    fun move(distance: Int) = when(direction) {\n        Direction.NORTH -> copy(y = y + distance)\n        Direction.EAST -> copy(x = x + distance)\n        Direction.SOUTH -> copy(y = y - distance)\n        Direction.WEST -> copy(x = x - distance)\n    }\n}\nfun robotDistance(instructions: String): Int {\n    val regex = Regex(\"(R|L|\\\\\\\\d+)\")\n    val tokens = regex.findAll(instructions).map { it.groupValues[1] }\n    val finalState = tokens.fold(RobotState()) { acc: RobotState, token: String ->\n        when (token) {\n            \"R\" -> acc.right()\n            \"L\" -> acc.left()\n            else -> acc.move(token.toInt())\n        }\n    }\n    return finalState.x.absoluteValue + finalState.y.absoluteValue\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"preferences\"\n    }}>{`Preferences`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Can update to show definition on hover`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}