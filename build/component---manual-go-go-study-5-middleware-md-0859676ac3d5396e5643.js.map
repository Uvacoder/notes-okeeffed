{"version":3,"sources":["webpack:///../manual/Go/Go-Study-5-Middleware.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,uBADR,uBAGA,sDACA,iBAAQ,CACN,GAAM,eADR,eAGA,0CACA,sBACE,kBAAIC,WAAW,MAAf,gBAAqC,0BAAYA,WAAW,MAAvB,cAArC,gBACA,kBAAIA,WAAW,MAAf,wDACA,kBAAIA,WAAW,MAAf,2DACA,kBAAIA,WAAW,MAAf,kBAAuC,0BAAYA,WAAW,MAAvB,eAAvC,+CACA,kBAAIA,WAAW,MAAf,WAAgC,0BAAYA,WAAW,MAAvB,uBAAhC,uCACA,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,MAA2B,0BAAYA,WAAW,MAAvB,WAA3B,qB,2MAMNJ,EAAWK,gBAAiB","file":"component---manual-go-go-study-5-middleware-md-0859676ac3d5396e5643.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"go-study-middleware\"\n    }}>{`Go Study Middleware`}</h1>\n    <p>{`Notes from the fifth session.`}</p>\n    <h2 {...{\n      \"id\": \"rough-notes\"\n    }}>{`Rough Notes`}</h2>\n    <p>{`To tidy up later:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Type aliased `}<inlineCode parentName=\"li\">{`Middleware`}</inlineCode>{` (see Alice)`}</li>\n      <li parentName=\"ul\">{`Created a builder pattern for an array of Middleware`}</li>\n      <li parentName=\"ul\">{`A little duplication is better than a little dependency`}</li>\n      <li parentName=\"ul\">{`Empy interface `}<inlineCode parentName=\"li\">{`interface{}`}</inlineCode>{` - contentious, but gets around type safety`}</li>\n      <li parentName=\"ul\">{`Can use `}<inlineCode parentName=\"li\">{`context.WithValue()`}</inlineCode>{` to pass context between middleware`}</li>\n      <li parentName=\"ul\">{`Effective Go`}</li>\n      <li parentName=\"ul\">{`Go `}<inlineCode parentName=\"li\">{`codegen`}</inlineCode>{` - go check out`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}