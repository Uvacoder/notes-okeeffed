{"version":3,"sources":["webpack:///../manual/Computer-Science/Composition.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,wNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,4BADR,6BAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,slC,+MA0DTJ,EAAWK,gBAAiB","file":"component---manual-computer-science-composition-md-c7ffed13b33a23e2ebbf.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"composition--aggregation\"\n    }}>{`Composition & Aggregation`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`class Engine {\n  value: string;\n  constructor(value: string) {\n    this.value = value;\n  }\n}\n\nclass Truck {\n  engine: Engine;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n  }\n\n  isEngineRunning() {\n    return this.engine.value;\n  }\n}\n\nclass Car {\n  engine: Engine;\n\n  constructor(engine: Engine) {\n    this.engine = engine;\n  }\n\n  isEngineRunning() {\n    return this.engine.value;\n  }\n\n  removeEngine() {\n    this.engine = new Engine('Engine removed');\n  }\n}\n\nlet engine: Engine | undefined = new Engine('Engine running');\n// notice both car and truck share engine\nlet car = new Car(engine);\nlet truck = new Truck(engine);\n\nconsole.log('Car:', car.isEngineRunning());\nconsole.log('Truck:', truck.isEngineRunning());\n// delete car\ncar.removeEngine();\nconsole.log('Car:', car.isEngineRunning());\nconsole.log('Truck:', truck.isEngineRunning());\nconsole.log('Same pointer', engine === truck.engine);\nengine = undefined;\nconsole.log(engine);\nconsole.log('Truck:', truck.isEngineRunning());\nconsole.log('Same pointer', engine === truck.engine);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}