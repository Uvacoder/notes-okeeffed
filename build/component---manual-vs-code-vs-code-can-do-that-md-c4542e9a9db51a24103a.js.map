{"version":3,"sources":["webpack:///../manual/VSCode/VSCode-Can-Do-That.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---manual-vs-code-vs-code-can-do-that-md-c4542e9a9db51a24103a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"vscode-can-do-that\"\n    }}>{`VSCode Can Do That?`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://code.visualstudio.com/Docs/editor/editingevolved\"\n        }}>{`Code Navigation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.freecodecamp.org/news/put-your-dev-env-in-github/\"\n        }}>{`Remote Containers`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dev.to/mrahmadawais/vscode-breadcrumbs-are-here-jkn\"\n        }}>{`Breadcrumbs on Dev.to`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"multiple-cursors\"\n    }}>{`Multiple Cursors`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`Command + Shift + l`}</inlineCode>{` to enable multiple cursors over the highlights.`}</p>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`Command + d`}</inlineCode>{` to do one at a time. If you want to skip an instance, hit `}<inlineCode parentName=\"p\">{`Command + k, d`}</inlineCode>{` to skip.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`let app;\n\napp;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"regex-find\"\n    }}>{`Regex Find`}</h2>\n    <p>{`You can use `}<inlineCode parentName=\"p\">{`option + command + r`}</inlineCode>{` to turn on regex search. Combine this with multiple cursors for a good time. With find, you need to press `}<inlineCode parentName=\"p\">{`option + enter`}</inlineCode>{` to get multiple cursors. Test below with the `}<inlineCode parentName=\"p\">{`jpeg|png`}</inlineCode>{` search:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`let image = url('images/background.png');\nlet jpg = url('images/thing.jpg');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"navigating-vscode\"\n    }}>{`Navigating VSCode`}</h2>\n    <p><inlineCode parentName=\"p\">{`Command + p,p`}</inlineCode>{` will take you to the last file.`}</p>\n    <p>{`In that same browser, if we use `}<inlineCode parentName=\"p\">{`@`}</inlineCode>{` we can search and find a symbol browser.`}</p>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`@:`}</inlineCode>{` will segment things into groups.`}</p>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`#`}</inlineCode>{` will search for a certain set of symbols across files. Note that at the moment it doesn't exclude the files from `}<inlineCode parentName=\"p\">{`settings.json`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`Command + 0`}</inlineCode>{` will focus on the sidebar, `}<inlineCode parentName=\"p\">{`Command + 1`}</inlineCode>{` will focus on the editor.`}</p>\n    <p><inlineCode parentName=\"p\">{`fn + option + F12`}</inlineCode>{` will help you peek a definition and see all the instances where it is used.`}</p>\n    <h2 {...{\n      \"id\": \"refactors\"\n    }}>{`Refactors`}</h2>\n    <p><inlineCode parentName=\"p\">{`Shift + Control + R`}</inlineCode>{` will look for refactors available.`}</p>\n    <p>{`Highlighting code and then pressing `}<inlineCode parentName=\"p\">{`Command + .`}</inlineCode>{` will give you options to refactor.`}</p>\n    <h2 {...{\n      \"id\": \"debugging\"\n    }}>{`Debugging`}</h2>\n    <p>{`Check the docs for how `}<inlineCode parentName=\"p\">{`launch.json`}</inlineCode>{` works for Chrome debugging.`}</p>\n    <p><inlineCode parentName=\"p\">{`fn + F8`}</inlineCode>{` will toggle through our lint/type check errors.`}</p>\n    <p><inlineCode parentName=\"p\">{`fn + F5`}</inlineCode>{` will open the debugger and begin.`}</p>\n    <p>{`VSCode also has log points. Instead of using `}<inlineCode parentName=\"p\">{`console.log()`}</inlineCode>{` in the code, you can add a log point to the side. You could then log a variable `}<inlineCode parentName=\"p\">{`item`}</inlineCode>{` by popping `}<inlineCode parentName=\"p\">{`{item}`}</inlineCode>{`. Log points also don't throw errors.`}</p>\n    <h3 {...{\n      \"id\": \"nodemon\"\n    }}>{`Nodemon`}</h3>\n    <p>{`To use `}<inlineCode parentName=\"p\">{`nodemon`}</inlineCode>{`, you can set configurate for `}<inlineCode parentName=\"p\">{`nodemon`}</inlineCode>{` package.`}</p>\n    <h2 {...{\n      \"id\": \"docker\"\n    }}>{`Docker`}</h2>\n    <p>{`If we search `}<inlineCode parentName=\"p\">{`command + shift + p`}</inlineCode>{` and search `}<inlineCode parentName=\"p\">{`Add Docker configuration files to app`}</inlineCode>{` we can then go through the process of selecting what kind of files we want to add.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`Docker: build`}</inlineCode>{` we can then containerize this app using VSCode. It will also ask us for a tag!`}</p>\n    <p>{`We can then use the Docker sidebar to run. If we right-click on a running container, we can click we logs. We can also attach a shell from here.`}</p>\n    <h3 {...{\n      \"id\": \"deploying-to-a-container-registry\"\n    }}>{`Deploying to a Container Registry`}</h3>\n    <p>{`We can `}<inlineCode parentName=\"p\">{`right-click`}</inlineCode>{` and push an image to the repository (once you are connect).`}</p>\n    <h3 {...{\n      \"id\": \"docker-compose\"\n    }}>{`Docker Compose`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file, we can edit for multiple containers to interact with each other.`}</p>\n    <p>{`There is also a `}<inlineCode parentName=\"p\">{`docker-compose.debug.yml`}</inlineCode>{` file that we can use for debug. We can actually use the debugger to help with this as well (based on our configuration).`}</p>\n    <h2 {...{\n      \"id\": \"remote-development\"\n    }}>{`Remote Development`}</h2>\n    <p>{`Within the command pallette, we can run `}<inlineCode parentName=\"p\">{`Remote-ssh connect to host`}</inlineCode>{`.`}</p>\n    <p>{`This will setup VSCode for the remote host and then we can treat a newly opened VSCode window as if we are on remote.`}</p>\n    <p>{`Everything that we run here (restore etc) can happen on the remote server! We can run a debugger etc from within this SSH session.`}</p>\n    <p>{`We can even forward a port to the local!`}</p>\n    <h2 {...{\n      \"id\": \"developing-remote-containers\"\n    }}>{`Developing Remote Containers`}</h2>\n    <p>{`Requires `}<inlineCode parentName=\"p\">{`remote containers`}</inlineCode>{` extension.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`Remote Containers: Add configuration files`}</inlineCode>{` from the command palette to set up to use containers.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`Remote Container: Reopen folder in new container`}</inlineCode>{` to open up and set a new container.`}</p>\n    <p>{`There is a deeper dive through a `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.freecodecamp.org/news/put-your-dev-env-in-github/\"\n      }}>{`blog post`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"sql-in-vscode\"\n    }}>{`SQL in VSCode`}</h2>\n    <p>{`Using an extensions called `}<inlineCode parentName=\"p\">{`MySQL`}</inlineCode>{`, we can add a host with data etc.`}</p>\n    <p>{`We can then, from inside VSCode, run queries against the database.`}</p>\n    <h2 {...{\n      \"id\": \"git-in-vscode\"\n    }}>{`Git in VSCode`}</h2>\n    <p>{`Git can super charge you git flow. It makes it easier to diff and stage/unstage changes.`}</p>\n    <h3 {...{\n      \"id\": \"reviewing-and-merging-prs\"\n    }}>{`Reviewing and Merging PRs`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`GitHub Pull Requests`}</inlineCode>{` extensions enables you to review, comment, approve and checkout PR branches right from VSCode!`}</p>\n    <h2 {...{\n      \"id\": \"moving-code--code-folding\"\n    }}>{`Moving Code & Code Folding`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`option + up/down`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Move code up/down a line`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`shift + option + up/down`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Duplicate line up/down`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`option + cmd + [`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fold`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`option + cmd + ]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Unfold`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cmd + k, 2`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fold second level regions`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`You can add `}<inlineCode parentName=\"p\">{`//#region Class Methods`}</inlineCode>{` (as an example) and `}<inlineCode parentName=\"p\">{`//#endregion Class Methods`}</inlineCode>{` to create you own custom folder points.`}</p>\n    <p>{`If your cursor is inside of a region and you fold all of a level etc, it is smart enough to know to keep that region open.`}</p>\n    <h2 {...{\n      \"id\": \"breadcrumbs\"\n    }}>{`Breadcrumbs`}</h2>\n    <p>{`If you hit `}<inlineCode parentName=\"p\">{`shift + command + .`}</inlineCode>{`, you can open the breadcrumbs popover and navigated through the page breadcrumbs!`}</p>\n    <p>{`This can be a little similar to `}<inlineCode parentName=\"p\">{`command + shift + o`}</inlineCode>{` but shows a clearer outline.`}</p>\n    <p>{`An article that shares this can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://dev.to/mrahmadawais/vscode-breadcrumbs-are-here-jkn\"\n      }}>{`here`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}