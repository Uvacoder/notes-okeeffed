(window.webpackJsonp=window.webpackJsonp||[]).push([[490],{cr1g:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return c}));t("1c7q"),t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3"),t("2mQt"),t("mXGw");var a=t("/FXl"),r=t("TjRS");t("aD51");function i(){return(i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"manual/Scala/Scala-Expressions.md"}});var l={_frontmatter:s},o=r.a;function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(a.b)(o,i({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"scala-expressions-and-functions"},"Scala Expressions and Functions"),Object(a.b)("p",null,"As opposed to instructions, everything in Scala is considered an ",Object(a.b)("inlineCode",{parentName:"p"},"expression"),". Even if/else statements themselves in Scala are expressions."),Object(a.b)("h2",{id:"for-loops"},"For Loops"),Object(a.b)("p",null,"For loops are not recommended in Scala. They return ",Object(a.b)("inlineCode",{parentName:"p"},"Unit")," which in itself is equivalent to",Object(a.b)("inlineCode",{parentName:"p"},"null"),". This is the case for side effects - an intergral part of understanding Scala."),Object(a.b)("h2",{id:"code-blocks"},"Code Blocks"),Object(a.b)("p",null,"Note that if you write a code block, the last value in the code block is returned as the value."),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-scala"}),'val codeBlock = {\n    val a = 1\n    val b = 2\n\n    if(a < b) "hi" else "bye"\n}\n\nprintln(codeBlock)\n// evaluates to "hi"\n')),Object(a.b)("h2",{id:"examples-of-expressions-and-side-effects"},"Examples of Expressions and Side Effects"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-scala"}),'"hello" // type String\nprintln("hello") // type Unit\n\n// type Boolean\nval a = {\n    2 < 3\n}\n\n// type Int value 10\nval b = {\n    if(a) 123 else 321\n    10\n}\n\n// c is of type Unit\nvar i = 0\nval c = while (i < 10) {\n    i += 1\n}\n')),Object(a.b)("h2",{id:"functions"},"Functions"),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-scala"}),'object Functions extends App {\n    // this works because we know everything is an expression\n    def functionExample(a: String, b: Int): String = a + " " + b\n\n    def parameterlessFunc(): Int = 42\n    println(parameterlessFunc())\n    // also valid in Scala to call func\n    println(parameterlessFunc)\n\n    def repeterFunc(a: String, n: Int): String  = {\n        if (n == 1) a\n        else a + repeterFunc(a, n-1)\n    }\n}\n')))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"manual/Scala/Scala-Expressions.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---manual-scala-scala-expressions-md-fa86791749a5db01c927.js.map