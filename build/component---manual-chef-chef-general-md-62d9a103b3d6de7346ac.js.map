{"version":3,"sources":["webpack:///../manual/Chef/Chef-General.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gBADR,gBAMA,iBAAQ,CACN,GAAM,oBADR,oBAGA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mCAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAEwB,0BAAYA,WAAW,MAAvB,SACxB,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,uCAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wBAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kBAEsB,0BAAYA,WAAW,MAAvB,SACtB,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAEqB,0BAAYA,WAAW,MAAvB,SACrB,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wBAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mBAEuB,0BAAYA,WAAW,MAAvB,SACvB,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAMN,iBAAQ,CACN,GAAM,mBADR,mBAGA,kDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mkD,oMAoETJ,EAAWK,gBAAiB","file":"component---manual-chef-chef-general-md-62d9a103b3d6de7346ac.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"chef-general\"\n    }}>{`Chef General`}</h1>\n    {\n      /* TOC -->autoauto- [Chef General](#chef-general)auto    - [kitchen commands](#kitchen-commands)auto    - [Chef ops layout](#chef-ops-layout)autoauto<!-- /TOC */\n    }\n    <h2 {...{\n      \"id\": \"kitchen-commands\"\n    }}>{`kitchen commands`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Commands`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kitchen test`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tear down & restart full build`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kitchen converge `}<inlineCode parentName=\"td\">{`<id>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Re-run recipes on already built VM`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kitchen list`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`List all the VM IDs`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kitchen verify `}<inlineCode parentName=\"td\">{`<id>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Verify kitchen tests`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kitchen login `}<inlineCode parentName=\"td\">{`<id>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Login to a local VM`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kitchen destroy `}<inlineCode parentName=\"td\">{`<id>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tear down instance`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"chef-ops-layout\"\n    }}>{`Chef ops layout`}</h2>\n    <p>{`Without the hidden files.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.\n├── Berksfile\n├── Berksfile.lock\n├── README.md\n├── cookbooks\n│   ├── example\n│   │   ├── files\n│   │   │   └── default\n│   │   │       ├── known_hosts     # accessible with cookbook_file\n│   │   │       └── ssh_config\n│   │   ├── metadata.rb\n│   │   ├── recipes\n│   │   │   ├── configure.rb\n│   │   │   └── default.rb\n│   │   └── templates\n│   │       ├── newrelic-node.erb\n│   │       ├── nginx-node.erb\n│   │       └── ssh-key.erb\n│   ├── example-api\n│   │   ├── metadata.rb\n│   │   ├── recipes\n│   │   │   ├── configure.rb\n│   │   │   ├── default.rb\n│   │   │   └── deploy.rb\n│   │   └── templates\n│   │       └── env.erb\n│   ├── example-bot\n│   │   ├── metadata.rb\n│   │   ├── recipes\n│   │   │   ├── configure.rb\n│   │   │   ├── default.rb\n│   │   │   └── deploy.rb\n│   │   └── templates\n│   │       └── env.erb\n│   └── example-db\n│       ├── metadata.rb\n│       ├── recipes\n│       │   ├── configure.rb\n│       │   ├── default.rb\n│       │   └── deploy.rb\n│       └── templates\n│           └── env.erb\n├── publish.sh\n└── test\n    ├── data_bags\n    │   ├── data_app\n    │   │   ├── data_api.json\n    │   │   ├── data_bot.json\n    │   │   └── data_db.json\n    │   └── data_command\n    │       ├── deploy_data_api.json\n    │       ├── deploy_data_bot.json\n    │       └── deploy_data_db.json\n    ├── environments\n    │   ├── test.json\n    │   └── test.json.example\n    └── smoke\n        ├── test\n        │   └── default_test.rb\n        ├── second\n        │   └── default_test.rb\n        └── third\n            └── default_test.rb\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}