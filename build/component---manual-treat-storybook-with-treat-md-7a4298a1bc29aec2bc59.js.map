{"version":3,"sources":["webpack:///../manual/Treat/Storybook-With-Treat.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,iBAAQ,CACN,GAAM,wBADR,wBAGA,+DAA8C,mBAAGC,WAAW,KAAQ,CAChE,KAAQ,4EADkC,+BAA9C,KAGA,iBAAQ,CACN,GAAM,iCADR,iCAGA,0DAAyC,0BAAYA,WAAW,KAAvB,OAAzC,QAAiG,0BAAYA,WAAW,KAAvB,QAAjG,iKACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yFAML,0EACA,iBAAQ,CACN,GAAM,4BADR,4BAGA,2BAAU,0BAAYA,WAAW,KAAvB,wBAAV,+EACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,6jBAgBL,gDAA+B,0BAAYA,WAAW,KAAvB,eAA/B,6CAAoI,0BAAYA,WAAW,KAAvB,gCAApI,8BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,02BAwBL,wCAAuB,0BAAYA,WAAW,KAAvB,0CAAvB,uBAAiI,0BAAYA,WAAW,KAAvB,gBAAjI,8B,6MAKJJ,EAAWK,gBAAiB","file":"component---manual-treat-storybook-with-treat-md-7a4298a1bc29aec2bc59.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"storybook-with-treat\"\n    }}>{`Storybook With Treat`}</h1>\n    <h2 {...{\n      \"id\": \"setting-up-storybook\"\n    }}>{`Setting Up Storybook`}</h2>\n    <p>{`The reference for getting started with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.learnstorybook.com/intro-to-storybook/react/en/get-started/\"\n      }}>{`Storybook can be found here`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"note-with-mixing-yarn-and-npm\"\n    }}>{`Note With Mixing Yarn and NPM`}</h2>\n    <p>{`If for some reason you are mixing `}<inlineCode parentName=\"p\">{`npx`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`, you may run into issues with package versions. If this occurs, troubleshooting may be eased by using Yarn Resolutions ie in package.json add the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"resolutions\": {\n  \"webpack\": \"4.39.1\" // whatever version you want to resolve\n}\n`}</code></pre>\n    <p>{`This was a killer when first attempting to setup.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-configuration\"\n    }}>{`Setting Up Configuration`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`.storybook/config.js`}</inlineCode>{` we need to setup Storybook to have the TreatProvider over all the stories:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { configure } from '@storybook/react';\nimport { load, addDecorator } from '@storybook/react';\nimport React from 'react';\nimport { TreatProvider } from 'react-treat';\nimport * as themes from '../src/themes/treat';\nconst themeNames = ['scruffy', 'daisy', 'three', 'four'];\n\n// use this to add the decorator to every story\naddDecorator(storyFn => (\n  <TreatProvider theme={themes['daisy']}>{storyFn()}</TreatProvider>\n));\n// automatically import all files ending in *.stories.js\nconfigure(require.context('../src', true, /\\\\.stories\\\\.js$/), module);\n`}</code></pre>\n    <p>{`We also need to add the `}<inlineCode parentName=\"p\">{`TreatPlugin`}</inlineCode>{` into the Webpack build. For that, update `}<inlineCode parentName=\"p\">{`.storybook/webpack.config.js`}</inlineCode>{` to reflect the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const path = require('path');\n// your app's webpack.config.js\nconst TreatPlugin = require('treat/webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = async ({ config, mode }) => {\n  config.plugins.push(\n    new TreatPlugin({\n      outputLoaders: [MiniCssExtractPlugin.loader],\n    }),\n  );\n  config.plugins.push(new MiniCssExtractPlugin());\n  return config;\n};\n// you can use this file to add your custom webpack plugins, loaders and anything you like.\n// This is just the basic way to add additional webpack configurations.\n// For more information refer the docs: https://storybook.js.org/configurations/custom-webpack-config\n\n// IMPORTANT\n// When you add this file, we won't add the default configurations which is similar\n// to \"React Create App\". This only has babel loader to load JavaScript.\n`}</code></pre>\n    <p>{`Perfecto! Added `}<inlineCode parentName=\"p\">{`\"storybook\": \"start-storybook -p 6006\"`}</inlineCode>{` to your scripts in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` and you are ready to go!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}