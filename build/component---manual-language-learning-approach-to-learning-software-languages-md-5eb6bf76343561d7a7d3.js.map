{"version":3,"sources":["webpack:///../manual/Language-Learning/Approach-To-Learning-Software-Languages.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,qPAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,2CADR,2CAGA,qGACA,iBAAQ,CACN,GAAM,eADR,eAGA,sBACE,kBAAIC,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,kCACA,kBAAIA,WAAW,MAAf,2BACA,kBAAIA,WAAW,MAAf,6DACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,gCACA,kBAAIA,WAAW,MAAf,gCACA,kBAAIA,WAAW,MAAf,qFAA0G,kBAAIA,WAAW,MACrH,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,yDACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,+BACA,kBAAIA,WAAW,MAAf,4CAEJ,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,qCACA,kBAAIA,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,0BACA,kBAAIA,WAAW,MAAf,mGAEF,iBAAQ,CACN,GAAM,kCADR,kCAGA,yLACA,sBACE,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,+EACA,kBAAIA,WAAW,MAAf,sDACA,kBAAIA,WAAW,MAAf,+DACA,kBAAIA,WAAW,MAAf,mE,4OAMNJ,EAAWK,gBAAiB","file":"component---manual-language-learning-approach-to-learning-software-languages-md-5eb6bf76343561d7a7d3.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"approach-to-learning-software-languages\"\n    }}>{`Approach To Learning Software Languages`}</h1>\n    <p>{`Use this as a template for exploring new languages and getting the feet wet.`}</p>\n    <h2 {...{\n      \"id\": \"first-steps\"\n    }}>{`First Steps`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Learn the \"why\" behind the language?`}</li>\n      <li parentName=\"ul\">{`Pros and cons of the language?`}</li>\n      <li parentName=\"ul\">{`What are the use cases?`}</li>\n      <li parentName=\"ul\">{`How does benchmarking work for this particular langauges?`}</li>\n      <li parentName=\"ul\">{`Testing frameworks for the language?`}</li>\n      <li parentName=\"ul\">{`Popular web servers for the language?`}</li>\n      <li parentName=\"ul\">{`How does documentation work?`}</li>\n      <li parentName=\"ul\">{`How can you create packages?`}</li>\n      <li parentName=\"ul\">{`Over-the-top \"Hello, world!\" using as many principles as possible for the language`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Use types`}</li>\n          <li parentName=\"ul\">{`If Object Orientated, use interfaces/abstract classes`}</li>\n          <li parentName=\"ul\">{`If Protocol Orientated, use protocols`}</li>\n          <li parentName=\"ul\">{`Use interfaces if available`}</li>\n          <li parentName=\"ul\">{`Use over-the-top pointers if available`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`What are the nuances of the language?`}</li>\n      <li parentName=\"ul\">{`How does package management work?`}</li>\n      <li parentName=\"ul\">{`How does importing work?`}</li>\n      <li parentName=\"ul\">{`How does logging work?`}</li>\n      <li parentName=\"ul\">{`Find some articles that give you best tips and tricks for the language and the above questions`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"understanding-through-programs\"\n    }}>{`Understanding Through Programs`}</h2>\n    <p>{`Not all need to be done (pending what the language is useful for), but here are some useful ideas to get familiar with packages and testing for real world uses:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Webserver that takes and returns JSON`}</li>\n      <li parentName=\"ul\">{`CLI tool that parses the markdown for this file and can be used as a helper`}</li>\n      <li parentName=\"ul\">{`A file reader/writer that parses common file types`}</li>\n      <li parentName=\"ul\">{`Learning the \"wtf\" scenarios and gotchas with the languages`}</li>\n      <li parentName=\"ul\">{`Finding out the best environments for each language (IDE etc)`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}