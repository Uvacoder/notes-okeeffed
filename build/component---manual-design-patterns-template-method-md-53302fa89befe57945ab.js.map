{"version":3,"sources":["webpack:///../manual/Design-Patterns/Template-Method.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sfAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,4EACA,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,kyB,kNAiDTJ,EAAWK,gBAAiB","file":"component---manual-design-patterns-template-method-md-53302fa89befe57945ab.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"template-method\"\n    }}>{`Template Method`}</h1>\n    <p>{`The template method is a class behavioural pattern.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`abstract class BaseClass {\n  public templateMethod(): void {\n    this.actionA();\n    this.actionB();\n  }\n\n  public actionA(): void {\n    throw new Error('should not be invoker by BaseClass');\n  }\n\n  public actionB(): void {\n    throw new Error('should not be invoker by BaseClass');\n  }\n}\n\nclass ConcreteAClass extends BaseClass {\n  actionA(): void {\n    console.log('A take actionA');\n  }\n\n  actionB(): void {\n    console.log('A take actionB');\n  }\n}\n\nclass ConcreteBClass extends BaseClass {\n  actionA(): void {\n    console.log('B take actionA');\n  }\n\n  actionB(): void {\n    console.log('B take actionB');\n  }\n}\n\n(function main() {\n  const a = new ConcreteAClass();\n  const b = new ConcreteBClass();\n\n  a.templateMethod();\n  b.templateMethod();\n})();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}