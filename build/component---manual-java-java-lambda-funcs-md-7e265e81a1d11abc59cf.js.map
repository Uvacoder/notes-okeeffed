{"version":3,"sources":["webpack:///../manual/Java/Java-Lambda-Funcs.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,wDAAuC,0BAAYC,WAAW,KAAvB,aAAvC,gGACA,8FACA,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8XAuBL,8CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0Y,yMAwBTJ,EAAWK,gBAAiB","file":"component---manual-java-java-lambda-funcs-md-7e265e81a1d11abc59cf.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"java-lambda-funcs\"\n    }}>{`Java Lambda Funcs`}</h1>\n    <p>{`The basic gist is to generate a `}<inlineCode parentName=\"p\">{`interface`}</inlineCode>{` with the lambda signature, then explicitly create a function preface by the interface type.`}</p>\n    <p>{`This will allow you to call the lambda function as a instance method.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// src/main/java/Lambda.java\ninterface Anon {\n    String helloWorld();\n}\n\ninterface AnonInt {\n    int sum(int a, int b);\n}\n\nclass Lambda {\n    String hello() {\n        Anon anon = () -> \"Hello, World!\";\n        return anon.helloWorld();\n    }\n\n    int sumOnePlusTwo() {\n        AnonInt anon = (int a, int b) -> a + b;\n        return anon.sum(1, 2);\n    }\n}\n`}</code></pre>\n    <p>{`As for the test file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// src/tests/java/LambdaTest.java\nimport org.junit.Ignore;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class LambdaTest {\n    @Test\n    public void testLambda() {\n        assertEquals(\"Hello, World!\", new Lambda().hello());\n    }\n\n    @Test\n    public void testLambdaSum() {\n        assertEquals(3, new Lambda().sumOnePlusTwo());\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}