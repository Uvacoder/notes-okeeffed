{"version":3,"sources":["webpack:///../manual/Algorithms/Minimum-Swaps.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,UADR,UAGA,oCAAmB,0BAAYC,WAAW,KAAvB,yBAAnB,wDACA,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIA,WAAW,MAAf,oEAEF,iBAAQ,CACN,GAAM,YADR,YAGA,sBACE,kBAAIA,WAAW,MAAf,gDAAqE,0BAAYA,WAAW,MAAvB,WAArE,iCACA,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,cAA5B,QAA4F,0BAAYA,WAAW,MAAvB,oBAA5F,eAAyK,0BAAYA,WAAW,MAAvB,UAAzK,SAAsO,0BAAYA,WAAW,MAAvB,mBAAtO,KACA,kBAAIA,WAAW,MAAf,iBAAsC,0BAAYA,WAAW,MAAvB,uBAAtC,0BAAiI,0BAAYA,WAAW,MAAvB,cAAjI,KACA,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,cAEF,8DAA6C,0BAAYA,WAAW,KAAvB,KAA7C,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,6nB,2MA+BTJ,EAAWK,gBAAiB","file":"component---manual-algorithms-minimum-swaps-md-480b0a35d8e028ad96ba.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"minimum-swaps\"\n    }}>{`Minimum Swaps`}</h1>\n    <h2 {...{\n      \"id\": \"how-to\"\n    }}>{`How to`}</h2>\n    <p>{`Given array `}<inlineCode parentName=\"p\">{`[7, 1, 3, 2, 4, 5, 6]`}</inlineCode>{`, what are the minimum swaps to sort this algorithm?`}</p>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`Notes`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`We want this to be efficient, so selection sort doesn't cut it.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"solution\"\n    }}>{`Solution`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Build an array of indexes for where the next `}<inlineCode parentName=\"li\">{`indexOf`}</inlineCode>{` for the element you want is.`}</li>\n      <li parentName=\"ol\">{`For `}<inlineCode parentName=\"li\">{`i = 0..n-1`}</inlineCode>{`, if `}<inlineCode parentName=\"li\">{`arr[0] !== i + 1`}</inlineCode>{`, then swap `}<inlineCode parentName=\"li\">{`arr[i]`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`arr[indexes[i]]`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Finally, swap `}<inlineCode parentName=\"li\">{`indexes[arr[i] = 1]`}</inlineCode>{` with the new position `}<inlineCode parentName=\"li\">{`indexes[i]`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Increment swaps.`}</li>\n      <li parentName=\"ol\">{`Continue.`}</li>\n    </ol>\n    <p>{`This solution will have a run time of `}<inlineCode parentName=\"p\">{`n`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Complete the minimumSwaps function below.\nfunction minimumSwaps(arr) {\n  let swaps = 0;\n  // Build an array of indexes for where the next \\`indexOf\\` for the element you want is.\n  const indexes = arr.map((_, i) => arr.indexOf(i + 1));\n\n  for (let i = 0; i < arr.length; i++) {\n    // if !== 1\n    if (arr[i] !== i + 1) {\n      // 7\n      const temp = arr[i];\n      // set arr[1] to 1\n      arr[i] = arr[indexes[i]];\n      // set arr[1] to 7\n      arr[indexes[i]] = temp;\n      // set indexes[6] to\n      indexes[temp - 1] = indexes[i];\n      // increment swaps\n      swaps++;\n    }\n  }\n\n  return swaps;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}