{"version":3,"sources":["webpack:///../manual/Kubernetes/Kubernetes-Basics.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---manual-kubernetes-kubernetes-basics-md-37089ce312c0769f6e14.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"kubernetes-basics\"\n    }}>{`Kubernetes Basics`}</h1>\n    <h3 {...{\n      \"id\": \"node-architecture\"\n    }}>{`Node Architecture`}</h3>\n    <p>{`Within each node can be a collection of pods routed by iptables and within each pod are the Docker containers.`}</p>\n    <p>{`These containers can talk easily to each other using localhost and ports.`}</p>\n    <p>{`Each node also has a `}<inlineCode parentName=\"p\">{`kubelet`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`kube-proxy`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`kubelet`}</inlineCode>{` talks to the master node and `}<inlineCode parentName=\"p\">{`kube-proxy`}</inlineCode>{` talks to the iptables.`}</p>\n    <p>{`A service itself can be like the load balancer. The service will be publicly available.`}</p>\n    <p>{`When we look deeper at a pod yaml file, we have the containers called as the specs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"replication-controller\"\n    }}>{`Replication Controller`}</h3>\n    <h4 {...{\n      \"id\": \"scaling\"\n    }}>{`Scaling`}</h4>\n    <p>{`If your application is `}<inlineCode parentName=\"p\">{`stateless`}</inlineCode>{` you can horizontally scale it.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Stateless = your appllication doesn't have a `}<inlineCode parentName=\"li\">{`state`}</inlineCode>{`, it doesn't write any local files / keeps local sessions. This prevents pods from falling out of sync.`}</li>\n      <li parentName=\"ul\">{`All traditional databases are `}<inlineCode parentName=\"li\">{`stateful`}</inlineCode></li>\n      <li parentName=\"ul\">{`Most `}<inlineCode parentName=\"li\">{`web applications`}</inlineCode>{` can be made stateless`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Session management needs to be done outside the container`}</li>\n          <li parentName=\"ul\">{`Any file to be saved cannot be saved locally`}</li>\n        </ul></li>\n    </ul>\n    <p>{`If needed, you can use `}<inlineCode parentName=\"p\">{`volumes`}</inlineCode>{` to still run stateful apps.`}</p>\n    <p>{`Those stateful apps can't horizontally scale, but you can run them in a single container and vertically scale (allocate more CPU/Mem/Disk).`}</p>\n    <p>{`Scaling in Kubernetes can be done using the `}<inlineCode parentName=\"p\">{`Replication Controller`}</inlineCode>{`.`}</p>\n    <p>{`The replication controller will ensure a specified number of pod replicas will run at all times.`}</p>\n    <p>{`A pod created with the replica controller will automatically be replaced if they fail, get deleted or are terminated.`}</p>\n    <p>{`Using the replication controller is also recommended if you just want to make sure 1 pod is always running, even after reboots.`}</p>\n    <p>{`You can then run a replication controller with just 1 replica to ensure that it is always running.`}</p>\n    <p>{`To create a replication controller:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# rc-helloworld.yml\napiVersion: v1\nkind: ReplicationController # Changed from Pod\nmetadata:\n  name: helloworld-container\nspec: # Replation controller also has a spec\n  replicas: 2 # set two pod replicas\n  selector:  # select the app\n  app: helloworld\n  template:\n  # stand Pod metadata and spec\n  metadata:\n    name: nodehelloworld.example.com\n    labels:\n    app: helloworld\n  spec:\n    # The containers are listed here\n    containers:\n    - name: k8s-demo\n      image: okeeffed/docker-demo\n      ports:\n      - containerPort: 3000\n`}</code></pre>\n    <p>{`When this controller is created with `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`, you will see that the two pods are created with a differing suffix.`}</p>\n    <p>{`Now we have horizontally scaled this pod.`}</p>\n    <p>{`If one of these pods is now deleted, the master node will automatically schedule a new one.`}</p>\n    <p>{`We can also scale this by using `}<inlineCode parentName=\"p\">{`kubectl scale --replicas=4 -f <replication-controller-name.yml>`}</inlineCode>{`.`}</p>\n    <p>{`We can also use it with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get rc # get replication controllers\n# assume helloworld-controller shows up\nkubectl scale --replicas=1 rc/helloworld-container\nkubectl get pods # will show only one pod remaining\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deployments\"\n    }}>{`Deployments`}</h2>\n    <p>{`Replication Set is the next gen Replication Controller:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It supports new selector that can do selection based on filtering according a set of values eg environment either \"dev\" or \"qa\"`}</li>\n      <li parentName=\"ul\">{`It's not only based on equality. You can do more complex things.`}</li>\n      <li parentName=\"ul\">{`This RS is used by the Deployment.`}</li>\n    </ul>\n    <p>{`A deployment is a declaration that allows you to do app `}<inlineCode parentName=\"p\">{`deployments`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`updates`}</inlineCode>{`.`}</p>\n    <p>{`When using the deployment object, you definte the `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{` of your application. Kubernetes will then make sure the clusters matches your desired state.`}</p>\n    <p>{`Just using the replication controller or replication set might be cumbersome to deploy apps.`}</p>\n    <p>{`With a deployment object you can:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create a deployment (e.g. deploying an app)`}</li>\n      <li parentName=\"ol\">{`Update a deployment (e.g. new version)`}</li>\n      <li parentName=\"ol\">{`Do rolling updates (zero downtime deployments)`}</li>\n      <li parentName=\"ol\">{`Roll back`}</li>\n      <li parentName=\"ol\">{`Pause/resume a deployment (ie rollout to only certain percentage of pods)`}</li>\n    </ol>\n    <p>{`An example of a deployment:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# deployment-helloworld.yml\napiVersion: extensions/v1beta1\nkind: Deployment # Changed from Pod\nmetadata:\n  name: helloworld-deployment\nspec: # Replation controller also has a spec\n  replicas: 3 # set two pod replicas\n  template:\n  # stand Pod metadata and spec\n  metadata:\n    labels:\n    app: helloworld\n  spec:\n    # The containers are listed here\n    containers:\n    - name: k8s-demo\n      image: okeeffed/docker-demo\n      ports:\n      - containerPort: 3000\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"useful-commands\"\n    }}>{`Useful commands`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get deployments`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get info on current deployments`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get rs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get info about the replica set`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get pods --show-labels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get pods + labels attached to pods`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout status deployment/helloworld-deployment`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get deployment status`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl set image deployment/helloworld-deployment k8s-demo=k8s-demo:2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run k8s-demo with the image label version 2`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl edit deployment/helloworld-deployment`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Edit the deployment object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout status deployment/helloworld-deployment`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get the status of the rollout`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout history `}{`[deployment]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get the rollout history`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout undo `}{`[deployment]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rollback to previous version`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout undo `}{`[deployment]`}{` --to-revision=n`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rollback to previous version`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"demo-deployment-notes\"\n    }}>{`Demo: Deployment notes`}</h3>\n    <p>{`Again, get pods will sho the pods with appended suffixes auto-determined by Kubernetes.`}</p>\n    <p>{`You can verify rollout status using the commands above.`}</p>\n    <h2 {...{\n      \"id\": \"services\"\n    }}>{`Services`}</h2>\n    <p>{`Pods themselves are very dynamic, they come and go on the Kubernetes cluster.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When using a `}<inlineCode parentName=\"li\">{`Replication Controller`}</inlineCode>{`, pods are termined and created during scaling operations.`}</li>\n      <li parentName=\"ul\">{`Wehn using `}<inlineCode parentName=\"li\">{`Deployments`}</inlineCode>{`, when updating the image version, pods are terminated and new pods take the place of older pods.`}</li>\n    </ul>\n    <p>{`That's why Pods should never be accessed directly, but always through a Service.`}</p>\n    <p>{`A service is the `}<inlineCode parentName=\"p\">{`logical bridge`}</inlineCode>{` between the \"mortal\" pods and other services or end-users.`}</p>\n    <p>{`When using the `}<inlineCode parentName=\"p\">{`kubectl expose`}</inlineCode>{` command, you create a service for you pod to be accessed externally.`}</p>\n    <p>{`Creating a service will create an endpoint for your pod(s):`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A ClusterIP: a virtual IP address only reachable from within the cluster (this is default)`}</li>\n      <li parentName=\"ol\">{`A NodePort: a port that is the same on each node that is also reachable externally.`}</li>\n      <li parentName=\"ol\">{`A LoadBalancer: created by the Cloud provider that will route external traffic on every node on the NodePort`}</li>\n    </ol>\n    <p>{`The options shown only allow virtual IPs and ports.`}</p>\n    <p>{`There is also a possibility to use `}<inlineCode parentName=\"p\">{`DNS Names`}</inlineCode></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ExternalName`}</inlineCode>{` can provide a DNS name for the service e.g. for service discovery using DNS.`}</p>\n    <p>{`This `}<strong parentName=\"p\">{`only`}</strong>{` works when the DNS add-on is enabled.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# helloworld-service.yml\napiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports: # specify the ports the service uses\n  - port: 31001\n    nodePort: 31001\n    # name below defined from pod\n    targetPort: nodejs-port\n    protocol: TCP\n  selector:\n  # service for this app\n  app: helloworld\n  type: NodePort\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"tags\"\n    }}>{`Tags`}</h2>\n    <p>{`Similar to Labels for AWS`}</p>\n    <p>{`For example, you can label your objects.`}</p>\n    <p>{`For instance: Key could be `}<inlineCode parentName=\"p\">{`environment`}</inlineCode>{`, and the value could be `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`staging`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`qa`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`prod`}</inlineCode>{`.`}</p>\n    <p>{`Maybe you could also tag the department that is comes from etc.`}</p>\n    <p>{`Labels are not unique. You can then use `}<inlineCode parentName=\"p\">{`label selectors`}</inlineCode>{` to match labels.`}</p>\n    <p>{`Eg. a particular pod can only run on a node label with \"evironment\" equals \"development\".`}</p>\n    <p>{`More complex matching: \"environment\" in \"development\" or \"qa\".`}</p>\n    <p>{`You can also use labels to tag nodes. Once tagged, you can use labels selectors to let pods only run on specific nodes.`}</p>\n    <p>{`There are two steps required to run a pod on a specific set of nodes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`First you tag the node`}</li>\n      <li parentName=\"ol\">{`Then you add a `}<inlineCode parentName=\"li\">{`nodeSelector`}</inlineCode>{` to your pod configuration`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl label nodes node1 hardware=high-spec\nkubectl label nodes node1 hardware=low-spec\n`}</code></pre>\n    <p>{`Secondly, add a pod that uses those labels:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n  nodeSelector:\n  hardware: high-spec\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"demo-using-tags\"\n    }}>{`Demo: Using tags`}</h3>\n    <p>{`It only really makes sense if you have multiple nodes (doesn't really make sense on minikube).`}</p>\n    <h2 {...{\n      \"id\": \"healthchecks\"\n    }}>{`Healthchecks`}</h2>\n    <p>{`If the application malfunctions, the pod and container may still be running but the application may no longer be running. This is where health checks come in.`}</p>\n    <p>{`Two types:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Running a command in the container periodically`}</li>\n      <li parentName=\"ol\">{`Periodic checks on a URL`}</li>\n    </ol>\n    <p>{`The typical prod application behind a load balancer should always have health checks implemented in some way to ensure availability and resiliency.`}</p>\n    <p>{`Below you can see where the healthcheck is. You can check the port or container port name.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n    # ! This is the health check\n    livenessProbe:\n    httpGet:\n      path: /\n      port: 3000\n    initialDelaySeconds: 15\n    timeoutSeconds: 30\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"secrets\"\n    }}>{`Secrets`}</h2>\n    <p>{`A way to distribute credentials, keys, passwords or secret data to the pods.`}</p>\n    <p>{`Kubernetes itself uses this Secrets mechanism to provide the credentials to access the internal API.`}</p>\n    <p>{`You can use the same mechanism to provide secrets to your application.`}</p>\n    <p><inlineCode parentName=\"p\">{`secrets`}</inlineCode>{` is just one way to provide secrets that is native to Kubernetes. There are still other ways to do this.`}</p>\n    <h3 {...{\n      \"id\": \"how-to-use-them\"\n    }}>{`How to use them`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Use as env vars`}</li>\n      <li parentName=\"ul\">{`Use as a file in a pod`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`This requires volumes to be mounted`}</li>\n          <li parentName=\"ul\">{`In this volume you have files`}</li>\n          <li parentName=\"ul\">{`This can be use for things like dotenv files`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`You can use an external image to pull secrets (private image registry)`}</li>\n    </ul>\n    <p>{`Generating:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`echo -n \"root\" > ./username.txt\necho -n \"password\" > ./password.txt\nkubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt\n# > secret \"db-user-pass\" created\n`}</code></pre>\n    <p>{`A secret can also be a SSH key or SSL cert.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kubectl create secret generic ssl-cert --from-file=ssh-privatekey=~/.ssh/id_rsa --ssl-cert-=ssl-cert=mysslcert.crt\n`}</code></pre>\n    <p>{`To generate secrets using yaml defs:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-secret\ntype: Opaque\ndata:\n  password: pwd\n  username: usr\n`}</code></pre>\n    <p>{`Then, you can generate it as base64 like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`echo -n \"password\" | base64\n# > pwd\n\nkubectl create -f secrets-db-secret.yml\n# > secret \"db-secret\" created\n`}</code></pre>\n    <p>{`To create a pod that uses secrets:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n    # @@@ This are the envs\n    env:\n    - name: SECRET_USERNAME\n      valueFrom:\n      secretKeyRef:\n        name: db-secret\n        key: username\n    - name: SECRET_PASSWORD\n      [...]\n`}</code></pre>\n    <p>{`Alternatively when providing in a file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n  image: okeeffed/docker-demo\n  ports:\n  - containerPort: 3000\n  # @@@ This are the envs in a volume mount\n  volumeMounts:\n  - name: credvolume\n    mountPath: /etc/creds\n    readOnly: true\n  volumes:\n  - name: credvolume\n  secret:\n    secretName: db-secrets\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"demo-wordpress-secrets\"\n    }}>{`Demo: Wordpress Secrets`}</h3>\n    <p>{`This demo ends up creating a secrets file, a pod definition and a service to expose the wordpress pod.`}</p>\n    <p>{`However, note that deleting the current setup will result in a container restarting to maintain state, but when that happens the WordPress site has to be re-installed because the data was not saved. The solution for this will be in the volumes lab.`}</p>\n    <h2 {...{\n      \"id\": \"web-ui\"\n    }}>{`Web UI`}</h2>\n    <p>{`Kubernetes comes with a `}<inlineCode parentName=\"p\">{`Web UI`}</inlineCode>{` you can use instead of kubectl commands.`}</p>\n    <p>{`You can use it to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Get an overview of running applications on your cluster`}</li>\n      <li parentName=\"ol\">{`Creating and modifying individual Kubernetes resources and workloads (like kubectl create and delete)`}</li>\n      <li parentName=\"ol\">{`Retrieve info on state or resources.`}</li>\n    </ol>\n    <p>{`You can reach this UI at `}<inlineCode parentName=\"p\">{`https://<kubernetes-master>/ui`}</inlineCode></p>\n    <p>{`If you cannot access it, you can install it manually:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml\n# If the password is asked\nkubectl config view\n\n# If you're on minikube\nminikube dashboard # or --url for the url\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"demo-web-ui\"\n    }}>{`Demo: Web UI`}</h3>\n    <p>{`Using the web ui you can see some really interesting info and graphs on usage.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}